ARM GAS  /tmp/ccSdqJtp.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"pedals.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.check_accel_pot,"ax",%progbits
  17              		.align	1
  18              		.global	check_accel_pot
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	check_accel_pot:
  25              	.LFB141:
  26              		.file 1 "Src/pedals.c"
   1:Src/pedals.c  **** #include "pedals.h"
   2:Src/pedals.c  **** #include "stm32f7xx_hal.h"
   3:Src/pedals.c  **** 
   4:Src/pedals.c  **** PotStc accel, brake;
   5:Src/pedals.c  **** 
   6:Src/pedals.c  **** uint8_t check_accel_pot(){
  27              		.loc 1 6 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LBB2:
   7:Src/pedals.c  ****     if(abs(accel.pot1_val - accel.pot2_val) > 90) return 1;
  33              		.loc 1 7 0
  34 0000 064A     		ldr	r2, .L5
  35 0002 1368     		ldr	r3, [r2]
  36 0004 5268     		ldr	r2, [r2, #4]
  37 0006 9B1A     		subs	r3, r3, r2
  38 0008 002B     		cmp	r3, #0
  39 000a B8BF     		it	lt
  40 000c 5B42     		rsblt	r3, r3, #0
  41 000e 5A2B     		cmp	r3, #90
  42 0010 01DC     		bgt	.L4
   8:Src/pedals.c  ****     else return 0;
  43              		.loc 1 8 0
  44 0012 0020     		movs	r0, #0
  45              	.LBE2:
   9:Src/pedals.c  **** }...
  46              		.loc 1 9 0
  47 0014 7047     		bx	lr
  48              	.L4:
  49              	.LBB3:
ARM GAS  /tmp/ccSdqJtp.s 			page 2


   7:Src/pedals.c  ****     if(abs(accel.pot1_val - accel.pot2_val) > 90) return 1;
  50              		.loc 1 7 0
  51 0016 0120     		movs	r0, #1
  52 0018 7047     		bx	lr
  53              	.L6:
  54 001a 00BF     		.align	2
  55              	.L5:
  56 001c 00000000 		.word	accel
  57              	.LBE3:
  58              		.cfi_endproc
  59              	.LFE141:
  61              		.comm	brake,8,4
  62              		.comm	accel,8,4
  63              		.text
  64              	.Letext0:
  65              		.file 2 "/usr/include/newlib/machine/_default_types.h"
  66              		.file 3 "/usr/include/newlib/sys/_stdint.h"
  67              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
  68              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
  69              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
  70              		.file 7 "Inc/pedals.h"
  71              		.file 8 "<built-in>"
ARM GAS  /tmp/ccSdqJtp.s 			page 3


DEFINED SYMBOLS
                            *ABS*:0000000000000000 pedals.c
     /tmp/ccSdqJtp.s:17     .text.check_accel_pot:0000000000000000 $t
     /tmp/ccSdqJtp.s:24     .text.check_accel_pot:0000000000000000 check_accel_pot
     /tmp/ccSdqJtp.s:56     .text.check_accel_pot:000000000000001c $d
                            *COM*:0000000000000008 accel
                            *COM*:0000000000000008 brake
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
