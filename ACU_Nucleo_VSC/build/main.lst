ARM GAS  /tmp/ccs7SpOU.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_SDMMC1_SD_Init:
  25              	.LFB148:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.</center></h2>
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****  * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****  * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****  *                             www.st.com/SLA0044
  16:Src/main.c    ****  *
  17:Src/main.c    ****  ******************************************************************************
  18:Src/main.c    ****  */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "fatfs.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include "can.h"
  28:Src/main.c    **** #include "global_variables.h"
  29:Src/main.c    **** #include "sd.h"
  30:Src/main.c    **** #include "state.h"
  31:Src/main.c    **** #include "stdio.h"
  32:Src/main.c    **** #include "string.h"
ARM GAS  /tmp/ccs7SpOU.s 			page 2


  33:Src/main.c    **** /* USER CODE END Includes */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PTD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PD */
  42:Src/main.c    **** /* USER CODE END PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** CAN_HandleTypeDef hcan1;
  51:Src/main.c    **** 
  52:Src/main.c    **** SD_HandleTypeDef hsd1;
  53:Src/main.c    **** 
  54:Src/main.c    **** TIM_HandleTypeDef htim2;
  55:Src/main.c    **** 
  56:Src/main.c    **** UART_HandleTypeDef huart3;
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** uint8_t i_debug;
  61:Src/main.c    **** extern canStruct can1, can3;
  62:Src/main.c    **** extern fifoPriority fifoPriority_t;
  63:Src/main.c    **** 
  64:Src/main.c    **** CAN_FilterTypeDef sFilter;
  65:Src/main.c    **** 
  66:Src/main.c    **** long int counter = 0;
  67:Src/main.c    **** /* USER CODE END PV */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  70:Src/main.c    **** void SystemClock_Config(void);
  71:Src/main.c    **** static void MX_GPIO_Init(void);
  72:Src/main.c    **** static void MX_SDMMC1_SD_Init(void);
  73:Src/main.c    **** static void MX_USART3_UART_Init(void);
  74:Src/main.c    **** static void MX_CAN1_Init(void);
  75:Src/main.c    **** static void MX_TIM2_Init(void);
  76:Src/main.c    **** static void MX_NVIC_Init(void);
  77:Src/main.c    **** /* USER CODE BEGIN PFP */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* USER CODE END PFP */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  82:Src/main.c    **** /* USER CODE BEGIN 0 */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* USER CODE END 0 */
  85:Src/main.c    **** 
  86:Src/main.c    **** /**
  87:Src/main.c    ****   * @brief  The application entry point.
  88:Src/main.c    ****   * @retval int
  89:Src/main.c    ****   */
ARM GAS  /tmp/ccs7SpOU.s 			page 3


  90:Src/main.c    **** int main(void)
  91:Src/main.c    **** {
  92:Src/main.c    ****   /* USER CODE BEGIN 1 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 1 */
  95:Src/main.c    ****   
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Src/main.c    ****   HAL_Init();
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE BEGIN Init */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE END Init */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Configure the system clock */
 107:Src/main.c    ****   SystemClock_Config();
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END SysInit */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Initialize all configured peripherals */
 114:Src/main.c    ****   MX_GPIO_Init();
 115:Src/main.c    ****   MX_SDMMC1_SD_Init();
 116:Src/main.c    ****   MX_USART3_UART_Init();
 117:Src/main.c    ****   MX_FATFS_Init();
 118:Src/main.c    ****   MX_CAN1_Init();
 119:Src/main.c    ****   MX_TIM2_Init();
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* Initialize interrupts */
 122:Src/main.c    ****   MX_NVIC_Init();
 123:Src/main.c    ****   /* USER CODE BEGIN 2 */
 124:Src/main.c    **** 	HAL_TIM_Base_Start_IT(&htim2);
 125:Src/main.c    **** 
 126:Src/main.c    **** 	can1.rx0_interrupt = CAN1_RX0_IRQn;
 127:Src/main.c    **** 	can1.tx_interrupt = CAN1_TX_IRQn;
 128:Src/main.c    **** 	can1.hcan = &hcan1;
 129:Src/main.c    **** 
 130:Src/main.c    **** 	can_init();
 131:Src/main.c    **** 
 132:Src/main.c    **** 	HAL_UART_Receive_IT(&huart3, (uint8_t *)&debug_rx[debug_rx_count],
 133:Src/main.c    **** 						1);  // activate rx interrupt for debug
 134:Src/main.c    **** 
 135:Src/main.c    **** 	current_state = STATE_INIT;
 136:Src/main.c    ****   
 137:Src/main.c    **** 	init_sd();
 138:Src/main.c    **** 
 139:Src/main.c    **** 	
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* USER CODE END 2 */
 142:Src/main.c    **** 
 143:Src/main.c    ****   /* Infinite loop */
 144:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 145:Src/main.c    **** 	while (1) {
 146:Src/main.c    **** 		can1.dataTx[0] = 0;
ARM GAS  /tmp/ccs7SpOU.s 			page 4


 147:Src/main.c    **** 		can1.dataTx[1] = 0;
 148:Src/main.c    **** 		can1.dataTx[2] = 0;
 149:Src/main.c    **** 		can1.dataTx[3] = 0;
 150:Src/main.c    **** 		can1.dataTx[4] = counter >> 24;
 151:Src/main.c    **** 		can1.dataTx[5] = counter >> 16;
 152:Src/main.c    **** 		can1.dataTx[6] = counter >> 8;
 153:Src/main.c    **** 		can1.dataTx[7] = counter % 256;
 154:Src/main.c    **** 
 155:Src/main.c    **** 		can1.tx_id = 0xA0;
 156:Src/main.c    **** 
 157:Src/main.c    **** 		// CAN_Send(&can1, normalPriority);
 158:Src/main.c    **** 		// HAL_Delay(500);
 159:Src/main.c    **** 
 160:Src/main.c    **** 		// counter ++;
 161:Src/main.c    **** 
 162:Src/main.c    **** 		if (current_state == STATE_INIT) {
 163:Src/main.c    **** 			init();
 164:Src/main.c    **** 		} else if (current_state == STATE_IDLE) {
 165:Src/main.c    **** 			idle();
 166:Src/main.c    **** 		} else if (current_state == STATE_SETUP) {
 167:Src/main.c    **** 			setup();
 168:Src/main.c    **** 		} else if (current_state == STATE_RUN) {
 169:Src/main.c    **** 			run();
 170:Src/main.c    **** 		}
 171:Src/main.c    ****     /* USER CODE END WHILE */
 172:Src/main.c    **** 
 173:Src/main.c    ****     /* USER CODE BEGIN 3 */
 174:Src/main.c    **** 	}
 175:Src/main.c    ****   /* USER CODE END 3 */
 176:Src/main.c    **** }
 177:Src/main.c    **** 
 178:Src/main.c    **** /**
 179:Src/main.c    ****   * @brief System Clock Configuration
 180:Src/main.c    ****   * @retval None
 181:Src/main.c    ****   */
 182:Src/main.c    **** void SystemClock_Config(void)
 183:Src/main.c    **** {
 184:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 185:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 186:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 187:Src/main.c    **** 
 188:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 189:Src/main.c    ****   */
 190:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 191:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 192:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 193:Src/main.c    ****   */
 194:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 195:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 196:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 203:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccs7SpOU.s 			page 5


 204:Src/main.c    ****   {
 205:Src/main.c    ****     Error_Handler();
 206:Src/main.c    ****   }
 207:Src/main.c    ****   /** Activate the Over-Drive mode 
 208:Src/main.c    ****   */
 209:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 210:Src/main.c    ****   {
 211:Src/main.c    ****     Error_Handler();
 212:Src/main.c    ****   }
 213:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 214:Src/main.c    ****   */
 215:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 216:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 217:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 218:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 219:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 220:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 221:Src/main.c    **** 
 222:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 223:Src/main.c    ****   {
 224:Src/main.c    ****     Error_Handler();
 225:Src/main.c    ****   }
 226:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_SDMMC1
 227:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 228:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 229:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 230:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 231:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 232:Src/main.c    ****   {
 233:Src/main.c    ****     Error_Handler();
 234:Src/main.c    ****   }
 235:Src/main.c    **** }
 236:Src/main.c    **** 
 237:Src/main.c    **** /**
 238:Src/main.c    ****   * @brief NVIC Configuration.
 239:Src/main.c    ****   * @retval None
 240:Src/main.c    ****   */
 241:Src/main.c    **** static void MX_NVIC_Init(void)
 242:Src/main.c    **** {
 243:Src/main.c    ****   /* SDMMC1_IRQn interrupt configuration */
 244:Src/main.c    ****   HAL_NVIC_SetPriority(SDMMC1_IRQn, 0, 0);
 245:Src/main.c    ****   HAL_NVIC_EnableIRQ(SDMMC1_IRQn);
 246:Src/main.c    ****   /* USART3_IRQn interrupt configuration */
 247:Src/main.c    ****   HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 248:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART3_IRQn);
 249:Src/main.c    ****   /* CAN1_SCE_IRQn interrupt configuration */
 250:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_SCE_IRQn, 0, 0);
 251:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 252:Src/main.c    ****   /* CAN1_RX1_IRQn interrupt configuration */
 253:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 254:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 255:Src/main.c    ****   /* CAN1_RX0_IRQn interrupt configuration */
 256:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 257:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 258:Src/main.c    ****   /* CAN1_TX_IRQn interrupt configuration */
 259:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_TX_IRQn, 0, 0);
 260:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
ARM GAS  /tmp/ccs7SpOU.s 			page 6


 261:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 262:Src/main.c    ****   HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 263:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 264:Src/main.c    **** }
 265:Src/main.c    **** 
 266:Src/main.c    **** /**
 267:Src/main.c    ****   * @brief CAN1 Initialization Function
 268:Src/main.c    ****   * @param None
 269:Src/main.c    ****   * @retval None
 270:Src/main.c    ****   */
 271:Src/main.c    **** static void MX_CAN1_Init(void)
 272:Src/main.c    **** {
 273:Src/main.c    **** 
 274:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 0 */
 275:Src/main.c    **** 
 276:Src/main.c    ****   /* USER CODE END CAN1_Init 0 */
 277:Src/main.c    **** 
 278:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 1 */
 279:Src/main.c    **** 
 280:Src/main.c    ****   /* USER CODE END CAN1_Init 1 */
 281:Src/main.c    ****   hcan1.Instance = CAN1;
 282:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 283:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 284:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 285:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 286:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 287:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 288:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 289:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 290:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 291:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 292:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 293:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 294:Src/main.c    ****   {
 295:Src/main.c    ****     Error_Handler();
 296:Src/main.c    ****   }
 297:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 2 */
 298:Src/main.c    **** 
 299:Src/main.c    ****   /* USER CODE END CAN1_Init 2 */
 300:Src/main.c    **** 
 301:Src/main.c    **** }
 302:Src/main.c    **** 
 303:Src/main.c    **** /**
 304:Src/main.c    ****   * @brief SDMMC1 Initialization Function
 305:Src/main.c    ****   * @param None
 306:Src/main.c    ****   * @retval None
 307:Src/main.c    ****   */
 308:Src/main.c    **** static void MX_SDMMC1_SD_Init(void)
 309:Src/main.c    **** {
  27              		.loc 1 309 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 0 */
 312:Src/main.c    **** 
ARM GAS  /tmp/ccs7SpOU.s 			page 7


 313:Src/main.c    ****   /* USER CODE END SDMMC1_Init 0 */
 314:Src/main.c    **** 
 315:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 1 */
 316:Src/main.c    **** 
 317:Src/main.c    ****   /* USER CODE END SDMMC1_Init 1 */
 318:Src/main.c    ****   hsd1.Instance = SDMMC1;
  32              		.loc 1 318 3 view .LVU1
  33              		.loc 1 318 17 is_stmt 0 view .LVU2
  34 0000 054B     		ldr	r3, .L2
  35 0002 064A     		ldr	r2, .L2+4
  36 0004 1A60     		str	r2, [r3]
 319:Src/main.c    ****   hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  37              		.loc 1 319 3 is_stmt 1 view .LVU3
  38              		.loc 1 319 23 is_stmt 0 view .LVU4
  39 0006 0022     		movs	r2, #0
  40 0008 5A60     		str	r2, [r3, #4]
 320:Src/main.c    ****   hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  41              		.loc 1 320 3 is_stmt 1 view .LVU5
  42              		.loc 1 320 25 is_stmt 0 view .LVU6
  43 000a 9A60     		str	r2, [r3, #8]
 321:Src/main.c    ****   hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  44              		.loc 1 321 3 is_stmt 1 view .LVU7
  45              		.loc 1 321 28 is_stmt 0 view .LVU8
  46 000c DA60     		str	r2, [r3, #12]
 322:Src/main.c    ****   hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
  47              		.loc 1 322 3 is_stmt 1 view .LVU9
  48              		.loc 1 322 21 is_stmt 0 view .LVU10
  49 000e 1A61     		str	r2, [r3, #16]
 323:Src/main.c    ****   hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  50              		.loc 1 323 3 is_stmt 1 view .LVU11
  51              		.loc 1 323 33 is_stmt 0 view .LVU12
  52 0010 5A61     		str	r2, [r3, #20]
 324:Src/main.c    ****   hsd1.Init.ClockDiv = 1;
  53              		.loc 1 324 3 is_stmt 1 view .LVU13
  54              		.loc 1 324 22 is_stmt 0 view .LVU14
  55 0012 0122     		movs	r2, #1
  56 0014 9A61     		str	r2, [r3, #24]
 325:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 2 */
 326:Src/main.c    **** 
 327:Src/main.c    ****   /* USER CODE END SDMMC1_Init 2 */
 328:Src/main.c    **** 
 329:Src/main.c    **** }
  57              		.loc 1 329 1 view .LVU15
  58 0016 7047     		bx	lr
  59              	.L3:
  60              		.align	2
  61              	.L2:
  62 0018 00000000 		.word	hsd1
  63 001c 002C0140 		.word	1073818624
  64              		.cfi_endproc
  65              	.LFE148:
  67              		.section	.text.MX_GPIO_Init,"ax",%progbits
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv5-d16
ARM GAS  /tmp/ccs7SpOU.s 			page 8


  74              	MX_GPIO_Init:
  75              	.LFB151:
 330:Src/main.c    **** 
 331:Src/main.c    **** /**
 332:Src/main.c    ****   * @brief TIM2 Initialization Function
 333:Src/main.c    ****   * @param None
 334:Src/main.c    ****   * @retval None
 335:Src/main.c    ****   */
 336:Src/main.c    **** static void MX_TIM2_Init(void)
 337:Src/main.c    **** {
 338:Src/main.c    **** 
 339:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 340:Src/main.c    **** 
 341:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 342:Src/main.c    **** 
 343:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 344:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 345:Src/main.c    **** 
 346:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 347:Src/main.c    **** 
 348:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 349:Src/main.c    ****   htim2.Instance = TIM2;
 350:Src/main.c    ****   htim2.Init.Prescaler = 108;
 351:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 352:Src/main.c    ****   htim2.Init.Period = 1000;
 353:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 354:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 355:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 356:Src/main.c    ****   {
 357:Src/main.c    ****     Error_Handler();
 358:Src/main.c    ****   }
 359:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 360:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 361:Src/main.c    ****   {
 362:Src/main.c    ****     Error_Handler();
 363:Src/main.c    ****   }
 364:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 365:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 366:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 367:Src/main.c    ****   {
 368:Src/main.c    ****     Error_Handler();
 369:Src/main.c    ****   }
 370:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 371:Src/main.c    **** 
 372:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 373:Src/main.c    **** 
 374:Src/main.c    **** }
 375:Src/main.c    **** 
 376:Src/main.c    **** /**
 377:Src/main.c    ****   * @brief USART3 Initialization Function
 378:Src/main.c    ****   * @param None
 379:Src/main.c    ****   * @retval None
 380:Src/main.c    ****   */
 381:Src/main.c    **** static void MX_USART3_UART_Init(void)
 382:Src/main.c    **** {
 383:Src/main.c    **** 
 384:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 0 */
ARM GAS  /tmp/ccs7SpOU.s 			page 9


 385:Src/main.c    **** 
 386:Src/main.c    ****   /* USER CODE END USART3_Init 0 */
 387:Src/main.c    **** 
 388:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 1 */
 389:Src/main.c    **** 
 390:Src/main.c    ****   /* USER CODE END USART3_Init 1 */
 391:Src/main.c    ****   huart3.Instance = USART3;
 392:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 393:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 394:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 395:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 396:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 397:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 398:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 399:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 400:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 401:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 402:Src/main.c    ****   {
 403:Src/main.c    ****     Error_Handler();
 404:Src/main.c    ****   }
 405:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 2 */
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* USER CODE END USART3_Init 2 */
 408:Src/main.c    **** 
 409:Src/main.c    **** }
 410:Src/main.c    **** 
 411:Src/main.c    **** /**
 412:Src/main.c    ****   * @brief GPIO Initialization Function
 413:Src/main.c    ****   * @param None
 414:Src/main.c    ****   * @retval None
 415:Src/main.c    ****   */
 416:Src/main.c    **** static void MX_GPIO_Init(void)
 417:Src/main.c    **** {
  76              		.loc 1 417 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 40
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80 0000 30B5     		push	{r4, r5, lr}
  81              	.LCFI0:
  82              		.cfi_def_cfa_offset 12
  83              		.cfi_offset 4, -12
  84              		.cfi_offset 5, -8
  85              		.cfi_offset 14, -4
  86 0002 8BB0     		sub	sp, sp, #44
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 56
 418:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  89              		.loc 1 418 3 view .LVU17
  90              		.loc 1 418 20 is_stmt 0 view .LVU18
  91 0004 0024     		movs	r4, #0
  92 0006 0594     		str	r4, [sp, #20]
  93 0008 0694     		str	r4, [sp, #24]
  94 000a 0794     		str	r4, [sp, #28]
  95 000c 0894     		str	r4, [sp, #32]
  96 000e 0994     		str	r4, [sp, #36]
 419:Src/main.c    **** 
 420:Src/main.c    ****   /* GPIO Ports Clock Enable */
ARM GAS  /tmp/ccs7SpOU.s 			page 10


 421:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  97              		.loc 1 421 3 is_stmt 1 view .LVU19
  98              	.LBB2:
  99              		.loc 1 421 3 view .LVU20
 100              		.loc 1 421 3 view .LVU21
 101 0010 244B     		ldr	r3, .L6
 102 0012 1A6B     		ldr	r2, [r3, #48]
 103 0014 42F00402 		orr	r2, r2, #4
 104 0018 1A63     		str	r2, [r3, #48]
 105              		.loc 1 421 3 view .LVU22
 106 001a 1A6B     		ldr	r2, [r3, #48]
 107 001c 02F00402 		and	r2, r2, #4
 108 0020 0192     		str	r2, [sp, #4]
 109              		.loc 1 421 3 view .LVU23
 110 0022 019A     		ldr	r2, [sp, #4]
 111              	.LBE2:
 112              		.loc 1 421 3 view .LVU24
 422:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 113              		.loc 1 422 3 view .LVU25
 114              	.LBB3:
 115              		.loc 1 422 3 view .LVU26
 116              		.loc 1 422 3 view .LVU27
 117 0024 1A6B     		ldr	r2, [r3, #48]
 118 0026 42F00102 		orr	r2, r2, #1
 119 002a 1A63     		str	r2, [r3, #48]
 120              		.loc 1 422 3 view .LVU28
 121 002c 1A6B     		ldr	r2, [r3, #48]
 122 002e 02F00102 		and	r2, r2, #1
 123 0032 0292     		str	r2, [sp, #8]
 124              		.loc 1 422 3 view .LVU29
 125 0034 029A     		ldr	r2, [sp, #8]
 126              	.LBE3:
 127              		.loc 1 422 3 view .LVU30
 423:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 128              		.loc 1 423 3 view .LVU31
 129              	.LBB4:
 130              		.loc 1 423 3 view .LVU32
 131              		.loc 1 423 3 view .LVU33
 132 0036 1A6B     		ldr	r2, [r3, #48]
 133 0038 42F00202 		orr	r2, r2, #2
 134 003c 1A63     		str	r2, [r3, #48]
 135              		.loc 1 423 3 view .LVU34
 136 003e 1A6B     		ldr	r2, [r3, #48]
 137 0040 02F00202 		and	r2, r2, #2
 138 0044 0392     		str	r2, [sp, #12]
 139              		.loc 1 423 3 view .LVU35
 140 0046 039A     		ldr	r2, [sp, #12]
 141              	.LBE4:
 142              		.loc 1 423 3 view .LVU36
 424:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 143              		.loc 1 424 3 view .LVU37
 144              	.LBB5:
 145              		.loc 1 424 3 view .LVU38
 146              		.loc 1 424 3 view .LVU39
 147 0048 1A6B     		ldr	r2, [r3, #48]
 148 004a 42F00802 		orr	r2, r2, #8
 149 004e 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccs7SpOU.s 			page 11


 150              		.loc 1 424 3 view .LVU40
 151 0050 1B6B     		ldr	r3, [r3, #48]
 152 0052 03F00803 		and	r3, r3, #8
 153 0056 0493     		str	r3, [sp, #16]
 154              		.loc 1 424 3 view .LVU41
 155 0058 049B     		ldr	r3, [sp, #16]
 156              	.LBE5:
 157              		.loc 1 424 3 view .LVU42
 425:Src/main.c    **** 
 426:Src/main.c    ****   /*Configure GPIO pin Output Level */
 427:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LED_green_Pin|LED_red_Pin|LED_blue_Pin, GPIO_PIN_RESET);
 158              		.loc 1 427 3 view .LVU43
 159 005a 134D     		ldr	r5, .L6+4
 160 005c 2246     		mov	r2, r4
 161 005e 44F28101 		movw	r1, #16513
 162 0062 2846     		mov	r0, r5
 163 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 164              	.LVL0:
 428:Src/main.c    **** 
 429:Src/main.c    ****   /*Configure GPIO pin : USER_BUTTON_Pin */
 430:Src/main.c    ****   GPIO_InitStruct.Pin = USER_BUTTON_Pin;
 165              		.loc 1 430 3 view .LVU44
 166              		.loc 1 430 23 is_stmt 0 view .LVU45
 167 0068 4FF40053 		mov	r3, #8192
 168 006c 0593     		str	r3, [sp, #20]
 431:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 169              		.loc 1 431 3 is_stmt 1 view .LVU46
 170              		.loc 1 431 24 is_stmt 0 view .LVU47
 171 006e 0694     		str	r4, [sp, #24]
 432:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 172              		.loc 1 432 3 is_stmt 1 view .LVU48
 173              		.loc 1 432 24 is_stmt 0 view .LVU49
 174 0070 0794     		str	r4, [sp, #28]
 433:Src/main.c    ****   HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 175              		.loc 1 433 3 is_stmt 1 view .LVU50
 176 0072 05A9     		add	r1, sp, #20
 177 0074 0D48     		ldr	r0, .L6+8
 178 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 179              	.LVL1:
 434:Src/main.c    **** 
 435:Src/main.c    ****   /*Configure GPIO pin : SD_detect_Pin */
 436:Src/main.c    ****   GPIO_InitStruct.Pin = SD_detect_Pin;
 180              		.loc 1 436 3 view .LVU51
 181              		.loc 1 436 23 is_stmt 0 view .LVU52
 182 007a 2023     		movs	r3, #32
 183 007c 0593     		str	r3, [sp, #20]
 437:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 184              		.loc 1 437 3 is_stmt 1 view .LVU53
 185              		.loc 1 437 24 is_stmt 0 view .LVU54
 186 007e 0694     		str	r4, [sp, #24]
 438:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 187              		.loc 1 438 3 is_stmt 1 view .LVU55
 188              		.loc 1 438 24 is_stmt 0 view .LVU56
 189 0080 0794     		str	r4, [sp, #28]
 439:Src/main.c    ****   HAL_GPIO_Init(SD_detect_GPIO_Port, &GPIO_InitStruct);
 190              		.loc 1 439 3 is_stmt 1 view .LVU57
 191 0082 05A9     		add	r1, sp, #20
ARM GAS  /tmp/ccs7SpOU.s 			page 12


 192 0084 0A48     		ldr	r0, .L6+12
 193 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 194              	.LVL2:
 440:Src/main.c    **** 
 441:Src/main.c    ****   /*Configure GPIO pins : LED_green_Pin LED_red_Pin LED_blue_Pin */
 442:Src/main.c    ****   GPIO_InitStruct.Pin = LED_green_Pin|LED_red_Pin|LED_blue_Pin;
 195              		.loc 1 442 3 view .LVU58
 196              		.loc 1 442 23 is_stmt 0 view .LVU59
 197 008a 44F28103 		movw	r3, #16513
 198 008e 0593     		str	r3, [sp, #20]
 443:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 199              		.loc 1 443 3 is_stmt 1 view .LVU60
 200              		.loc 1 443 24 is_stmt 0 view .LVU61
 201 0090 0123     		movs	r3, #1
 202 0092 0693     		str	r3, [sp, #24]
 444:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 444 3 is_stmt 1 view .LVU62
 204              		.loc 1 444 24 is_stmt 0 view .LVU63
 205 0094 0794     		str	r4, [sp, #28]
 445:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 206              		.loc 1 445 3 is_stmt 1 view .LVU64
 207              		.loc 1 445 25 is_stmt 0 view .LVU65
 208 0096 0894     		str	r4, [sp, #32]
 446:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 209              		.loc 1 446 3 is_stmt 1 view .LVU66
 210 0098 05A9     		add	r1, sp, #20
 211 009a 2846     		mov	r0, r5
 212 009c FFF7FEFF 		bl	HAL_GPIO_Init
 213              	.LVL3:
 447:Src/main.c    **** 
 448:Src/main.c    **** }
 214              		.loc 1 448 1 is_stmt 0 view .LVU67
 215 00a0 0BB0     		add	sp, sp, #44
 216              	.LCFI2:
 217              		.cfi_def_cfa_offset 12
 218              		@ sp needed
 219 00a2 30BD     		pop	{r4, r5, pc}
 220              	.L7:
 221              		.align	2
 222              	.L6:
 223 00a4 00380240 		.word	1073887232
 224 00a8 00040240 		.word	1073873920
 225 00ac 00080240 		.word	1073874944
 226 00b0 00000240 		.word	1073872896
 227              		.cfi_endproc
 228              	.LFE151:
 230              		.section	.text.MX_NVIC_Init,"ax",%progbits
 231              		.align	1
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv5-d16
 237              	MX_NVIC_Init:
 238              	.LFB146:
 242:Src/main.c    ****   /* SDMMC1_IRQn interrupt configuration */
 239              		.loc 1 242 1 is_stmt 1 view -0
 240              		.cfi_startproc
ARM GAS  /tmp/ccs7SpOU.s 			page 13


 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 08B5     		push	{r3, lr}
 244              	.LCFI3:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 3, -8
 247              		.cfi_offset 14, -4
 244:Src/main.c    ****   HAL_NVIC_EnableIRQ(SDMMC1_IRQn);
 248              		.loc 1 244 3 view .LVU69
 249 0002 0022     		movs	r2, #0
 250 0004 1146     		mov	r1, r2
 251 0006 3120     		movs	r0, #49
 252 0008 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 253              	.LVL4:
 245:Src/main.c    ****   /* USART3_IRQn interrupt configuration */
 254              		.loc 1 245 3 view .LVU70
 255 000c 3120     		movs	r0, #49
 256 000e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 257              	.LVL5:
 247:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART3_IRQn);
 258              		.loc 1 247 3 view .LVU71
 259 0012 0022     		movs	r2, #0
 260 0014 1146     		mov	r1, r2
 261 0016 2720     		movs	r0, #39
 262 0018 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 263              	.LVL6:
 248:Src/main.c    ****   /* CAN1_SCE_IRQn interrupt configuration */
 264              		.loc 1 248 3 view .LVU72
 265 001c 2720     		movs	r0, #39
 266 001e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 267              	.LVL7:
 250:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 268              		.loc 1 250 3 view .LVU73
 269 0022 0022     		movs	r2, #0
 270 0024 1146     		mov	r1, r2
 271 0026 1620     		movs	r0, #22
 272 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 273              	.LVL8:
 251:Src/main.c    ****   /* CAN1_RX1_IRQn interrupt configuration */
 274              		.loc 1 251 3 view .LVU74
 275 002c 1620     		movs	r0, #22
 276 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 277              	.LVL9:
 253:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 278              		.loc 1 253 3 view .LVU75
 279 0032 0022     		movs	r2, #0
 280 0034 1146     		mov	r1, r2
 281 0036 1520     		movs	r0, #21
 282 0038 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 283              	.LVL10:
 254:Src/main.c    ****   /* CAN1_RX0_IRQn interrupt configuration */
 284              		.loc 1 254 3 view .LVU76
 285 003c 1520     		movs	r0, #21
 286 003e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 287              	.LVL11:
 256:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 288              		.loc 1 256 3 view .LVU77
ARM GAS  /tmp/ccs7SpOU.s 			page 14


 289 0042 0022     		movs	r2, #0
 290 0044 1146     		mov	r1, r2
 291 0046 1420     		movs	r0, #20
 292 0048 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 293              	.LVL12:
 257:Src/main.c    ****   /* CAN1_TX_IRQn interrupt configuration */
 294              		.loc 1 257 3 view .LVU78
 295 004c 1420     		movs	r0, #20
 296 004e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 297              	.LVL13:
 259:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 298              		.loc 1 259 3 view .LVU79
 299 0052 0022     		movs	r2, #0
 300 0054 1146     		mov	r1, r2
 301 0056 1320     		movs	r0, #19
 302 0058 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 303              	.LVL14:
 260:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 304              		.loc 1 260 3 view .LVU80
 305 005c 1320     		movs	r0, #19
 306 005e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 307              	.LVL15:
 262:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 308              		.loc 1 262 3 view .LVU81
 309 0062 0022     		movs	r2, #0
 310 0064 1146     		mov	r1, r2
 311 0066 1C20     		movs	r0, #28
 312 0068 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 313              	.LVL16:
 263:Src/main.c    **** }
 314              		.loc 1 263 3 view .LVU82
 315 006c 1C20     		movs	r0, #28
 316 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 317              	.LVL17:
 264:Src/main.c    **** 
 318              		.loc 1 264 1 is_stmt 0 view .LVU83
 319 0072 08BD     		pop	{r3, pc}
 320              		.cfi_endproc
 321              	.LFE146:
 323              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 324              		.align	2
 325              	.LC0:
 326 0000 494D5520 		.ascii	"IMU non presente\015\012\000"
 326      6E6F6E20 
 326      70726573 
 326      656E7465 
 326      0D0A00
 327              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 328              		.align	1
 329              		.global	HAL_TIM_PeriodElapsedCallback
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv5-d16
 335              	HAL_TIM_PeriodElapsedCallback:
 336              	.LVL18:
 337              	.LFB152:
ARM GAS  /tmp/ccs7SpOU.s 			page 15


 449:Src/main.c    **** 
 450:Src/main.c    **** /* USER CODE BEGIN 4 */
 451:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 338              		.loc 1 451 61 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		.loc 1 451 61 is_stmt 0 view .LVU85
 343 0000 08B5     		push	{r3, lr}
 344              	.LCFI4:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 3, -8
 347              		.cfi_offset 14, -4
 452:Src/main.c    **** 	if (htim == &htim2) {
 348              		.loc 1 452 2 is_stmt 1 view .LVU86
 349              		.loc 1 452 5 is_stmt 0 view .LVU87
 350 0002 3A4B     		ldr	r3, .L24
 351 0004 8342     		cmp	r3, r0
 352 0006 00D0     		beq	.L18
 353              	.LVL19:
 354              	.L10:
 453:Src/main.c    **** 		count_ms += 1;
 454:Src/main.c    **** 		count_ms_abs++; //absolute 32 bit counter -> up to 50 days 
 455:Src/main.c    **** 		if (count_ms == 100) {
 456:Src/main.c    **** 			count_ms = 0;
 457:Src/main.c    **** 			count_dec++;
 458:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 459:Src/main.c    **** 			count_inverter++;
 460:Src/main.c    **** 			count_imu++;
 461:Src/main.c    **** 			count_atc++;
 462:Src/main.c    **** 			if (count_inverter == 10) {  //--- check if inverter is connected ---//
 463:Src/main.c    **** 					   // TODO: to implement error functions
 464:Src/main.c    **** 			} else if (count_inverter == 11) {
 465:Src/main.c    **** 				count_inverter = 10;
 466:Src/main.c    **** 			}
 467:Src/main.c    **** 			if (count_atc == 10) {  //--- check if Analog To Can is connected ---//
 468:Src/main.c    **** 				// TODO: to implement error functions
 469:Src/main.c    **** 				atc_connected = 0;
 470:Src/main.c    **** 			} else if (count_atc == 11) {
 471:Src/main.c    **** 				count_atc = 10;
 472:Src/main.c    **** 			}
 473:Src/main.c    **** 			if (count_imu == 10) {  //--- check if imu is connected ---//
 474:Src/main.c    **** 				// imu non presente //
 475:Src/main.c    **** 				imu_connected = 0;  // imu not connected
 476:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 1
 477:Src/main.c    **** 			} else if (count_imu == 11) {
 478:Src/main.c    **** 				count_imu = 10;
 479:Src/main.c    **** 			}
 480:Src/main.c    **** 			if (count_dec == 10) {
 481:Src/main.c    **** 				count_dec = 0;
 482:Src/main.c    **** 				count_sec++;
 483:Src/main.c    **** 				if (count_sec == 60) {
 484:Src/main.c    **** 					count_sec = 0;
 485:Src/main.c    **** 					count_min++;
 486:Src/main.c    **** 					if (count_min == 60) {
 487:Src/main.c    **** 						count_min = 0;
 488:Src/main.c    **** 						count_hour++;
ARM GAS  /tmp/ccs7SpOU.s 			page 16


 489:Src/main.c    **** 					}
 490:Src/main.c    **** 				}
 491:Src/main.c    **** 			}
 492:Src/main.c    **** 		}
 493:Src/main.c    **** 	}
 494:Src/main.c    **** }
 355              		.loc 1 494 1 view .LVU88
 356 0008 08BD     		pop	{r3, pc}
 357              	.LVL20:
 358              	.L18:
 453:Src/main.c    **** 		count_ms += 1;
 359              		.loc 1 453 3 is_stmt 1 view .LVU89
 453:Src/main.c    **** 		count_ms += 1;
 360              		.loc 1 453 12 is_stmt 0 view .LVU90
 361 000a 394A     		ldr	r2, .L24+4
 362 000c 1388     		ldrh	r3, [r2]
 363 000e 0133     		adds	r3, r3, #1
 364 0010 9BB2     		uxth	r3, r3
 365 0012 1380     		strh	r3, [r2]	@ movhi
 454:Src/main.c    **** 		if (count_ms == 100) {
 366              		.loc 1 454 3 is_stmt 1 view .LVU91
 454:Src/main.c    **** 		if (count_ms == 100) {
 367              		.loc 1 454 15 is_stmt 0 view .LVU92
 368 0014 3749     		ldr	r1, .L24+8
 369 0016 0B68     		ldr	r3, [r1]
 370 0018 0133     		adds	r3, r3, #1
 371 001a 0B60     		str	r3, [r1]
 455:Src/main.c    **** 			count_ms = 0;
 372              		.loc 1 455 3 is_stmt 1 view .LVU93
 455:Src/main.c    **** 			count_ms = 0;
 373              		.loc 1 455 16 is_stmt 0 view .LVU94
 374 001c 1388     		ldrh	r3, [r2]
 375 001e 9BB2     		uxth	r3, r3
 455:Src/main.c    **** 			count_ms = 0;
 376              		.loc 1 455 6 view .LVU95
 377 0020 642B     		cmp	r3, #100
 378 0022 F1D1     		bne	.L10
 456:Src/main.c    **** 			count_dec++;
 379              		.loc 1 456 4 is_stmt 1 view .LVU96
 456:Src/main.c    **** 			count_dec++;
 380              		.loc 1 456 13 is_stmt 0 view .LVU97
 381 0024 1346     		mov	r3, r2
 382 0026 0022     		movs	r2, #0
 383 0028 1A80     		strh	r2, [r3]	@ movhi
 457:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 384              		.loc 1 457 4 is_stmt 1 view .LVU98
 457:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 385              		.loc 1 457 13 is_stmt 0 view .LVU99
 386 002a 334A     		ldr	r2, .L24+12
 387 002c 1388     		ldrh	r3, [r2]
 388 002e 0133     		adds	r3, r3, #1
 389 0030 9BB2     		uxth	r3, r3
 390 0032 1380     		strh	r3, [r2]	@ movhi
 459:Src/main.c    **** 			count_imu++;
 391              		.loc 1 459 4 is_stmt 1 view .LVU100
 459:Src/main.c    **** 			count_imu++;
 392              		.loc 1 459 18 is_stmt 0 view .LVU101
ARM GAS  /tmp/ccs7SpOU.s 			page 17


 393 0034 314B     		ldr	r3, .L24+16
 394 0036 1988     		ldrh	r1, [r3]
 395 0038 0131     		adds	r1, r1, #1
 396 003a 89B2     		uxth	r1, r1
 397 003c 1980     		strh	r1, [r3]	@ movhi
 460:Src/main.c    **** 			count_atc++;
 398              		.loc 1 460 4 is_stmt 1 view .LVU102
 460:Src/main.c    **** 			count_atc++;
 399              		.loc 1 460 13 is_stmt 0 view .LVU103
 400 003e 304A     		ldr	r2, .L24+20
 401 0040 1388     		ldrh	r3, [r2]
 402 0042 0133     		adds	r3, r3, #1
 403 0044 9BB2     		uxth	r3, r3
 404 0046 1380     		strh	r3, [r2]	@ movhi
 461:Src/main.c    **** 			if (count_inverter == 10) {  //--- check if inverter is connected ---//
 405              		.loc 1 461 4 is_stmt 1 view .LVU104
 461:Src/main.c    **** 			if (count_inverter == 10) {  //--- check if inverter is connected ---//
 406              		.loc 1 461 13 is_stmt 0 view .LVU105
 407 0048 2E48     		ldr	r0, .L24+24
 408              	.LVL21:
 461:Src/main.c    **** 			if (count_inverter == 10) {  //--- check if inverter is connected ---//
 409              		.loc 1 461 13 view .LVU106
 410 004a 0288     		ldrh	r2, [r0]
 411 004c 0132     		adds	r2, r2, #1
 412 004e 92B2     		uxth	r2, r2
 413 0050 0280     		strh	r2, [r0]	@ movhi
 462:Src/main.c    **** 					   // TODO: to implement error functions
 414              		.loc 1 462 4 is_stmt 1 view .LVU107
 462:Src/main.c    **** 					   // TODO: to implement error functions
 415              		.loc 1 462 7 is_stmt 0 view .LVU108
 416 0052 0A29     		cmp	r1, #10
 417 0054 01D0     		beq	.L12
 464:Src/main.c    **** 				count_inverter = 10;
 418              		.loc 1 464 11 is_stmt 1 view .LVU109
 464:Src/main.c    **** 				count_inverter = 10;
 419              		.loc 1 464 14 is_stmt 0 view .LVU110
 420 0056 0B29     		cmp	r1, #11
 421 0058 2DD0     		beq	.L19
 422              	.L12:
 467:Src/main.c    **** 				// TODO: to implement error functions
 423              		.loc 1 467 4 is_stmt 1 view .LVU111
 467:Src/main.c    **** 				// TODO: to implement error functions
 424              		.loc 1 467 7 is_stmt 0 view .LVU112
 425 005a 0A2A     		cmp	r2, #10
 426 005c 2FD0     		beq	.L20
 470:Src/main.c    **** 				count_atc = 10;
 427              		.loc 1 470 11 is_stmt 1 view .LVU113
 470:Src/main.c    **** 				count_atc = 10;
 428              		.loc 1 470 14 is_stmt 0 view .LVU114
 429 005e 0B2A     		cmp	r2, #11
 430 0060 31D0     		beq	.L21
 431              	.L14:
 473:Src/main.c    **** 				// imu non presente //
 432              		.loc 1 473 4 is_stmt 1 view .LVU115
 473:Src/main.c    **** 				// imu non presente //
 433              		.loc 1 473 7 is_stmt 0 view .LVU116
 434 0062 0A2B     		cmp	r3, #10
ARM GAS  /tmp/ccs7SpOU.s 			page 18


 435 0064 33D0     		beq	.L22
 477:Src/main.c    **** 				count_imu = 10;
 436              		.loc 1 477 11 is_stmt 1 view .LVU117
 477:Src/main.c    **** 				count_imu = 10;
 437              		.loc 1 477 14 is_stmt 0 view .LVU118
 438 0066 0B2B     		cmp	r3, #11
 439 0068 3BD0     		beq	.L23
 440              	.L16:
 480:Src/main.c    **** 				count_dec = 0;
 441              		.loc 1 480 4 is_stmt 1 view .LVU119
 480:Src/main.c    **** 				count_dec = 0;
 442              		.loc 1 480 18 is_stmt 0 view .LVU120
 443 006a 234B     		ldr	r3, .L24+12
 444 006c 1B88     		ldrh	r3, [r3]
 445 006e 9BB2     		uxth	r3, r3
 480:Src/main.c    **** 				count_dec = 0;
 446              		.loc 1 480 7 view .LVU121
 447 0070 0A2B     		cmp	r3, #10
 448 0072 C9D1     		bne	.L10
 481:Src/main.c    **** 				count_sec++;
 449              		.loc 1 481 5 is_stmt 1 view .LVU122
 481:Src/main.c    **** 				count_sec++;
 450              		.loc 1 481 15 is_stmt 0 view .LVU123
 451 0074 204B     		ldr	r3, .L24+12
 452 0076 0022     		movs	r2, #0
 453 0078 1A80     		strh	r2, [r3]	@ movhi
 482:Src/main.c    **** 				if (count_sec == 60) {
 454              		.loc 1 482 5 is_stmt 1 view .LVU124
 482:Src/main.c    **** 				if (count_sec == 60) {
 455              		.loc 1 482 14 is_stmt 0 view .LVU125
 456 007a 234A     		ldr	r2, .L24+28
 457 007c 1388     		ldrh	r3, [r2]
 458 007e 0133     		adds	r3, r3, #1
 459 0080 9BB2     		uxth	r3, r3
 460 0082 1380     		strh	r3, [r2]	@ movhi
 483:Src/main.c    **** 					count_sec = 0;
 461              		.loc 1 483 5 is_stmt 1 view .LVU126
 483:Src/main.c    **** 					count_sec = 0;
 462              		.loc 1 483 19 is_stmt 0 view .LVU127
 463 0084 1388     		ldrh	r3, [r2]
 464 0086 9BB2     		uxth	r3, r3
 483:Src/main.c    **** 					count_sec = 0;
 465              		.loc 1 483 8 view .LVU128
 466 0088 3C2B     		cmp	r3, #60
 467 008a BDD1     		bne	.L10
 484:Src/main.c    **** 					count_min++;
 468              		.loc 1 484 6 is_stmt 1 view .LVU129
 484:Src/main.c    **** 					count_min++;
 469              		.loc 1 484 16 is_stmt 0 view .LVU130
 470 008c 1346     		mov	r3, r2
 471 008e 0022     		movs	r2, #0
 472 0090 1A80     		strh	r2, [r3]	@ movhi
 485:Src/main.c    **** 					if (count_min == 60) {
 473              		.loc 1 485 6 is_stmt 1 view .LVU131
 485:Src/main.c    **** 					if (count_min == 60) {
 474              		.loc 1 485 15 is_stmt 0 view .LVU132
 475 0092 1E4A     		ldr	r2, .L24+32
ARM GAS  /tmp/ccs7SpOU.s 			page 19


 476 0094 1388     		ldrh	r3, [r2]
 477 0096 0133     		adds	r3, r3, #1
 478 0098 9BB2     		uxth	r3, r3
 479 009a 1380     		strh	r3, [r2]	@ movhi
 486:Src/main.c    **** 						count_min = 0;
 480              		.loc 1 486 6 is_stmt 1 view .LVU133
 486:Src/main.c    **** 						count_min = 0;
 481              		.loc 1 486 20 is_stmt 0 view .LVU134
 482 009c 1388     		ldrh	r3, [r2]
 483 009e 9BB2     		uxth	r3, r3
 486:Src/main.c    **** 						count_min = 0;
 484              		.loc 1 486 9 view .LVU135
 485 00a0 3C2B     		cmp	r3, #60
 486 00a2 B1D1     		bne	.L10
 487:Src/main.c    **** 						count_hour++;
 487              		.loc 1 487 7 is_stmt 1 view .LVU136
 487:Src/main.c    **** 						count_hour++;
 488              		.loc 1 487 17 is_stmt 0 view .LVU137
 489 00a4 1346     		mov	r3, r2
 490 00a6 0022     		movs	r2, #0
 491 00a8 1A80     		strh	r2, [r3]	@ movhi
 488:Src/main.c    **** 					}
 492              		.loc 1 488 7 is_stmt 1 view .LVU138
 488:Src/main.c    **** 					}
 493              		.loc 1 488 17 is_stmt 0 view .LVU139
 494 00aa 194A     		ldr	r2, .L24+36
 495 00ac 1388     		ldrh	r3, [r2]
 496 00ae 0133     		adds	r3, r3, #1
 497 00b0 9BB2     		uxth	r3, r3
 498 00b2 1380     		strh	r3, [r2]	@ movhi
 499              		.loc 1 494 1 view .LVU140
 500 00b4 A8E7     		b	.L10
 501              	.L19:
 465:Src/main.c    **** 			}
 502              		.loc 1 465 5 is_stmt 1 view .LVU141
 465:Src/main.c    **** 			}
 503              		.loc 1 465 20 is_stmt 0 view .LVU142
 504 00b6 1149     		ldr	r1, .L24+16
 505 00b8 0A20     		movs	r0, #10
 506 00ba 0880     		strh	r0, [r1]	@ movhi
 507 00bc CDE7     		b	.L12
 508              	.L20:
 469:Src/main.c    **** 			} else if (count_atc == 11) {
 509              		.loc 1 469 5 is_stmt 1 view .LVU143
 469:Src/main.c    **** 			} else if (count_atc == 11) {
 510              		.loc 1 469 19 is_stmt 0 view .LVU144
 511 00be 154A     		ldr	r2, .L24+40
 512 00c0 0021     		movs	r1, #0
 513 00c2 1170     		strb	r1, [r2]
 514 00c4 CDE7     		b	.L14
 515              	.L21:
 471:Src/main.c    **** 			}
 516              		.loc 1 471 5 is_stmt 1 view .LVU145
 471:Src/main.c    **** 			}
 517              		.loc 1 471 15 is_stmt 0 view .LVU146
 518 00c6 0F4A     		ldr	r2, .L24+24
 519 00c8 0A21     		movs	r1, #10
ARM GAS  /tmp/ccs7SpOU.s 			page 20


 520 00ca 1180     		strh	r1, [r2]	@ movhi
 521 00cc C9E7     		b	.L14
 522              	.L22:
 475:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 1
 523              		.loc 1 475 5 is_stmt 1 view .LVU147
 475:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 1
 524              		.loc 1 475 19 is_stmt 0 view .LVU148
 525 00ce 124B     		ldr	r3, .L24+44
 526 00d0 0022     		movs	r2, #0
 527 00d2 1A70     		strb	r2, [r3]
 476:Src/main.c    **** 			} else if (count_imu == 11) {
 528              		.loc 1 476 5 is_stmt 1 view .LVU149
 529 00d4 0A23     		movs	r3, #10
 530 00d6 1222     		movs	r2, #18
 531 00d8 1049     		ldr	r1, .L24+48
 532 00da 1148     		ldr	r0, .L24+52
 533 00dc FFF7FEFF 		bl	HAL_UART_Transmit
 534              	.LVL22:
 535 00e0 C3E7     		b	.L16
 536              	.L23:
 478:Src/main.c    **** 			}
 537              		.loc 1 478 5 view .LVU150
 478:Src/main.c    **** 			}
 538              		.loc 1 478 15 is_stmt 0 view .LVU151
 539 00e2 074B     		ldr	r3, .L24+20
 540 00e4 0A22     		movs	r2, #10
 541 00e6 1A80     		strh	r2, [r3]	@ movhi
 542 00e8 BFE7     		b	.L16
 543              	.L25:
 544 00ea 00BF     		.align	2
 545              	.L24:
 546 00ec 00000000 		.word	htim2
 547 00f0 00000000 		.word	count_ms
 548 00f4 00000000 		.word	count_ms_abs
 549 00f8 00000000 		.word	count_dec
 550 00fc 00000000 		.word	count_inverter
 551 0100 00000000 		.word	count_imu
 552 0104 00000000 		.word	count_atc
 553 0108 00000000 		.word	count_sec
 554 010c 00000000 		.word	count_min
 555 0110 00000000 		.word	count_hour
 556 0114 00000000 		.word	atc_connected
 557 0118 00000000 		.word	imu_connected
 558 011c 00000000 		.word	.LC0
 559 0120 00000000 		.word	huart3
 560              		.cfi_endproc
 561              	.LFE152:
 563              		.section	.rodata.HAL_CAN_RxFifo0MsgPendingCallback.str1.4,"aMS",%progbits,1
 564              		.align	2
 565              	.LC1:
 566 0000 256C6420 		.ascii	"%ld %d %d %d %d %d %d %d %d\015\012\000"
 566      25642025 
 566      64202564 
 566      20256420 
 566      25642025 
 567              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 568              		.align	1
ARM GAS  /tmp/ccs7SpOU.s 			page 21


 569              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu fpv5-d16
 575              	HAL_CAN_RxFifo0MsgPendingCallback:
 576              	.LVL23:
 577              	.LFB153:
 495:Src/main.c    **** 
 496:Src/main.c    **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 578              		.loc 1 496 65 is_stmt 1 view -0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 32
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		.loc 1 496 65 is_stmt 0 view .LVU153
 583 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 584              	.LCFI5:
 585              		.cfi_def_cfa_offset 20
 586              		.cfi_offset 4, -20
 587              		.cfi_offset 5, -16
 588              		.cfi_offset 6, -12
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 91B0     		sub	sp, sp, #68
 592              	.LCFI6:
 593              		.cfi_def_cfa_offset 88
 594 0004 0446     		mov	r4, r0
 497:Src/main.c    **** 	/*sprintf(txt, "%d\r\n", HAL_CAN_GetRxFifoFillLevel(&hcan1, CAN_RX_FIFO0));
 498:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 10);*/
 499:Src/main.c    **** 
 500:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_blue_GPIO_Port, LED_blue_Pin);
 595              		.loc 1 500 2 is_stmt 1 view .LVU154
 596 0006 8021     		movs	r1, #128
 597 0008 2348     		ldr	r0, .L33
 598              	.LVL24:
 599              		.loc 1 500 2 is_stmt 0 view .LVU155
 600 000a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 601              	.LVL25:
 501:Src/main.c    **** 	if (hcan == &hcan1) {
 602              		.loc 1 501 2 is_stmt 1 view .LVU156
 603              		.loc 1 501 5 is_stmt 0 view .LVU157
 604 000e 234B     		ldr	r3, .L33+4
 605 0010 9C42     		cmp	r4, r3
 606 0012 01D0     		beq	.L31
 607              	.LVL26:
 608              	.L26:
 502:Src/main.c    **** 		// HAL_UART_Transmit(&huart3, (uint8_t*)"rx on FIFO0\r\n", strlen("rx on
 503:Src/main.c    **** 		// FIFO0\r\n"), 10);
 504:Src/main.c    **** 		if (HAL_CAN_GetRxFifoFillLevel(&hcan1, CAN_RX_FIFO0) != 0) {
 505:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 506:Src/main.c    **** 			HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &header, can1.dataRX_int);
 507:Src/main.c    **** 			can1.rx_id_int = header.StdId;
 508:Src/main.c    **** 			can1.rx_size_int = header.DLC;
 509:Src/main.c    ****       if(canSnifferMode == 1){
 510:Src/main.c    ****         sprintf(txt,"%ld %d %d %d %d %d %d %d %d\r\n", can1.rx_id_int, can1.dataRX_int[0], can1.dat
 511:Src/main.c    ****         HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 50);
 512:Src/main.c    ****       }else{
ARM GAS  /tmp/ccs7SpOU.s 			page 22


 513:Src/main.c    **** 			  fifoRxDataCAN_push(&can1);
 514:Src/main.c    ****       }
 515:Src/main.c    **** 			/*sprintf(txt, "DATA: %d %d %d %d %d %d %d %d\r\n", can1.dataRx[0],
 516:Src/main.c    **** 					can1.dataRx[1], can1.dataRx[2], can1.dataRx[3],
 517:Src/main.c    **** 					can1.dataRx[4], can1.dataRx[5], can1.dataRx[6],
 518:Src/main.c    **** 					can1.dataRx[7]);*/
 519:Src/main.c    **** 			// HAL_UART_Transmit(&huart3, (uint8_t *)txt, strlen(txt), 100);
 520:Src/main.c    **** 			// HAL_UART_Transmit(&huart3, (uint8_t*)"ciao2\r\n",
 521:Src/main.c    **** 			// strlen("ciao2\r\n"), 10);
 522:Src/main.c    **** 		}
 523:Src/main.c    **** 	}
 524:Src/main.c    **** }
 609              		.loc 1 524 1 view .LVU158
 610 0014 11B0     		add	sp, sp, #68
 611              	.LCFI7:
 612              		.cfi_remember_state
 613              		.cfi_def_cfa_offset 20
 614              		@ sp needed
 615 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
 616              	.LVL27:
 617              	.L31:
 618              	.LCFI8:
 619              		.cfi_restore_state
 504:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 620              		.loc 1 504 3 is_stmt 1 view .LVU159
 504:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 621              		.loc 1 504 7 is_stmt 0 view .LVU160
 622 0018 0021     		movs	r1, #0
 623 001a 1846     		mov	r0, r3
 624 001c FFF7FEFF 		bl	HAL_CAN_GetRxFifoFillLevel
 625              	.LVL28:
 504:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 626              		.loc 1 504 6 view .LVU161
 627 0020 0028     		cmp	r0, #0
 628 0022 F7D0     		beq	.L26
 629              	.LBB6:
 505:Src/main.c    **** 			HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &header, can1.dataRX_int);
 630              		.loc 1 505 4 is_stmt 1 view .LVU162
 506:Src/main.c    **** 			can1.rx_id_int = header.StdId;
 631              		.loc 1 506 4 view .LVU163
 632 0024 1E4C     		ldr	r4, .L33+8
 633              	.LVL29:
 506:Src/main.c    **** 			can1.rx_id_int = header.StdId;
 634              		.loc 1 506 4 is_stmt 0 view .LVU164
 635 0026 2346     		mov	r3, r4
 636 0028 09AA     		add	r2, sp, #36
 637 002a 0021     		movs	r1, #0
 638 002c 1B48     		ldr	r0, .L33+4
 639 002e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 640              	.LVL30:
 507:Src/main.c    **** 			can1.rx_size_int = header.DLC;
 641              		.loc 1 507 4 is_stmt 1 view .LVU165
 507:Src/main.c    **** 			can1.rx_size_int = header.DLC;
 642              		.loc 1 507 27 is_stmt 0 view .LVU166
 643 0032 099A     		ldr	r2, [sp, #36]
 507:Src/main.c    **** 			can1.rx_size_int = header.DLC;
 644              		.loc 1 507 19 view .LVU167
ARM GAS  /tmp/ccs7SpOU.s 			page 23


 645 0034 A261     		str	r2, [r4, #24]
 508:Src/main.c    ****       if(canSnifferMode == 1){
 646              		.loc 1 508 4 is_stmt 1 view .LVU168
 508:Src/main.c    ****       if(canSnifferMode == 1){
 647              		.loc 1 508 29 is_stmt 0 view .LVU169
 648 0036 0D9B     		ldr	r3, [sp, #52]
 508:Src/main.c    ****       if(canSnifferMode == 1){
 649              		.loc 1 508 21 view .LVU170
 650 0038 44F8143C 		str	r3, [r4, #-20]
 507:Src/main.c    **** 			can1.rx_size_int = header.DLC;
 651              		.loc 1 507 19 view .LVU171
 652 003c 1C3C     		subs	r4, r4, #28
 509:Src/main.c    ****         sprintf(txt,"%ld %d %d %d %d %d %d %d %d\r\n", can1.rx_id_int, can1.dataRX_int[0], can1.dat
 653              		.loc 1 509 7 is_stmt 1 view .LVU172
 509:Src/main.c    ****         sprintf(txt,"%ld %d %d %d %d %d %d %d %d\r\n", can1.rx_id_int, can1.dataRX_int[0], can1.dat
 654              		.loc 1 509 25 is_stmt 0 view .LVU173
 655 003e 194B     		ldr	r3, .L33+12
 656 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 509:Src/main.c    ****         sprintf(txt,"%ld %d %d %d %d %d %d %d %d\r\n", can1.rx_id_int, can1.dataRX_int[0], can1.dat
 657              		.loc 1 509 9 view .LVU174
 658 0042 012B     		cmp	r3, #1
 659 0044 03D0     		beq	.L32
 513:Src/main.c    ****       }
 660              		.loc 1 513 6 is_stmt 1 view .LVU175
 661 0046 1848     		ldr	r0, .L33+16
 662 0048 FFF7FEFF 		bl	fifoRxDataCAN_push
 663              	.LVL31:
 664              	.LBE6:
 665              		.loc 1 524 1 is_stmt 0 view .LVU176
 666 004c E2E7     		b	.L26
 667              	.L32:
 668              	.LBB7:
 510:Src/main.c    ****         HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 50);
 669              		.loc 1 510 9 is_stmt 1 view .LVU177
 510:Src/main.c    ****         HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 50);
 670              		.loc 1 510 87 is_stmt 0 view .LVU178
 671 004e 2346     		mov	r3, r4
 510:Src/main.c    ****         HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 50);
 672              		.loc 1 510 107 view .LVU179
 673 0050 617F     		ldrb	r1, [r4, #29]	@ zero_extendqisi2
 510:Src/main.c    ****         HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 50);
 674              		.loc 1 510 127 view .LVU180
 675 0052 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 510:Src/main.c    ****         HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 50);
 676              		.loc 1 510 147 view .LVU181
 677 0054 E57F     		ldrb	r5, [r4, #31]	@ zero_extendqisi2
 510:Src/main.c    ****         HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 50);
 678              		.loc 1 510 167 view .LVU182
 679 0056 94F82060 		ldrb	r6, [r4, #32]	@ zero_extendqisi2
 510:Src/main.c    ****         HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 50);
 680              		.loc 1 510 187 view .LVU183
 681 005a 94F82170 		ldrb	r7, [r4, #33]	@ zero_extendqisi2
 510:Src/main.c    ****         HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 50);
 682              		.loc 1 510 207 view .LVU184
 683 005e 94F822C0 		ldrb	ip, [r4, #34]	@ zero_extendqisi2
 510:Src/main.c    ****         HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 50);
 684              		.loc 1 510 227 view .LVU185
ARM GAS  /tmp/ccs7SpOU.s 			page 24


 685 0062 94F823E0 		ldrb	lr, [r4, #35]	@ zero_extendqisi2
 510:Src/main.c    ****         HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 50);
 686              		.loc 1 510 9 view .LVU186
 687 0066 114C     		ldr	r4, .L33+20
 688 0068 CDF818E0 		str	lr, [sp, #24]
 689 006c CDF814C0 		str	ip, [sp, #20]
 690 0070 0497     		str	r7, [sp, #16]
 691 0072 0396     		str	r6, [sp, #12]
 692 0074 0295     		str	r5, [sp, #8]
 693 0076 0190     		str	r0, [sp, #4]
 694 0078 0091     		str	r1, [sp]
 695 007a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 696 007c 0C49     		ldr	r1, .L33+24
 697 007e 2046     		mov	r0, r4
 698 0080 FFF7FEFF 		bl	sprintf
 699              	.LVL32:
 511:Src/main.c    ****       }else{
 700              		.loc 1 511 9 is_stmt 1 view .LVU187
 511:Src/main.c    ****       }else{
 701              		.loc 1 511 51 is_stmt 0 view .LVU188
 702 0084 2046     		mov	r0, r4
 703 0086 FFF7FEFF 		bl	strlen
 704              	.LVL33:
 511:Src/main.c    ****       }else{
 705              		.loc 1 511 9 view .LVU189
 706 008a 3223     		movs	r3, #50
 707 008c 82B2     		uxth	r2, r0
 708 008e 2146     		mov	r1, r4
 709 0090 0848     		ldr	r0, .L33+28
 710 0092 FFF7FEFF 		bl	HAL_UART_Transmit
 711              	.LVL34:
 712 0096 BDE7     		b	.L26
 713              	.L34:
 714              		.align	2
 715              	.L33:
 716 0098 00040240 		.word	1073873920
 717 009c 00000000 		.word	hcan1
 718 00a0 1C000000 		.word	can1+28
 719 00a4 00000000 		.word	canSnifferMode
 720 00a8 00000000 		.word	can1
 721 00ac 00000000 		.word	txt
 722 00b0 00000000 		.word	.LC1
 723 00b4 00000000 		.word	huart3
 724              	.LBE7:
 725              		.cfi_endproc
 726              	.LFE153:
 728              		.section	.rodata.HAL_CAN_RxFifo1MsgPendingCallback.str1.4,"aMS",%progbits,1
 729              		.align	2
 730              	.LC2:
 731 0000 7278206F 		.ascii	"rx on FIFO1\015\012\000"
 731      6E204649 
 731      464F310D 
 731      0A00
 732              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 733              		.align	1
 734              		.global	HAL_CAN_RxFifo1MsgPendingCallback
 735              		.syntax unified
ARM GAS  /tmp/ccs7SpOU.s 			page 25


 736              		.thumb
 737              		.thumb_func
 738              		.fpu fpv5-d16
 740              	HAL_CAN_RxFifo1MsgPendingCallback:
 741              	.LVL35:
 742              	.LFB154:
 525:Src/main.c    **** void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 743              		.loc 1 525 65 is_stmt 1 view -0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		.loc 1 525 65 is_stmt 0 view .LVU191
 748 0000 08B5     		push	{r3, lr}
 749              	.LCFI9:
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 3, -8
 752              		.cfi_offset 14, -4
 526:Src/main.c    **** 	if (hcan == &hcan1) {
 753              		.loc 1 526 2 is_stmt 1 view .LVU192
 754              		.loc 1 526 5 is_stmt 0 view .LVU193
 755 0002 054B     		ldr	r3, .L39
 756 0004 8342     		cmp	r3, r0
 757 0006 00D0     		beq	.L38
 758              	.LVL36:
 759              	.L35:
 527:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"rx on FIFO1\r\n",
 528:Src/main.c    **** 						  strlen("rx on FIFO1\r\n"), 10);
 529:Src/main.c    **** 	}
 530:Src/main.c    **** }
 760              		.loc 1 530 1 view .LVU194
 761 0008 08BD     		pop	{r3, pc}
 762              	.LVL37:
 763              	.L38:
 527:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"rx on FIFO1\r\n",
 764              		.loc 1 527 3 is_stmt 1 view .LVU195
 765 000a 0A23     		movs	r3, #10
 766 000c 0D22     		movs	r2, #13
 767 000e 0349     		ldr	r1, .L39+4
 768 0010 0348     		ldr	r0, .L39+8
 769              	.LVL38:
 527:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"rx on FIFO1\r\n",
 770              		.loc 1 527 3 is_stmt 0 view .LVU196
 771 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 772              	.LVL39:
 773              		.loc 1 530 1 view .LVU197
 774 0016 F7E7     		b	.L35
 775              	.L40:
 776              		.align	2
 777              	.L39:
 778 0018 00000000 		.word	hcan1
 779 001c 00000000 		.word	.LC2
 780 0020 00000000 		.word	huart3
 781              		.cfi_endproc
 782              	.LFE154:
 784              		.section	.rodata.HAL_CAN_RxFifo0FullCallback.str1.4,"aMS",%progbits,1
 785              		.align	2
 786              	.LC3:
ARM GAS  /tmp/ccs7SpOU.s 			page 26


 787 0000 4649464F 		.ascii	"FIFO0 FULL\015\012\000"
 787      30204655 
 787      4C4C0D0A 
 787      00
 788              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 789              		.align	1
 790              		.global	HAL_CAN_RxFifo0FullCallback
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 794              		.fpu fpv5-d16
 796              	HAL_CAN_RxFifo0FullCallback:
 797              	.LVL40:
 798              	.LFB155:
 531:Src/main.c    **** 
 532:Src/main.c    **** void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan) {
 799              		.loc 1 532 59 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		.loc 1 532 59 is_stmt 0 view .LVU199
 804 0000 08B5     		push	{r3, lr}
 805              	.LCFI10:
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 3, -8
 808              		.cfi_offset 14, -4
 533:Src/main.c    **** 	if (hcan == &hcan1) {
 809              		.loc 1 533 2 is_stmt 1 view .LVU200
 810              		.loc 1 533 5 is_stmt 0 view .LVU201
 811 0002 054B     		ldr	r3, .L45
 812 0004 8342     		cmp	r3, r0
 813 0006 00D0     		beq	.L44
 814              	.LVL41:
 815              	.L41:
 534:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO0 FULL\r\n",
 535:Src/main.c    **** 						  strlen("FIFO0 FULL\r\n"), 10);
 536:Src/main.c    **** 	}
 537:Src/main.c    **** }
 816              		.loc 1 537 1 view .LVU202
 817 0008 08BD     		pop	{r3, pc}
 818              	.LVL42:
 819              	.L44:
 534:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO0 FULL\r\n",
 820              		.loc 1 534 3 is_stmt 1 view .LVU203
 821 000a 0A23     		movs	r3, #10
 822 000c 0C22     		movs	r2, #12
 823 000e 0349     		ldr	r1, .L45+4
 824 0010 0348     		ldr	r0, .L45+8
 825              	.LVL43:
 534:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO0 FULL\r\n",
 826              		.loc 1 534 3 is_stmt 0 view .LVU204
 827 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 828              	.LVL44:
 829              		.loc 1 537 1 view .LVU205
 830 0016 F7E7     		b	.L41
 831              	.L46:
 832              		.align	2
ARM GAS  /tmp/ccs7SpOU.s 			page 27


 833              	.L45:
 834 0018 00000000 		.word	hcan1
 835 001c 00000000 		.word	.LC3
 836 0020 00000000 		.word	huart3
 837              		.cfi_endproc
 838              	.LFE155:
 840              		.section	.rodata.HAL_CAN_RxFifo1FullCallback.str1.4,"aMS",%progbits,1
 841              		.align	2
 842              	.LC4:
 843 0000 4649464F 		.ascii	"FIFO1 FULL\015\012\000"
 843      31204655 
 843      4C4C0D0A 
 843      00
 844              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 845              		.align	1
 846              		.global	HAL_CAN_RxFifo1FullCallback
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu fpv5-d16
 852              	HAL_CAN_RxFifo1FullCallback:
 853              	.LVL45:
 854              	.LFB156:
 538:Src/main.c    **** void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan) {
 855              		.loc 1 538 59 is_stmt 1 view -0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		.loc 1 538 59 is_stmt 0 view .LVU207
 860 0000 08B5     		push	{r3, lr}
 861              	.LCFI11:
 862              		.cfi_def_cfa_offset 8
 863              		.cfi_offset 3, -8
 864              		.cfi_offset 14, -4
 539:Src/main.c    **** 	if (hcan == &hcan1) {
 865              		.loc 1 539 2 is_stmt 1 view .LVU208
 866              		.loc 1 539 5 is_stmt 0 view .LVU209
 867 0002 054B     		ldr	r3, .L51
 868 0004 8342     		cmp	r3, r0
 869 0006 00D0     		beq	.L50
 870              	.LVL46:
 871              	.L47:
 540:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO1 FULL\r\n",
 541:Src/main.c    **** 						  strlen("FIFO1 FULL\r\n"), 10);
 542:Src/main.c    **** 	}
 543:Src/main.c    **** }
 872              		.loc 1 543 1 view .LVU210
 873 0008 08BD     		pop	{r3, pc}
 874              	.LVL47:
 875              	.L50:
 540:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO1 FULL\r\n",
 876              		.loc 1 540 3 is_stmt 1 view .LVU211
 877 000a 0A23     		movs	r3, #10
 878 000c 0C22     		movs	r2, #12
 879 000e 0349     		ldr	r1, .L51+4
 880 0010 0348     		ldr	r0, .L51+8
 881              	.LVL48:
ARM GAS  /tmp/ccs7SpOU.s 			page 28


 540:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO1 FULL\r\n",
 882              		.loc 1 540 3 is_stmt 0 view .LVU212
 883 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 884              	.LVL49:
 885              		.loc 1 543 1 view .LVU213
 886 0016 F7E7     		b	.L47
 887              	.L52:
 888              		.align	2
 889              	.L51:
 890 0018 00000000 		.word	hcan1
 891 001c 00000000 		.word	.LC4
 892 0020 00000000 		.word	huart3
 893              		.cfi_endproc
 894              	.LFE156:
 896              		.section	.rodata.HAL_CAN_TxMailbox0CompleteCallback.str1.4,"aMS",%progbits,1
 897              		.align	2
 898              	.LC5:
 899 0000 6D62303A 		.ascii	"mb0: %d\015\012\000"
 899      2025640D 
 899      0A00
 900 000a 0000     		.align	2
 901              	.LC6:
 902 000c 68696768 		.ascii	"high\015\012\000"
 902      0D0A00
 903              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 904              		.align	1
 905              		.global	HAL_CAN_TxMailbox0CompleteCallback
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv5-d16
 911              	HAL_CAN_TxMailbox0CompleteCallback:
 912              	.LVL50:
 913              	.LFB157:
 544:Src/main.c    **** 
 545:Src/main.c    **** void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan) {
 914              		.loc 1 545 66 is_stmt 1 view -0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              		.loc 1 545 66 is_stmt 0 view .LVU215
 919 0000 38B5     		push	{r3, r4, r5, lr}
 920              	.LCFI12:
 921              		.cfi_def_cfa_offset 16
 922              		.cfi_offset 3, -16
 923              		.cfi_offset 4, -12
 924              		.cfi_offset 5, -8
 925              		.cfi_offset 14, -4
 926 0002 0446     		mov	r4, r0
 546:Src/main.c    **** 	sprintf(txt, "mb0: %d\r\n", (int)can1.idBck);
 927              		.loc 1 546 2 is_stmt 1 view .LVU216
 928 0004 184D     		ldr	r5, .L58
 929 0006 194B     		ldr	r3, .L58+4
 930 0008 9A6B     		ldr	r2, [r3, #56]
 931 000a 1949     		ldr	r1, .L58+8
 932 000c 2846     		mov	r0, r5
 933              	.LVL51:
ARM GAS  /tmp/ccs7SpOU.s 			page 29


 934              		.loc 1 546 2 is_stmt 0 view .LVU217
 935 000e FFF7FEFF 		bl	sprintf
 936              	.LVL52:
 547:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t *)(txt), strlen(txt), 10);
 937              		.loc 1 547 2 is_stmt 1 view .LVU218
 938              		.loc 1 547 47 is_stmt 0 view .LVU219
 939 0012 2846     		mov	r0, r5
 940 0014 FFF7FEFF 		bl	strlen
 941              	.LVL53:
 942              		.loc 1 547 2 view .LVU220
 943 0018 0A23     		movs	r3, #10
 944 001a 82B2     		uxth	r2, r0
 945 001c 2946     		mov	r1, r5
 946 001e 1548     		ldr	r0, .L58+12
 947 0020 FFF7FEFF 		bl	HAL_UART_Transmit
 948              	.LVL54:
 548:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 949              		.loc 1 548 2 is_stmt 1 view .LVU221
 950 0024 0121     		movs	r1, #1
 951 0026 1448     		ldr	r0, .L58+16
 952 0028 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 953              	.LVL55:
 549:Src/main.c    **** 	if (hcan == &hcan1) {
 954              		.loc 1 549 2 view .LVU222
 955              		.loc 1 549 5 is_stmt 0 view .LVU223
 956 002c 134B     		ldr	r3, .L58+20
 957 002e 9C42     		cmp	r4, r3
 958 0030 00D0     		beq	.L57
 959              	.L53:
 550:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 551:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 552:Src/main.c    **** 				// TODO: implementare errore
 553:Src/main.c    **** 			} else {
 554:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)("high\r\n"),
 555:Src/main.c    **** 								  strlen("high\r\n"), 10);
 556:Src/main.c    **** 			}
 557:Src/main.c    **** 		} else if (fifoTxDataCAN_normal_pop(&can1)) {
 558:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 559:Src/main.c    **** 			// strlen("Prendo dalla fifo\r\n"), 10);
 560:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 561:Src/main.c    **** 				// TODO: implementare errore
 562:Src/main.c    **** 			}
 563:Src/main.c    **** 		} else {
 564:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"),
 565:Src/main.c    **** 			// strlen("Fifo vuota\r\n"), 10);
 566:Src/main.c    **** 		}
 567:Src/main.c    **** 	} /*else{
 568:Src/main.c    **** 	 HAL_UART_Transmit(&huart3,(uint8_t*)("Messaggio trasmesso\r\n"),
 569:Src/main.c    **** 	 strlen("Messaggio trasmesso\r\n"), 10);
 570:Src/main.c    **** 		 //HAL_GPIO_TogglePin(USER_LED_4_GPIO_Port, USER_LED_4_Pin);
 571:Src/main.c    **** 		 fifoDataType fifodata;
 572:Src/main.c    **** 		 if(fifoTxDataCAN3_high_pop(&fifoCAN3, &fifodata)){
 573:Src/main.c    **** 			 for(int i = 0; i < 8; i++){
 574:Src/main.c    **** 				 can3.dataTx[i] = fifodata.data[i];
 575:Src/main.c    **** 			 }
 576:Src/main.c    **** 			 if(CAN_Send_IT(&can3, fifodata.id) == 0){
 577:Src/main.c    **** 				 //TODO: implementare errore
ARM GAS  /tmp/ccs7SpOU.s 			page 30


 578:Src/main.c    **** 			 }
 579:Src/main.c    **** 		 }else if(fifoTxDataCAN3_normal_pop(&fifoCAN3, &fifodata)){
 580:Src/main.c    **** 			 HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 581:Src/main.c    **** 	 strlen("Prendo dalla fifo\r\n"), 10); for(int i = 0; i < 8; i++){
 582:Src/main.c    **** 				 can3.dataTx[i] = fifodata.data[i];
 583:Src/main.c    **** 			 }
 584:Src/main.c    **** 			 if(CAN_Send_IT(&can3, fifodata.id) == 0){
 585:Src/main.c    **** 				 //TODO: implementare errore
 586:Src/main.c    **** 			 }
 587:Src/main.c    **** 		 }else{
 588:Src/main.c    **** 			 //TODO: riattivare interrupt
 589:Src/main.c    **** 			 HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"),
 590:Src/main.c    **** 	 strlen("Fifo vuota\r\n"), 10);
 591:Src/main.c    **** 		 }*/
 592:Src/main.c    **** 	  //}
 593:Src/main.c    **** }
 960              		.loc 1 593 1 view .LVU224
 961 0032 38BD     		pop	{r3, r4, r5, pc}
 962              	.LVL56:
 963              	.L57:
 550:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 964              		.loc 1 550 3 is_stmt 1 view .LVU225
 550:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 965              		.loc 1 550 7 is_stmt 0 view .LVU226
 966 0034 0D48     		ldr	r0, .L58+4
 967 0036 FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 968              	.LVL57:
 550:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 969              		.loc 1 550 6 view .LVU227
 970 003a 58B1     		cbz	r0, .L55
 551:Src/main.c    **** 				// TODO: implementare errore
 971              		.loc 1 551 4 is_stmt 1 view .LVU228
 551:Src/main.c    **** 				// TODO: implementare errore
 972              		.loc 1 551 8 is_stmt 0 view .LVU229
 973 003c 0B48     		ldr	r0, .L58+4
 974 003e FFF7FEFF 		bl	CAN_Send_IT
 975              	.LVL58:
 551:Src/main.c    **** 				// TODO: implementare errore
 976              		.loc 1 551 7 view .LVU230
 977 0042 0028     		cmp	r0, #0
 978 0044 F5D0     		beq	.L53
 554:Src/main.c    **** 								  strlen("high\r\n"), 10);
 979              		.loc 1 554 5 is_stmt 1 view .LVU231
 980 0046 0A23     		movs	r3, #10
 981 0048 0622     		movs	r2, #6
 982 004a 0D49     		ldr	r1, .L58+24
 983 004c 0948     		ldr	r0, .L58+12
 984 004e FFF7FEFF 		bl	HAL_UART_Transmit
 985              	.LVL59:
 986 0052 EEE7     		b	.L53
 987              	.L55:
 557:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 988              		.loc 1 557 10 view .LVU232
 557:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 989              		.loc 1 557 14 is_stmt 0 view .LVU233
 990 0054 0548     		ldr	r0, .L58+4
 991 0056 FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
ARM GAS  /tmp/ccs7SpOU.s 			page 31


 992              	.LVL60:
 557:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 993              		.loc 1 557 13 view .LVU234
 994 005a 0028     		cmp	r0, #0
 995 005c E9D0     		beq	.L53
 560:Src/main.c    **** 				// TODO: implementare errore
 996              		.loc 1 560 4 is_stmt 1 view .LVU235
 560:Src/main.c    **** 				// TODO: implementare errore
 997              		.loc 1 560 8 is_stmt 0 view .LVU236
 998 005e 0348     		ldr	r0, .L58+4
 999 0060 FFF7FEFF 		bl	CAN_Send_IT
 1000              	.LVL61:
 562:Src/main.c    **** 		} else {
 1001              		.loc 1 562 4 is_stmt 1 view .LVU237
 566:Src/main.c    **** 	} /*else{
 1002              		.loc 1 566 3 view .LVU238
 1003              		.loc 1 593 1 is_stmt 0 view .LVU239
 1004 0064 E5E7     		b	.L53
 1005              	.L59:
 1006 0066 00BF     		.align	2
 1007              	.L58:
 1008 0068 00000000 		.word	txt
 1009 006c 00000000 		.word	can1
 1010 0070 00000000 		.word	.LC5
 1011 0074 00000000 		.word	huart3
 1012 0078 00040240 		.word	1073873920
 1013 007c 00000000 		.word	hcan1
 1014 0080 0C000000 		.word	.LC6
 1015              		.cfi_endproc
 1016              	.LFE157:
 1018              		.section	.rodata.HAL_CAN_TxMailbox1CompleteCallback.str1.4,"aMS",%progbits,1
 1019              		.align	2
 1020              	.LC7:
 1021 0000 6D62313A 		.ascii	"mb1: %d %d\015\012\000"
 1021      20256420 
 1021      25640D0A 
 1021      00
 1022              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 1023              		.align	1
 1024              		.global	HAL_CAN_TxMailbox1CompleteCallback
 1025              		.syntax unified
 1026              		.thumb
 1027              		.thumb_func
 1028              		.fpu fpv5-d16
 1030              	HAL_CAN_TxMailbox1CompleteCallback:
 1031              	.LVL62:
 1032              	.LFB158:
 594:Src/main.c    **** void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan) {
 1033              		.loc 1 594 66 is_stmt 1 view -0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              		.loc 1 594 66 is_stmt 0 view .LVU241
 1038 0000 38B5     		push	{r3, r4, r5, lr}
 1039              	.LCFI13:
 1040              		.cfi_def_cfa_offset 16
 1041              		.cfi_offset 3, -16
ARM GAS  /tmp/ccs7SpOU.s 			page 32


 1042              		.cfi_offset 4, -12
 1043              		.cfi_offset 5, -8
 1044              		.cfi_offset 14, -4
 1045 0002 0446     		mov	r4, r0
 595:Src/main.c    **** 	sprintf(txt, "mb1: %d %d\r\n", can1.fifo.txTailNormal,
 1046              		.loc 1 595 2 is_stmt 1 view .LVU242
 1047              		.loc 1 595 42 is_stmt 0 view .LVU243
 1048 0004 194A     		ldr	r2, .L65
 1049              		.loc 1 595 2 view .LVU244
 1050 0006 1A4D     		ldr	r5, .L65+4
 1051 0008 92F87230 		ldrb	r3, [r2, #114]	@ zero_extendqisi2
 1052 000c 92F87320 		ldrb	r2, [r2, #115]	@ zero_extendqisi2
 1053 0010 1849     		ldr	r1, .L65+8
 1054 0012 2846     		mov	r0, r5
 1055              	.LVL63:
 1056              		.loc 1 595 2 view .LVU245
 1057 0014 FFF7FEFF 		bl	sprintf
 1058              	.LVL64:
 596:Src/main.c    **** 			can1.fifo.txHeadNormal);
 597:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t *)(txt), strlen(txt), 10);
 1059              		.loc 1 597 2 is_stmt 1 view .LVU246
 1060              		.loc 1 597 47 is_stmt 0 view .LVU247
 1061 0018 2846     		mov	r0, r5
 1062 001a FFF7FEFF 		bl	strlen
 1063              	.LVL65:
 1064              		.loc 1 597 2 view .LVU248
 1065 001e 0A23     		movs	r3, #10
 1066 0020 82B2     		uxth	r2, r0
 1067 0022 2946     		mov	r1, r5
 1068 0024 1448     		ldr	r0, .L65+12
 1069 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 1070              	.LVL66:
 598:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 1071              		.loc 1 598 2 is_stmt 1 view .LVU249
 1072 002a 0121     		movs	r1, #1
 1073 002c 1348     		ldr	r0, .L65+16
 1074 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1075              	.LVL67:
 599:Src/main.c    **** 	if (hcan == &hcan1) {
 1076              		.loc 1 599 2 view .LVU250
 1077              		.loc 1 599 5 is_stmt 0 view .LVU251
 1078 0032 134B     		ldr	r3, .L65+20
 1079 0034 9C42     		cmp	r4, r3
 1080 0036 00D0     		beq	.L64
 1081              	.L60:
 600:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 601:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 602:Src/main.c    **** 				// TODO: implementare errore
 603:Src/main.c    **** 			} else {
 604:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)("high\r\n"),
 605:Src/main.c    **** 								  strlen("high\r\n"), 10);
 606:Src/main.c    **** 			}
 607:Src/main.c    **** 		} else if (fifoTxDataCAN_normal_pop(&can1)) {
 608:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 609:Src/main.c    **** 			// strlen("Prendo dalla fifo\r\n"), 10);
 610:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 611:Src/main.c    **** 				// TODO: implementare errore
ARM GAS  /tmp/ccs7SpOU.s 			page 33


 612:Src/main.c    **** 			}
 613:Src/main.c    **** 		} else {
 614:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"),
 615:Src/main.c    **** 			// strlen("Fifo vuota\r\n"), 10);
 616:Src/main.c    **** 		}
 617:Src/main.c    **** 	}
 618:Src/main.c    **** }
 1082              		.loc 1 618 1 view .LVU252
 1083 0038 38BD     		pop	{r3, r4, r5, pc}
 1084              	.LVL68:
 1085              	.L64:
 600:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1086              		.loc 1 600 3 is_stmt 1 view .LVU253
 600:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1087              		.loc 1 600 7 is_stmt 0 view .LVU254
 1088 003a 0C48     		ldr	r0, .L65
 1089 003c FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 1090              	.LVL69:
 600:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1091              		.loc 1 600 6 view .LVU255
 1092 0040 58B1     		cbz	r0, .L62
 601:Src/main.c    **** 				// TODO: implementare errore
 1093              		.loc 1 601 4 is_stmt 1 view .LVU256
 601:Src/main.c    **** 				// TODO: implementare errore
 1094              		.loc 1 601 8 is_stmt 0 view .LVU257
 1095 0042 0A48     		ldr	r0, .L65
 1096 0044 FFF7FEFF 		bl	CAN_Send_IT
 1097              	.LVL70:
 601:Src/main.c    **** 				// TODO: implementare errore
 1098              		.loc 1 601 7 view .LVU258
 1099 0048 0028     		cmp	r0, #0
 1100 004a F5D0     		beq	.L60
 604:Src/main.c    **** 								  strlen("high\r\n"), 10);
 1101              		.loc 1 604 5 is_stmt 1 view .LVU259
 1102 004c 0A23     		movs	r3, #10
 1103 004e 0622     		movs	r2, #6
 1104 0050 0C49     		ldr	r1, .L65+24
 1105 0052 0948     		ldr	r0, .L65+12
 1106 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 1107              	.LVL71:
 1108 0058 EEE7     		b	.L60
 1109              	.L62:
 607:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1110              		.loc 1 607 10 view .LVU260
 607:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1111              		.loc 1 607 14 is_stmt 0 view .LVU261
 1112 005a 0448     		ldr	r0, .L65
 1113 005c FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 1114              	.LVL72:
 607:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1115              		.loc 1 607 13 view .LVU262
 1116 0060 0028     		cmp	r0, #0
 1117 0062 E9D0     		beq	.L60
 610:Src/main.c    **** 				// TODO: implementare errore
 1118              		.loc 1 610 4 is_stmt 1 view .LVU263
 610:Src/main.c    **** 				// TODO: implementare errore
 1119              		.loc 1 610 8 is_stmt 0 view .LVU264
ARM GAS  /tmp/ccs7SpOU.s 			page 34


 1120 0064 0148     		ldr	r0, .L65
 1121 0066 FFF7FEFF 		bl	CAN_Send_IT
 1122              	.LVL73:
 612:Src/main.c    **** 		} else {
 1123              		.loc 1 612 4 is_stmt 1 view .LVU265
 616:Src/main.c    **** 	}
 1124              		.loc 1 616 3 view .LVU266
 1125              		.loc 1 618 1 is_stmt 0 view .LVU267
 1126 006a E5E7     		b	.L60
 1127              	.L66:
 1128              		.align	2
 1129              	.L65:
 1130 006c 00000000 		.word	can1
 1131 0070 00000000 		.word	txt
 1132 0074 00000000 		.word	.LC7
 1133 0078 00000000 		.word	huart3
 1134 007c 00040240 		.word	1073873920
 1135 0080 00000000 		.word	hcan1
 1136 0084 0C000000 		.word	.LC6
 1137              		.cfi_endproc
 1138              	.LFE158:
 1140              		.section	.rodata.HAL_CAN_TxMailbox2CompleteCallback.str1.4,"aMS",%progbits,1
 1141              		.align	2
 1142              	.LC8:
 1143 0000 6D62323A 		.ascii	"mb2: %d %d\015\012\000"
 1143      20256420 
 1143      25640D0A 
 1143      00
 1144              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 1145              		.align	1
 1146              		.global	HAL_CAN_TxMailbox2CompleteCallback
 1147              		.syntax unified
 1148              		.thumb
 1149              		.thumb_func
 1150              		.fpu fpv5-d16
 1152              	HAL_CAN_TxMailbox2CompleteCallback:
 1153              	.LVL74:
 1154              	.LFB159:
 619:Src/main.c    **** void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan) {
 1155              		.loc 1 619 66 is_stmt 1 view -0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159              		.loc 1 619 66 is_stmt 0 view .LVU269
 1160 0000 38B5     		push	{r3, r4, r5, lr}
 1161              	.LCFI14:
 1162              		.cfi_def_cfa_offset 16
 1163              		.cfi_offset 3, -16
 1164              		.cfi_offset 4, -12
 1165              		.cfi_offset 5, -8
 1166              		.cfi_offset 14, -4
 1167 0002 0446     		mov	r4, r0
 620:Src/main.c    **** 	sprintf(txt, "mb2: %d %d\r\n", can1.fifo.txTailNormal,
 1168              		.loc 1 620 2 is_stmt 1 view .LVU270
 1169              		.loc 1 620 42 is_stmt 0 view .LVU271
 1170 0004 194A     		ldr	r2, .L72
 1171              		.loc 1 620 2 view .LVU272
ARM GAS  /tmp/ccs7SpOU.s 			page 35


 1172 0006 1A4D     		ldr	r5, .L72+4
 1173 0008 92F87230 		ldrb	r3, [r2, #114]	@ zero_extendqisi2
 1174 000c 92F87320 		ldrb	r2, [r2, #115]	@ zero_extendqisi2
 1175 0010 1849     		ldr	r1, .L72+8
 1176 0012 2846     		mov	r0, r5
 1177              	.LVL75:
 1178              		.loc 1 620 2 view .LVU273
 1179 0014 FFF7FEFF 		bl	sprintf
 1180              	.LVL76:
 621:Src/main.c    **** 			can1.fifo.txHeadNormal);
 622:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t *)(txt), strlen(txt), 10);
 1181              		.loc 1 622 2 is_stmt 1 view .LVU274
 1182              		.loc 1 622 47 is_stmt 0 view .LVU275
 1183 0018 2846     		mov	r0, r5
 1184 001a FFF7FEFF 		bl	strlen
 1185              	.LVL77:
 1186              		.loc 1 622 2 view .LVU276
 1187 001e 0A23     		movs	r3, #10
 1188 0020 82B2     		uxth	r2, r0
 1189 0022 2946     		mov	r1, r5
 1190 0024 1448     		ldr	r0, .L72+12
 1191 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 1192              	.LVL78:
 623:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 1193              		.loc 1 623 2 is_stmt 1 view .LVU277
 1194 002a 0121     		movs	r1, #1
 1195 002c 1348     		ldr	r0, .L72+16
 1196 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1197              	.LVL79:
 624:Src/main.c    **** 	if (hcan == &hcan1) {
 1198              		.loc 1 624 2 view .LVU278
 1199              		.loc 1 624 5 is_stmt 0 view .LVU279
 1200 0032 134B     		ldr	r3, .L72+20
 1201 0034 9C42     		cmp	r4, r3
 1202 0036 00D0     		beq	.L71
 1203              	.L67:
 625:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 626:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 627:Src/main.c    **** 				// TODO: implementare errore
 628:Src/main.c    **** 			} else {
 629:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)("high\r\n"),
 630:Src/main.c    **** 								  strlen("high\r\n"), 10);
 631:Src/main.c    **** 			}
 632:Src/main.c    **** 		} else if (fifoTxDataCAN_normal_pop(&can1)) {
 633:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 634:Src/main.c    **** 			// strlen("Prendo dalla fifo\r\n"), 10);
 635:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 636:Src/main.c    **** 				// TODO: implementare errore
 637:Src/main.c    **** 			}
 638:Src/main.c    **** 		} else {
 639:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"),
 640:Src/main.c    **** 			// strlen("Fifo vuota\r\n"), 10);
 641:Src/main.c    **** 		}
 642:Src/main.c    **** 	}
 643:Src/main.c    **** }
 1204              		.loc 1 643 1 view .LVU280
 1205 0038 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccs7SpOU.s 			page 36


 1206              	.LVL80:
 1207              	.L71:
 625:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1208              		.loc 1 625 3 is_stmt 1 view .LVU281
 625:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1209              		.loc 1 625 7 is_stmt 0 view .LVU282
 1210 003a 0C48     		ldr	r0, .L72
 1211 003c FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 1212              	.LVL81:
 625:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1213              		.loc 1 625 6 view .LVU283
 1214 0040 58B1     		cbz	r0, .L69
 626:Src/main.c    **** 				// TODO: implementare errore
 1215              		.loc 1 626 4 is_stmt 1 view .LVU284
 626:Src/main.c    **** 				// TODO: implementare errore
 1216              		.loc 1 626 8 is_stmt 0 view .LVU285
 1217 0042 0A48     		ldr	r0, .L72
 1218 0044 FFF7FEFF 		bl	CAN_Send_IT
 1219              	.LVL82:
 626:Src/main.c    **** 				// TODO: implementare errore
 1220              		.loc 1 626 7 view .LVU286
 1221 0048 0028     		cmp	r0, #0
 1222 004a F5D0     		beq	.L67
 629:Src/main.c    **** 								  strlen("high\r\n"), 10);
 1223              		.loc 1 629 5 is_stmt 1 view .LVU287
 1224 004c 0A23     		movs	r3, #10
 1225 004e 0622     		movs	r2, #6
 1226 0050 0C49     		ldr	r1, .L72+24
 1227 0052 0948     		ldr	r0, .L72+12
 1228 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 1229              	.LVL83:
 1230 0058 EEE7     		b	.L67
 1231              	.L69:
 632:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1232              		.loc 1 632 10 view .LVU288
 632:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1233              		.loc 1 632 14 is_stmt 0 view .LVU289
 1234 005a 0448     		ldr	r0, .L72
 1235 005c FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 1236              	.LVL84:
 632:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1237              		.loc 1 632 13 view .LVU290
 1238 0060 0028     		cmp	r0, #0
 1239 0062 E9D0     		beq	.L67
 635:Src/main.c    **** 				// TODO: implementare errore
 1240              		.loc 1 635 4 is_stmt 1 view .LVU291
 635:Src/main.c    **** 				// TODO: implementare errore
 1241              		.loc 1 635 8 is_stmt 0 view .LVU292
 1242 0064 0148     		ldr	r0, .L72
 1243 0066 FFF7FEFF 		bl	CAN_Send_IT
 1244              	.LVL85:
 637:Src/main.c    **** 		} else {
 1245              		.loc 1 637 4 is_stmt 1 view .LVU293
 641:Src/main.c    **** 	}
 1246              		.loc 1 641 3 view .LVU294
 1247              		.loc 1 643 1 is_stmt 0 view .LVU295
 1248 006a E5E7     		b	.L67
ARM GAS  /tmp/ccs7SpOU.s 			page 37


 1249              	.L73:
 1250              		.align	2
 1251              	.L72:
 1252 006c 00000000 		.word	can1
 1253 0070 00000000 		.word	txt
 1254 0074 00000000 		.word	.LC8
 1255 0078 00000000 		.word	huart3
 1256 007c 00040240 		.word	1073873920
 1257 0080 00000000 		.word	hcan1
 1258 0084 0C000000 		.word	.LC6
 1259              		.cfi_endproc
 1260              	.LFE159:
 1262              		.section	.rodata.HAL_CAN_ErrorCallback.str1.4,"aMS",%progbits,1
 1263              		.align	2
 1264              	.LC9:
 1265 0000 2D2D2D20 		.ascii	"--- Errore ---: %d\015\012\000"
 1265      4572726F 
 1265      7265202D 
 1265      2D2D3A20 
 1265      25640D0A 
 1266              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 1267              		.align	1
 1268              		.global	HAL_CAN_ErrorCallback
 1269              		.syntax unified
 1270              		.thumb
 1271              		.thumb_func
 1272              		.fpu fpv5-d16
 1274              	HAL_CAN_ErrorCallback:
 1275              	.LVL86:
 1276              	.LFB160:
 644:Src/main.c    **** void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan) {
 1277              		.loc 1 644 53 is_stmt 1 view -0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281              		.loc 1 644 53 is_stmt 0 view .LVU297
 1282 0000 38B5     		push	{r3, r4, r5, lr}
 1283              	.LCFI15:
 1284              		.cfi_def_cfa_offset 16
 1285              		.cfi_offset 3, -16
 1286              		.cfi_offset 4, -12
 1287              		.cfi_offset 5, -8
 1288              		.cfi_offset 14, -4
 1289 0002 0446     		mov	r4, r0
 645:Src/main.c    **** 	sprintf(txt, "--- Errore ---: %d\r\n", (int)hcan->ErrorCode);
 1290              		.loc 1 645 2 is_stmt 1 view .LVU298
 1291              		.loc 1 645 50 is_stmt 0 view .LVU299
 1292 0004 426A     		ldr	r2, [r0, #36]
 1293              		.loc 1 645 2 view .LVU300
 1294 0006 0B4D     		ldr	r5, .L78
 1295 0008 0B49     		ldr	r1, .L78+4
 1296 000a 2846     		mov	r0, r5
 1297              	.LVL87:
 1298              		.loc 1 645 2 view .LVU301
 1299 000c FFF7FEFF 		bl	sprintf
 1300              	.LVL88:
 646:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t *)(txt), strlen(txt), 10);
ARM GAS  /tmp/ccs7SpOU.s 			page 38


 1301              		.loc 1 646 2 is_stmt 1 view .LVU302
 1302              		.loc 1 646 47 is_stmt 0 view .LVU303
 1303 0010 2846     		mov	r0, r5
 1304 0012 FFF7FEFF 		bl	strlen
 1305              	.LVL89:
 1306              		.loc 1 646 2 view .LVU304
 1307 0016 0A23     		movs	r3, #10
 1308 0018 82B2     		uxth	r2, r0
 1309 001a 2946     		mov	r1, r5
 1310 001c 0748     		ldr	r0, .L78+8
 1311 001e FFF7FEFF 		bl	HAL_UART_Transmit
 1312              	.LVL90:
 647:Src/main.c    **** 	if (hcan == &hcan1) {
 1313              		.loc 1 647 2 is_stmt 1 view .LVU305
 1314              		.loc 1 647 5 is_stmt 0 view .LVU306
 1315 0022 074B     		ldr	r3, .L78+12
 1316 0024 9C42     		cmp	r4, r3
 1317 0026 00D0     		beq	.L77
 1318              	.L74:
 648:Src/main.c    **** 		CAN_Send_Bck(&can1);
 649:Src/main.c    **** 	}
 650:Src/main.c    **** }
 1319              		.loc 1 650 1 view .LVU307
 1320 0028 38BD     		pop	{r3, r4, r5, pc}
 1321              	.LVL91:
 1322              	.L77:
 648:Src/main.c    **** 		CAN_Send_Bck(&can1);
 1323              		.loc 1 648 3 is_stmt 1 view .LVU308
 1324 002a 0648     		ldr	r0, .L78+16
 1325 002c FFF7FEFF 		bl	CAN_Send_Bck
 1326              	.LVL92:
 1327              		.loc 1 650 1 is_stmt 0 view .LVU309
 1328 0030 FAE7     		b	.L74
 1329              	.L79:
 1330 0032 00BF     		.align	2
 1331              	.L78:
 1332 0034 00000000 		.word	txt
 1333 0038 00000000 		.word	.LC9
 1334 003c 00000000 		.word	huart3
 1335 0040 00000000 		.word	hcan1
 1336 0044 00000000 		.word	can1
 1337              		.cfi_endproc
 1338              	.LFE160:
 1340              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1341              		.align	1
 1342              		.global	HAL_UART_RxCpltCallback
 1343              		.syntax unified
 1344              		.thumb
 1345              		.thumb_func
 1346              		.fpu fpv5-d16
 1348              	HAL_UART_RxCpltCallback:
 1349              	.LVL93:
 1350              	.LFB161:
 651:Src/main.c    **** 
 652:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 1351              		.loc 1 652 57 is_stmt 1 view -0
 1352              		.cfi_startproc
ARM GAS  /tmp/ccs7SpOU.s 			page 39


 1353              		@ args = 0, pretend = 0, frame = 0
 1354              		@ frame_needed = 0, uses_anonymous_args = 0
 1355              		.loc 1 652 57 is_stmt 0 view .LVU311
 1356 0000 08B5     		push	{r3, lr}
 1357              	.LCFI16:
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 3, -8
 1360              		.cfi_offset 14, -4
 653:Src/main.c    **** 	if (huart == &huart3) {
 1361              		.loc 1 653 2 is_stmt 1 view .LVU312
 1362              		.loc 1 653 5 is_stmt 0 view .LVU313
 1363 0002 174B     		ldr	r3, .L87
 1364 0004 8342     		cmp	r3, r0
 1365 0006 00D0     		beq	.L86
 1366              	.LVL94:
 1367              	.L80:
 654:Src/main.c    **** 		if ((debug_rx[debug_rx_count] == '\r') |
 655:Src/main.c    **** 			(debug_rx[debug_rx_count] == '\n')) {
 656:Src/main.c    **** 			debug_msg_arrived = 1;		   // set flag
 657:Src/main.c    **** 			debug_rx[debug_rx_count] = 0;  // set end of the string
 658:Src/main.c    **** 			debug_rx_count = 0;			   // reset counter
 659:Src/main.c    **** 		} else {
 660:Src/main.c    **** 			if (debug_rx_count == MAX_DEBUG_RX_L) {
 661:Src/main.c    **** 				// overflow
 662:Src/main.c    **** 				debug_rx_count = 0;  // reset counter for overflow
 663:Src/main.c    **** 			} else {
 664:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)&debug_rx[debug_rx_count],1, 10);  // retransmit char
 665:Src/main.c    **** 				debug_rx_count++;
 666:Src/main.c    **** 			}
 667:Src/main.c    **** 		}
 668:Src/main.c    **** 		HAL_UART_Receive_IT(&huart3, (uint8_t *)&debug_rx[debug_rx_count], 1);  // activate rx interrupt 
 669:Src/main.c    **** 	}
 670:Src/main.c    **** }
 1368              		.loc 1 670 1 view .LVU314
 1369 0008 08BD     		pop	{r3, pc}
 1370              	.LVL95:
 1371              	.L86:
 654:Src/main.c    **** 		if ((debug_rx[debug_rx_count] == '\r') |
 1372              		.loc 1 654 3 is_stmt 1 view .LVU315
 654:Src/main.c    **** 		if ((debug_rx[debug_rx_count] == '\r') |
 1373              		.loc 1 654 16 is_stmt 0 view .LVU316
 1374 000a 164B     		ldr	r3, .L87+4
 1375 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1376 000e 164B     		ldr	r3, .L87+8
 1377 0010 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 654:Src/main.c    **** 		if ((debug_rx[debug_rx_count] == '\r') |
 1378              		.loc 1 654 6 view .LVU317
 1379 0012 0A2B     		cmp	r3, #10
 1380 0014 18BF     		it	ne
 1381 0016 0D2B     		cmpne	r3, #13
 1382 0018 10D1     		bne	.L82
 656:Src/main.c    **** 			debug_rx[debug_rx_count] = 0;  // set end of the string
 1383              		.loc 1 656 4 is_stmt 1 view .LVU318
 656:Src/main.c    **** 			debug_rx[debug_rx_count] = 0;  // set end of the string
 1384              		.loc 1 656 22 is_stmt 0 view .LVU319
 1385 001a 144B     		ldr	r3, .L87+12
 1386 001c 0122     		movs	r2, #1
ARM GAS  /tmp/ccs7SpOU.s 			page 40


 1387 001e 1A70     		strb	r2, [r3]
 657:Src/main.c    **** 			debug_rx_count = 0;			   // reset counter
 1388              		.loc 1 657 4 is_stmt 1 view .LVU320
 657:Src/main.c    **** 			debug_rx_count = 0;			   // reset counter
 1389              		.loc 1 657 29 is_stmt 0 view .LVU321
 1390 0020 0023     		movs	r3, #0
 1391 0022 114A     		ldr	r2, .L87+8
 1392 0024 5354     		strb	r3, [r2, r1]
 658:Src/main.c    **** 		} else {
 1393              		.loc 1 658 4 is_stmt 1 view .LVU322
 658:Src/main.c    **** 		} else {
 1394              		.loc 1 658 19 is_stmt 0 view .LVU323
 1395 0026 0F4A     		ldr	r2, .L87+4
 1396 0028 1370     		strb	r3, [r2]
 1397              	.LVL96:
 1398              	.L83:
 668:Src/main.c    **** 	}
 1399              		.loc 1 668 3 is_stmt 1 view .LVU324
 668:Src/main.c    **** 	}
 1400              		.loc 1 668 52 is_stmt 0 view .LVU325
 1401 002a 0E4B     		ldr	r3, .L87+4
 1402 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 668:Src/main.c    **** 	}
 1403              		.loc 1 668 3 view .LVU326
 1404 002e 0122     		movs	r2, #1
 1405 0030 0D49     		ldr	r1, .L87+8
 1406 0032 1944     		add	r1, r1, r3
 1407 0034 0A48     		ldr	r0, .L87
 1408 0036 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1409              	.LVL97:
 1410              		.loc 1 670 1 view .LVU327
 1411 003a E5E7     		b	.L80
 1412              	.LVL98:
 1413              	.L82:
 660:Src/main.c    **** 				// overflow
 1414              		.loc 1 660 4 is_stmt 1 view .LVU328
 660:Src/main.c    **** 				// overflow
 1415              		.loc 1 660 7 is_stmt 0 view .LVU329
 1416 003c 3229     		cmp	r1, #50
 1417 003e 03D1     		bne	.L84
 662:Src/main.c    **** 			} else {
 1418              		.loc 1 662 5 is_stmt 1 view .LVU330
 662:Src/main.c    **** 			} else {
 1419              		.loc 1 662 20 is_stmt 0 view .LVU331
 1420 0040 084B     		ldr	r3, .L87+4
 1421 0042 0022     		movs	r2, #0
 1422 0044 1A70     		strb	r2, [r3]
 1423 0046 F0E7     		b	.L83
 1424              	.L84:
 664:Src/main.c    **** 				debug_rx_count++;
 1425              		.loc 1 664 5 is_stmt 1 view .LVU332
 1426 0048 0A23     		movs	r3, #10
 1427 004a 0122     		movs	r2, #1
 1428 004c 0648     		ldr	r0, .L87+8
 1429              	.LVL99:
 664:Src/main.c    **** 				debug_rx_count++;
 1430              		.loc 1 664 5 is_stmt 0 view .LVU333
ARM GAS  /tmp/ccs7SpOU.s 			page 41


 1431 004e 0144     		add	r1, r1, r0
 1432 0050 0348     		ldr	r0, .L87
 1433 0052 FFF7FEFF 		bl	HAL_UART_Transmit
 1434              	.LVL100:
 665:Src/main.c    **** 			}
 1435              		.loc 1 665 5 is_stmt 1 view .LVU334
 665:Src/main.c    **** 			}
 1436              		.loc 1 665 19 is_stmt 0 view .LVU335
 1437 0056 034A     		ldr	r2, .L87+4
 1438 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1439 005a 0133     		adds	r3, r3, #1
 1440 005c 1370     		strb	r3, [r2]
 1441 005e E4E7     		b	.L83
 1442              	.L88:
 1443              		.align	2
 1444              	.L87:
 1445 0060 00000000 		.word	huart3
 1446 0064 00000000 		.word	debug_rx_count
 1447 0068 00000000 		.word	debug_rx
 1448 006c 00000000 		.word	debug_msg_arrived
 1449              		.cfi_endproc
 1450              	.LFE161:
 1452              		.section	.text.Error_Handler,"ax",%progbits
 1453              		.align	1
 1454              		.global	Error_Handler
 1455              		.syntax unified
 1456              		.thumb
 1457              		.thumb_func
 1458              		.fpu fpv5-d16
 1460              	Error_Handler:
 1461              	.LFB162:
 671:Src/main.c    **** /* USER CODE END 4 */
 672:Src/main.c    **** 
 673:Src/main.c    **** /**
 674:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 675:Src/main.c    ****   * @retval None
 676:Src/main.c    ****   */
 677:Src/main.c    **** void Error_Handler(void)
 678:Src/main.c    **** {
 1462              		.loc 1 678 1 is_stmt 1 view -0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466 0000 10B5     		push	{r4, lr}
 1467              	.LCFI17:
 1468              		.cfi_def_cfa_offset 8
 1469              		.cfi_offset 4, -8
 1470              		.cfi_offset 14, -4
 679:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 680:Src/main.c    **** 	/* User can add his own implementation to report the HAL error return state
 681:Src/main.c    **** 	 */
 682:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_blue_GPIO_Port, LED_blue_Pin);
 1471              		.loc 1 682 2 view .LVU337
 1472 0002 094C     		ldr	r4, .L91
 1473 0004 8021     		movs	r1, #128
 1474 0006 2046     		mov	r0, r4
 1475 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
ARM GAS  /tmp/ccs7SpOU.s 			page 42


 1476              	.LVL101:
 683:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 1477              		.loc 1 683 2 view .LVU338
 1478 000c 0121     		movs	r1, #1
 1479 000e 2046     		mov	r0, r4
 1480 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1481              	.LVL102:
 684:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_red_GPIO_Port, LED_red_Pin);
 1482              		.loc 1 684 2 view .LVU339
 1483 0014 4FF48041 		mov	r1, #16384
 1484 0018 2046     		mov	r0, r4
 1485 001a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1486              	.LVL103:
 685:Src/main.c    **** 
 686:Src/main.c    **** 	HAL_Delay(100);
 1487              		.loc 1 686 2 view .LVU340
 1488 001e 6420     		movs	r0, #100
 1489 0020 FFF7FEFF 		bl	HAL_Delay
 1490              	.LVL104:
 687:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 688:Src/main.c    **** }
 1491              		.loc 1 688 1 is_stmt 0 view .LVU341
 1492 0024 10BD     		pop	{r4, pc}
 1493              	.L92:
 1494 0026 00BF     		.align	2
 1495              	.L91:
 1496 0028 00040240 		.word	1073873920
 1497              		.cfi_endproc
 1498              	.LFE162:
 1500              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 1501              		.align	1
 1502              		.syntax unified
 1503              		.thumb
 1504              		.thumb_func
 1505              		.fpu fpv5-d16
 1507              	MX_USART3_UART_Init:
 1508              	.LFB150:
 382:Src/main.c    **** 
 1509              		.loc 1 382 1 is_stmt 1 view -0
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 0
 1512              		@ frame_needed = 0, uses_anonymous_args = 0
 1513 0000 08B5     		push	{r3, lr}
 1514              	.LCFI18:
 1515              		.cfi_def_cfa_offset 8
 1516              		.cfi_offset 3, -8
 1517              		.cfi_offset 14, -4
 391:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 1518              		.loc 1 391 3 view .LVU343
 391:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 1519              		.loc 1 391 19 is_stmt 0 view .LVU344
 1520 0002 0B48     		ldr	r0, .L97
 1521 0004 0B4B     		ldr	r3, .L97+4
 1522 0006 0360     		str	r3, [r0]
 392:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1523              		.loc 1 392 3 is_stmt 1 view .LVU345
 392:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
ARM GAS  /tmp/ccs7SpOU.s 			page 43


 1524              		.loc 1 392 24 is_stmt 0 view .LVU346
 1525 0008 0B4B     		ldr	r3, .L97+8
 1526 000a 4360     		str	r3, [r0, #4]
 393:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1527              		.loc 1 393 3 is_stmt 1 view .LVU347
 393:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1528              		.loc 1 393 26 is_stmt 0 view .LVU348
 1529 000c 0023     		movs	r3, #0
 1530 000e 8360     		str	r3, [r0, #8]
 394:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 1531              		.loc 1 394 3 is_stmt 1 view .LVU349
 394:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 1532              		.loc 1 394 24 is_stmt 0 view .LVU350
 1533 0010 C360     		str	r3, [r0, #12]
 395:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1534              		.loc 1 395 3 is_stmt 1 view .LVU351
 395:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1535              		.loc 1 395 22 is_stmt 0 view .LVU352
 1536 0012 0361     		str	r3, [r0, #16]
 396:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1537              		.loc 1 396 3 is_stmt 1 view .LVU353
 396:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1538              		.loc 1 396 20 is_stmt 0 view .LVU354
 1539 0014 0C22     		movs	r2, #12
 1540 0016 4261     		str	r2, [r0, #20]
 397:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1541              		.loc 1 397 3 is_stmt 1 view .LVU355
 397:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1542              		.loc 1 397 25 is_stmt 0 view .LVU356
 1543 0018 8361     		str	r3, [r0, #24]
 398:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1544              		.loc 1 398 3 is_stmt 1 view .LVU357
 398:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1545              		.loc 1 398 28 is_stmt 0 view .LVU358
 1546 001a C361     		str	r3, [r0, #28]
 399:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1547              		.loc 1 399 3 is_stmt 1 view .LVU359
 399:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1548              		.loc 1 399 30 is_stmt 0 view .LVU360
 1549 001c 0362     		str	r3, [r0, #32]
 400:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1550              		.loc 1 400 3 is_stmt 1 view .LVU361
 400:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1551              		.loc 1 400 38 is_stmt 0 view .LVU362
 1552 001e 4362     		str	r3, [r0, #36]
 401:Src/main.c    ****   {
 1553              		.loc 1 401 3 is_stmt 1 view .LVU363
 401:Src/main.c    ****   {
 1554              		.loc 1 401 7 is_stmt 0 view .LVU364
 1555 0020 FFF7FEFF 		bl	HAL_UART_Init
 1556              	.LVL105:
 401:Src/main.c    ****   {
 1557              		.loc 1 401 6 view .LVU365
 1558 0024 00B9     		cbnz	r0, .L96
 1559              	.L93:
 409:Src/main.c    **** 
 1560              		.loc 1 409 1 view .LVU366
ARM GAS  /tmp/ccs7SpOU.s 			page 44


 1561 0026 08BD     		pop	{r3, pc}
 1562              	.L96:
 403:Src/main.c    ****   }
 1563              		.loc 1 403 5 is_stmt 1 view .LVU367
 1564 0028 FFF7FEFF 		bl	Error_Handler
 1565              	.LVL106:
 409:Src/main.c    **** 
 1566              		.loc 1 409 1 is_stmt 0 view .LVU368
 1567 002c FBE7     		b	.L93
 1568              	.L98:
 1569 002e 00BF     		.align	2
 1570              	.L97:
 1571 0030 00000000 		.word	huart3
 1572 0034 00480040 		.word	1073760256
 1573 0038 80841E00 		.word	2000000
 1574              		.cfi_endproc
 1575              	.LFE150:
 1577              		.section	.text.MX_CAN1_Init,"ax",%progbits
 1578              		.align	1
 1579              		.syntax unified
 1580              		.thumb
 1581              		.thumb_func
 1582              		.fpu fpv5-d16
 1584              	MX_CAN1_Init:
 1585              	.LFB147:
 272:Src/main.c    **** 
 1586              		.loc 1 272 1 is_stmt 1 view -0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590 0000 08B5     		push	{r3, lr}
 1591              	.LCFI19:
 1592              		.cfi_def_cfa_offset 8
 1593              		.cfi_offset 3, -8
 1594              		.cfi_offset 14, -4
 281:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 1595              		.loc 1 281 3 view .LVU370
 281:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 1596              		.loc 1 281 18 is_stmt 0 view .LVU371
 1597 0002 0E48     		ldr	r0, .L103
 1598 0004 0E4B     		ldr	r3, .L103+4
 1599 0006 0360     		str	r3, [r0]
 282:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1600              		.loc 1 282 3 is_stmt 1 view .LVU372
 282:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1601              		.loc 1 282 24 is_stmt 0 view .LVU373
 1602 0008 0323     		movs	r3, #3
 1603 000a 4360     		str	r3, [r0, #4]
 283:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1604              		.loc 1 283 3 is_stmt 1 view .LVU374
 283:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1605              		.loc 1 283 19 is_stmt 0 view .LVU375
 1606 000c 0023     		movs	r3, #0
 1607 000e 8360     		str	r3, [r0, #8]
 284:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 1608              		.loc 1 284 3 is_stmt 1 view .LVU376
 284:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
ARM GAS  /tmp/ccs7SpOU.s 			page 45


 1609              		.loc 1 284 28 is_stmt 0 view .LVU377
 1610 0010 C360     		str	r3, [r0, #12]
 285:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1611              		.loc 1 285 3 is_stmt 1 view .LVU378
 285:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1612              		.loc 1 285 23 is_stmt 0 view .LVU379
 1613 0012 4FF46022 		mov	r2, #917504
 1614 0016 0261     		str	r2, [r0, #16]
 286:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1615              		.loc 1 286 3 is_stmt 1 view .LVU380
 286:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1616              		.loc 1 286 23 is_stmt 0 view .LVU381
 1617 0018 4FF48012 		mov	r2, #1048576
 1618 001c 4261     		str	r2, [r0, #20]
 287:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 1619              		.loc 1 287 3 is_stmt 1 view .LVU382
 287:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 1620              		.loc 1 287 32 is_stmt 0 view .LVU383
 1621 001e 0376     		strb	r3, [r0, #24]
 288:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 1622              		.loc 1 288 3 is_stmt 1 view .LVU384
 288:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 1623              		.loc 1 288 25 is_stmt 0 view .LVU385
 1624 0020 4376     		strb	r3, [r0, #25]
 289:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 1625              		.loc 1 289 3 is_stmt 1 view .LVU386
 289:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 1626              		.loc 1 289 25 is_stmt 0 view .LVU387
 1627 0022 0122     		movs	r2, #1
 1628 0024 8276     		strb	r2, [r0, #26]
 290:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1629              		.loc 1 290 3 is_stmt 1 view .LVU388
 290:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1630              		.loc 1 290 33 is_stmt 0 view .LVU389
 1631 0026 C276     		strb	r2, [r0, #27]
 291:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1632              		.loc 1 291 3 is_stmt 1 view .LVU390
 291:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1633              		.loc 1 291 32 is_stmt 0 view .LVU391
 1634 0028 0377     		strb	r3, [r0, #28]
 292:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1635              		.loc 1 292 3 is_stmt 1 view .LVU392
 292:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1636              		.loc 1 292 35 is_stmt 0 view .LVU393
 1637 002a 4377     		strb	r3, [r0, #29]
 293:Src/main.c    ****   {
 1638              		.loc 1 293 3 is_stmt 1 view .LVU394
 293:Src/main.c    ****   {
 1639              		.loc 1 293 7 is_stmt 0 view .LVU395
 1640 002c FFF7FEFF 		bl	HAL_CAN_Init
 1641              	.LVL107:
 293:Src/main.c    ****   {
 1642              		.loc 1 293 6 view .LVU396
 1643 0030 00B9     		cbnz	r0, .L102
 1644              	.L99:
 301:Src/main.c    **** 
 1645              		.loc 1 301 1 view .LVU397
ARM GAS  /tmp/ccs7SpOU.s 			page 46


 1646 0032 08BD     		pop	{r3, pc}
 1647              	.L102:
 295:Src/main.c    ****   }
 1648              		.loc 1 295 5 is_stmt 1 view .LVU398
 1649 0034 FFF7FEFF 		bl	Error_Handler
 1650              	.LVL108:
 301:Src/main.c    **** 
 1651              		.loc 1 301 1 is_stmt 0 view .LVU399
 1652 0038 FBE7     		b	.L99
 1653              	.L104:
 1654 003a 00BF     		.align	2
 1655              	.L103:
 1656 003c 00000000 		.word	hcan1
 1657 0040 00640040 		.word	1073767424
 1658              		.cfi_endproc
 1659              	.LFE147:
 1661              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1662              		.align	1
 1663              		.syntax unified
 1664              		.thumb
 1665              		.thumb_func
 1666              		.fpu fpv5-d16
 1668              	MX_TIM2_Init:
 1669              	.LFB149:
 337:Src/main.c    **** 
 1670              		.loc 1 337 1 is_stmt 1 view -0
 1671              		.cfi_startproc
 1672              		@ args = 0, pretend = 0, frame = 32
 1673              		@ frame_needed = 0, uses_anonymous_args = 0
 1674 0000 00B5     		push	{lr}
 1675              	.LCFI20:
 1676              		.cfi_def_cfa_offset 4
 1677              		.cfi_offset 14, -4
 1678 0002 89B0     		sub	sp, sp, #36
 1679              	.LCFI21:
 1680              		.cfi_def_cfa_offset 40
 343:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1681              		.loc 1 343 3 view .LVU401
 343:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1682              		.loc 1 343 26 is_stmt 0 view .LVU402
 1683 0004 0023     		movs	r3, #0
 1684 0006 0493     		str	r3, [sp, #16]
 1685 0008 0593     		str	r3, [sp, #20]
 1686 000a 0693     		str	r3, [sp, #24]
 1687 000c 0793     		str	r3, [sp, #28]
 344:Src/main.c    **** 
 1688              		.loc 1 344 3 is_stmt 1 view .LVU403
 344:Src/main.c    **** 
 1689              		.loc 1 344 27 is_stmt 0 view .LVU404
 1690 000e 0193     		str	r3, [sp, #4]
 1691 0010 0293     		str	r3, [sp, #8]
 1692 0012 0393     		str	r3, [sp, #12]
 349:Src/main.c    ****   htim2.Init.Prescaler = 108;
 1693              		.loc 1 349 3 is_stmt 1 view .LVU405
 349:Src/main.c    ****   htim2.Init.Prescaler = 108;
 1694              		.loc 1 349 18 is_stmt 0 view .LVU406
 1695 0014 1548     		ldr	r0, .L113
ARM GAS  /tmp/ccs7SpOU.s 			page 47


 1696 0016 4FF08042 		mov	r2, #1073741824
 1697 001a 0260     		str	r2, [r0]
 350:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1698              		.loc 1 350 3 is_stmt 1 view .LVU407
 350:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1699              		.loc 1 350 24 is_stmt 0 view .LVU408
 1700 001c 6C22     		movs	r2, #108
 1701 001e 4260     		str	r2, [r0, #4]
 351:Src/main.c    ****   htim2.Init.Period = 1000;
 1702              		.loc 1 351 3 is_stmt 1 view .LVU409
 351:Src/main.c    ****   htim2.Init.Period = 1000;
 1703              		.loc 1 351 26 is_stmt 0 view .LVU410
 1704 0020 8360     		str	r3, [r0, #8]
 352:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1705              		.loc 1 352 3 is_stmt 1 view .LVU411
 352:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1706              		.loc 1 352 21 is_stmt 0 view .LVU412
 1707 0022 4FF47A72 		mov	r2, #1000
 1708 0026 C260     		str	r2, [r0, #12]
 353:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1709              		.loc 1 353 3 is_stmt 1 view .LVU413
 353:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1710              		.loc 1 353 28 is_stmt 0 view .LVU414
 1711 0028 0361     		str	r3, [r0, #16]
 354:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1712              		.loc 1 354 3 is_stmt 1 view .LVU415
 354:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1713              		.loc 1 354 32 is_stmt 0 view .LVU416
 1714 002a 8361     		str	r3, [r0, #24]
 355:Src/main.c    ****   {
 1715              		.loc 1 355 3 is_stmt 1 view .LVU417
 355:Src/main.c    ****   {
 1716              		.loc 1 355 7 is_stmt 0 view .LVU418
 1717 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1718              	.LVL109:
 355:Src/main.c    ****   {
 1719              		.loc 1 355 6 view .LVU419
 1720 0030 90B9     		cbnz	r0, .L110
 1721              	.L106:
 359:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1722              		.loc 1 359 3 is_stmt 1 view .LVU420
 359:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1723              		.loc 1 359 34 is_stmt 0 view .LVU421
 1724 0032 4FF48053 		mov	r3, #4096
 1725 0036 0493     		str	r3, [sp, #16]
 360:Src/main.c    ****   {
 1726              		.loc 1 360 3 is_stmt 1 view .LVU422
 360:Src/main.c    ****   {
 1727              		.loc 1 360 7 is_stmt 0 view .LVU423
 1728 0038 04A9     		add	r1, sp, #16
 1729 003a 0C48     		ldr	r0, .L113
 1730 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1731              	.LVL110:
 360:Src/main.c    ****   {
 1732              		.loc 1 360 6 view .LVU424
 1733 0040 68B9     		cbnz	r0, .L111
 1734              	.L107:
ARM GAS  /tmp/ccs7SpOU.s 			page 48


 364:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1735              		.loc 1 364 3 is_stmt 1 view .LVU425
 364:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1736              		.loc 1 364 37 is_stmt 0 view .LVU426
 1737 0042 0023     		movs	r3, #0
 1738 0044 0193     		str	r3, [sp, #4]
 365:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1739              		.loc 1 365 3 is_stmt 1 view .LVU427
 365:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1740              		.loc 1 365 33 is_stmt 0 view .LVU428
 1741 0046 0393     		str	r3, [sp, #12]
 366:Src/main.c    ****   {
 1742              		.loc 1 366 3 is_stmt 1 view .LVU429
 366:Src/main.c    ****   {
 1743              		.loc 1 366 7 is_stmt 0 view .LVU430
 1744 0048 01A9     		add	r1, sp, #4
 1745 004a 0848     		ldr	r0, .L113
 1746 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1747              	.LVL111:
 366:Src/main.c    ****   {
 1748              		.loc 1 366 6 view .LVU431
 1749 0050 40B9     		cbnz	r0, .L112
 1750              	.L105:
 374:Src/main.c    **** 
 1751              		.loc 1 374 1 view .LVU432
 1752 0052 09B0     		add	sp, sp, #36
 1753              	.LCFI22:
 1754              		.cfi_remember_state
 1755              		.cfi_def_cfa_offset 4
 1756              		@ sp needed
 1757 0054 5DF804FB 		ldr	pc, [sp], #4
 1758              	.L110:
 1759              	.LCFI23:
 1760              		.cfi_restore_state
 357:Src/main.c    ****   }
 1761              		.loc 1 357 5 is_stmt 1 view .LVU433
 1762 0058 FFF7FEFF 		bl	Error_Handler
 1763              	.LVL112:
 1764 005c E9E7     		b	.L106
 1765              	.L111:
 362:Src/main.c    ****   }
 1766              		.loc 1 362 5 view .LVU434
 1767 005e FFF7FEFF 		bl	Error_Handler
 1768              	.LVL113:
 1769 0062 EEE7     		b	.L107
 1770              	.L112:
 368:Src/main.c    ****   }
 1771              		.loc 1 368 5 view .LVU435
 1772 0064 FFF7FEFF 		bl	Error_Handler
 1773              	.LVL114:
 374:Src/main.c    **** 
 1774              		.loc 1 374 1 is_stmt 0 view .LVU436
 1775 0068 F3E7     		b	.L105
 1776              	.L114:
 1777 006a 00BF     		.align	2
 1778              	.L113:
 1779 006c 00000000 		.word	htim2
ARM GAS  /tmp/ccs7SpOU.s 			page 49


 1780              		.cfi_endproc
 1781              	.LFE149:
 1783              		.section	.text.SystemClock_Config,"ax",%progbits
 1784              		.align	1
 1785              		.global	SystemClock_Config
 1786              		.syntax unified
 1787              		.thumb
 1788              		.thumb_func
 1789              		.fpu fpv5-d16
 1791              	SystemClock_Config:
 1792              	.LFB145:
 183:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1793              		.loc 1 183 1 is_stmt 1 view -0
 1794              		.cfi_startproc
 1795              		@ args = 0, pretend = 0, frame = 224
 1796              		@ frame_needed = 0, uses_anonymous_args = 0
 1797 0000 10B5     		push	{r4, lr}
 1798              	.LCFI24:
 1799              		.cfi_def_cfa_offset 8
 1800              		.cfi_offset 4, -8
 1801              		.cfi_offset 14, -4
 1802 0002 B8B0     		sub	sp, sp, #224
 1803              	.LCFI25:
 1804              		.cfi_def_cfa_offset 232
 184:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1805              		.loc 1 184 3 view .LVU438
 184:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1806              		.loc 1 184 22 is_stmt 0 view .LVU439
 1807 0004 3422     		movs	r2, #52
 1808 0006 0021     		movs	r1, #0
 1809 0008 2BA8     		add	r0, sp, #172
 1810 000a FFF7FEFF 		bl	memset
 1811              	.LVL115:
 185:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 1812              		.loc 1 185 3 is_stmt 1 view .LVU440
 185:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 1813              		.loc 1 185 22 is_stmt 0 view .LVU441
 1814 000e 0024     		movs	r4, #0
 1815 0010 2694     		str	r4, [sp, #152]
 1816 0012 2794     		str	r4, [sp, #156]
 1817 0014 2894     		str	r4, [sp, #160]
 1818 0016 2994     		str	r4, [sp, #164]
 1819 0018 2A94     		str	r4, [sp, #168]
 186:Src/main.c    **** 
 1820              		.loc 1 186 3 is_stmt 1 view .LVU442
 186:Src/main.c    **** 
 1821              		.loc 1 186 28 is_stmt 0 view .LVU443
 1822 001a 9022     		movs	r2, #144
 1823 001c 2146     		mov	r1, r4
 1824 001e 02A8     		add	r0, sp, #8
 1825 0020 FFF7FEFF 		bl	memset
 1826              	.LVL116:
 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1827              		.loc 1 190 3 is_stmt 1 view .LVU444
 1828              	.LBB8:
 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1829              		.loc 1 190 3 view .LVU445
ARM GAS  /tmp/ccs7SpOU.s 			page 50


 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1830              		.loc 1 190 3 view .LVU446
 1831 0024 294B     		ldr	r3, .L125
 1832 0026 1A6C     		ldr	r2, [r3, #64]
 1833 0028 42F08052 		orr	r2, r2, #268435456
 1834 002c 1A64     		str	r2, [r3, #64]
 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1835              		.loc 1 190 3 view .LVU447
 1836 002e 1B6C     		ldr	r3, [r3, #64]
 1837 0030 03F08053 		and	r3, r3, #268435456
 1838 0034 0093     		str	r3, [sp]
 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1839              		.loc 1 190 3 view .LVU448
 1840 0036 009B     		ldr	r3, [sp]
 1841              	.LBE8:
 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1842              		.loc 1 190 3 view .LVU449
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1843              		.loc 1 191 3 view .LVU450
 1844              	.LBB9:
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1845              		.loc 1 191 3 view .LVU451
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1846              		.loc 1 191 3 view .LVU452
 1847 0038 254B     		ldr	r3, .L125+4
 1848 003a 1A68     		ldr	r2, [r3]
 1849 003c 42F44042 		orr	r2, r2, #49152
 1850 0040 1A60     		str	r2, [r3]
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1851              		.loc 1 191 3 view .LVU453
 1852 0042 1B68     		ldr	r3, [r3]
 1853 0044 03F44043 		and	r3, r3, #49152
 1854 0048 0193     		str	r3, [sp, #4]
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1855              		.loc 1 191 3 view .LVU454
 1856 004a 019B     		ldr	r3, [sp, #4]
 1857              	.LBE9:
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1858              		.loc 1 191 3 view .LVU455
 194:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1859              		.loc 1 194 3 view .LVU456
 194:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1860              		.loc 1 194 36 is_stmt 0 view .LVU457
 1861 004c 0223     		movs	r3, #2
 1862 004e 2B93     		str	r3, [sp, #172]
 195:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1863              		.loc 1 195 3 is_stmt 1 view .LVU458
 195:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1864              		.loc 1 195 30 is_stmt 0 view .LVU459
 1865 0050 0122     		movs	r2, #1
 1866 0052 2E92     		str	r2, [sp, #184]
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1867              		.loc 1 196 3 is_stmt 1 view .LVU460
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1868              		.loc 1 196 41 is_stmt 0 view .LVU461
 1869 0054 1022     		movs	r2, #16
 1870 0056 2F92     		str	r2, [sp, #188]
ARM GAS  /tmp/ccs7SpOU.s 			page 51


 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1871              		.loc 1 197 3 is_stmt 1 view .LVU462
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1872              		.loc 1 197 34 is_stmt 0 view .LVU463
 1873 0058 3193     		str	r3, [sp, #196]
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1874              		.loc 1 198 3 is_stmt 1 view .LVU464
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1875              		.loc 1 198 35 is_stmt 0 view .LVU465
 1876 005a 3294     		str	r4, [sp, #200]
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 1877              		.loc 1 199 3 is_stmt 1 view .LVU466
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 1878              		.loc 1 199 30 is_stmt 0 view .LVU467
 1879 005c 0822     		movs	r2, #8
 1880 005e 3392     		str	r2, [sp, #204]
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1881              		.loc 1 200 3 is_stmt 1 view .LVU468
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1882              		.loc 1 200 30 is_stmt 0 view .LVU469
 1883 0060 D822     		movs	r2, #216
 1884 0062 3492     		str	r2, [sp, #208]
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 1885              		.loc 1 201 3 is_stmt 1 view .LVU470
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 1886              		.loc 1 201 30 is_stmt 0 view .LVU471
 1887 0064 3593     		str	r3, [sp, #212]
 202:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1888              		.loc 1 202 3 is_stmt 1 view .LVU472
 202:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1889              		.loc 1 202 30 is_stmt 0 view .LVU473
 1890 0066 0923     		movs	r3, #9
 1891 0068 3693     		str	r3, [sp, #216]
 203:Src/main.c    ****   {
 1892              		.loc 1 203 3 is_stmt 1 view .LVU474
 203:Src/main.c    ****   {
 1893              		.loc 1 203 7 is_stmt 0 view .LVU475
 1894 006a 2BA8     		add	r0, sp, #172
 1895 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1896              	.LVL117:
 203:Src/main.c    ****   {
 1897              		.loc 1 203 6 view .LVU476
 1898 0070 F8B9     		cbnz	r0, .L121
 1899              	.L116:
 209:Src/main.c    ****   {
 1900              		.loc 1 209 3 is_stmt 1 view .LVU477
 209:Src/main.c    ****   {
 1901              		.loc 1 209 7 is_stmt 0 view .LVU478
 1902 0072 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 1903              	.LVL118:
 209:Src/main.c    ****   {
 1904              		.loc 1 209 6 view .LVU479
 1905 0076 F8B9     		cbnz	r0, .L122
 1906              	.L117:
 215:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1907              		.loc 1 215 3 is_stmt 1 view .LVU480
 215:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccs7SpOU.s 			page 52


 1908              		.loc 1 215 31 is_stmt 0 view .LVU481
 1909 0078 0F23     		movs	r3, #15
 1910 007a 2693     		str	r3, [sp, #152]
 217:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1911              		.loc 1 217 3 is_stmt 1 view .LVU482
 217:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1912              		.loc 1 217 34 is_stmt 0 view .LVU483
 1913 007c 0223     		movs	r3, #2
 1914 007e 2793     		str	r3, [sp, #156]
 218:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1915              		.loc 1 218 3 is_stmt 1 view .LVU484
 218:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1916              		.loc 1 218 35 is_stmt 0 view .LVU485
 1917 0080 0023     		movs	r3, #0
 1918 0082 2893     		str	r3, [sp, #160]
 219:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1919              		.loc 1 219 3 is_stmt 1 view .LVU486
 219:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1920              		.loc 1 219 36 is_stmt 0 view .LVU487
 1921 0084 4FF4A053 		mov	r3, #5120
 1922 0088 2993     		str	r3, [sp, #164]
 220:Src/main.c    **** 
 1923              		.loc 1 220 3 is_stmt 1 view .LVU488
 220:Src/main.c    **** 
 1924              		.loc 1 220 36 is_stmt 0 view .LVU489
 1925 008a 4FF48053 		mov	r3, #4096
 1926 008e 2A93     		str	r3, [sp, #168]
 222:Src/main.c    ****   {
 1927              		.loc 1 222 3 is_stmt 1 view .LVU490
 222:Src/main.c    ****   {
 1928              		.loc 1 222 7 is_stmt 0 view .LVU491
 1929 0090 0721     		movs	r1, #7
 1930 0092 26A8     		add	r0, sp, #152
 1931 0094 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1932              	.LVL119:
 222:Src/main.c    ****   {
 1933              		.loc 1 222 6 view .LVU492
 1934 0098 88B9     		cbnz	r0, .L123
 1935              	.L118:
 226:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 1936              		.loc 1 226 3 is_stmt 1 view .LVU493
 226:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 1937              		.loc 1 226 44 is_stmt 0 view .LVU494
 1938 009a 0E4B     		ldr	r3, .L125+8
 1939 009c 0293     		str	r3, [sp, #8]
 228:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 1940              		.loc 1 228 3 is_stmt 1 view .LVU495
 228:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 1941              		.loc 1 228 44 is_stmt 0 view .LVU496
 1942 009e 0023     		movs	r3, #0
 1943 00a0 1593     		str	r3, [sp, #84]
 229:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 1944              		.loc 1 229 3 is_stmt 1 view .LVU497
 229:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 1945              		.loc 1 229 43 is_stmt 0 view .LVU498
 1946 00a2 2193     		str	r3, [sp, #132]
 230:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
ARM GAS  /tmp/ccs7SpOU.s 			page 53


 1947              		.loc 1 230 3 is_stmt 1 view .LVU499
 230:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1948              		.loc 1 230 44 is_stmt 0 view .LVU500
 1949 00a4 2293     		str	r3, [sp, #136]
 231:Src/main.c    ****   {
 1950              		.loc 1 231 3 is_stmt 1 view .LVU501
 231:Src/main.c    ****   {
 1951              		.loc 1 231 7 is_stmt 0 view .LVU502
 1952 00a6 02A8     		add	r0, sp, #8
 1953 00a8 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1954              	.LVL120:
 231:Src/main.c    ****   {
 1955              		.loc 1 231 6 view .LVU503
 1956 00ac 50B9     		cbnz	r0, .L124
 1957              	.L115:
 235:Src/main.c    **** 
 1958              		.loc 1 235 1 view .LVU504
 1959 00ae 38B0     		add	sp, sp, #224
 1960              	.LCFI26:
 1961              		.cfi_remember_state
 1962              		.cfi_def_cfa_offset 8
 1963              		@ sp needed
 1964 00b0 10BD     		pop	{r4, pc}
 1965              	.L121:
 1966              	.LCFI27:
 1967              		.cfi_restore_state
 205:Src/main.c    ****   }
 1968              		.loc 1 205 5 is_stmt 1 view .LVU505
 1969 00b2 FFF7FEFF 		bl	Error_Handler
 1970              	.LVL121:
 1971 00b6 DCE7     		b	.L116
 1972              	.L122:
 211:Src/main.c    ****   }
 1973              		.loc 1 211 5 view .LVU506
 1974 00b8 FFF7FEFF 		bl	Error_Handler
 1975              	.LVL122:
 1976 00bc DCE7     		b	.L117
 1977              	.L123:
 224:Src/main.c    ****   }
 1978              		.loc 1 224 5 view .LVU507
 1979 00be FFF7FEFF 		bl	Error_Handler
 1980              	.LVL123:
 1981 00c2 EAE7     		b	.L118
 1982              	.L124:
 233:Src/main.c    ****   }
 1983              		.loc 1 233 5 view .LVU508
 1984 00c4 FFF7FEFF 		bl	Error_Handler
 1985              	.LVL124:
 235:Src/main.c    **** 
 1986              		.loc 1 235 1 is_stmt 0 view .LVU509
 1987 00c8 F1E7     		b	.L115
 1988              	.L126:
 1989 00ca 00BF     		.align	2
 1990              	.L125:
 1991 00cc 00380240 		.word	1073887232
 1992 00d0 00700040 		.word	1073770496
 1993 00d4 0001A000 		.word	10486016
ARM GAS  /tmp/ccs7SpOU.s 			page 54


 1994              		.cfi_endproc
 1995              	.LFE145:
 1997              		.section	.text.main,"ax",%progbits
 1998              		.align	1
 1999              		.global	main
 2000              		.syntax unified
 2001              		.thumb
 2002              		.thumb_func
 2003              		.fpu fpv5-d16
 2005              	main:
 2006              	.LFB144:
  91:Src/main.c    ****   /* USER CODE BEGIN 1 */
 2007              		.loc 1 91 1 is_stmt 1 view -0
 2008              		.cfi_startproc
 2009              		@ Volatile: function does not return.
 2010              		@ args = 0, pretend = 0, frame = 0
 2011              		@ frame_needed = 0, uses_anonymous_args = 0
 2012 0000 08B5     		push	{r3, lr}
 2013              	.LCFI28:
 2014              		.cfi_def_cfa_offset 8
 2015              		.cfi_offset 3, -8
 2016              		.cfi_offset 14, -4
 100:Src/main.c    **** 
 2017              		.loc 1 100 3 view .LVU511
 2018 0002 FFF7FEFF 		bl	HAL_Init
 2019              	.LVL125:
 107:Src/main.c    **** 
 2020              		.loc 1 107 3 view .LVU512
 2021 0006 FFF7FEFF 		bl	SystemClock_Config
 2022              	.LVL126:
 114:Src/main.c    ****   MX_SDMMC1_SD_Init();
 2023              		.loc 1 114 3 view .LVU513
 2024 000a FFF7FEFF 		bl	MX_GPIO_Init
 2025              	.LVL127:
 115:Src/main.c    ****   MX_USART3_UART_Init();
 2026              		.loc 1 115 3 view .LVU514
 2027 000e FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 2028              	.LVL128:
 116:Src/main.c    ****   MX_FATFS_Init();
 2029              		.loc 1 116 3 view .LVU515
 2030 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 2031              	.LVL129:
 117:Src/main.c    ****   MX_CAN1_Init();
 2032              		.loc 1 117 3 view .LVU516
 2033 0016 FFF7FEFF 		bl	MX_FATFS_Init
 2034              	.LVL130:
 118:Src/main.c    ****   MX_TIM2_Init();
 2035              		.loc 1 118 3 view .LVU517
 2036 001a FFF7FEFF 		bl	MX_CAN1_Init
 2037              	.LVL131:
 119:Src/main.c    **** 
 2038              		.loc 1 119 3 view .LVU518
 2039 001e FFF7FEFF 		bl	MX_TIM2_Init
 2040              	.LVL132:
 122:Src/main.c    ****   /* USER CODE BEGIN 2 */
 2041              		.loc 1 122 3 view .LVU519
 2042 0022 FFF7FEFF 		bl	MX_NVIC_Init
ARM GAS  /tmp/ccs7SpOU.s 			page 55


 2043              	.LVL133:
 124:Src/main.c    **** 
 2044              		.loc 1 124 2 view .LVU520
 2045 0026 2448     		ldr	r0, .L137
 2046 0028 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2047              	.LVL134:
 126:Src/main.c    **** 	can1.tx_interrupt = CAN1_TX_IRQn;
 2048              		.loc 1 126 2 view .LVU521
 126:Src/main.c    **** 	can1.tx_interrupt = CAN1_TX_IRQn;
 2049              		.loc 1 126 21 is_stmt 0 view .LVU522
 2050 002c 234B     		ldr	r3, .L137+4
 2051 002e 1422     		movs	r2, #20
 2052 0030 83F8982D 		strb	r2, [r3, #3480]
 127:Src/main.c    **** 	can1.hcan = &hcan1;
 2053              		.loc 1 127 2 is_stmt 1 view .LVU523
 127:Src/main.c    **** 	can1.hcan = &hcan1;
 2054              		.loc 1 127 20 is_stmt 0 view .LVU524
 2055 0034 1322     		movs	r2, #19
 2056 0036 83F8992D 		strb	r2, [r3, #3481]
 128:Src/main.c    **** 
 2057              		.loc 1 128 2 is_stmt 1 view .LVU525
 128:Src/main.c    **** 
 2058              		.loc 1 128 12 is_stmt 0 view .LVU526
 2059 003a 214A     		ldr	r2, .L137+8
 2060 003c 1A64     		str	r2, [r3, #64]
 130:Src/main.c    **** 
 2061              		.loc 1 130 2 is_stmt 1 view .LVU527
 2062 003e FFF7FEFF 		bl	can_init
 2063              	.LVL135:
 132:Src/main.c    **** 						1);  // activate rx interrupt for debug
 2064              		.loc 1 132 2 view .LVU528
 132:Src/main.c    **** 						1);  // activate rx interrupt for debug
 2065              		.loc 1 132 51 is_stmt 0 view .LVU529
 2066 0042 204B     		ldr	r3, .L137+12
 2067 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132:Src/main.c    **** 						1);  // activate rx interrupt for debug
 2068              		.loc 1 132 2 view .LVU530
 2069 0046 0122     		movs	r2, #1
 2070 0048 1F49     		ldr	r1, .L137+16
 2071 004a 1944     		add	r1, r1, r3
 2072 004c 1F48     		ldr	r0, .L137+20
 2073 004e FFF7FEFF 		bl	HAL_UART_Receive_IT
 2074              	.LVL136:
 135:Src/main.c    ****   
 2075              		.loc 1 135 2 is_stmt 1 view .LVU531
 135:Src/main.c    ****   
 2076              		.loc 1 135 16 is_stmt 0 view .LVU532
 2077 0052 1F4B     		ldr	r3, .L137+24
 2078 0054 0022     		movs	r2, #0
 2079 0056 1A70     		strb	r2, [r3]
 137:Src/main.c    **** 
 2080              		.loc 1 137 2 is_stmt 1 view .LVU533
 2081 0058 FFF7FEFF 		bl	init_sd
 2082              	.LVL137:
 2083 005c 05E0     		b	.L128
 2084              	.L129:
 164:Src/main.c    **** 			idle();
ARM GAS  /tmp/ccs7SpOU.s 			page 56


 2085              		.loc 1 164 10 view .LVU534
 164:Src/main.c    **** 			idle();
 2086              		.loc 1 164 13 is_stmt 0 view .LVU535
 2087 005e 012B     		cmp	r3, #1
 2088 0060 20D0     		beq	.L134
 166:Src/main.c    **** 			setup();
 2089              		.loc 1 166 10 is_stmt 1 view .LVU536
 166:Src/main.c    **** 			setup();
 2090              		.loc 1 166 13 is_stmt 0 view .LVU537
 2091 0062 022B     		cmp	r3, #2
 2092 0064 21D0     		beq	.L135
 168:Src/main.c    **** 			run();
 2093              		.loc 1 168 10 is_stmt 1 view .LVU538
 168:Src/main.c    **** 			run();
 2094              		.loc 1 168 13 is_stmt 0 view .LVU539
 2095 0066 032B     		cmp	r3, #3
 2096 0068 22D0     		beq	.L136
 2097              	.L128:
 145:Src/main.c    **** 		can1.dataTx[0] = 0;
 2098              		.loc 1 145 2 is_stmt 1 view .LVU540
 146:Src/main.c    **** 		can1.dataTx[1] = 0;
 2099              		.loc 1 146 3 view .LVU541
 146:Src/main.c    **** 		can1.dataTx[1] = 0;
 2100              		.loc 1 146 18 is_stmt 0 view .LVU542
 2101 006a 144A     		ldr	r2, .L137+4
 2102 006c 0023     		movs	r3, #0
 2103 006e 1373     		strb	r3, [r2, #12]
 147:Src/main.c    **** 		can1.dataTx[2] = 0;
 2104              		.loc 1 147 3 is_stmt 1 view .LVU543
 147:Src/main.c    **** 		can1.dataTx[2] = 0;
 2105              		.loc 1 147 18 is_stmt 0 view .LVU544
 2106 0070 5373     		strb	r3, [r2, #13]
 148:Src/main.c    **** 		can1.dataTx[3] = 0;
 2107              		.loc 1 148 3 is_stmt 1 view .LVU545
 148:Src/main.c    **** 		can1.dataTx[3] = 0;
 2108              		.loc 1 148 18 is_stmt 0 view .LVU546
 2109 0072 9373     		strb	r3, [r2, #14]
 149:Src/main.c    **** 		can1.dataTx[4] = counter >> 24;
 2110              		.loc 1 149 3 is_stmt 1 view .LVU547
 149:Src/main.c    **** 		can1.dataTx[4] = counter >> 24;
 2111              		.loc 1 149 18 is_stmt 0 view .LVU548
 2112 0074 D373     		strb	r3, [r2, #15]
 150:Src/main.c    **** 		can1.dataTx[5] = counter >> 16;
 2113              		.loc 1 150 3 is_stmt 1 view .LVU549
 150:Src/main.c    **** 		can1.dataTx[5] = counter >> 16;
 2114              		.loc 1 150 28 is_stmt 0 view .LVU550
 2115 0076 174B     		ldr	r3, .L137+28
 2116 0078 1B68     		ldr	r3, [r3]
 2117 007a 1916     		asrs	r1, r3, #24
 150:Src/main.c    **** 		can1.dataTx[5] = counter >> 16;
 2118              		.loc 1 150 18 view .LVU551
 2119 007c 1174     		strb	r1, [r2, #16]
 151:Src/main.c    **** 		can1.dataTx[6] = counter >> 8;
 2120              		.loc 1 151 3 is_stmt 1 view .LVU552
 151:Src/main.c    **** 		can1.dataTx[6] = counter >> 8;
 2121              		.loc 1 151 28 is_stmt 0 view .LVU553
 2122 007e 1914     		asrs	r1, r3, #16
ARM GAS  /tmp/ccs7SpOU.s 			page 57


 151:Src/main.c    **** 		can1.dataTx[6] = counter >> 8;
 2123              		.loc 1 151 18 view .LVU554
 2124 0080 5174     		strb	r1, [r2, #17]
 152:Src/main.c    **** 		can1.dataTx[7] = counter % 256;
 2125              		.loc 1 152 3 is_stmt 1 view .LVU555
 152:Src/main.c    **** 		can1.dataTx[7] = counter % 256;
 2126              		.loc 1 152 28 is_stmt 0 view .LVU556
 2127 0082 1912     		asrs	r1, r3, #8
 152:Src/main.c    **** 		can1.dataTx[7] = counter % 256;
 2128              		.loc 1 152 18 view .LVU557
 2129 0084 9174     		strb	r1, [r2, #18]
 153:Src/main.c    **** 
 2130              		.loc 1 153 3 is_stmt 1 view .LVU558
 153:Src/main.c    **** 
 2131              		.loc 1 153 28 is_stmt 0 view .LVU559
 2132 0086 5942     		rsbs	r1, r3, #0
 2133 0088 DBB2     		uxtb	r3, r3
 2134 008a C9B2     		uxtb	r1, r1
 2135 008c 58BF     		it	pl
 2136 008e 4B42     		rsbpl	r3, r1, #0
 153:Src/main.c    **** 
 2137              		.loc 1 153 18 view .LVU560
 2138 0090 D374     		strb	r3, [r2, #19]
 155:Src/main.c    **** 
 2139              		.loc 1 155 3 is_stmt 1 view .LVU561
 155:Src/main.c    **** 
 2140              		.loc 1 155 14 is_stmt 0 view .LVU562
 2141 0092 A023     		movs	r3, #160
 2142 0094 D362     		str	r3, [r2, #44]
 162:Src/main.c    **** 			init();
 2143              		.loc 1 162 3 is_stmt 1 view .LVU563
 162:Src/main.c    **** 			init();
 2144              		.loc 1 162 21 is_stmt 0 view .LVU564
 2145 0096 0E4B     		ldr	r3, .L137+24
 2146 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 162:Src/main.c    **** 			init();
 2147              		.loc 1 162 6 view .LVU565
 2148 009a 002B     		cmp	r3, #0
 2149 009c DFD1     		bne	.L129
 163:Src/main.c    **** 		} else if (current_state == STATE_IDLE) {
 2150              		.loc 1 163 4 is_stmt 1 view .LVU566
 2151 009e FFF7FEFF 		bl	init
 2152              	.LVL138:
 2153 00a2 E2E7     		b	.L128
 2154              	.L134:
 165:Src/main.c    **** 		} else if (current_state == STATE_SETUP) {
 2155              		.loc 1 165 4 view .LVU567
 2156 00a4 FFF7FEFF 		bl	idle
 2157              	.LVL139:
 2158 00a8 DFE7     		b	.L128
 2159              	.L135:
 167:Src/main.c    **** 		} else if (current_state == STATE_RUN) {
 2160              		.loc 1 167 4 view .LVU568
 2161 00aa FFF7FEFF 		bl	setup
 2162              	.LVL140:
 2163 00ae DCE7     		b	.L128
 2164              	.L136:
ARM GAS  /tmp/ccs7SpOU.s 			page 58


 169:Src/main.c    **** 		}
 2165              		.loc 1 169 4 view .LVU569
 2166 00b0 FFF7FEFF 		bl	run
 2167              	.LVL141:
 2168 00b4 D9E7     		b	.L128
 2169              	.L138:
 2170 00b6 00BF     		.align	2
 2171              	.L137:
 2172 00b8 00000000 		.word	htim2
 2173 00bc 00000000 		.word	can1
 2174 00c0 00000000 		.word	hcan1
 2175 00c4 00000000 		.word	debug_rx_count
 2176 00c8 00000000 		.word	debug_rx
 2177 00cc 00000000 		.word	huart3
 2178 00d0 00000000 		.word	current_state
 2179 00d4 00000000 		.word	.LANCHOR0
 2180              		.cfi_endproc
 2181              	.LFE144:
 2183              		.global	counter
 2184              		.comm	sFilter,40,4
 2185              		.comm	i_debug,1,1
 2186              		.comm	huart3,128,4
 2187              		.comm	htim2,64,4
 2188              		.comm	hsd1,132,4
 2189              		.comm	hcan1,40,4
 2190              		.comm	current_state,1,1
 2191              		.section	.bss.counter,"aw",%nobits
 2192              		.align	2
 2193              		.set	.LANCHOR0,. + 0
 2196              	counter:
 2197 0000 00000000 		.space	4
 2198              		.text
 2199              	.Letext0:
 2200              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 2201              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2202              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2203              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 2204              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 2205              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2206              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2207              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 2208              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 2209              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 2210              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 2211              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 2212              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 2213              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 2214              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 2215              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 2216              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 2217              		.file 19 "Middlewares/Third_Party/FatFs/src/integer.h"
 2218              		.file 20 "/usr/arm-none-eabi/include/sys/lock.h"
 2219              		.file 21 "/usr/arm-none-eabi/include/sys/_types.h"
 2220              		.file 22 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 2221              		.file 23 "/usr/arm-none-eabi/include/sys/reent.h"
 2222              		.file 24 "/usr/arm-none-eabi/include/stdlib.h"
 2223              		.file 25 "Middlewares/Third_Party/FatFs/src/ff.h"
ARM GAS  /tmp/ccs7SpOU.s 			page 59


 2224              		.file 26 "Middlewares/Third_Party/FatFs/src/diskio.h"
 2225              		.file 27 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 2226              		.file 28 "Inc/sd_diskio.h"
 2227              		.file 29 "Inc/fatfs.h"
 2228              		.file 30 "Inc/can.h"
 2229              		.file 31 "Inc/global_variables.h"
 2230              		.file 32 "Inc/state.h"
 2231              		.file 33 "/usr/arm-none-eabi/include/stdio.h"
 2232              		.file 34 "/usr/arm-none-eabi/include/string.h"
 2233              		.file 35 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 2234              		.file 36 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 2235              		.file 37 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 2236              		.file 38 "Inc/sd.h"
 2237              		.file 39 "<built-in>"
ARM GAS  /tmp/ccs7SpOU.s 			page 60


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccs7SpOU.s:17     .text.MX_SDMMC1_SD_Init:0000000000000000 $t
     /tmp/ccs7SpOU.s:24     .text.MX_SDMMC1_SD_Init:0000000000000000 MX_SDMMC1_SD_Init
     /tmp/ccs7SpOU.s:62     .text.MX_SDMMC1_SD_Init:0000000000000018 $d
                            *COM*:0000000000000084 hsd1
     /tmp/ccs7SpOU.s:68     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccs7SpOU.s:74     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccs7SpOU.s:223    .text.MX_GPIO_Init:00000000000000a4 $d
     /tmp/ccs7SpOU.s:231    .text.MX_NVIC_Init:0000000000000000 $t
     /tmp/ccs7SpOU.s:237    .text.MX_NVIC_Init:0000000000000000 MX_NVIC_Init
     /tmp/ccs7SpOU.s:324    .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:0000000000000000 $d
     /tmp/ccs7SpOU.s:328    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccs7SpOU.s:335    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccs7SpOU.s:546    .text.HAL_TIM_PeriodElapsedCallback:00000000000000ec $d
                            *COM*:0000000000000040 htim2
                            *COM*:0000000000000080 huart3
     /tmp/ccs7SpOU.s:564    .rodata.HAL_CAN_RxFifo0MsgPendingCallback.str1.4:0000000000000000 $d
     /tmp/ccs7SpOU.s:568    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccs7SpOU.s:575    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccs7SpOU.s:716    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000098 $d
                            *COM*:0000000000000028 hcan1
     /tmp/ccs7SpOU.s:729    .rodata.HAL_CAN_RxFifo1MsgPendingCallback.str1.4:0000000000000000 $d
     /tmp/ccs7SpOU.s:733    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/ccs7SpOU.s:740    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/ccs7SpOU.s:778    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000018 $d
     /tmp/ccs7SpOU.s:785    .rodata.HAL_CAN_RxFifo0FullCallback.str1.4:0000000000000000 $d
     /tmp/ccs7SpOU.s:789    .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 $t
     /tmp/ccs7SpOU.s:796    .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 HAL_CAN_RxFifo0FullCallback
     /tmp/ccs7SpOU.s:834    .text.HAL_CAN_RxFifo0FullCallback:0000000000000018 $d
     /tmp/ccs7SpOU.s:841    .rodata.HAL_CAN_RxFifo1FullCallback.str1.4:0000000000000000 $d
     /tmp/ccs7SpOU.s:845    .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 $t
     /tmp/ccs7SpOU.s:852    .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 HAL_CAN_RxFifo1FullCallback
     /tmp/ccs7SpOU.s:890    .text.HAL_CAN_RxFifo1FullCallback:0000000000000018 $d
     /tmp/ccs7SpOU.s:897    .rodata.HAL_CAN_TxMailbox0CompleteCallback.str1.4:0000000000000000 $d
     /tmp/ccs7SpOU.s:904    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 $t
     /tmp/ccs7SpOU.s:911    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 HAL_CAN_TxMailbox0CompleteCallback
     /tmp/ccs7SpOU.s:1008   .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000068 $d
     /tmp/ccs7SpOU.s:1019   .rodata.HAL_CAN_TxMailbox1CompleteCallback.str1.4:0000000000000000 $d
     /tmp/ccs7SpOU.s:1023   .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 $t
     /tmp/ccs7SpOU.s:1030   .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 HAL_CAN_TxMailbox1CompleteCallback
     /tmp/ccs7SpOU.s:1130   .text.HAL_CAN_TxMailbox1CompleteCallback:000000000000006c $d
     /tmp/ccs7SpOU.s:1141   .rodata.HAL_CAN_TxMailbox2CompleteCallback.str1.4:0000000000000000 $d
     /tmp/ccs7SpOU.s:1145   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 $t
     /tmp/ccs7SpOU.s:1152   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 HAL_CAN_TxMailbox2CompleteCallback
     /tmp/ccs7SpOU.s:1252   .text.HAL_CAN_TxMailbox2CompleteCallback:000000000000006c $d
     /tmp/ccs7SpOU.s:1263   .rodata.HAL_CAN_ErrorCallback.str1.4:0000000000000000 $d
     /tmp/ccs7SpOU.s:1267   .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/ccs7SpOU.s:1274   .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/ccs7SpOU.s:1332   .text.HAL_CAN_ErrorCallback:0000000000000034 $d
     /tmp/ccs7SpOU.s:1341   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccs7SpOU.s:1348   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccs7SpOU.s:1445   .text.HAL_UART_RxCpltCallback:0000000000000060 $d
     /tmp/ccs7SpOU.s:1453   .text.Error_Handler:0000000000000000 $t
     /tmp/ccs7SpOU.s:1460   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccs7SpOU.s:1496   .text.Error_Handler:0000000000000028 $d
     /tmp/ccs7SpOU.s:1501   .text.MX_USART3_UART_Init:0000000000000000 $t
ARM GAS  /tmp/ccs7SpOU.s 			page 61


     /tmp/ccs7SpOU.s:1507   .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccs7SpOU.s:1571   .text.MX_USART3_UART_Init:0000000000000030 $d
     /tmp/ccs7SpOU.s:1578   .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccs7SpOU.s:1584   .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccs7SpOU.s:1656   .text.MX_CAN1_Init:000000000000003c $d
     /tmp/ccs7SpOU.s:1662   .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccs7SpOU.s:1668   .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccs7SpOU.s:1779   .text.MX_TIM2_Init:000000000000006c $d
     /tmp/ccs7SpOU.s:1784   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccs7SpOU.s:1791   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccs7SpOU.s:1991   .text.SystemClock_Config:00000000000000cc $d
     /tmp/ccs7SpOU.s:1998   .text.main:0000000000000000 $t
     /tmp/ccs7SpOU.s:2005   .text.main:0000000000000000 main
     /tmp/ccs7SpOU.s:2172   .text.main:00000000000000b8 $d
                            *COM*:0000000000000001 current_state
     /tmp/ccs7SpOU.s:2196   .bss.counter:0000000000000000 counter
                            *COM*:0000000000000028 sFilter
                            *COM*:0000000000000001 i_debug
     /tmp/ccs7SpOU.s:2192   .bss.counter:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Transmit
count_ms
count_ms_abs
count_dec
count_inverter
count_imu
count_atc
count_sec
count_min
count_hour
atc_connected
imu_connected
HAL_GPIO_TogglePin
HAL_CAN_GetRxFifoFillLevel
HAL_CAN_GetRxMessage
fifoRxDataCAN_push
sprintf
strlen
can1
canSnifferMode
txt
fifoTxDataCAN_high_pop
CAN_Send_IT
fifoTxDataCAN_normal_pop
CAN_Send_Bck
HAL_UART_Receive_IT
debug_rx_count
debug_rx
debug_msg_arrived
HAL_Delay
HAL_UART_Init
HAL_CAN_Init
ARM GAS  /tmp/ccs7SpOU.s 			page 62


HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_FATFS_Init
HAL_TIM_Base_Start_IT
can_init
init_sd
init
idle
setup
run
