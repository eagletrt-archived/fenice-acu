ARM GAS  /tmp/ccj1YXAy.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_SDMMC1_SD_Init:
  25              	.LFB148:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.</center></h2>
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****  * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****  * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****  *                             www.st.com/SLA0044
  16:Src/main.c    ****  *
  17:Src/main.c    ****  ******************************************************************************
  18:Src/main.c    ****  */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "fatfs.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include "can.h"
  28:Src/main.c    **** #include "global_variables.h"
  29:Src/main.c    **** #include "sd.h"
  30:Src/main.c    **** #include "state.h"
  31:Src/main.c    **** #include "stdio.h"
  32:Src/main.c    **** #include "string.h"
ARM GAS  /tmp/ccj1YXAy.s 			page 2


  33:Src/main.c    **** /* USER CODE END Includes */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PTD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PD */
  42:Src/main.c    **** /* USER CODE END PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** CAN_HandleTypeDef hcan1;
  51:Src/main.c    **** 
  52:Src/main.c    **** SD_HandleTypeDef hsd1;
  53:Src/main.c    **** 
  54:Src/main.c    **** TIM_HandleTypeDef htim2;
  55:Src/main.c    **** 
  56:Src/main.c    **** UART_HandleTypeDef huart3;
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** uint8_t i_debug;
  61:Src/main.c    **** extern canStruct can1, can3;
  62:Src/main.c    **** extern fifoPriority fifoPriority_t;
  63:Src/main.c    **** 
  64:Src/main.c    **** CAN_FilterTypeDef sFilter;
  65:Src/main.c    **** 
  66:Src/main.c    **** long int counter = 0;
  67:Src/main.c    **** /* USER CODE END PV */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  70:Src/main.c    **** void SystemClock_Config(void);
  71:Src/main.c    **** static void MX_GPIO_Init(void);
  72:Src/main.c    **** static void MX_SDMMC1_SD_Init(void);
  73:Src/main.c    **** static void MX_USART3_UART_Init(void);
  74:Src/main.c    **** static void MX_CAN1_Init(void);
  75:Src/main.c    **** static void MX_TIM2_Init(void);
  76:Src/main.c    **** static void MX_NVIC_Init(void);
  77:Src/main.c    **** /* USER CODE BEGIN PFP */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* USER CODE END PFP */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  82:Src/main.c    **** /* USER CODE BEGIN 0 */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* USER CODE END 0 */
  85:Src/main.c    **** 
  86:Src/main.c    **** /**
  87:Src/main.c    ****   * @brief  The application entry point.
  88:Src/main.c    ****   * @retval int
  89:Src/main.c    ****   */
ARM GAS  /tmp/ccj1YXAy.s 			page 3


  90:Src/main.c    **** int main(void)
  91:Src/main.c    **** {
  92:Src/main.c    ****   /* USER CODE BEGIN 1 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 1 */
  95:Src/main.c    ****   
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Src/main.c    ****   HAL_Init();
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE BEGIN Init */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE END Init */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Configure the system clock */
 107:Src/main.c    ****   SystemClock_Config();
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END SysInit */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Initialize all configured peripherals */
 114:Src/main.c    ****   MX_GPIO_Init();
 115:Src/main.c    ****   MX_SDMMC1_SD_Init();
 116:Src/main.c    ****   MX_USART3_UART_Init();
 117:Src/main.c    ****   MX_FATFS_Init();
 118:Src/main.c    ****   MX_CAN1_Init();
 119:Src/main.c    ****   MX_TIM2_Init();
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* Initialize interrupts */
 122:Src/main.c    ****   MX_NVIC_Init();
 123:Src/main.c    ****   /* USER CODE BEGIN 2 */
 124:Src/main.c    **** 	HAL_TIM_Base_Start_IT(&htim2);
 125:Src/main.c    **** 
 126:Src/main.c    **** 	can1.rx0_interrupt = CAN1_RX0_IRQn;
 127:Src/main.c    **** 	can1.tx_interrupt = CAN1_TX_IRQn;
 128:Src/main.c    **** 	can1.hcan = &hcan1;
 129:Src/main.c    **** 
 130:Src/main.c    **** 	can_init();
 131:Src/main.c    **** 
 132:Src/main.c    **** 	HAL_UART_Receive_IT(&huart3, (uint8_t *)&debug_rx[debug_rx_count],
 133:Src/main.c    **** 						1);  // activate rx interrupt for debug
 134:Src/main.c    **** 
 135:Src/main.c    **** 	current_state = STATE_INIT;
 136:Src/main.c    ****   
 137:Src/main.c    **** 	init_sd();
 138:Src/main.c    **** 
 139:Src/main.c    **** 	
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* USER CODE END 2 */
 142:Src/main.c    **** 
 143:Src/main.c    ****   /* Infinite loop */
 144:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 145:Src/main.c    **** 	while (1) {
 146:Src/main.c    **** 		can1.dataTx[0] = 0;
ARM GAS  /tmp/ccj1YXAy.s 			page 4


 147:Src/main.c    **** 		can1.dataTx[1] = 0;
 148:Src/main.c    **** 		can1.dataTx[2] = 0;
 149:Src/main.c    **** 		can1.dataTx[3] = 0;
 150:Src/main.c    **** 		can1.dataTx[4] = counter >> 24;
 151:Src/main.c    **** 		can1.dataTx[5] = counter >> 16;
 152:Src/main.c    **** 		can1.dataTx[6] = counter >> 8;
 153:Src/main.c    **** 		can1.dataTx[7] = counter % 256;
 154:Src/main.c    **** 
 155:Src/main.c    **** 		can1.tx_id = 0xA0;
 156:Src/main.c    **** 
 157:Src/main.c    **** 		// CAN_Send(&can1, normalPriority);
 158:Src/main.c    **** 		// HAL_Delay(500);
 159:Src/main.c    **** 
 160:Src/main.c    **** 		// counter ++;
 161:Src/main.c    **** 
 162:Src/main.c    **** 		if (current_state == STATE_INIT) {
 163:Src/main.c    **** 			init();
 164:Src/main.c    **** 		} else if (current_state == STATE_IDLE) {
 165:Src/main.c    **** 			idle();
 166:Src/main.c    **** 		} else if (current_state == STATE_SETUP) {
 167:Src/main.c    **** 			setup();
 168:Src/main.c    **** 		} else if (current_state == STATE_RUN) {
 169:Src/main.c    **** 			run();
 170:Src/main.c    **** 		}
 171:Src/main.c    ****     /* USER CODE END WHILE */
 172:Src/main.c    **** 
 173:Src/main.c    ****     /* USER CODE BEGIN 3 */
 174:Src/main.c    **** 	}
 175:Src/main.c    ****   /* USER CODE END 3 */
 176:Src/main.c    **** }
 177:Src/main.c    **** 
 178:Src/main.c    **** /**
 179:Src/main.c    ****   * @brief System Clock Configuration
 180:Src/main.c    ****   * @retval None
 181:Src/main.c    ****   */
 182:Src/main.c    **** void SystemClock_Config(void)
 183:Src/main.c    **** {
 184:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 185:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 186:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 187:Src/main.c    **** 
 188:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 189:Src/main.c    ****   */
 190:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 191:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 192:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 193:Src/main.c    ****   */
 194:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 195:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 196:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 203:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccj1YXAy.s 			page 5


 204:Src/main.c    ****   {
 205:Src/main.c    ****     Error_Handler();
 206:Src/main.c    ****   }
 207:Src/main.c    ****   /** Activate the Over-Drive mode 
 208:Src/main.c    ****   */
 209:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 210:Src/main.c    ****   {
 211:Src/main.c    ****     Error_Handler();
 212:Src/main.c    ****   }
 213:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 214:Src/main.c    ****   */
 215:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 216:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 217:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 218:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 219:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 220:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 221:Src/main.c    **** 
 222:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 223:Src/main.c    ****   {
 224:Src/main.c    ****     Error_Handler();
 225:Src/main.c    ****   }
 226:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_SDMMC1
 227:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 228:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 229:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 230:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 231:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 232:Src/main.c    ****   {
 233:Src/main.c    ****     Error_Handler();
 234:Src/main.c    ****   }
 235:Src/main.c    **** }
 236:Src/main.c    **** 
 237:Src/main.c    **** /**
 238:Src/main.c    ****   * @brief NVIC Configuration.
 239:Src/main.c    ****   * @retval None
 240:Src/main.c    ****   */
 241:Src/main.c    **** static void MX_NVIC_Init(void)
 242:Src/main.c    **** {
 243:Src/main.c    ****   /* SDMMC1_IRQn interrupt configuration */
 244:Src/main.c    ****   HAL_NVIC_SetPriority(SDMMC1_IRQn, 0, 0);
 245:Src/main.c    ****   HAL_NVIC_EnableIRQ(SDMMC1_IRQn);
 246:Src/main.c    ****   /* USART3_IRQn interrupt configuration */
 247:Src/main.c    ****   HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 248:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART3_IRQn);
 249:Src/main.c    ****   /* CAN1_SCE_IRQn interrupt configuration */
 250:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_SCE_IRQn, 0, 0);
 251:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 252:Src/main.c    ****   /* CAN1_RX1_IRQn interrupt configuration */
 253:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 254:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 255:Src/main.c    ****   /* CAN1_RX0_IRQn interrupt configuration */
 256:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 257:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 258:Src/main.c    ****   /* CAN1_TX_IRQn interrupt configuration */
 259:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_TX_IRQn, 0, 0);
 260:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
ARM GAS  /tmp/ccj1YXAy.s 			page 6


 261:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 262:Src/main.c    ****   HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 263:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 264:Src/main.c    **** }
 265:Src/main.c    **** 
 266:Src/main.c    **** /**
 267:Src/main.c    ****   * @brief CAN1 Initialization Function
 268:Src/main.c    ****   * @param None
 269:Src/main.c    ****   * @retval None
 270:Src/main.c    ****   */
 271:Src/main.c    **** static void MX_CAN1_Init(void)
 272:Src/main.c    **** {
 273:Src/main.c    **** 
 274:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 0 */
 275:Src/main.c    **** 
 276:Src/main.c    ****   /* USER CODE END CAN1_Init 0 */
 277:Src/main.c    **** 
 278:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 1 */
 279:Src/main.c    **** 
 280:Src/main.c    ****   /* USER CODE END CAN1_Init 1 */
 281:Src/main.c    ****   hcan1.Instance = CAN1;
 282:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 283:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 284:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 285:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 286:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 287:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 288:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 289:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 290:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 291:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 292:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 293:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 294:Src/main.c    ****   {
 295:Src/main.c    ****     Error_Handler();
 296:Src/main.c    ****   }
 297:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 2 */
 298:Src/main.c    **** 
 299:Src/main.c    ****   /* USER CODE END CAN1_Init 2 */
 300:Src/main.c    **** 
 301:Src/main.c    **** }
 302:Src/main.c    **** 
 303:Src/main.c    **** /**
 304:Src/main.c    ****   * @brief SDMMC1 Initialization Function
 305:Src/main.c    ****   * @param None
 306:Src/main.c    ****   * @retval None
 307:Src/main.c    ****   */
 308:Src/main.c    **** static void MX_SDMMC1_SD_Init(void)
 309:Src/main.c    **** {
  27              		.loc 1 309 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 0 */
 312:Src/main.c    **** 
ARM GAS  /tmp/ccj1YXAy.s 			page 7


 313:Src/main.c    ****   /* USER CODE END SDMMC1_Init 0 */
 314:Src/main.c    **** 
 315:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 1 */
 316:Src/main.c    **** 
 317:Src/main.c    ****   /* USER CODE END SDMMC1_Init 1 */
 318:Src/main.c    ****   hsd1.Instance = SDMMC1;
  32              		.loc 1 318 3 view .LVU1
  33              		.loc 1 318 17 is_stmt 0 view .LVU2
  34 0000 054B     		ldr	r3, .L2
  35 0002 064A     		ldr	r2, .L2+4
  36 0004 1A60     		str	r2, [r3]
 319:Src/main.c    ****   hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  37              		.loc 1 319 3 is_stmt 1 view .LVU3
  38              		.loc 1 319 23 is_stmt 0 view .LVU4
  39 0006 0022     		movs	r2, #0
  40 0008 5A60     		str	r2, [r3, #4]
 320:Src/main.c    ****   hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  41              		.loc 1 320 3 is_stmt 1 view .LVU5
  42              		.loc 1 320 25 is_stmt 0 view .LVU6
  43 000a 9A60     		str	r2, [r3, #8]
 321:Src/main.c    ****   hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  44              		.loc 1 321 3 is_stmt 1 view .LVU7
  45              		.loc 1 321 28 is_stmt 0 view .LVU8
  46 000c DA60     		str	r2, [r3, #12]
 322:Src/main.c    ****   hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
  47              		.loc 1 322 3 is_stmt 1 view .LVU9
  48              		.loc 1 322 21 is_stmt 0 view .LVU10
  49 000e 1A61     		str	r2, [r3, #16]
 323:Src/main.c    ****   hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  50              		.loc 1 323 3 is_stmt 1 view .LVU11
  51              		.loc 1 323 33 is_stmt 0 view .LVU12
  52 0010 5A61     		str	r2, [r3, #20]
 324:Src/main.c    ****   hsd1.Init.ClockDiv = 1;
  53              		.loc 1 324 3 is_stmt 1 view .LVU13
  54              		.loc 1 324 22 is_stmt 0 view .LVU14
  55 0012 0122     		movs	r2, #1
  56 0014 9A61     		str	r2, [r3, #24]
 325:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 2 */
 326:Src/main.c    **** 
 327:Src/main.c    ****   /* USER CODE END SDMMC1_Init 2 */
 328:Src/main.c    **** 
 329:Src/main.c    **** }
  57              		.loc 1 329 1 view .LVU15
  58 0016 7047     		bx	lr
  59              	.L3:
  60              		.align	2
  61              	.L2:
  62 0018 00000000 		.word	hsd1
  63 001c 002C0140 		.word	1073818624
  64              		.cfi_endproc
  65              	.LFE148:
  67              		.section	.text.MX_GPIO_Init,"ax",%progbits
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv5-d16
ARM GAS  /tmp/ccj1YXAy.s 			page 8


  74              	MX_GPIO_Init:
  75              	.LFB151:
 330:Src/main.c    **** 
 331:Src/main.c    **** /**
 332:Src/main.c    ****   * @brief TIM2 Initialization Function
 333:Src/main.c    ****   * @param None
 334:Src/main.c    ****   * @retval None
 335:Src/main.c    ****   */
 336:Src/main.c    **** static void MX_TIM2_Init(void)
 337:Src/main.c    **** {
 338:Src/main.c    **** 
 339:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 340:Src/main.c    **** 
 341:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 342:Src/main.c    **** 
 343:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 344:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 345:Src/main.c    **** 
 346:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 347:Src/main.c    **** 
 348:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 349:Src/main.c    ****   htim2.Instance = TIM2;
 350:Src/main.c    ****   htim2.Init.Prescaler = 108;
 351:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 352:Src/main.c    ****   htim2.Init.Period = 1000;
 353:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 354:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 355:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 356:Src/main.c    ****   {
 357:Src/main.c    ****     Error_Handler();
 358:Src/main.c    ****   }
 359:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 360:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 361:Src/main.c    ****   {
 362:Src/main.c    ****     Error_Handler();
 363:Src/main.c    ****   }
 364:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 365:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 366:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 367:Src/main.c    ****   {
 368:Src/main.c    ****     Error_Handler();
 369:Src/main.c    ****   }
 370:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 371:Src/main.c    **** 
 372:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 373:Src/main.c    **** 
 374:Src/main.c    **** }
 375:Src/main.c    **** 
 376:Src/main.c    **** /**
 377:Src/main.c    ****   * @brief USART3 Initialization Function
 378:Src/main.c    ****   * @param None
 379:Src/main.c    ****   * @retval None
 380:Src/main.c    ****   */
 381:Src/main.c    **** static void MX_USART3_UART_Init(void)
 382:Src/main.c    **** {
 383:Src/main.c    **** 
 384:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 0 */
ARM GAS  /tmp/ccj1YXAy.s 			page 9


 385:Src/main.c    **** 
 386:Src/main.c    ****   /* USER CODE END USART3_Init 0 */
 387:Src/main.c    **** 
 388:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 1 */
 389:Src/main.c    **** 
 390:Src/main.c    ****   /* USER CODE END USART3_Init 1 */
 391:Src/main.c    ****   huart3.Instance = USART3;
 392:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 393:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 394:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 395:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 396:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 397:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 398:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 399:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 400:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 401:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 402:Src/main.c    ****   {
 403:Src/main.c    ****     Error_Handler();
 404:Src/main.c    ****   }
 405:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 2 */
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* USER CODE END USART3_Init 2 */
 408:Src/main.c    **** 
 409:Src/main.c    **** }
 410:Src/main.c    **** 
 411:Src/main.c    **** /**
 412:Src/main.c    ****   * @brief GPIO Initialization Function
 413:Src/main.c    ****   * @param None
 414:Src/main.c    ****   * @retval None
 415:Src/main.c    ****   */
 416:Src/main.c    **** static void MX_GPIO_Init(void)
 417:Src/main.c    **** {
  76              		.loc 1 417 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 40
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80 0000 30B5     		push	{r4, r5, lr}
  81              	.LCFI0:
  82              		.cfi_def_cfa_offset 12
  83              		.cfi_offset 4, -12
  84              		.cfi_offset 5, -8
  85              		.cfi_offset 14, -4
  86 0002 8BB0     		sub	sp, sp, #44
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 56
 418:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  89              		.loc 1 418 3 view .LVU17
  90              		.loc 1 418 20 is_stmt 0 view .LVU18
  91 0004 0024     		movs	r4, #0
  92 0006 0594     		str	r4, [sp, #20]
  93 0008 0694     		str	r4, [sp, #24]
  94 000a 0794     		str	r4, [sp, #28]
  95 000c 0894     		str	r4, [sp, #32]
  96 000e 0994     		str	r4, [sp, #36]
 419:Src/main.c    **** 
 420:Src/main.c    ****   /* GPIO Ports Clock Enable */
ARM GAS  /tmp/ccj1YXAy.s 			page 10


 421:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  97              		.loc 1 421 3 is_stmt 1 view .LVU19
  98              	.LBB2:
  99              		.loc 1 421 3 view .LVU20
 100              		.loc 1 421 3 view .LVU21
 101 0010 244B     		ldr	r3, .L6
 102 0012 1A6B     		ldr	r2, [r3, #48]
 103 0014 42F00402 		orr	r2, r2, #4
 104 0018 1A63     		str	r2, [r3, #48]
 105              		.loc 1 421 3 view .LVU22
 106 001a 1A6B     		ldr	r2, [r3, #48]
 107 001c 02F00402 		and	r2, r2, #4
 108 0020 0192     		str	r2, [sp, #4]
 109              		.loc 1 421 3 view .LVU23
 110 0022 019A     		ldr	r2, [sp, #4]
 111              	.LBE2:
 112              		.loc 1 421 3 view .LVU24
 422:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 113              		.loc 1 422 3 view .LVU25
 114              	.LBB3:
 115              		.loc 1 422 3 view .LVU26
 116              		.loc 1 422 3 view .LVU27
 117 0024 1A6B     		ldr	r2, [r3, #48]
 118 0026 42F00102 		orr	r2, r2, #1
 119 002a 1A63     		str	r2, [r3, #48]
 120              		.loc 1 422 3 view .LVU28
 121 002c 1A6B     		ldr	r2, [r3, #48]
 122 002e 02F00102 		and	r2, r2, #1
 123 0032 0292     		str	r2, [sp, #8]
 124              		.loc 1 422 3 view .LVU29
 125 0034 029A     		ldr	r2, [sp, #8]
 126              	.LBE3:
 127              		.loc 1 422 3 view .LVU30
 423:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 128              		.loc 1 423 3 view .LVU31
 129              	.LBB4:
 130              		.loc 1 423 3 view .LVU32
 131              		.loc 1 423 3 view .LVU33
 132 0036 1A6B     		ldr	r2, [r3, #48]
 133 0038 42F00202 		orr	r2, r2, #2
 134 003c 1A63     		str	r2, [r3, #48]
 135              		.loc 1 423 3 view .LVU34
 136 003e 1A6B     		ldr	r2, [r3, #48]
 137 0040 02F00202 		and	r2, r2, #2
 138 0044 0392     		str	r2, [sp, #12]
 139              		.loc 1 423 3 view .LVU35
 140 0046 039A     		ldr	r2, [sp, #12]
 141              	.LBE4:
 142              		.loc 1 423 3 view .LVU36
 424:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 143              		.loc 1 424 3 view .LVU37
 144              	.LBB5:
 145              		.loc 1 424 3 view .LVU38
 146              		.loc 1 424 3 view .LVU39
 147 0048 1A6B     		ldr	r2, [r3, #48]
 148 004a 42F00802 		orr	r2, r2, #8
 149 004e 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccj1YXAy.s 			page 11


 150              		.loc 1 424 3 view .LVU40
 151 0050 1B6B     		ldr	r3, [r3, #48]
 152 0052 03F00803 		and	r3, r3, #8
 153 0056 0493     		str	r3, [sp, #16]
 154              		.loc 1 424 3 view .LVU41
 155 0058 049B     		ldr	r3, [sp, #16]
 156              	.LBE5:
 157              		.loc 1 424 3 view .LVU42
 425:Src/main.c    **** 
 426:Src/main.c    ****   /*Configure GPIO pin Output Level */
 427:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LED_green_Pin|LED_red_Pin|LED_blue_Pin, GPIO_PIN_RESET);
 158              		.loc 1 427 3 view .LVU43
 159 005a 134D     		ldr	r5, .L6+4
 160 005c 2246     		mov	r2, r4
 161 005e 44F28101 		movw	r1, #16513
 162 0062 2846     		mov	r0, r5
 163 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 164              	.LVL0:
 428:Src/main.c    **** 
 429:Src/main.c    ****   /*Configure GPIO pin : USER_BUTTON_Pin */
 430:Src/main.c    ****   GPIO_InitStruct.Pin = USER_BUTTON_Pin;
 165              		.loc 1 430 3 view .LVU44
 166              		.loc 1 430 23 is_stmt 0 view .LVU45
 167 0068 4FF40053 		mov	r3, #8192
 168 006c 0593     		str	r3, [sp, #20]
 431:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 169              		.loc 1 431 3 is_stmt 1 view .LVU46
 170              		.loc 1 431 24 is_stmt 0 view .LVU47
 171 006e 0694     		str	r4, [sp, #24]
 432:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 172              		.loc 1 432 3 is_stmt 1 view .LVU48
 173              		.loc 1 432 24 is_stmt 0 view .LVU49
 174 0070 0794     		str	r4, [sp, #28]
 433:Src/main.c    ****   HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 175              		.loc 1 433 3 is_stmt 1 view .LVU50
 176 0072 05A9     		add	r1, sp, #20
 177 0074 0D48     		ldr	r0, .L6+8
 178 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 179              	.LVL1:
 434:Src/main.c    **** 
 435:Src/main.c    ****   /*Configure GPIO pin : SD_detect_Pin */
 436:Src/main.c    ****   GPIO_InitStruct.Pin = SD_detect_Pin;
 180              		.loc 1 436 3 view .LVU51
 181              		.loc 1 436 23 is_stmt 0 view .LVU52
 182 007a 2023     		movs	r3, #32
 183 007c 0593     		str	r3, [sp, #20]
 437:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 184              		.loc 1 437 3 is_stmt 1 view .LVU53
 185              		.loc 1 437 24 is_stmt 0 view .LVU54
 186 007e 0694     		str	r4, [sp, #24]
 438:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 187              		.loc 1 438 3 is_stmt 1 view .LVU55
 188              		.loc 1 438 24 is_stmt 0 view .LVU56
 189 0080 0794     		str	r4, [sp, #28]
 439:Src/main.c    ****   HAL_GPIO_Init(SD_detect_GPIO_Port, &GPIO_InitStruct);
 190              		.loc 1 439 3 is_stmt 1 view .LVU57
 191 0082 05A9     		add	r1, sp, #20
ARM GAS  /tmp/ccj1YXAy.s 			page 12


 192 0084 0A48     		ldr	r0, .L6+12
 193 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 194              	.LVL2:
 440:Src/main.c    **** 
 441:Src/main.c    ****   /*Configure GPIO pins : LED_green_Pin LED_red_Pin LED_blue_Pin */
 442:Src/main.c    ****   GPIO_InitStruct.Pin = LED_green_Pin|LED_red_Pin|LED_blue_Pin;
 195              		.loc 1 442 3 view .LVU58
 196              		.loc 1 442 23 is_stmt 0 view .LVU59
 197 008a 44F28103 		movw	r3, #16513
 198 008e 0593     		str	r3, [sp, #20]
 443:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 199              		.loc 1 443 3 is_stmt 1 view .LVU60
 200              		.loc 1 443 24 is_stmt 0 view .LVU61
 201 0090 0123     		movs	r3, #1
 202 0092 0693     		str	r3, [sp, #24]
 444:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 444 3 is_stmt 1 view .LVU62
 204              		.loc 1 444 24 is_stmt 0 view .LVU63
 205 0094 0794     		str	r4, [sp, #28]
 445:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 206              		.loc 1 445 3 is_stmt 1 view .LVU64
 207              		.loc 1 445 25 is_stmt 0 view .LVU65
 208 0096 0894     		str	r4, [sp, #32]
 446:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 209              		.loc 1 446 3 is_stmt 1 view .LVU66
 210 0098 05A9     		add	r1, sp, #20
 211 009a 2846     		mov	r0, r5
 212 009c FFF7FEFF 		bl	HAL_GPIO_Init
 213              	.LVL3:
 447:Src/main.c    **** 
 448:Src/main.c    **** }
 214              		.loc 1 448 1 is_stmt 0 view .LVU67
 215 00a0 0BB0     		add	sp, sp, #44
 216              	.LCFI2:
 217              		.cfi_def_cfa_offset 12
 218              		@ sp needed
 219 00a2 30BD     		pop	{r4, r5, pc}
 220              	.L7:
 221              		.align	2
 222              	.L6:
 223 00a4 00380240 		.word	1073887232
 224 00a8 00040240 		.word	1073873920
 225 00ac 00080240 		.word	1073874944
 226 00b0 00000240 		.word	1073872896
 227              		.cfi_endproc
 228              	.LFE151:
 230              		.section	.text.MX_NVIC_Init,"ax",%progbits
 231              		.align	1
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv5-d16
 237              	MX_NVIC_Init:
 238              	.LFB146:
 242:Src/main.c    ****   /* SDMMC1_IRQn interrupt configuration */
 239              		.loc 1 242 1 is_stmt 1 view -0
 240              		.cfi_startproc
ARM GAS  /tmp/ccj1YXAy.s 			page 13


 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 08B5     		push	{r3, lr}
 244              	.LCFI3:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 3, -8
 247              		.cfi_offset 14, -4
 244:Src/main.c    ****   HAL_NVIC_EnableIRQ(SDMMC1_IRQn);
 248              		.loc 1 244 3 view .LVU69
 249 0002 0022     		movs	r2, #0
 250 0004 1146     		mov	r1, r2
 251 0006 3120     		movs	r0, #49
 252 0008 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 253              	.LVL4:
 245:Src/main.c    ****   /* USART3_IRQn interrupt configuration */
 254              		.loc 1 245 3 view .LVU70
 255 000c 3120     		movs	r0, #49
 256 000e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 257              	.LVL5:
 247:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART3_IRQn);
 258              		.loc 1 247 3 view .LVU71
 259 0012 0022     		movs	r2, #0
 260 0014 1146     		mov	r1, r2
 261 0016 2720     		movs	r0, #39
 262 0018 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 263              	.LVL6:
 248:Src/main.c    ****   /* CAN1_SCE_IRQn interrupt configuration */
 264              		.loc 1 248 3 view .LVU72
 265 001c 2720     		movs	r0, #39
 266 001e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 267              	.LVL7:
 250:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 268              		.loc 1 250 3 view .LVU73
 269 0022 0022     		movs	r2, #0
 270 0024 1146     		mov	r1, r2
 271 0026 1620     		movs	r0, #22
 272 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 273              	.LVL8:
 251:Src/main.c    ****   /* CAN1_RX1_IRQn interrupt configuration */
 274              		.loc 1 251 3 view .LVU74
 275 002c 1620     		movs	r0, #22
 276 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 277              	.LVL9:
 253:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 278              		.loc 1 253 3 view .LVU75
 279 0032 0022     		movs	r2, #0
 280 0034 1146     		mov	r1, r2
 281 0036 1520     		movs	r0, #21
 282 0038 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 283              	.LVL10:
 254:Src/main.c    ****   /* CAN1_RX0_IRQn interrupt configuration */
 284              		.loc 1 254 3 view .LVU76
 285 003c 1520     		movs	r0, #21
 286 003e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 287              	.LVL11:
 256:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 288              		.loc 1 256 3 view .LVU77
ARM GAS  /tmp/ccj1YXAy.s 			page 14


 289 0042 0022     		movs	r2, #0
 290 0044 1146     		mov	r1, r2
 291 0046 1420     		movs	r0, #20
 292 0048 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 293              	.LVL12:
 257:Src/main.c    ****   /* CAN1_TX_IRQn interrupt configuration */
 294              		.loc 1 257 3 view .LVU78
 295 004c 1420     		movs	r0, #20
 296 004e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 297              	.LVL13:
 259:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 298              		.loc 1 259 3 view .LVU79
 299 0052 0022     		movs	r2, #0
 300 0054 1146     		mov	r1, r2
 301 0056 1320     		movs	r0, #19
 302 0058 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 303              	.LVL14:
 260:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 304              		.loc 1 260 3 view .LVU80
 305 005c 1320     		movs	r0, #19
 306 005e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 307              	.LVL15:
 262:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 308              		.loc 1 262 3 view .LVU81
 309 0062 0022     		movs	r2, #0
 310 0064 1146     		mov	r1, r2
 311 0066 1C20     		movs	r0, #28
 312 0068 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 313              	.LVL16:
 263:Src/main.c    **** }
 314              		.loc 1 263 3 view .LVU82
 315 006c 1C20     		movs	r0, #28
 316 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 317              	.LVL17:
 264:Src/main.c    **** 
 318              		.loc 1 264 1 is_stmt 0 view .LVU83
 319 0072 08BD     		pop	{r3, pc}
 320              		.cfi_endproc
 321              	.LFE146:
 323              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 324              		.align	2
 325              	.LC0:
 326 0000 494D5520 		.ascii	"IMU non presente\015\012\000"
 326      6E6F6E20 
 326      70726573 
 326      656E7465 
 326      0D0A00
 327              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 328              		.align	1
 329              		.global	HAL_TIM_PeriodElapsedCallback
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv5-d16
 335              	HAL_TIM_PeriodElapsedCallback:
 336              	.LVL18:
 337              	.LFB152:
ARM GAS  /tmp/ccj1YXAy.s 			page 15


 449:Src/main.c    **** 
 450:Src/main.c    **** /* USER CODE BEGIN 4 */
 451:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 338              		.loc 1 451 61 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		.loc 1 451 61 is_stmt 0 view .LVU85
 343 0000 08B5     		push	{r3, lr}
 344              	.LCFI4:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 3, -8
 347              		.cfi_offset 14, -4
 452:Src/main.c    **** 	if (htim == &htim2) {
 348              		.loc 1 452 2 is_stmt 1 view .LVU86
 349              		.loc 1 452 5 is_stmt 0 view .LVU87
 350 0002 3A4B     		ldr	r3, .L24
 351 0004 8342     		cmp	r3, r0
 352 0006 00D0     		beq	.L18
 353              	.LVL19:
 354              	.L10:
 453:Src/main.c    **** 		count_ms += 1;
 454:Src/main.c    **** 		count_ms_abs++; //absolute 32 bit counter -> up to 50 days 
 455:Src/main.c    **** 		if (count_ms == 100) {
 456:Src/main.c    **** 			count_ms = 0;
 457:Src/main.c    **** 			count_dec++;
 458:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 459:Src/main.c    **** 			count_inverter++;
 460:Src/main.c    **** 			count_imu++;
 461:Src/main.c    **** 			count_atc++;
 462:Src/main.c    **** 			if (count_inverter == 10) {  //--- check if inverter is connected ---//
 463:Src/main.c    **** 					   // TODO: to implement error functions
 464:Src/main.c    **** 			} else if (count_inverter == 11) {
 465:Src/main.c    **** 				count_inverter = 10;
 466:Src/main.c    **** 			}
 467:Src/main.c    **** 			if (count_atc == 10) {  //--- check if Analog To Can is connected ---//
 468:Src/main.c    **** 				// TODO: to implement error functions
 469:Src/main.c    **** 				atc_connected = 0;
 470:Src/main.c    **** 			} else if (count_atc == 11) {
 471:Src/main.c    **** 				count_atc = 10;
 472:Src/main.c    **** 			}
 473:Src/main.c    **** 			if (count_imu == 10) {  //--- check if imu is connected ---//
 474:Src/main.c    **** 				// imu non presente //
 475:Src/main.c    **** 				imu_connected = 0;  // imu not connected
 476:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 1
 477:Src/main.c    **** 			} else if (count_imu == 11) {
 478:Src/main.c    **** 				count_imu = 10;
 479:Src/main.c    **** 			}
 480:Src/main.c    **** 			if (count_dec == 10) {
 481:Src/main.c    **** 				count_dec = 0;
 482:Src/main.c    **** 				count_sec++;
 483:Src/main.c    **** 				if (count_sec == 60) {
 484:Src/main.c    **** 					count_sec = 0;
 485:Src/main.c    **** 					count_min++;
 486:Src/main.c    **** 					if (count_min == 60) {
 487:Src/main.c    **** 						count_min = 0;
 488:Src/main.c    **** 						count_hour++;
ARM GAS  /tmp/ccj1YXAy.s 			page 16


 489:Src/main.c    **** 					}
 490:Src/main.c    **** 				}
 491:Src/main.c    **** 			}
 492:Src/main.c    **** 		}
 493:Src/main.c    **** 	}
 494:Src/main.c    **** }
 355              		.loc 1 494 1 view .LVU88
 356 0008 08BD     		pop	{r3, pc}
 357              	.LVL20:
 358              	.L18:
 453:Src/main.c    **** 		count_ms += 1;
 359              		.loc 1 453 3 is_stmt 1 view .LVU89
 453:Src/main.c    **** 		count_ms += 1;
 360              		.loc 1 453 12 is_stmt 0 view .LVU90
 361 000a 394A     		ldr	r2, .L24+4
 362 000c 1388     		ldrh	r3, [r2]
 363 000e 0133     		adds	r3, r3, #1
 364 0010 9BB2     		uxth	r3, r3
 365 0012 1380     		strh	r3, [r2]	@ movhi
 454:Src/main.c    **** 		if (count_ms == 100) {
 366              		.loc 1 454 3 is_stmt 1 view .LVU91
 454:Src/main.c    **** 		if (count_ms == 100) {
 367              		.loc 1 454 15 is_stmt 0 view .LVU92
 368 0014 3749     		ldr	r1, .L24+8
 369 0016 0B68     		ldr	r3, [r1]
 370 0018 0133     		adds	r3, r3, #1
 371 001a 0B60     		str	r3, [r1]
 455:Src/main.c    **** 			count_ms = 0;
 372              		.loc 1 455 3 is_stmt 1 view .LVU93
 455:Src/main.c    **** 			count_ms = 0;
 373              		.loc 1 455 16 is_stmt 0 view .LVU94
 374 001c 1388     		ldrh	r3, [r2]
 375 001e 9BB2     		uxth	r3, r3
 455:Src/main.c    **** 			count_ms = 0;
 376              		.loc 1 455 6 view .LVU95
 377 0020 642B     		cmp	r3, #100
 378 0022 F1D1     		bne	.L10
 456:Src/main.c    **** 			count_dec++;
 379              		.loc 1 456 4 is_stmt 1 view .LVU96
 456:Src/main.c    **** 			count_dec++;
 380              		.loc 1 456 13 is_stmt 0 view .LVU97
 381 0024 1346     		mov	r3, r2
 382 0026 0022     		movs	r2, #0
 383 0028 1A80     		strh	r2, [r3]	@ movhi
 457:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 384              		.loc 1 457 4 is_stmt 1 view .LVU98
 457:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 385              		.loc 1 457 13 is_stmt 0 view .LVU99
 386 002a 334A     		ldr	r2, .L24+12
 387 002c 1388     		ldrh	r3, [r2]
 388 002e 0133     		adds	r3, r3, #1
 389 0030 9BB2     		uxth	r3, r3
 390 0032 1380     		strh	r3, [r2]	@ movhi
 459:Src/main.c    **** 			count_imu++;
 391              		.loc 1 459 4 is_stmt 1 view .LVU100
 459:Src/main.c    **** 			count_imu++;
 392              		.loc 1 459 18 is_stmt 0 view .LVU101
ARM GAS  /tmp/ccj1YXAy.s 			page 17


 393 0034 314B     		ldr	r3, .L24+16
 394 0036 1988     		ldrh	r1, [r3]
 395 0038 0131     		adds	r1, r1, #1
 396 003a 89B2     		uxth	r1, r1
 397 003c 1980     		strh	r1, [r3]	@ movhi
 460:Src/main.c    **** 			count_atc++;
 398              		.loc 1 460 4 is_stmt 1 view .LVU102
 460:Src/main.c    **** 			count_atc++;
 399              		.loc 1 460 13 is_stmt 0 view .LVU103
 400 003e 304A     		ldr	r2, .L24+20
 401 0040 1388     		ldrh	r3, [r2]
 402 0042 0133     		adds	r3, r3, #1
 403 0044 9BB2     		uxth	r3, r3
 404 0046 1380     		strh	r3, [r2]	@ movhi
 461:Src/main.c    **** 			if (count_inverter == 10) {  //--- check if inverter is connected ---//
 405              		.loc 1 461 4 is_stmt 1 view .LVU104
 461:Src/main.c    **** 			if (count_inverter == 10) {  //--- check if inverter is connected ---//
 406              		.loc 1 461 13 is_stmt 0 view .LVU105
 407 0048 2E48     		ldr	r0, .L24+24
 408              	.LVL21:
 461:Src/main.c    **** 			if (count_inverter == 10) {  //--- check if inverter is connected ---//
 409              		.loc 1 461 13 view .LVU106
 410 004a 0288     		ldrh	r2, [r0]
 411 004c 0132     		adds	r2, r2, #1
 412 004e 92B2     		uxth	r2, r2
 413 0050 0280     		strh	r2, [r0]	@ movhi
 462:Src/main.c    **** 					   // TODO: to implement error functions
 414              		.loc 1 462 4 is_stmt 1 view .LVU107
 462:Src/main.c    **** 					   // TODO: to implement error functions
 415              		.loc 1 462 7 is_stmt 0 view .LVU108
 416 0052 0A29     		cmp	r1, #10
 417 0054 01D0     		beq	.L12
 464:Src/main.c    **** 				count_inverter = 10;
 418              		.loc 1 464 11 is_stmt 1 view .LVU109
 464:Src/main.c    **** 				count_inverter = 10;
 419              		.loc 1 464 14 is_stmt 0 view .LVU110
 420 0056 0B29     		cmp	r1, #11
 421 0058 2DD0     		beq	.L19
 422              	.L12:
 467:Src/main.c    **** 				// TODO: to implement error functions
 423              		.loc 1 467 4 is_stmt 1 view .LVU111
 467:Src/main.c    **** 				// TODO: to implement error functions
 424              		.loc 1 467 7 is_stmt 0 view .LVU112
 425 005a 0A2A     		cmp	r2, #10
 426 005c 2FD0     		beq	.L20
 470:Src/main.c    **** 				count_atc = 10;
 427              		.loc 1 470 11 is_stmt 1 view .LVU113
 470:Src/main.c    **** 				count_atc = 10;
 428              		.loc 1 470 14 is_stmt 0 view .LVU114
 429 005e 0B2A     		cmp	r2, #11
 430 0060 31D0     		beq	.L21
 431              	.L14:
 473:Src/main.c    **** 				// imu non presente //
 432              		.loc 1 473 4 is_stmt 1 view .LVU115
 473:Src/main.c    **** 				// imu non presente //
 433              		.loc 1 473 7 is_stmt 0 view .LVU116
 434 0062 0A2B     		cmp	r3, #10
ARM GAS  /tmp/ccj1YXAy.s 			page 18


 435 0064 33D0     		beq	.L22
 477:Src/main.c    **** 				count_imu = 10;
 436              		.loc 1 477 11 is_stmt 1 view .LVU117
 477:Src/main.c    **** 				count_imu = 10;
 437              		.loc 1 477 14 is_stmt 0 view .LVU118
 438 0066 0B2B     		cmp	r3, #11
 439 0068 3BD0     		beq	.L23
 440              	.L16:
 480:Src/main.c    **** 				count_dec = 0;
 441              		.loc 1 480 4 is_stmt 1 view .LVU119
 480:Src/main.c    **** 				count_dec = 0;
 442              		.loc 1 480 18 is_stmt 0 view .LVU120
 443 006a 234B     		ldr	r3, .L24+12
 444 006c 1B88     		ldrh	r3, [r3]
 445 006e 9BB2     		uxth	r3, r3
 480:Src/main.c    **** 				count_dec = 0;
 446              		.loc 1 480 7 view .LVU121
 447 0070 0A2B     		cmp	r3, #10
 448 0072 C9D1     		bne	.L10
 481:Src/main.c    **** 				count_sec++;
 449              		.loc 1 481 5 is_stmt 1 view .LVU122
 481:Src/main.c    **** 				count_sec++;
 450              		.loc 1 481 15 is_stmt 0 view .LVU123
 451 0074 204B     		ldr	r3, .L24+12
 452 0076 0022     		movs	r2, #0
 453 0078 1A80     		strh	r2, [r3]	@ movhi
 482:Src/main.c    **** 				if (count_sec == 60) {
 454              		.loc 1 482 5 is_stmt 1 view .LVU124
 482:Src/main.c    **** 				if (count_sec == 60) {
 455              		.loc 1 482 14 is_stmt 0 view .LVU125
 456 007a 234A     		ldr	r2, .L24+28
 457 007c 1388     		ldrh	r3, [r2]
 458 007e 0133     		adds	r3, r3, #1
 459 0080 9BB2     		uxth	r3, r3
 460 0082 1380     		strh	r3, [r2]	@ movhi
 483:Src/main.c    **** 					count_sec = 0;
 461              		.loc 1 483 5 is_stmt 1 view .LVU126
 483:Src/main.c    **** 					count_sec = 0;
 462              		.loc 1 483 19 is_stmt 0 view .LVU127
 463 0084 1388     		ldrh	r3, [r2]
 464 0086 9BB2     		uxth	r3, r3
 483:Src/main.c    **** 					count_sec = 0;
 465              		.loc 1 483 8 view .LVU128
 466 0088 3C2B     		cmp	r3, #60
 467 008a BDD1     		bne	.L10
 484:Src/main.c    **** 					count_min++;
 468              		.loc 1 484 6 is_stmt 1 view .LVU129
 484:Src/main.c    **** 					count_min++;
 469              		.loc 1 484 16 is_stmt 0 view .LVU130
 470 008c 1346     		mov	r3, r2
 471 008e 0022     		movs	r2, #0
 472 0090 1A80     		strh	r2, [r3]	@ movhi
 485:Src/main.c    **** 					if (count_min == 60) {
 473              		.loc 1 485 6 is_stmt 1 view .LVU131
 485:Src/main.c    **** 					if (count_min == 60) {
 474              		.loc 1 485 15 is_stmt 0 view .LVU132
 475 0092 1E4A     		ldr	r2, .L24+32
ARM GAS  /tmp/ccj1YXAy.s 			page 19


 476 0094 1388     		ldrh	r3, [r2]
 477 0096 0133     		adds	r3, r3, #1
 478 0098 9BB2     		uxth	r3, r3
 479 009a 1380     		strh	r3, [r2]	@ movhi
 486:Src/main.c    **** 						count_min = 0;
 480              		.loc 1 486 6 is_stmt 1 view .LVU133
 486:Src/main.c    **** 						count_min = 0;
 481              		.loc 1 486 20 is_stmt 0 view .LVU134
 482 009c 1388     		ldrh	r3, [r2]
 483 009e 9BB2     		uxth	r3, r3
 486:Src/main.c    **** 						count_min = 0;
 484              		.loc 1 486 9 view .LVU135
 485 00a0 3C2B     		cmp	r3, #60
 486 00a2 B1D1     		bne	.L10
 487:Src/main.c    **** 						count_hour++;
 487              		.loc 1 487 7 is_stmt 1 view .LVU136
 487:Src/main.c    **** 						count_hour++;
 488              		.loc 1 487 17 is_stmt 0 view .LVU137
 489 00a4 1346     		mov	r3, r2
 490 00a6 0022     		movs	r2, #0
 491 00a8 1A80     		strh	r2, [r3]	@ movhi
 488:Src/main.c    **** 					}
 492              		.loc 1 488 7 is_stmt 1 view .LVU138
 488:Src/main.c    **** 					}
 493              		.loc 1 488 17 is_stmt 0 view .LVU139
 494 00aa 194A     		ldr	r2, .L24+36
 495 00ac 1388     		ldrh	r3, [r2]
 496 00ae 0133     		adds	r3, r3, #1
 497 00b0 9BB2     		uxth	r3, r3
 498 00b2 1380     		strh	r3, [r2]	@ movhi
 499              		.loc 1 494 1 view .LVU140
 500 00b4 A8E7     		b	.L10
 501              	.L19:
 465:Src/main.c    **** 			}
 502              		.loc 1 465 5 is_stmt 1 view .LVU141
 465:Src/main.c    **** 			}
 503              		.loc 1 465 20 is_stmt 0 view .LVU142
 504 00b6 1149     		ldr	r1, .L24+16
 505 00b8 0A20     		movs	r0, #10
 506 00ba 0880     		strh	r0, [r1]	@ movhi
 507 00bc CDE7     		b	.L12
 508              	.L20:
 469:Src/main.c    **** 			} else if (count_atc == 11) {
 509              		.loc 1 469 5 is_stmt 1 view .LVU143
 469:Src/main.c    **** 			} else if (count_atc == 11) {
 510              		.loc 1 469 19 is_stmt 0 view .LVU144
 511 00be 154A     		ldr	r2, .L24+40
 512 00c0 0021     		movs	r1, #0
 513 00c2 1170     		strb	r1, [r2]
 514 00c4 CDE7     		b	.L14
 515              	.L21:
 471:Src/main.c    **** 			}
 516              		.loc 1 471 5 is_stmt 1 view .LVU145
 471:Src/main.c    **** 			}
 517              		.loc 1 471 15 is_stmt 0 view .LVU146
 518 00c6 0F4A     		ldr	r2, .L24+24
 519 00c8 0A21     		movs	r1, #10
ARM GAS  /tmp/ccj1YXAy.s 			page 20


 520 00ca 1180     		strh	r1, [r2]	@ movhi
 521 00cc C9E7     		b	.L14
 522              	.L22:
 475:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 1
 523              		.loc 1 475 5 is_stmt 1 view .LVU147
 475:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 1
 524              		.loc 1 475 19 is_stmt 0 view .LVU148
 525 00ce 124B     		ldr	r3, .L24+44
 526 00d0 0022     		movs	r2, #0
 527 00d2 1A70     		strb	r2, [r3]
 476:Src/main.c    **** 			} else if (count_imu == 11) {
 528              		.loc 1 476 5 is_stmt 1 view .LVU149
 529 00d4 0A23     		movs	r3, #10
 530 00d6 1222     		movs	r2, #18
 531 00d8 1049     		ldr	r1, .L24+48
 532 00da 1148     		ldr	r0, .L24+52
 533 00dc FFF7FEFF 		bl	HAL_UART_Transmit
 534              	.LVL22:
 535 00e0 C3E7     		b	.L16
 536              	.L23:
 478:Src/main.c    **** 			}
 537              		.loc 1 478 5 view .LVU150
 478:Src/main.c    **** 			}
 538              		.loc 1 478 15 is_stmt 0 view .LVU151
 539 00e2 074B     		ldr	r3, .L24+20
 540 00e4 0A22     		movs	r2, #10
 541 00e6 1A80     		strh	r2, [r3]	@ movhi
 542 00e8 BFE7     		b	.L16
 543              	.L25:
 544 00ea 00BF     		.align	2
 545              	.L24:
 546 00ec 00000000 		.word	htim2
 547 00f0 00000000 		.word	count_ms
 548 00f4 00000000 		.word	count_ms_abs
 549 00f8 00000000 		.word	count_dec
 550 00fc 00000000 		.word	count_inverter
 551 0100 00000000 		.word	count_imu
 552 0104 00000000 		.word	count_atc
 553 0108 00000000 		.word	count_sec
 554 010c 00000000 		.word	count_min
 555 0110 00000000 		.word	count_hour
 556 0114 00000000 		.word	atc_connected
 557 0118 00000000 		.word	imu_connected
 558 011c 00000000 		.word	.LC0
 559 0120 00000000 		.word	huart3
 560              		.cfi_endproc
 561              	.LFE152:
 563              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 564              		.align	1
 565              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 569              		.fpu fpv5-d16
 571              	HAL_CAN_RxFifo0MsgPendingCallback:
 572              	.LVL23:
 573              	.LFB153:
ARM GAS  /tmp/ccj1YXAy.s 			page 21


 495:Src/main.c    **** 
 496:Src/main.c    **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 574              		.loc 1 496 65 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 32
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		.loc 1 496 65 is_stmt 0 view .LVU153
 579 0000 10B5     		push	{r4, lr}
 580              	.LCFI5:
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 4, -8
 583              		.cfi_offset 14, -4
 584 0002 88B0     		sub	sp, sp, #32
 585              	.LCFI6:
 586              		.cfi_def_cfa_offset 40
 587 0004 0446     		mov	r4, r0
 497:Src/main.c    **** 	/*sprintf(txt, "%d\r\n", HAL_CAN_GetRxFifoFillLevel(&hcan1, CAN_RX_FIFO0));
 498:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 10);*/
 499:Src/main.c    **** 
 500:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_blue_GPIO_Port, LED_blue_Pin);
 588              		.loc 1 500 2 is_stmt 1 view .LVU154
 589 0006 8021     		movs	r1, #128
 590 0008 0E48     		ldr	r0, .L30
 591              	.LVL24:
 592              		.loc 1 500 2 is_stmt 0 view .LVU155
 593 000a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 594              	.LVL25:
 501:Src/main.c    **** 	if (hcan == &hcan1) {
 595              		.loc 1 501 2 is_stmt 1 view .LVU156
 596              		.loc 1 501 5 is_stmt 0 view .LVU157
 597 000e 0E4B     		ldr	r3, .L30+4
 598 0010 9C42     		cmp	r4, r3
 599 0012 01D0     		beq	.L29
 600              	.LVL26:
 601              	.L26:
 502:Src/main.c    **** 		// HAL_UART_Transmit(&huart3, (uint8_t*)"rx on FIFO0\r\n", strlen("rx on
 503:Src/main.c    **** 		// FIFO0\r\n"), 10);
 504:Src/main.c    **** 		if (HAL_CAN_GetRxFifoFillLevel(&hcan1, CAN_RX_FIFO0) != 0) {
 505:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 506:Src/main.c    **** 			HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &header,
 507:Src/main.c    **** 								 can1.dataRX_int);
 508:Src/main.c    **** 			can1.rx_id_int = header.StdId;
 509:Src/main.c    **** 			can1.rx_size_int = header.DLC;
 510:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 511:Src/main.c    **** 			/*sprintf(txt, "DATA: %d %d %d %d %d %d %d %d\r\n", can1.dataRx[0],
 512:Src/main.c    **** 					can1.dataRx[1], can1.dataRx[2], can1.dataRx[3],
 513:Src/main.c    **** 					can1.dataRx[4], can1.dataRx[5], can1.dataRx[6],
 514:Src/main.c    **** 					can1.dataRx[7]);*/
 515:Src/main.c    **** 			// HAL_UART_Transmit(&huart3, (uint8_t *)txt, strlen(txt), 100);
 516:Src/main.c    **** 			// HAL_UART_Transmit(&huart3, (uint8_t*)"ciao2\r\n",
 517:Src/main.c    **** 			// strlen("ciao2\r\n"), 10);
 518:Src/main.c    **** 		}
 519:Src/main.c    **** 	}
 520:Src/main.c    **** }
 602              		.loc 1 520 1 view .LVU158
 603 0014 08B0     		add	sp, sp, #32
 604              	.LCFI7:
ARM GAS  /tmp/ccj1YXAy.s 			page 22


 605              		.cfi_remember_state
 606              		.cfi_def_cfa_offset 8
 607              		@ sp needed
 608 0016 10BD     		pop	{r4, pc}
 609              	.LVL27:
 610              	.L29:
 611              	.LCFI8:
 612              		.cfi_restore_state
 504:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 613              		.loc 1 504 3 is_stmt 1 view .LVU159
 504:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 614              		.loc 1 504 7 is_stmt 0 view .LVU160
 615 0018 0021     		movs	r1, #0
 616 001a 1846     		mov	r0, r3
 617 001c FFF7FEFF 		bl	HAL_CAN_GetRxFifoFillLevel
 618              	.LVL28:
 504:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 619              		.loc 1 504 6 view .LVU161
 620 0020 0028     		cmp	r0, #0
 621 0022 F7D0     		beq	.L26
 622              	.LBB6:
 505:Src/main.c    **** 			HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &header,
 623              		.loc 1 505 4 is_stmt 1 view .LVU162
 506:Src/main.c    **** 								 can1.dataRX_int);
 624              		.loc 1 506 4 view .LVU163
 625 0024 094C     		ldr	r4, .L30+8
 626              	.LVL29:
 506:Src/main.c    **** 								 can1.dataRX_int);
 627              		.loc 1 506 4 is_stmt 0 view .LVU164
 628 0026 2346     		mov	r3, r4
 629 0028 01AA     		add	r2, sp, #4
 630 002a 0021     		movs	r1, #0
 631 002c 0648     		ldr	r0, .L30+4
 632 002e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 633              	.LVL30:
 508:Src/main.c    **** 			can1.rx_size_int = header.DLC;
 634              		.loc 1 508 4 is_stmt 1 view .LVU165
 508:Src/main.c    **** 			can1.rx_size_int = header.DLC;
 635              		.loc 1 508 19 is_stmt 0 view .LVU166
 636 0032 A4F11C00 		sub	r0, r4, #28
 637 0036 019B     		ldr	r3, [sp, #4]
 638 0038 4363     		str	r3, [r0, #52]
 509:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 639              		.loc 1 509 4 is_stmt 1 view .LVU167
 509:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 640              		.loc 1 509 29 is_stmt 0 view .LVU168
 641 003a 059B     		ldr	r3, [sp, #20]
 509:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 642              		.loc 1 509 21 view .LVU169
 643 003c 8360     		str	r3, [r0, #8]
 510:Src/main.c    **** 			/*sprintf(txt, "DATA: %d %d %d %d %d %d %d %d\r\n", can1.dataRx[0],
 644              		.loc 1 510 4 is_stmt 1 view .LVU170
 645 003e FFF7FEFF 		bl	fifoRxDataCAN_push
 646              	.LVL31:
 647              	.LBE6:
 648              		.loc 1 520 1 is_stmt 0 view .LVU171
 649 0042 E7E7     		b	.L26
ARM GAS  /tmp/ccj1YXAy.s 			page 23


 650              	.L31:
 651              		.align	2
 652              	.L30:
 653 0044 00040240 		.word	1073873920
 654 0048 00000000 		.word	hcan1
 655 004c 1C000000 		.word	can1+28
 656              		.cfi_endproc
 657              	.LFE153:
 659              		.section	.rodata.HAL_CAN_RxFifo1MsgPendingCallback.str1.4,"aMS",%progbits,1
 660              		.align	2
 661              	.LC1:
 662 0000 7278206F 		.ascii	"rx on FIFO1\015\012\000"
 662      6E204649 
 662      464F310D 
 662      0A00
 663              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 664              		.align	1
 665              		.global	HAL_CAN_RxFifo1MsgPendingCallback
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 669              		.fpu fpv5-d16
 671              	HAL_CAN_RxFifo1MsgPendingCallback:
 672              	.LVL32:
 673              	.LFB154:
 521:Src/main.c    **** void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 674              		.loc 1 521 65 is_stmt 1 view -0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		.loc 1 521 65 is_stmt 0 view .LVU173
 679 0000 08B5     		push	{r3, lr}
 680              	.LCFI9:
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 3, -8
 683              		.cfi_offset 14, -4
 522:Src/main.c    **** 	if (hcan == &hcan1) {
 684              		.loc 1 522 2 is_stmt 1 view .LVU174
 685              		.loc 1 522 5 is_stmt 0 view .LVU175
 686 0002 054B     		ldr	r3, .L36
 687 0004 8342     		cmp	r3, r0
 688 0006 00D0     		beq	.L35
 689              	.LVL33:
 690              	.L32:
 523:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"rx on FIFO1\r\n",
 524:Src/main.c    **** 						  strlen("rx on FIFO1\r\n"), 10);
 525:Src/main.c    **** 	}
 526:Src/main.c    **** }
 691              		.loc 1 526 1 view .LVU176
 692 0008 08BD     		pop	{r3, pc}
 693              	.LVL34:
 694              	.L35:
 523:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"rx on FIFO1\r\n",
 695              		.loc 1 523 3 is_stmt 1 view .LVU177
 696 000a 0A23     		movs	r3, #10
 697 000c 0D22     		movs	r2, #13
 698 000e 0349     		ldr	r1, .L36+4
ARM GAS  /tmp/ccj1YXAy.s 			page 24


 699 0010 0348     		ldr	r0, .L36+8
 700              	.LVL35:
 523:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"rx on FIFO1\r\n",
 701              		.loc 1 523 3 is_stmt 0 view .LVU178
 702 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 703              	.LVL36:
 704              		.loc 1 526 1 view .LVU179
 705 0016 F7E7     		b	.L32
 706              	.L37:
 707              		.align	2
 708              	.L36:
 709 0018 00000000 		.word	hcan1
 710 001c 00000000 		.word	.LC1
 711 0020 00000000 		.word	huart3
 712              		.cfi_endproc
 713              	.LFE154:
 715              		.section	.rodata.HAL_CAN_RxFifo0FullCallback.str1.4,"aMS",%progbits,1
 716              		.align	2
 717              	.LC2:
 718 0000 4649464F 		.ascii	"FIFO0 FULL\015\012\000"
 718      30204655 
 718      4C4C0D0A 
 718      00
 719              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 720              		.align	1
 721              		.global	HAL_CAN_RxFifo0FullCallback
 722              		.syntax unified
 723              		.thumb
 724              		.thumb_func
 725              		.fpu fpv5-d16
 727              	HAL_CAN_RxFifo0FullCallback:
 728              	.LVL37:
 729              	.LFB155:
 527:Src/main.c    **** 
 528:Src/main.c    **** void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan) {
 730              		.loc 1 528 59 is_stmt 1 view -0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              		.loc 1 528 59 is_stmt 0 view .LVU181
 735 0000 08B5     		push	{r3, lr}
 736              	.LCFI10:
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 3, -8
 739              		.cfi_offset 14, -4
 529:Src/main.c    **** 	if (hcan == &hcan1) {
 740              		.loc 1 529 2 is_stmt 1 view .LVU182
 741              		.loc 1 529 5 is_stmt 0 view .LVU183
 742 0002 054B     		ldr	r3, .L42
 743 0004 8342     		cmp	r3, r0
 744 0006 00D0     		beq	.L41
 745              	.LVL38:
 746              	.L38:
 530:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO0 FULL\r\n",
 531:Src/main.c    **** 						  strlen("FIFO0 FULL\r\n"), 10);
 532:Src/main.c    **** 	}
 533:Src/main.c    **** }
ARM GAS  /tmp/ccj1YXAy.s 			page 25


 747              		.loc 1 533 1 view .LVU184
 748 0008 08BD     		pop	{r3, pc}
 749              	.LVL39:
 750              	.L41:
 530:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO0 FULL\r\n",
 751              		.loc 1 530 3 is_stmt 1 view .LVU185
 752 000a 0A23     		movs	r3, #10
 753 000c 0C22     		movs	r2, #12
 754 000e 0349     		ldr	r1, .L42+4
 755 0010 0348     		ldr	r0, .L42+8
 756              	.LVL40:
 530:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO0 FULL\r\n",
 757              		.loc 1 530 3 is_stmt 0 view .LVU186
 758 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 759              	.LVL41:
 760              		.loc 1 533 1 view .LVU187
 761 0016 F7E7     		b	.L38
 762              	.L43:
 763              		.align	2
 764              	.L42:
 765 0018 00000000 		.word	hcan1
 766 001c 00000000 		.word	.LC2
 767 0020 00000000 		.word	huart3
 768              		.cfi_endproc
 769              	.LFE155:
 771              		.section	.rodata.HAL_CAN_RxFifo1FullCallback.str1.4,"aMS",%progbits,1
 772              		.align	2
 773              	.LC3:
 774 0000 4649464F 		.ascii	"FIFO1 FULL\015\012\000"
 774      31204655 
 774      4C4C0D0A 
 774      00
 775              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 776              		.align	1
 777              		.global	HAL_CAN_RxFifo1FullCallback
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 781              		.fpu fpv5-d16
 783              	HAL_CAN_RxFifo1FullCallback:
 784              	.LVL42:
 785              	.LFB156:
 534:Src/main.c    **** void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan) {
 786              		.loc 1 534 59 is_stmt 1 view -0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              		.loc 1 534 59 is_stmt 0 view .LVU189
 791 0000 08B5     		push	{r3, lr}
 792              	.LCFI11:
 793              		.cfi_def_cfa_offset 8
 794              		.cfi_offset 3, -8
 795              		.cfi_offset 14, -4
 535:Src/main.c    **** 	if (hcan == &hcan1) {
 796              		.loc 1 535 2 is_stmt 1 view .LVU190
 797              		.loc 1 535 5 is_stmt 0 view .LVU191
 798 0002 054B     		ldr	r3, .L48
ARM GAS  /tmp/ccj1YXAy.s 			page 26


 799 0004 8342     		cmp	r3, r0
 800 0006 00D0     		beq	.L47
 801              	.LVL43:
 802              	.L44:
 536:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO1 FULL\r\n",
 537:Src/main.c    **** 						  strlen("FIFO1 FULL\r\n"), 10);
 538:Src/main.c    **** 	}
 539:Src/main.c    **** }
 803              		.loc 1 539 1 view .LVU192
 804 0008 08BD     		pop	{r3, pc}
 805              	.LVL44:
 806              	.L47:
 536:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO1 FULL\r\n",
 807              		.loc 1 536 3 is_stmt 1 view .LVU193
 808 000a 0A23     		movs	r3, #10
 809 000c 0C22     		movs	r2, #12
 810 000e 0349     		ldr	r1, .L48+4
 811 0010 0348     		ldr	r0, .L48+8
 812              	.LVL45:
 536:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO1 FULL\r\n",
 813              		.loc 1 536 3 is_stmt 0 view .LVU194
 814 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 815              	.LVL46:
 816              		.loc 1 539 1 view .LVU195
 817 0016 F7E7     		b	.L44
 818              	.L49:
 819              		.align	2
 820              	.L48:
 821 0018 00000000 		.word	hcan1
 822 001c 00000000 		.word	.LC3
 823 0020 00000000 		.word	huart3
 824              		.cfi_endproc
 825              	.LFE156:
 827              		.section	.rodata.HAL_CAN_TxMailbox0CompleteCallback.str1.4,"aMS",%progbits,1
 828              		.align	2
 829              	.LC4:
 830 0000 6D62303A 		.ascii	"mb0: %d\015\012\000"
 830      2025640D 
 830      0A00
 831 000a 0000     		.align	2
 832              	.LC5:
 833 000c 68696768 		.ascii	"high\015\012\000"
 833      0D0A00
 834              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 835              		.align	1
 836              		.global	HAL_CAN_TxMailbox0CompleteCallback
 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 840              		.fpu fpv5-d16
 842              	HAL_CAN_TxMailbox0CompleteCallback:
 843              	.LVL47:
 844              	.LFB157:
 540:Src/main.c    **** 
 541:Src/main.c    **** void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan) {
 845              		.loc 1 541 66 is_stmt 1 view -0
 846              		.cfi_startproc
ARM GAS  /tmp/ccj1YXAy.s 			page 27


 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		.loc 1 541 66 is_stmt 0 view .LVU197
 850 0000 38B5     		push	{r3, r4, r5, lr}
 851              	.LCFI12:
 852              		.cfi_def_cfa_offset 16
 853              		.cfi_offset 3, -16
 854              		.cfi_offset 4, -12
 855              		.cfi_offset 5, -8
 856              		.cfi_offset 14, -4
 857 0002 0446     		mov	r4, r0
 542:Src/main.c    **** 	sprintf(txt, "mb0: %d\r\n", (int)can1.idBck);
 858              		.loc 1 542 2 is_stmt 1 view .LVU198
 859 0004 184D     		ldr	r5, .L55
 860 0006 194B     		ldr	r3, .L55+4
 861 0008 9A6B     		ldr	r2, [r3, #56]
 862 000a 1949     		ldr	r1, .L55+8
 863 000c 2846     		mov	r0, r5
 864              	.LVL48:
 865              		.loc 1 542 2 is_stmt 0 view .LVU199
 866 000e FFF7FEFF 		bl	sprintf
 867              	.LVL49:
 543:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t *)(txt), strlen(txt), 10);
 868              		.loc 1 543 2 is_stmt 1 view .LVU200
 869              		.loc 1 543 47 is_stmt 0 view .LVU201
 870 0012 2846     		mov	r0, r5
 871 0014 FFF7FEFF 		bl	strlen
 872              	.LVL50:
 873              		.loc 1 543 2 view .LVU202
 874 0018 0A23     		movs	r3, #10
 875 001a 82B2     		uxth	r2, r0
 876 001c 2946     		mov	r1, r5
 877 001e 1548     		ldr	r0, .L55+12
 878 0020 FFF7FEFF 		bl	HAL_UART_Transmit
 879              	.LVL51:
 544:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 880              		.loc 1 544 2 is_stmt 1 view .LVU203
 881 0024 0121     		movs	r1, #1
 882 0026 1448     		ldr	r0, .L55+16
 883 0028 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 884              	.LVL52:
 545:Src/main.c    **** 	if (hcan == &hcan1) {
 885              		.loc 1 545 2 view .LVU204
 886              		.loc 1 545 5 is_stmt 0 view .LVU205
 887 002c 134B     		ldr	r3, .L55+20
 888 002e 9C42     		cmp	r4, r3
 889 0030 00D0     		beq	.L54
 890              	.L50:
 546:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 547:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 548:Src/main.c    **** 				// TODO: implementare errore
 549:Src/main.c    **** 			} else {
 550:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)("high\r\n"),
 551:Src/main.c    **** 								  strlen("high\r\n"), 10);
 552:Src/main.c    **** 			}
 553:Src/main.c    **** 		} else if (fifoTxDataCAN_normal_pop(&can1)) {
 554:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
ARM GAS  /tmp/ccj1YXAy.s 			page 28


 555:Src/main.c    **** 			// strlen("Prendo dalla fifo\r\n"), 10);
 556:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 557:Src/main.c    **** 				// TODO: implementare errore
 558:Src/main.c    **** 			}
 559:Src/main.c    **** 		} else {
 560:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"),
 561:Src/main.c    **** 			// strlen("Fifo vuota\r\n"), 10);
 562:Src/main.c    **** 		}
 563:Src/main.c    **** 	} /*else{
 564:Src/main.c    **** 	 HAL_UART_Transmit(&huart3,(uint8_t*)("Messaggio trasmesso\r\n"),
 565:Src/main.c    **** 	 strlen("Messaggio trasmesso\r\n"), 10);
 566:Src/main.c    **** 		 //HAL_GPIO_TogglePin(USER_LED_4_GPIO_Port, USER_LED_4_Pin);
 567:Src/main.c    **** 		 fifoDataType fifodata;
 568:Src/main.c    **** 		 if(fifoTxDataCAN3_high_pop(&fifoCAN3, &fifodata)){
 569:Src/main.c    **** 			 for(int i = 0; i < 8; i++){
 570:Src/main.c    **** 				 can3.dataTx[i] = fifodata.data[i];
 571:Src/main.c    **** 			 }
 572:Src/main.c    **** 			 if(CAN_Send_IT(&can3, fifodata.id) == 0){
 573:Src/main.c    **** 				 //TODO: implementare errore
 574:Src/main.c    **** 			 }
 575:Src/main.c    **** 		 }else if(fifoTxDataCAN3_normal_pop(&fifoCAN3, &fifodata)){
 576:Src/main.c    **** 			 HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 577:Src/main.c    **** 	 strlen("Prendo dalla fifo\r\n"), 10); for(int i = 0; i < 8; i++){
 578:Src/main.c    **** 				 can3.dataTx[i] = fifodata.data[i];
 579:Src/main.c    **** 			 }
 580:Src/main.c    **** 			 if(CAN_Send_IT(&can3, fifodata.id) == 0){
 581:Src/main.c    **** 				 //TODO: implementare errore
 582:Src/main.c    **** 			 }
 583:Src/main.c    **** 		 }else{
 584:Src/main.c    **** 			 //TODO: riattivare interrupt
 585:Src/main.c    **** 			 HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"),
 586:Src/main.c    **** 	 strlen("Fifo vuota\r\n"), 10);
 587:Src/main.c    **** 		 }*/
 588:Src/main.c    **** 	  //}
 589:Src/main.c    **** }
 891              		.loc 1 589 1 view .LVU206
 892 0032 38BD     		pop	{r3, r4, r5, pc}
 893              	.LVL53:
 894              	.L54:
 546:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 895              		.loc 1 546 3 is_stmt 1 view .LVU207
 546:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 896              		.loc 1 546 7 is_stmt 0 view .LVU208
 897 0034 0D48     		ldr	r0, .L55+4
 898 0036 FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 899              	.LVL54:
 546:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 900              		.loc 1 546 6 view .LVU209
 901 003a 58B1     		cbz	r0, .L52
 547:Src/main.c    **** 				// TODO: implementare errore
 902              		.loc 1 547 4 is_stmt 1 view .LVU210
 547:Src/main.c    **** 				// TODO: implementare errore
 903              		.loc 1 547 8 is_stmt 0 view .LVU211
 904 003c 0B48     		ldr	r0, .L55+4
 905 003e FFF7FEFF 		bl	CAN_Send_IT
 906              	.LVL55:
 547:Src/main.c    **** 				// TODO: implementare errore
ARM GAS  /tmp/ccj1YXAy.s 			page 29


 907              		.loc 1 547 7 view .LVU212
 908 0042 0028     		cmp	r0, #0
 909 0044 F5D0     		beq	.L50
 550:Src/main.c    **** 								  strlen("high\r\n"), 10);
 910              		.loc 1 550 5 is_stmt 1 view .LVU213
 911 0046 0A23     		movs	r3, #10
 912 0048 0622     		movs	r2, #6
 913 004a 0D49     		ldr	r1, .L55+24
 914 004c 0948     		ldr	r0, .L55+12
 915 004e FFF7FEFF 		bl	HAL_UART_Transmit
 916              	.LVL56:
 917 0052 EEE7     		b	.L50
 918              	.L52:
 553:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 919              		.loc 1 553 10 view .LVU214
 553:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 920              		.loc 1 553 14 is_stmt 0 view .LVU215
 921 0054 0548     		ldr	r0, .L55+4
 922 0056 FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 923              	.LVL57:
 553:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 924              		.loc 1 553 13 view .LVU216
 925 005a 0028     		cmp	r0, #0
 926 005c E9D0     		beq	.L50
 556:Src/main.c    **** 				// TODO: implementare errore
 927              		.loc 1 556 4 is_stmt 1 view .LVU217
 556:Src/main.c    **** 				// TODO: implementare errore
 928              		.loc 1 556 8 is_stmt 0 view .LVU218
 929 005e 0348     		ldr	r0, .L55+4
 930 0060 FFF7FEFF 		bl	CAN_Send_IT
 931              	.LVL58:
 558:Src/main.c    **** 		} else {
 932              		.loc 1 558 4 is_stmt 1 view .LVU219
 562:Src/main.c    **** 	} /*else{
 933              		.loc 1 562 3 view .LVU220
 934              		.loc 1 589 1 is_stmt 0 view .LVU221
 935 0064 E5E7     		b	.L50
 936              	.L56:
 937 0066 00BF     		.align	2
 938              	.L55:
 939 0068 00000000 		.word	txt
 940 006c 00000000 		.word	can1
 941 0070 00000000 		.word	.LC4
 942 0074 00000000 		.word	huart3
 943 0078 00040240 		.word	1073873920
 944 007c 00000000 		.word	hcan1
 945 0080 0C000000 		.word	.LC5
 946              		.cfi_endproc
 947              	.LFE157:
 949              		.section	.rodata.HAL_CAN_TxMailbox1CompleteCallback.str1.4,"aMS",%progbits,1
 950              		.align	2
 951              	.LC6:
 952 0000 6D62313A 		.ascii	"mb1: %d %d\015\012\000"
 952      20256420 
 952      25640D0A 
 952      00
 953              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
ARM GAS  /tmp/ccj1YXAy.s 			page 30


 954              		.align	1
 955              		.global	HAL_CAN_TxMailbox1CompleteCallback
 956              		.syntax unified
 957              		.thumb
 958              		.thumb_func
 959              		.fpu fpv5-d16
 961              	HAL_CAN_TxMailbox1CompleteCallback:
 962              	.LVL59:
 963              	.LFB158:
 590:Src/main.c    **** void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan) {
 964              		.loc 1 590 66 is_stmt 1 view -0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 0
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968              		.loc 1 590 66 is_stmt 0 view .LVU223
 969 0000 38B5     		push	{r3, r4, r5, lr}
 970              	.LCFI13:
 971              		.cfi_def_cfa_offset 16
 972              		.cfi_offset 3, -16
 973              		.cfi_offset 4, -12
 974              		.cfi_offset 5, -8
 975              		.cfi_offset 14, -4
 976 0002 0446     		mov	r4, r0
 591:Src/main.c    **** 	sprintf(txt, "mb1: %d %d\r\n", can1.fifo.txTailNormal,
 977              		.loc 1 591 2 is_stmt 1 view .LVU224
 978              		.loc 1 591 42 is_stmt 0 view .LVU225
 979 0004 194A     		ldr	r2, .L62
 980              		.loc 1 591 2 view .LVU226
 981 0006 1A4D     		ldr	r5, .L62+4
 982 0008 92F87230 		ldrb	r3, [r2, #114]	@ zero_extendqisi2
 983 000c 92F87320 		ldrb	r2, [r2, #115]	@ zero_extendqisi2
 984 0010 1849     		ldr	r1, .L62+8
 985 0012 2846     		mov	r0, r5
 986              	.LVL60:
 987              		.loc 1 591 2 view .LVU227
 988 0014 FFF7FEFF 		bl	sprintf
 989              	.LVL61:
 592:Src/main.c    **** 			can1.fifo.txHeadNormal);
 593:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t *)(txt), strlen(txt), 10);
 990              		.loc 1 593 2 is_stmt 1 view .LVU228
 991              		.loc 1 593 47 is_stmt 0 view .LVU229
 992 0018 2846     		mov	r0, r5
 993 001a FFF7FEFF 		bl	strlen
 994              	.LVL62:
 995              		.loc 1 593 2 view .LVU230
 996 001e 0A23     		movs	r3, #10
 997 0020 82B2     		uxth	r2, r0
 998 0022 2946     		mov	r1, r5
 999 0024 1448     		ldr	r0, .L62+12
 1000 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 1001              	.LVL63:
 594:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 1002              		.loc 1 594 2 is_stmt 1 view .LVU231
 1003 002a 0121     		movs	r1, #1
 1004 002c 1348     		ldr	r0, .L62+16
 1005 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1006              	.LVL64:
ARM GAS  /tmp/ccj1YXAy.s 			page 31


 595:Src/main.c    **** 	if (hcan == &hcan1) {
 1007              		.loc 1 595 2 view .LVU232
 1008              		.loc 1 595 5 is_stmt 0 view .LVU233
 1009 0032 134B     		ldr	r3, .L62+20
 1010 0034 9C42     		cmp	r4, r3
 1011 0036 00D0     		beq	.L61
 1012              	.L57:
 596:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 597:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 598:Src/main.c    **** 				// TODO: implementare errore
 599:Src/main.c    **** 			} else {
 600:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)("high\r\n"),
 601:Src/main.c    **** 								  strlen("high\r\n"), 10);
 602:Src/main.c    **** 			}
 603:Src/main.c    **** 		} else if (fifoTxDataCAN_normal_pop(&can1)) {
 604:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 605:Src/main.c    **** 			// strlen("Prendo dalla fifo\r\n"), 10);
 606:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 607:Src/main.c    **** 				// TODO: implementare errore
 608:Src/main.c    **** 			}
 609:Src/main.c    **** 		} else {
 610:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"),
 611:Src/main.c    **** 			// strlen("Fifo vuota\r\n"), 10);
 612:Src/main.c    **** 		}
 613:Src/main.c    **** 	}
 614:Src/main.c    **** }
 1013              		.loc 1 614 1 view .LVU234
 1014 0038 38BD     		pop	{r3, r4, r5, pc}
 1015              	.LVL65:
 1016              	.L61:
 596:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1017              		.loc 1 596 3 is_stmt 1 view .LVU235
 596:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1018              		.loc 1 596 7 is_stmt 0 view .LVU236
 1019 003a 0C48     		ldr	r0, .L62
 1020 003c FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 1021              	.LVL66:
 596:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1022              		.loc 1 596 6 view .LVU237
 1023 0040 58B1     		cbz	r0, .L59
 597:Src/main.c    **** 				// TODO: implementare errore
 1024              		.loc 1 597 4 is_stmt 1 view .LVU238
 597:Src/main.c    **** 				// TODO: implementare errore
 1025              		.loc 1 597 8 is_stmt 0 view .LVU239
 1026 0042 0A48     		ldr	r0, .L62
 1027 0044 FFF7FEFF 		bl	CAN_Send_IT
 1028              	.LVL67:
 597:Src/main.c    **** 				// TODO: implementare errore
 1029              		.loc 1 597 7 view .LVU240
 1030 0048 0028     		cmp	r0, #0
 1031 004a F5D0     		beq	.L57
 600:Src/main.c    **** 								  strlen("high\r\n"), 10);
 1032              		.loc 1 600 5 is_stmt 1 view .LVU241
 1033 004c 0A23     		movs	r3, #10
 1034 004e 0622     		movs	r2, #6
 1035 0050 0C49     		ldr	r1, .L62+24
 1036 0052 0948     		ldr	r0, .L62+12
ARM GAS  /tmp/ccj1YXAy.s 			page 32


 1037 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 1038              	.LVL68:
 1039 0058 EEE7     		b	.L57
 1040              	.L59:
 603:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1041              		.loc 1 603 10 view .LVU242
 603:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1042              		.loc 1 603 14 is_stmt 0 view .LVU243
 1043 005a 0448     		ldr	r0, .L62
 1044 005c FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 1045              	.LVL69:
 603:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1046              		.loc 1 603 13 view .LVU244
 1047 0060 0028     		cmp	r0, #0
 1048 0062 E9D0     		beq	.L57
 606:Src/main.c    **** 				// TODO: implementare errore
 1049              		.loc 1 606 4 is_stmt 1 view .LVU245
 606:Src/main.c    **** 				// TODO: implementare errore
 1050              		.loc 1 606 8 is_stmt 0 view .LVU246
 1051 0064 0148     		ldr	r0, .L62
 1052 0066 FFF7FEFF 		bl	CAN_Send_IT
 1053              	.LVL70:
 608:Src/main.c    **** 		} else {
 1054              		.loc 1 608 4 is_stmt 1 view .LVU247
 612:Src/main.c    **** 	}
 1055              		.loc 1 612 3 view .LVU248
 1056              		.loc 1 614 1 is_stmt 0 view .LVU249
 1057 006a E5E7     		b	.L57
 1058              	.L63:
 1059              		.align	2
 1060              	.L62:
 1061 006c 00000000 		.word	can1
 1062 0070 00000000 		.word	txt
 1063 0074 00000000 		.word	.LC6
 1064 0078 00000000 		.word	huart3
 1065 007c 00040240 		.word	1073873920
 1066 0080 00000000 		.word	hcan1
 1067 0084 0C000000 		.word	.LC5
 1068              		.cfi_endproc
 1069              	.LFE158:
 1071              		.section	.rodata.HAL_CAN_TxMailbox2CompleteCallback.str1.4,"aMS",%progbits,1
 1072              		.align	2
 1073              	.LC7:
 1074 0000 6D62323A 		.ascii	"mb2: %d %d\015\012\000"
 1074      20256420 
 1074      25640D0A 
 1074      00
 1075              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 1076              		.align	1
 1077              		.global	HAL_CAN_TxMailbox2CompleteCallback
 1078              		.syntax unified
 1079              		.thumb
 1080              		.thumb_func
 1081              		.fpu fpv5-d16
 1083              	HAL_CAN_TxMailbox2CompleteCallback:
 1084              	.LVL71:
 1085              	.LFB159:
ARM GAS  /tmp/ccj1YXAy.s 			page 33


 615:Src/main.c    **** void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan) {
 1086              		.loc 1 615 66 is_stmt 1 view -0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 0
 1089              		@ frame_needed = 0, uses_anonymous_args = 0
 1090              		.loc 1 615 66 is_stmt 0 view .LVU251
 1091 0000 38B5     		push	{r3, r4, r5, lr}
 1092              	.LCFI14:
 1093              		.cfi_def_cfa_offset 16
 1094              		.cfi_offset 3, -16
 1095              		.cfi_offset 4, -12
 1096              		.cfi_offset 5, -8
 1097              		.cfi_offset 14, -4
 1098 0002 0446     		mov	r4, r0
 616:Src/main.c    **** 	sprintf(txt, "mb2: %d %d\r\n", can1.fifo.txTailNormal,
 1099              		.loc 1 616 2 is_stmt 1 view .LVU252
 1100              		.loc 1 616 42 is_stmt 0 view .LVU253
 1101 0004 194A     		ldr	r2, .L69
 1102              		.loc 1 616 2 view .LVU254
 1103 0006 1A4D     		ldr	r5, .L69+4
 1104 0008 92F87230 		ldrb	r3, [r2, #114]	@ zero_extendqisi2
 1105 000c 92F87320 		ldrb	r2, [r2, #115]	@ zero_extendqisi2
 1106 0010 1849     		ldr	r1, .L69+8
 1107 0012 2846     		mov	r0, r5
 1108              	.LVL72:
 1109              		.loc 1 616 2 view .LVU255
 1110 0014 FFF7FEFF 		bl	sprintf
 1111              	.LVL73:
 617:Src/main.c    **** 			can1.fifo.txHeadNormal);
 618:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t *)(txt), strlen(txt), 10);
 1112              		.loc 1 618 2 is_stmt 1 view .LVU256
 1113              		.loc 1 618 47 is_stmt 0 view .LVU257
 1114 0018 2846     		mov	r0, r5
 1115 001a FFF7FEFF 		bl	strlen
 1116              	.LVL74:
 1117              		.loc 1 618 2 view .LVU258
 1118 001e 0A23     		movs	r3, #10
 1119 0020 82B2     		uxth	r2, r0
 1120 0022 2946     		mov	r1, r5
 1121 0024 1448     		ldr	r0, .L69+12
 1122 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 1123              	.LVL75:
 619:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 1124              		.loc 1 619 2 is_stmt 1 view .LVU259
 1125 002a 0121     		movs	r1, #1
 1126 002c 1348     		ldr	r0, .L69+16
 1127 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1128              	.LVL76:
 620:Src/main.c    **** 	if (hcan == &hcan1) {
 1129              		.loc 1 620 2 view .LVU260
 1130              		.loc 1 620 5 is_stmt 0 view .LVU261
 1131 0032 134B     		ldr	r3, .L69+20
 1132 0034 9C42     		cmp	r4, r3
 1133 0036 00D0     		beq	.L68
 1134              	.L64:
 621:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 622:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
ARM GAS  /tmp/ccj1YXAy.s 			page 34


 623:Src/main.c    **** 				// TODO: implementare errore
 624:Src/main.c    **** 			} else {
 625:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)("high\r\n"),
 626:Src/main.c    **** 								  strlen("high\r\n"), 10);
 627:Src/main.c    **** 			}
 628:Src/main.c    **** 		} else if (fifoTxDataCAN_normal_pop(&can1)) {
 629:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 630:Src/main.c    **** 			// strlen("Prendo dalla fifo\r\n"), 10);
 631:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 632:Src/main.c    **** 				// TODO: implementare errore
 633:Src/main.c    **** 			}
 634:Src/main.c    **** 		} else {
 635:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"),
 636:Src/main.c    **** 			// strlen("Fifo vuota\r\n"), 10);
 637:Src/main.c    **** 		}
 638:Src/main.c    **** 	}
 639:Src/main.c    **** }
 1135              		.loc 1 639 1 view .LVU262
 1136 0038 38BD     		pop	{r3, r4, r5, pc}
 1137              	.LVL77:
 1138              	.L68:
 621:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1139              		.loc 1 621 3 is_stmt 1 view .LVU263
 621:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1140              		.loc 1 621 7 is_stmt 0 view .LVU264
 1141 003a 0C48     		ldr	r0, .L69
 1142 003c FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 1143              	.LVL78:
 621:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1144              		.loc 1 621 6 view .LVU265
 1145 0040 58B1     		cbz	r0, .L66
 622:Src/main.c    **** 				// TODO: implementare errore
 1146              		.loc 1 622 4 is_stmt 1 view .LVU266
 622:Src/main.c    **** 				// TODO: implementare errore
 1147              		.loc 1 622 8 is_stmt 0 view .LVU267
 1148 0042 0A48     		ldr	r0, .L69
 1149 0044 FFF7FEFF 		bl	CAN_Send_IT
 1150              	.LVL79:
 622:Src/main.c    **** 				// TODO: implementare errore
 1151              		.loc 1 622 7 view .LVU268
 1152 0048 0028     		cmp	r0, #0
 1153 004a F5D0     		beq	.L64
 625:Src/main.c    **** 								  strlen("high\r\n"), 10);
 1154              		.loc 1 625 5 is_stmt 1 view .LVU269
 1155 004c 0A23     		movs	r3, #10
 1156 004e 0622     		movs	r2, #6
 1157 0050 0C49     		ldr	r1, .L69+24
 1158 0052 0948     		ldr	r0, .L69+12
 1159 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 1160              	.LVL80:
 1161 0058 EEE7     		b	.L64
 1162              	.L66:
 628:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1163              		.loc 1 628 10 view .LVU270
 628:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1164              		.loc 1 628 14 is_stmt 0 view .LVU271
 1165 005a 0448     		ldr	r0, .L69
ARM GAS  /tmp/ccj1YXAy.s 			page 35


 1166 005c FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 1167              	.LVL81:
 628:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1168              		.loc 1 628 13 view .LVU272
 1169 0060 0028     		cmp	r0, #0
 1170 0062 E9D0     		beq	.L64
 631:Src/main.c    **** 				// TODO: implementare errore
 1171              		.loc 1 631 4 is_stmt 1 view .LVU273
 631:Src/main.c    **** 				// TODO: implementare errore
 1172              		.loc 1 631 8 is_stmt 0 view .LVU274
 1173 0064 0148     		ldr	r0, .L69
 1174 0066 FFF7FEFF 		bl	CAN_Send_IT
 1175              	.LVL82:
 633:Src/main.c    **** 		} else {
 1176              		.loc 1 633 4 is_stmt 1 view .LVU275
 637:Src/main.c    **** 	}
 1177              		.loc 1 637 3 view .LVU276
 1178              		.loc 1 639 1 is_stmt 0 view .LVU277
 1179 006a E5E7     		b	.L64
 1180              	.L70:
 1181              		.align	2
 1182              	.L69:
 1183 006c 00000000 		.word	can1
 1184 0070 00000000 		.word	txt
 1185 0074 00000000 		.word	.LC7
 1186 0078 00000000 		.word	huart3
 1187 007c 00040240 		.word	1073873920
 1188 0080 00000000 		.word	hcan1
 1189 0084 0C000000 		.word	.LC5
 1190              		.cfi_endproc
 1191              	.LFE159:
 1193              		.section	.rodata.HAL_CAN_ErrorCallback.str1.4,"aMS",%progbits,1
 1194              		.align	2
 1195              	.LC8:
 1196 0000 2D2D2D20 		.ascii	"--- Errore ---: %d\015\012\000"
 1196      4572726F 
 1196      7265202D 
 1196      2D2D3A20 
 1196      25640D0A 
 1197              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 1198              		.align	1
 1199              		.global	HAL_CAN_ErrorCallback
 1200              		.syntax unified
 1201              		.thumb
 1202              		.thumb_func
 1203              		.fpu fpv5-d16
 1205              	HAL_CAN_ErrorCallback:
 1206              	.LVL83:
 1207              	.LFB160:
 640:Src/main.c    **** void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan) {
 1208              		.loc 1 640 53 is_stmt 1 view -0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 0
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212              		.loc 1 640 53 is_stmt 0 view .LVU279
 1213 0000 38B5     		push	{r3, r4, r5, lr}
 1214              	.LCFI15:
ARM GAS  /tmp/ccj1YXAy.s 			page 36


 1215              		.cfi_def_cfa_offset 16
 1216              		.cfi_offset 3, -16
 1217              		.cfi_offset 4, -12
 1218              		.cfi_offset 5, -8
 1219              		.cfi_offset 14, -4
 1220 0002 0446     		mov	r4, r0
 641:Src/main.c    **** 	sprintf(txt, "--- Errore ---: %d\r\n", (int)hcan->ErrorCode);
 1221              		.loc 1 641 2 is_stmt 1 view .LVU280
 1222              		.loc 1 641 50 is_stmt 0 view .LVU281
 1223 0004 426A     		ldr	r2, [r0, #36]
 1224              		.loc 1 641 2 view .LVU282
 1225 0006 0B4D     		ldr	r5, .L75
 1226 0008 0B49     		ldr	r1, .L75+4
 1227 000a 2846     		mov	r0, r5
 1228              	.LVL84:
 1229              		.loc 1 641 2 view .LVU283
 1230 000c FFF7FEFF 		bl	sprintf
 1231              	.LVL85:
 642:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t *)(txt), strlen(txt), 10);
 1232              		.loc 1 642 2 is_stmt 1 view .LVU284
 1233              		.loc 1 642 47 is_stmt 0 view .LVU285
 1234 0010 2846     		mov	r0, r5
 1235 0012 FFF7FEFF 		bl	strlen
 1236              	.LVL86:
 1237              		.loc 1 642 2 view .LVU286
 1238 0016 0A23     		movs	r3, #10
 1239 0018 82B2     		uxth	r2, r0
 1240 001a 2946     		mov	r1, r5
 1241 001c 0748     		ldr	r0, .L75+8
 1242 001e FFF7FEFF 		bl	HAL_UART_Transmit
 1243              	.LVL87:
 643:Src/main.c    **** 	if (hcan == &hcan1) {
 1244              		.loc 1 643 2 is_stmt 1 view .LVU287
 1245              		.loc 1 643 5 is_stmt 0 view .LVU288
 1246 0022 074B     		ldr	r3, .L75+12
 1247 0024 9C42     		cmp	r4, r3
 1248 0026 00D0     		beq	.L74
 1249              	.L71:
 644:Src/main.c    **** 		CAN_Send_Bck(&can1);
 645:Src/main.c    **** 	}
 646:Src/main.c    **** }
 1250              		.loc 1 646 1 view .LVU289
 1251 0028 38BD     		pop	{r3, r4, r5, pc}
 1252              	.LVL88:
 1253              	.L74:
 644:Src/main.c    **** 		CAN_Send_Bck(&can1);
 1254              		.loc 1 644 3 is_stmt 1 view .LVU290
 1255 002a 0648     		ldr	r0, .L75+16
 1256 002c FFF7FEFF 		bl	CAN_Send_Bck
 1257              	.LVL89:
 1258              		.loc 1 646 1 is_stmt 0 view .LVU291
 1259 0030 FAE7     		b	.L71
 1260              	.L76:
 1261 0032 00BF     		.align	2
 1262              	.L75:
 1263 0034 00000000 		.word	txt
 1264 0038 00000000 		.word	.LC8
ARM GAS  /tmp/ccj1YXAy.s 			page 37


 1265 003c 00000000 		.word	huart3
 1266 0040 00000000 		.word	hcan1
 1267 0044 00000000 		.word	can1
 1268              		.cfi_endproc
 1269              	.LFE160:
 1271              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1272              		.align	1
 1273              		.global	HAL_UART_RxCpltCallback
 1274              		.syntax unified
 1275              		.thumb
 1276              		.thumb_func
 1277              		.fpu fpv5-d16
 1279              	HAL_UART_RxCpltCallback:
 1280              	.LVL90:
 1281              	.LFB161:
 647:Src/main.c    **** 
 648:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 1282              		.loc 1 648 57 is_stmt 1 view -0
 1283              		.cfi_startproc
 1284              		@ args = 0, pretend = 0, frame = 0
 1285              		@ frame_needed = 0, uses_anonymous_args = 0
 1286              		.loc 1 648 57 is_stmt 0 view .LVU293
 1287 0000 08B5     		push	{r3, lr}
 1288              	.LCFI16:
 1289              		.cfi_def_cfa_offset 8
 1290              		.cfi_offset 3, -8
 1291              		.cfi_offset 14, -4
 649:Src/main.c    **** 	if (huart == &huart3) {
 1292              		.loc 1 649 2 is_stmt 1 view .LVU294
 1293              		.loc 1 649 5 is_stmt 0 view .LVU295
 1294 0002 174B     		ldr	r3, .L84
 1295 0004 8342     		cmp	r3, r0
 1296 0006 00D0     		beq	.L83
 1297              	.LVL91:
 1298              	.L77:
 650:Src/main.c    **** 		if ((debug_rx[debug_rx_count] == '\r') |
 651:Src/main.c    **** 			(debug_rx[debug_rx_count] == '\n')) {
 652:Src/main.c    **** 			debug_msg_arrived = 1;		   // set flag
 653:Src/main.c    **** 			debug_rx[debug_rx_count] = 0;  // set end of the string
 654:Src/main.c    **** 			debug_rx_count = 0;			   // reset counter
 655:Src/main.c    **** 		} else {
 656:Src/main.c    **** 			if (debug_rx_count == MAX_DEBUG_RX_L) {
 657:Src/main.c    **** 				// overflow
 658:Src/main.c    **** 				debug_rx_count = 0;  // reset counter for overflow
 659:Src/main.c    **** 			} else {
 660:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)&debug_rx[debug_rx_count],1, 10);  // retransmit char
 661:Src/main.c    **** 				debug_rx_count++;
 662:Src/main.c    **** 			}
 663:Src/main.c    **** 		}
 664:Src/main.c    **** 		HAL_UART_Receive_IT(&huart3, (uint8_t *)&debug_rx[debug_rx_count], 1);  // activate rx interrupt 
 665:Src/main.c    **** 	}
 666:Src/main.c    **** }
 1299              		.loc 1 666 1 view .LVU296
 1300 0008 08BD     		pop	{r3, pc}
 1301              	.LVL92:
 1302              	.L83:
 650:Src/main.c    **** 		if ((debug_rx[debug_rx_count] == '\r') |
ARM GAS  /tmp/ccj1YXAy.s 			page 38


 1303              		.loc 1 650 3 is_stmt 1 view .LVU297
 650:Src/main.c    **** 		if ((debug_rx[debug_rx_count] == '\r') |
 1304              		.loc 1 650 16 is_stmt 0 view .LVU298
 1305 000a 164B     		ldr	r3, .L84+4
 1306 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1307 000e 164B     		ldr	r3, .L84+8
 1308 0010 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 650:Src/main.c    **** 		if ((debug_rx[debug_rx_count] == '\r') |
 1309              		.loc 1 650 6 view .LVU299
 1310 0012 0A2B     		cmp	r3, #10
 1311 0014 18BF     		it	ne
 1312 0016 0D2B     		cmpne	r3, #13
 1313 0018 10D1     		bne	.L79
 652:Src/main.c    **** 			debug_rx[debug_rx_count] = 0;  // set end of the string
 1314              		.loc 1 652 4 is_stmt 1 view .LVU300
 652:Src/main.c    **** 			debug_rx[debug_rx_count] = 0;  // set end of the string
 1315              		.loc 1 652 22 is_stmt 0 view .LVU301
 1316 001a 144B     		ldr	r3, .L84+12
 1317 001c 0122     		movs	r2, #1
 1318 001e 1A70     		strb	r2, [r3]
 653:Src/main.c    **** 			debug_rx_count = 0;			   // reset counter
 1319              		.loc 1 653 4 is_stmt 1 view .LVU302
 653:Src/main.c    **** 			debug_rx_count = 0;			   // reset counter
 1320              		.loc 1 653 29 is_stmt 0 view .LVU303
 1321 0020 0023     		movs	r3, #0
 1322 0022 114A     		ldr	r2, .L84+8
 1323 0024 5354     		strb	r3, [r2, r1]
 654:Src/main.c    **** 		} else {
 1324              		.loc 1 654 4 is_stmt 1 view .LVU304
 654:Src/main.c    **** 		} else {
 1325              		.loc 1 654 19 is_stmt 0 view .LVU305
 1326 0026 0F4A     		ldr	r2, .L84+4
 1327 0028 1370     		strb	r3, [r2]
 1328              	.LVL93:
 1329              	.L80:
 664:Src/main.c    **** 	}
 1330              		.loc 1 664 3 is_stmt 1 view .LVU306
 664:Src/main.c    **** 	}
 1331              		.loc 1 664 52 is_stmt 0 view .LVU307
 1332 002a 0E4B     		ldr	r3, .L84+4
 1333 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 664:Src/main.c    **** 	}
 1334              		.loc 1 664 3 view .LVU308
 1335 002e 0122     		movs	r2, #1
 1336 0030 0D49     		ldr	r1, .L84+8
 1337 0032 1944     		add	r1, r1, r3
 1338 0034 0A48     		ldr	r0, .L84
 1339 0036 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1340              	.LVL94:
 1341              		.loc 1 666 1 view .LVU309
 1342 003a E5E7     		b	.L77
 1343              	.LVL95:
 1344              	.L79:
 656:Src/main.c    **** 				// overflow
 1345              		.loc 1 656 4 is_stmt 1 view .LVU310
 656:Src/main.c    **** 				// overflow
 1346              		.loc 1 656 7 is_stmt 0 view .LVU311
ARM GAS  /tmp/ccj1YXAy.s 			page 39


 1347 003c 1429     		cmp	r1, #20
 1348 003e 03D1     		bne	.L81
 658:Src/main.c    **** 			} else {
 1349              		.loc 1 658 5 is_stmt 1 view .LVU312
 658:Src/main.c    **** 			} else {
 1350              		.loc 1 658 20 is_stmt 0 view .LVU313
 1351 0040 084B     		ldr	r3, .L84+4
 1352 0042 0022     		movs	r2, #0
 1353 0044 1A70     		strb	r2, [r3]
 1354 0046 F0E7     		b	.L80
 1355              	.L81:
 660:Src/main.c    **** 				debug_rx_count++;
 1356              		.loc 1 660 5 is_stmt 1 view .LVU314
 1357 0048 0A23     		movs	r3, #10
 1358 004a 0122     		movs	r2, #1
 1359 004c 0648     		ldr	r0, .L84+8
 1360              	.LVL96:
 660:Src/main.c    **** 				debug_rx_count++;
 1361              		.loc 1 660 5 is_stmt 0 view .LVU315
 1362 004e 0144     		add	r1, r1, r0
 1363 0050 0348     		ldr	r0, .L84
 1364 0052 FFF7FEFF 		bl	HAL_UART_Transmit
 1365              	.LVL97:
 661:Src/main.c    **** 			}
 1366              		.loc 1 661 5 is_stmt 1 view .LVU316
 661:Src/main.c    **** 			}
 1367              		.loc 1 661 19 is_stmt 0 view .LVU317
 1368 0056 034A     		ldr	r2, .L84+4
 1369 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1370 005a 0133     		adds	r3, r3, #1
 1371 005c 1370     		strb	r3, [r2]
 1372 005e E4E7     		b	.L80
 1373              	.L85:
 1374              		.align	2
 1375              	.L84:
 1376 0060 00000000 		.word	huart3
 1377 0064 00000000 		.word	debug_rx_count
 1378 0068 00000000 		.word	debug_rx
 1379 006c 00000000 		.word	debug_msg_arrived
 1380              		.cfi_endproc
 1381              	.LFE161:
 1383              		.section	.text.Error_Handler,"ax",%progbits
 1384              		.align	1
 1385              		.global	Error_Handler
 1386              		.syntax unified
 1387              		.thumb
 1388              		.thumb_func
 1389              		.fpu fpv5-d16
 1391              	Error_Handler:
 1392              	.LFB162:
 667:Src/main.c    **** /* USER CODE END 4 */
 668:Src/main.c    **** 
 669:Src/main.c    **** /**
 670:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 671:Src/main.c    ****   * @retval None
 672:Src/main.c    ****   */
 673:Src/main.c    **** void Error_Handler(void)
ARM GAS  /tmp/ccj1YXAy.s 			page 40


 674:Src/main.c    **** {
 1393              		.loc 1 674 1 is_stmt 1 view -0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 0
 1396              		@ frame_needed = 0, uses_anonymous_args = 0
 1397 0000 10B5     		push	{r4, lr}
 1398              	.LCFI17:
 1399              		.cfi_def_cfa_offset 8
 1400              		.cfi_offset 4, -8
 1401              		.cfi_offset 14, -4
 675:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 676:Src/main.c    **** 	/* User can add his own implementation to report the HAL error return state
 677:Src/main.c    **** 	 */
 678:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_blue_GPIO_Port, LED_blue_Pin);
 1402              		.loc 1 678 2 view .LVU319
 1403 0002 094C     		ldr	r4, .L88
 1404 0004 8021     		movs	r1, #128
 1405 0006 2046     		mov	r0, r4
 1406 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1407              	.LVL98:
 679:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 1408              		.loc 1 679 2 view .LVU320
 1409 000c 0121     		movs	r1, #1
 1410 000e 2046     		mov	r0, r4
 1411 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1412              	.LVL99:
 680:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_red_GPIO_Port, LED_red_Pin);
 1413              		.loc 1 680 2 view .LVU321
 1414 0014 4FF48041 		mov	r1, #16384
 1415 0018 2046     		mov	r0, r4
 1416 001a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1417              	.LVL100:
 681:Src/main.c    **** 
 682:Src/main.c    **** 	HAL_Delay(100);
 1418              		.loc 1 682 2 view .LVU322
 1419 001e 6420     		movs	r0, #100
 1420 0020 FFF7FEFF 		bl	HAL_Delay
 1421              	.LVL101:
 683:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 684:Src/main.c    **** }
 1422              		.loc 1 684 1 is_stmt 0 view .LVU323
 1423 0024 10BD     		pop	{r4, pc}
 1424              	.L89:
 1425 0026 00BF     		.align	2
 1426              	.L88:
 1427 0028 00040240 		.word	1073873920
 1428              		.cfi_endproc
 1429              	.LFE162:
 1431              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 1432              		.align	1
 1433              		.syntax unified
 1434              		.thumb
 1435              		.thumb_func
 1436              		.fpu fpv5-d16
 1438              	MX_USART3_UART_Init:
 1439              	.LFB150:
 382:Src/main.c    **** 
ARM GAS  /tmp/ccj1YXAy.s 			page 41


 1440              		.loc 1 382 1 is_stmt 1 view -0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 0
 1443              		@ frame_needed = 0, uses_anonymous_args = 0
 1444 0000 08B5     		push	{r3, lr}
 1445              	.LCFI18:
 1446              		.cfi_def_cfa_offset 8
 1447              		.cfi_offset 3, -8
 1448              		.cfi_offset 14, -4
 391:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 1449              		.loc 1 391 3 view .LVU325
 391:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 1450              		.loc 1 391 19 is_stmt 0 view .LVU326
 1451 0002 0B48     		ldr	r0, .L94
 1452 0004 0B4B     		ldr	r3, .L94+4
 1453 0006 0360     		str	r3, [r0]
 392:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1454              		.loc 1 392 3 is_stmt 1 view .LVU327
 392:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1455              		.loc 1 392 24 is_stmt 0 view .LVU328
 1456 0008 0B4B     		ldr	r3, .L94+8
 1457 000a 4360     		str	r3, [r0, #4]
 393:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1458              		.loc 1 393 3 is_stmt 1 view .LVU329
 393:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1459              		.loc 1 393 26 is_stmt 0 view .LVU330
 1460 000c 0023     		movs	r3, #0
 1461 000e 8360     		str	r3, [r0, #8]
 394:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 1462              		.loc 1 394 3 is_stmt 1 view .LVU331
 394:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 1463              		.loc 1 394 24 is_stmt 0 view .LVU332
 1464 0010 C360     		str	r3, [r0, #12]
 395:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1465              		.loc 1 395 3 is_stmt 1 view .LVU333
 395:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1466              		.loc 1 395 22 is_stmt 0 view .LVU334
 1467 0012 0361     		str	r3, [r0, #16]
 396:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1468              		.loc 1 396 3 is_stmt 1 view .LVU335
 396:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1469              		.loc 1 396 20 is_stmt 0 view .LVU336
 1470 0014 0C22     		movs	r2, #12
 1471 0016 4261     		str	r2, [r0, #20]
 397:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1472              		.loc 1 397 3 is_stmt 1 view .LVU337
 397:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1473              		.loc 1 397 25 is_stmt 0 view .LVU338
 1474 0018 8361     		str	r3, [r0, #24]
 398:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1475              		.loc 1 398 3 is_stmt 1 view .LVU339
 398:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1476              		.loc 1 398 28 is_stmt 0 view .LVU340
 1477 001a C361     		str	r3, [r0, #28]
 399:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1478              		.loc 1 399 3 is_stmt 1 view .LVU341
 399:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
ARM GAS  /tmp/ccj1YXAy.s 			page 42


 1479              		.loc 1 399 30 is_stmt 0 view .LVU342
 1480 001c 0362     		str	r3, [r0, #32]
 400:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1481              		.loc 1 400 3 is_stmt 1 view .LVU343
 400:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1482              		.loc 1 400 38 is_stmt 0 view .LVU344
 1483 001e 4362     		str	r3, [r0, #36]
 401:Src/main.c    ****   {
 1484              		.loc 1 401 3 is_stmt 1 view .LVU345
 401:Src/main.c    ****   {
 1485              		.loc 1 401 7 is_stmt 0 view .LVU346
 1486 0020 FFF7FEFF 		bl	HAL_UART_Init
 1487              	.LVL102:
 401:Src/main.c    ****   {
 1488              		.loc 1 401 6 view .LVU347
 1489 0024 00B9     		cbnz	r0, .L93
 1490              	.L90:
 409:Src/main.c    **** 
 1491              		.loc 1 409 1 view .LVU348
 1492 0026 08BD     		pop	{r3, pc}
 1493              	.L93:
 403:Src/main.c    ****   }
 1494              		.loc 1 403 5 is_stmt 1 view .LVU349
 1495 0028 FFF7FEFF 		bl	Error_Handler
 1496              	.LVL103:
 409:Src/main.c    **** 
 1497              		.loc 1 409 1 is_stmt 0 view .LVU350
 1498 002c FBE7     		b	.L90
 1499              	.L95:
 1500 002e 00BF     		.align	2
 1501              	.L94:
 1502 0030 00000000 		.word	huart3
 1503 0034 00480040 		.word	1073760256
 1504 0038 80841E00 		.word	2000000
 1505              		.cfi_endproc
 1506              	.LFE150:
 1508              		.section	.text.MX_CAN1_Init,"ax",%progbits
 1509              		.align	1
 1510              		.syntax unified
 1511              		.thumb
 1512              		.thumb_func
 1513              		.fpu fpv5-d16
 1515              	MX_CAN1_Init:
 1516              	.LFB147:
 272:Src/main.c    **** 
 1517              		.loc 1 272 1 is_stmt 1 view -0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 0
 1520              		@ frame_needed = 0, uses_anonymous_args = 0
 1521 0000 08B5     		push	{r3, lr}
 1522              	.LCFI19:
 1523              		.cfi_def_cfa_offset 8
 1524              		.cfi_offset 3, -8
 1525              		.cfi_offset 14, -4
 281:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 1526              		.loc 1 281 3 view .LVU352
 281:Src/main.c    ****   hcan1.Init.Prescaler = 3;
ARM GAS  /tmp/ccj1YXAy.s 			page 43


 1527              		.loc 1 281 18 is_stmt 0 view .LVU353
 1528 0002 0E48     		ldr	r0, .L100
 1529 0004 0E4B     		ldr	r3, .L100+4
 1530 0006 0360     		str	r3, [r0]
 282:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1531              		.loc 1 282 3 is_stmt 1 view .LVU354
 282:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1532              		.loc 1 282 24 is_stmt 0 view .LVU355
 1533 0008 0323     		movs	r3, #3
 1534 000a 4360     		str	r3, [r0, #4]
 283:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1535              		.loc 1 283 3 is_stmt 1 view .LVU356
 283:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1536              		.loc 1 283 19 is_stmt 0 view .LVU357
 1537 000c 0023     		movs	r3, #0
 1538 000e 8360     		str	r3, [r0, #8]
 284:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 1539              		.loc 1 284 3 is_stmt 1 view .LVU358
 284:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 1540              		.loc 1 284 28 is_stmt 0 view .LVU359
 1541 0010 C360     		str	r3, [r0, #12]
 285:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1542              		.loc 1 285 3 is_stmt 1 view .LVU360
 285:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1543              		.loc 1 285 23 is_stmt 0 view .LVU361
 1544 0012 4FF46022 		mov	r2, #917504
 1545 0016 0261     		str	r2, [r0, #16]
 286:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1546              		.loc 1 286 3 is_stmt 1 view .LVU362
 286:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1547              		.loc 1 286 23 is_stmt 0 view .LVU363
 1548 0018 4FF48012 		mov	r2, #1048576
 1549 001c 4261     		str	r2, [r0, #20]
 287:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 1550              		.loc 1 287 3 is_stmt 1 view .LVU364
 287:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 1551              		.loc 1 287 32 is_stmt 0 view .LVU365
 1552 001e 0376     		strb	r3, [r0, #24]
 288:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 1553              		.loc 1 288 3 is_stmt 1 view .LVU366
 288:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 1554              		.loc 1 288 25 is_stmt 0 view .LVU367
 1555 0020 4376     		strb	r3, [r0, #25]
 289:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 1556              		.loc 1 289 3 is_stmt 1 view .LVU368
 289:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 1557              		.loc 1 289 25 is_stmt 0 view .LVU369
 1558 0022 0122     		movs	r2, #1
 1559 0024 8276     		strb	r2, [r0, #26]
 290:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1560              		.loc 1 290 3 is_stmt 1 view .LVU370
 290:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1561              		.loc 1 290 33 is_stmt 0 view .LVU371
 1562 0026 C276     		strb	r2, [r0, #27]
 291:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1563              		.loc 1 291 3 is_stmt 1 view .LVU372
 291:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
ARM GAS  /tmp/ccj1YXAy.s 			page 44


 1564              		.loc 1 291 32 is_stmt 0 view .LVU373
 1565 0028 0377     		strb	r3, [r0, #28]
 292:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1566              		.loc 1 292 3 is_stmt 1 view .LVU374
 292:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1567              		.loc 1 292 35 is_stmt 0 view .LVU375
 1568 002a 4377     		strb	r3, [r0, #29]
 293:Src/main.c    ****   {
 1569              		.loc 1 293 3 is_stmt 1 view .LVU376
 293:Src/main.c    ****   {
 1570              		.loc 1 293 7 is_stmt 0 view .LVU377
 1571 002c FFF7FEFF 		bl	HAL_CAN_Init
 1572              	.LVL104:
 293:Src/main.c    ****   {
 1573              		.loc 1 293 6 view .LVU378
 1574 0030 00B9     		cbnz	r0, .L99
 1575              	.L96:
 301:Src/main.c    **** 
 1576              		.loc 1 301 1 view .LVU379
 1577 0032 08BD     		pop	{r3, pc}
 1578              	.L99:
 295:Src/main.c    ****   }
 1579              		.loc 1 295 5 is_stmt 1 view .LVU380
 1580 0034 FFF7FEFF 		bl	Error_Handler
 1581              	.LVL105:
 301:Src/main.c    **** 
 1582              		.loc 1 301 1 is_stmt 0 view .LVU381
 1583 0038 FBE7     		b	.L96
 1584              	.L101:
 1585 003a 00BF     		.align	2
 1586              	.L100:
 1587 003c 00000000 		.word	hcan1
 1588 0040 00640040 		.word	1073767424
 1589              		.cfi_endproc
 1590              	.LFE147:
 1592              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1593              		.align	1
 1594              		.syntax unified
 1595              		.thumb
 1596              		.thumb_func
 1597              		.fpu fpv5-d16
 1599              	MX_TIM2_Init:
 1600              	.LFB149:
 337:Src/main.c    **** 
 1601              		.loc 1 337 1 is_stmt 1 view -0
 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 32
 1604              		@ frame_needed = 0, uses_anonymous_args = 0
 1605 0000 00B5     		push	{lr}
 1606              	.LCFI20:
 1607              		.cfi_def_cfa_offset 4
 1608              		.cfi_offset 14, -4
 1609 0002 89B0     		sub	sp, sp, #36
 1610              	.LCFI21:
 1611              		.cfi_def_cfa_offset 40
 343:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1612              		.loc 1 343 3 view .LVU383
ARM GAS  /tmp/ccj1YXAy.s 			page 45


 343:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1613              		.loc 1 343 26 is_stmt 0 view .LVU384
 1614 0004 0023     		movs	r3, #0
 1615 0006 0493     		str	r3, [sp, #16]
 1616 0008 0593     		str	r3, [sp, #20]
 1617 000a 0693     		str	r3, [sp, #24]
 1618 000c 0793     		str	r3, [sp, #28]
 344:Src/main.c    **** 
 1619              		.loc 1 344 3 is_stmt 1 view .LVU385
 344:Src/main.c    **** 
 1620              		.loc 1 344 27 is_stmt 0 view .LVU386
 1621 000e 0193     		str	r3, [sp, #4]
 1622 0010 0293     		str	r3, [sp, #8]
 1623 0012 0393     		str	r3, [sp, #12]
 349:Src/main.c    ****   htim2.Init.Prescaler = 108;
 1624              		.loc 1 349 3 is_stmt 1 view .LVU387
 349:Src/main.c    ****   htim2.Init.Prescaler = 108;
 1625              		.loc 1 349 18 is_stmt 0 view .LVU388
 1626 0014 1548     		ldr	r0, .L110
 1627 0016 4FF08042 		mov	r2, #1073741824
 1628 001a 0260     		str	r2, [r0]
 350:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1629              		.loc 1 350 3 is_stmt 1 view .LVU389
 350:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1630              		.loc 1 350 24 is_stmt 0 view .LVU390
 1631 001c 6C22     		movs	r2, #108
 1632 001e 4260     		str	r2, [r0, #4]
 351:Src/main.c    ****   htim2.Init.Period = 1000;
 1633              		.loc 1 351 3 is_stmt 1 view .LVU391
 351:Src/main.c    ****   htim2.Init.Period = 1000;
 1634              		.loc 1 351 26 is_stmt 0 view .LVU392
 1635 0020 8360     		str	r3, [r0, #8]
 352:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1636              		.loc 1 352 3 is_stmt 1 view .LVU393
 352:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1637              		.loc 1 352 21 is_stmt 0 view .LVU394
 1638 0022 4FF47A72 		mov	r2, #1000
 1639 0026 C260     		str	r2, [r0, #12]
 353:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1640              		.loc 1 353 3 is_stmt 1 view .LVU395
 353:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1641              		.loc 1 353 28 is_stmt 0 view .LVU396
 1642 0028 0361     		str	r3, [r0, #16]
 354:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1643              		.loc 1 354 3 is_stmt 1 view .LVU397
 354:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1644              		.loc 1 354 32 is_stmt 0 view .LVU398
 1645 002a 8361     		str	r3, [r0, #24]
 355:Src/main.c    ****   {
 1646              		.loc 1 355 3 is_stmt 1 view .LVU399
 355:Src/main.c    ****   {
 1647              		.loc 1 355 7 is_stmt 0 view .LVU400
 1648 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1649              	.LVL106:
 355:Src/main.c    ****   {
 1650              		.loc 1 355 6 view .LVU401
 1651 0030 90B9     		cbnz	r0, .L107
ARM GAS  /tmp/ccj1YXAy.s 			page 46


 1652              	.L103:
 359:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1653              		.loc 1 359 3 is_stmt 1 view .LVU402
 359:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1654              		.loc 1 359 34 is_stmt 0 view .LVU403
 1655 0032 4FF48053 		mov	r3, #4096
 1656 0036 0493     		str	r3, [sp, #16]
 360:Src/main.c    ****   {
 1657              		.loc 1 360 3 is_stmt 1 view .LVU404
 360:Src/main.c    ****   {
 1658              		.loc 1 360 7 is_stmt 0 view .LVU405
 1659 0038 04A9     		add	r1, sp, #16
 1660 003a 0C48     		ldr	r0, .L110
 1661 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1662              	.LVL107:
 360:Src/main.c    ****   {
 1663              		.loc 1 360 6 view .LVU406
 1664 0040 68B9     		cbnz	r0, .L108
 1665              	.L104:
 364:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1666              		.loc 1 364 3 is_stmt 1 view .LVU407
 364:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1667              		.loc 1 364 37 is_stmt 0 view .LVU408
 1668 0042 0023     		movs	r3, #0
 1669 0044 0193     		str	r3, [sp, #4]
 365:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1670              		.loc 1 365 3 is_stmt 1 view .LVU409
 365:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1671              		.loc 1 365 33 is_stmt 0 view .LVU410
 1672 0046 0393     		str	r3, [sp, #12]
 366:Src/main.c    ****   {
 1673              		.loc 1 366 3 is_stmt 1 view .LVU411
 366:Src/main.c    ****   {
 1674              		.loc 1 366 7 is_stmt 0 view .LVU412
 1675 0048 01A9     		add	r1, sp, #4
 1676 004a 0848     		ldr	r0, .L110
 1677 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1678              	.LVL108:
 366:Src/main.c    ****   {
 1679              		.loc 1 366 6 view .LVU413
 1680 0050 40B9     		cbnz	r0, .L109
 1681              	.L102:
 374:Src/main.c    **** 
 1682              		.loc 1 374 1 view .LVU414
 1683 0052 09B0     		add	sp, sp, #36
 1684              	.LCFI22:
 1685              		.cfi_remember_state
 1686              		.cfi_def_cfa_offset 4
 1687              		@ sp needed
 1688 0054 5DF804FB 		ldr	pc, [sp], #4
 1689              	.L107:
 1690              	.LCFI23:
 1691              		.cfi_restore_state
 357:Src/main.c    ****   }
 1692              		.loc 1 357 5 is_stmt 1 view .LVU415
 1693 0058 FFF7FEFF 		bl	Error_Handler
 1694              	.LVL109:
ARM GAS  /tmp/ccj1YXAy.s 			page 47


 1695 005c E9E7     		b	.L103
 1696              	.L108:
 362:Src/main.c    ****   }
 1697              		.loc 1 362 5 view .LVU416
 1698 005e FFF7FEFF 		bl	Error_Handler
 1699              	.LVL110:
 1700 0062 EEE7     		b	.L104
 1701              	.L109:
 368:Src/main.c    ****   }
 1702              		.loc 1 368 5 view .LVU417
 1703 0064 FFF7FEFF 		bl	Error_Handler
 1704              	.LVL111:
 374:Src/main.c    **** 
 1705              		.loc 1 374 1 is_stmt 0 view .LVU418
 1706 0068 F3E7     		b	.L102
 1707              	.L111:
 1708 006a 00BF     		.align	2
 1709              	.L110:
 1710 006c 00000000 		.word	htim2
 1711              		.cfi_endproc
 1712              	.LFE149:
 1714              		.section	.text.SystemClock_Config,"ax",%progbits
 1715              		.align	1
 1716              		.global	SystemClock_Config
 1717              		.syntax unified
 1718              		.thumb
 1719              		.thumb_func
 1720              		.fpu fpv5-d16
 1722              	SystemClock_Config:
 1723              	.LFB145:
 183:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1724              		.loc 1 183 1 is_stmt 1 view -0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 224
 1727              		@ frame_needed = 0, uses_anonymous_args = 0
 1728 0000 10B5     		push	{r4, lr}
 1729              	.LCFI24:
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 4, -8
 1732              		.cfi_offset 14, -4
 1733 0002 B8B0     		sub	sp, sp, #224
 1734              	.LCFI25:
 1735              		.cfi_def_cfa_offset 232
 184:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1736              		.loc 1 184 3 view .LVU420
 184:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1737              		.loc 1 184 22 is_stmt 0 view .LVU421
 1738 0004 3422     		movs	r2, #52
 1739 0006 0021     		movs	r1, #0
 1740 0008 2BA8     		add	r0, sp, #172
 1741 000a FFF7FEFF 		bl	memset
 1742              	.LVL112:
 185:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 1743              		.loc 1 185 3 is_stmt 1 view .LVU422
 185:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 1744              		.loc 1 185 22 is_stmt 0 view .LVU423
 1745 000e 0024     		movs	r4, #0
ARM GAS  /tmp/ccj1YXAy.s 			page 48


 1746 0010 2694     		str	r4, [sp, #152]
 1747 0012 2794     		str	r4, [sp, #156]
 1748 0014 2894     		str	r4, [sp, #160]
 1749 0016 2994     		str	r4, [sp, #164]
 1750 0018 2A94     		str	r4, [sp, #168]
 186:Src/main.c    **** 
 1751              		.loc 1 186 3 is_stmt 1 view .LVU424
 186:Src/main.c    **** 
 1752              		.loc 1 186 28 is_stmt 0 view .LVU425
 1753 001a 9022     		movs	r2, #144
 1754 001c 2146     		mov	r1, r4
 1755 001e 02A8     		add	r0, sp, #8
 1756 0020 FFF7FEFF 		bl	memset
 1757              	.LVL113:
 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1758              		.loc 1 190 3 is_stmt 1 view .LVU426
 1759              	.LBB7:
 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1760              		.loc 1 190 3 view .LVU427
 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1761              		.loc 1 190 3 view .LVU428
 1762 0024 294B     		ldr	r3, .L122
 1763 0026 1A6C     		ldr	r2, [r3, #64]
 1764 0028 42F08052 		orr	r2, r2, #268435456
 1765 002c 1A64     		str	r2, [r3, #64]
 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1766              		.loc 1 190 3 view .LVU429
 1767 002e 1B6C     		ldr	r3, [r3, #64]
 1768 0030 03F08053 		and	r3, r3, #268435456
 1769 0034 0093     		str	r3, [sp]
 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1770              		.loc 1 190 3 view .LVU430
 1771 0036 009B     		ldr	r3, [sp]
 1772              	.LBE7:
 190:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1773              		.loc 1 190 3 view .LVU431
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1774              		.loc 1 191 3 view .LVU432
 1775              	.LBB8:
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1776              		.loc 1 191 3 view .LVU433
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1777              		.loc 1 191 3 view .LVU434
 1778 0038 254B     		ldr	r3, .L122+4
 1779 003a 1A68     		ldr	r2, [r3]
 1780 003c 42F44042 		orr	r2, r2, #49152
 1781 0040 1A60     		str	r2, [r3]
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1782              		.loc 1 191 3 view .LVU435
 1783 0042 1B68     		ldr	r3, [r3]
 1784 0044 03F44043 		and	r3, r3, #49152
 1785 0048 0193     		str	r3, [sp, #4]
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1786              		.loc 1 191 3 view .LVU436
 1787 004a 019B     		ldr	r3, [sp, #4]
 1788              	.LBE8:
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/ccj1YXAy.s 			page 49


 1789              		.loc 1 191 3 view .LVU437
 194:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1790              		.loc 1 194 3 view .LVU438
 194:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1791              		.loc 1 194 36 is_stmt 0 view .LVU439
 1792 004c 0223     		movs	r3, #2
 1793 004e 2B93     		str	r3, [sp, #172]
 195:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1794              		.loc 1 195 3 is_stmt 1 view .LVU440
 195:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1795              		.loc 1 195 30 is_stmt 0 view .LVU441
 1796 0050 0122     		movs	r2, #1
 1797 0052 2E92     		str	r2, [sp, #184]
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1798              		.loc 1 196 3 is_stmt 1 view .LVU442
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1799              		.loc 1 196 41 is_stmt 0 view .LVU443
 1800 0054 1022     		movs	r2, #16
 1801 0056 2F92     		str	r2, [sp, #188]
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1802              		.loc 1 197 3 is_stmt 1 view .LVU444
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1803              		.loc 1 197 34 is_stmt 0 view .LVU445
 1804 0058 3193     		str	r3, [sp, #196]
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1805              		.loc 1 198 3 is_stmt 1 view .LVU446
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1806              		.loc 1 198 35 is_stmt 0 view .LVU447
 1807 005a 3294     		str	r4, [sp, #200]
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 1808              		.loc 1 199 3 is_stmt 1 view .LVU448
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 1809              		.loc 1 199 30 is_stmt 0 view .LVU449
 1810 005c 0822     		movs	r2, #8
 1811 005e 3392     		str	r2, [sp, #204]
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1812              		.loc 1 200 3 is_stmt 1 view .LVU450
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1813              		.loc 1 200 30 is_stmt 0 view .LVU451
 1814 0060 D822     		movs	r2, #216
 1815 0062 3492     		str	r2, [sp, #208]
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 1816              		.loc 1 201 3 is_stmt 1 view .LVU452
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 1817              		.loc 1 201 30 is_stmt 0 view .LVU453
 1818 0064 3593     		str	r3, [sp, #212]
 202:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1819              		.loc 1 202 3 is_stmt 1 view .LVU454
 202:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1820              		.loc 1 202 30 is_stmt 0 view .LVU455
 1821 0066 0923     		movs	r3, #9
 1822 0068 3693     		str	r3, [sp, #216]
 203:Src/main.c    ****   {
 1823              		.loc 1 203 3 is_stmt 1 view .LVU456
 203:Src/main.c    ****   {
 1824              		.loc 1 203 7 is_stmt 0 view .LVU457
 1825 006a 2BA8     		add	r0, sp, #172
ARM GAS  /tmp/ccj1YXAy.s 			page 50


 1826 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1827              	.LVL114:
 203:Src/main.c    ****   {
 1828              		.loc 1 203 6 view .LVU458
 1829 0070 F8B9     		cbnz	r0, .L118
 1830              	.L113:
 209:Src/main.c    ****   {
 1831              		.loc 1 209 3 is_stmt 1 view .LVU459
 209:Src/main.c    ****   {
 1832              		.loc 1 209 7 is_stmt 0 view .LVU460
 1833 0072 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 1834              	.LVL115:
 209:Src/main.c    ****   {
 1835              		.loc 1 209 6 view .LVU461
 1836 0076 F8B9     		cbnz	r0, .L119
 1837              	.L114:
 215:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1838              		.loc 1 215 3 is_stmt 1 view .LVU462
 215:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1839              		.loc 1 215 31 is_stmt 0 view .LVU463
 1840 0078 0F23     		movs	r3, #15
 1841 007a 2693     		str	r3, [sp, #152]
 217:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1842              		.loc 1 217 3 is_stmt 1 view .LVU464
 217:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1843              		.loc 1 217 34 is_stmt 0 view .LVU465
 1844 007c 0223     		movs	r3, #2
 1845 007e 2793     		str	r3, [sp, #156]
 218:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1846              		.loc 1 218 3 is_stmt 1 view .LVU466
 218:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1847              		.loc 1 218 35 is_stmt 0 view .LVU467
 1848 0080 0023     		movs	r3, #0
 1849 0082 2893     		str	r3, [sp, #160]
 219:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1850              		.loc 1 219 3 is_stmt 1 view .LVU468
 219:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1851              		.loc 1 219 36 is_stmt 0 view .LVU469
 1852 0084 4FF4A053 		mov	r3, #5120
 1853 0088 2993     		str	r3, [sp, #164]
 220:Src/main.c    **** 
 1854              		.loc 1 220 3 is_stmt 1 view .LVU470
 220:Src/main.c    **** 
 1855              		.loc 1 220 36 is_stmt 0 view .LVU471
 1856 008a 4FF48053 		mov	r3, #4096
 1857 008e 2A93     		str	r3, [sp, #168]
 222:Src/main.c    ****   {
 1858              		.loc 1 222 3 is_stmt 1 view .LVU472
 222:Src/main.c    ****   {
 1859              		.loc 1 222 7 is_stmt 0 view .LVU473
 1860 0090 0721     		movs	r1, #7
 1861 0092 26A8     		add	r0, sp, #152
 1862 0094 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1863              	.LVL116:
 222:Src/main.c    ****   {
 1864              		.loc 1 222 6 view .LVU474
 1865 0098 88B9     		cbnz	r0, .L120
ARM GAS  /tmp/ccj1YXAy.s 			page 51


 1866              	.L115:
 226:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 1867              		.loc 1 226 3 is_stmt 1 view .LVU475
 226:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 1868              		.loc 1 226 44 is_stmt 0 view .LVU476
 1869 009a 0E4B     		ldr	r3, .L122+8
 1870 009c 0293     		str	r3, [sp, #8]
 228:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 1871              		.loc 1 228 3 is_stmt 1 view .LVU477
 228:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 1872              		.loc 1 228 44 is_stmt 0 view .LVU478
 1873 009e 0023     		movs	r3, #0
 1874 00a0 1593     		str	r3, [sp, #84]
 229:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 1875              		.loc 1 229 3 is_stmt 1 view .LVU479
 229:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 1876              		.loc 1 229 43 is_stmt 0 view .LVU480
 1877 00a2 2193     		str	r3, [sp, #132]
 230:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1878              		.loc 1 230 3 is_stmt 1 view .LVU481
 230:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1879              		.loc 1 230 44 is_stmt 0 view .LVU482
 1880 00a4 2293     		str	r3, [sp, #136]
 231:Src/main.c    ****   {
 1881              		.loc 1 231 3 is_stmt 1 view .LVU483
 231:Src/main.c    ****   {
 1882              		.loc 1 231 7 is_stmt 0 view .LVU484
 1883 00a6 02A8     		add	r0, sp, #8
 1884 00a8 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1885              	.LVL117:
 231:Src/main.c    ****   {
 1886              		.loc 1 231 6 view .LVU485
 1887 00ac 50B9     		cbnz	r0, .L121
 1888              	.L112:
 235:Src/main.c    **** 
 1889              		.loc 1 235 1 view .LVU486
 1890 00ae 38B0     		add	sp, sp, #224
 1891              	.LCFI26:
 1892              		.cfi_remember_state
 1893              		.cfi_def_cfa_offset 8
 1894              		@ sp needed
 1895 00b0 10BD     		pop	{r4, pc}
 1896              	.L118:
 1897              	.LCFI27:
 1898              		.cfi_restore_state
 205:Src/main.c    ****   }
 1899              		.loc 1 205 5 is_stmt 1 view .LVU487
 1900 00b2 FFF7FEFF 		bl	Error_Handler
 1901              	.LVL118:
 1902 00b6 DCE7     		b	.L113
 1903              	.L119:
 211:Src/main.c    ****   }
 1904              		.loc 1 211 5 view .LVU488
 1905 00b8 FFF7FEFF 		bl	Error_Handler
 1906              	.LVL119:
 1907 00bc DCE7     		b	.L114
 1908              	.L120:
ARM GAS  /tmp/ccj1YXAy.s 			page 52


 224:Src/main.c    ****   }
 1909              		.loc 1 224 5 view .LVU489
 1910 00be FFF7FEFF 		bl	Error_Handler
 1911              	.LVL120:
 1912 00c2 EAE7     		b	.L115
 1913              	.L121:
 233:Src/main.c    ****   }
 1914              		.loc 1 233 5 view .LVU490
 1915 00c4 FFF7FEFF 		bl	Error_Handler
 1916              	.LVL121:
 235:Src/main.c    **** 
 1917              		.loc 1 235 1 is_stmt 0 view .LVU491
 1918 00c8 F1E7     		b	.L112
 1919              	.L123:
 1920 00ca 00BF     		.align	2
 1921              	.L122:
 1922 00cc 00380240 		.word	1073887232
 1923 00d0 00700040 		.word	1073770496
 1924 00d4 0001A000 		.word	10486016
 1925              		.cfi_endproc
 1926              	.LFE145:
 1928              		.section	.text.main,"ax",%progbits
 1929              		.align	1
 1930              		.global	main
 1931              		.syntax unified
 1932              		.thumb
 1933              		.thumb_func
 1934              		.fpu fpv5-d16
 1936              	main:
 1937              	.LFB144:
  91:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1938              		.loc 1 91 1 is_stmt 1 view -0
 1939              		.cfi_startproc
 1940              		@ Volatile: function does not return.
 1941              		@ args = 0, pretend = 0, frame = 0
 1942              		@ frame_needed = 0, uses_anonymous_args = 0
 1943 0000 08B5     		push	{r3, lr}
 1944              	.LCFI28:
 1945              		.cfi_def_cfa_offset 8
 1946              		.cfi_offset 3, -8
 1947              		.cfi_offset 14, -4
 100:Src/main.c    **** 
 1948              		.loc 1 100 3 view .LVU493
 1949 0002 FFF7FEFF 		bl	HAL_Init
 1950              	.LVL122:
 107:Src/main.c    **** 
 1951              		.loc 1 107 3 view .LVU494
 1952 0006 FFF7FEFF 		bl	SystemClock_Config
 1953              	.LVL123:
 114:Src/main.c    ****   MX_SDMMC1_SD_Init();
 1954              		.loc 1 114 3 view .LVU495
 1955 000a FFF7FEFF 		bl	MX_GPIO_Init
 1956              	.LVL124:
 115:Src/main.c    ****   MX_USART3_UART_Init();
 1957              		.loc 1 115 3 view .LVU496
 1958 000e FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 1959              	.LVL125:
ARM GAS  /tmp/ccj1YXAy.s 			page 53


 116:Src/main.c    ****   MX_FATFS_Init();
 1960              		.loc 1 116 3 view .LVU497
 1961 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 1962              	.LVL126:
 117:Src/main.c    ****   MX_CAN1_Init();
 1963              		.loc 1 117 3 view .LVU498
 1964 0016 FFF7FEFF 		bl	MX_FATFS_Init
 1965              	.LVL127:
 118:Src/main.c    ****   MX_TIM2_Init();
 1966              		.loc 1 118 3 view .LVU499
 1967 001a FFF7FEFF 		bl	MX_CAN1_Init
 1968              	.LVL128:
 119:Src/main.c    **** 
 1969              		.loc 1 119 3 view .LVU500
 1970 001e FFF7FEFF 		bl	MX_TIM2_Init
 1971              	.LVL129:
 122:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1972              		.loc 1 122 3 view .LVU501
 1973 0022 FFF7FEFF 		bl	MX_NVIC_Init
 1974              	.LVL130:
 124:Src/main.c    **** 
 1975              		.loc 1 124 2 view .LVU502
 1976 0026 2448     		ldr	r0, .L134
 1977 0028 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1978              	.LVL131:
 126:Src/main.c    **** 	can1.tx_interrupt = CAN1_TX_IRQn;
 1979              		.loc 1 126 2 view .LVU503
 126:Src/main.c    **** 	can1.tx_interrupt = CAN1_TX_IRQn;
 1980              		.loc 1 126 21 is_stmt 0 view .LVU504
 1981 002c 234B     		ldr	r3, .L134+4
 1982 002e 1422     		movs	r2, #20
 1983 0030 83F8982D 		strb	r2, [r3, #3480]
 127:Src/main.c    **** 	can1.hcan = &hcan1;
 1984              		.loc 1 127 2 is_stmt 1 view .LVU505
 127:Src/main.c    **** 	can1.hcan = &hcan1;
 1985              		.loc 1 127 20 is_stmt 0 view .LVU506
 1986 0034 1322     		movs	r2, #19
 1987 0036 83F8992D 		strb	r2, [r3, #3481]
 128:Src/main.c    **** 
 1988              		.loc 1 128 2 is_stmt 1 view .LVU507
 128:Src/main.c    **** 
 1989              		.loc 1 128 12 is_stmt 0 view .LVU508
 1990 003a 214A     		ldr	r2, .L134+8
 1991 003c 1A64     		str	r2, [r3, #64]
 130:Src/main.c    **** 
 1992              		.loc 1 130 2 is_stmt 1 view .LVU509
 1993 003e FFF7FEFF 		bl	can_init
 1994              	.LVL132:
 132:Src/main.c    **** 						1);  // activate rx interrupt for debug
 1995              		.loc 1 132 2 view .LVU510
 132:Src/main.c    **** 						1);  // activate rx interrupt for debug
 1996              		.loc 1 132 51 is_stmt 0 view .LVU511
 1997 0042 204B     		ldr	r3, .L134+12
 1998 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132:Src/main.c    **** 						1);  // activate rx interrupt for debug
 1999              		.loc 1 132 2 view .LVU512
 2000 0046 0122     		movs	r2, #1
ARM GAS  /tmp/ccj1YXAy.s 			page 54


 2001 0048 1F49     		ldr	r1, .L134+16
 2002 004a 1944     		add	r1, r1, r3
 2003 004c 1F48     		ldr	r0, .L134+20
 2004 004e FFF7FEFF 		bl	HAL_UART_Receive_IT
 2005              	.LVL133:
 135:Src/main.c    ****   
 2006              		.loc 1 135 2 is_stmt 1 view .LVU513
 135:Src/main.c    ****   
 2007              		.loc 1 135 16 is_stmt 0 view .LVU514
 2008 0052 1F4B     		ldr	r3, .L134+24
 2009 0054 0022     		movs	r2, #0
 2010 0056 1A70     		strb	r2, [r3]
 137:Src/main.c    **** 
 2011              		.loc 1 137 2 is_stmt 1 view .LVU515
 2012 0058 FFF7FEFF 		bl	init_sd
 2013              	.LVL134:
 2014 005c 05E0     		b	.L125
 2015              	.L126:
 164:Src/main.c    **** 			idle();
 2016              		.loc 1 164 10 view .LVU516
 164:Src/main.c    **** 			idle();
 2017              		.loc 1 164 13 is_stmt 0 view .LVU517
 2018 005e 012B     		cmp	r3, #1
 2019 0060 20D0     		beq	.L131
 166:Src/main.c    **** 			setup();
 2020              		.loc 1 166 10 is_stmt 1 view .LVU518
 166:Src/main.c    **** 			setup();
 2021              		.loc 1 166 13 is_stmt 0 view .LVU519
 2022 0062 022B     		cmp	r3, #2
 2023 0064 21D0     		beq	.L132
 168:Src/main.c    **** 			run();
 2024              		.loc 1 168 10 is_stmt 1 view .LVU520
 168:Src/main.c    **** 			run();
 2025              		.loc 1 168 13 is_stmt 0 view .LVU521
 2026 0066 032B     		cmp	r3, #3
 2027 0068 22D0     		beq	.L133
 2028              	.L125:
 145:Src/main.c    **** 		can1.dataTx[0] = 0;
 2029              		.loc 1 145 2 is_stmt 1 view .LVU522
 146:Src/main.c    **** 		can1.dataTx[1] = 0;
 2030              		.loc 1 146 3 view .LVU523
 146:Src/main.c    **** 		can1.dataTx[1] = 0;
 2031              		.loc 1 146 18 is_stmt 0 view .LVU524
 2032 006a 144A     		ldr	r2, .L134+4
 2033 006c 0023     		movs	r3, #0
 2034 006e 1373     		strb	r3, [r2, #12]
 147:Src/main.c    **** 		can1.dataTx[2] = 0;
 2035              		.loc 1 147 3 is_stmt 1 view .LVU525
 147:Src/main.c    **** 		can1.dataTx[2] = 0;
 2036              		.loc 1 147 18 is_stmt 0 view .LVU526
 2037 0070 5373     		strb	r3, [r2, #13]
 148:Src/main.c    **** 		can1.dataTx[3] = 0;
 2038              		.loc 1 148 3 is_stmt 1 view .LVU527
 148:Src/main.c    **** 		can1.dataTx[3] = 0;
 2039              		.loc 1 148 18 is_stmt 0 view .LVU528
 2040 0072 9373     		strb	r3, [r2, #14]
 149:Src/main.c    **** 		can1.dataTx[4] = counter >> 24;
ARM GAS  /tmp/ccj1YXAy.s 			page 55


 2041              		.loc 1 149 3 is_stmt 1 view .LVU529
 149:Src/main.c    **** 		can1.dataTx[4] = counter >> 24;
 2042              		.loc 1 149 18 is_stmt 0 view .LVU530
 2043 0074 D373     		strb	r3, [r2, #15]
 150:Src/main.c    **** 		can1.dataTx[5] = counter >> 16;
 2044              		.loc 1 150 3 is_stmt 1 view .LVU531
 150:Src/main.c    **** 		can1.dataTx[5] = counter >> 16;
 2045              		.loc 1 150 28 is_stmt 0 view .LVU532
 2046 0076 174B     		ldr	r3, .L134+28
 2047 0078 1B68     		ldr	r3, [r3]
 2048 007a 1916     		asrs	r1, r3, #24
 150:Src/main.c    **** 		can1.dataTx[5] = counter >> 16;
 2049              		.loc 1 150 18 view .LVU533
 2050 007c 1174     		strb	r1, [r2, #16]
 151:Src/main.c    **** 		can1.dataTx[6] = counter >> 8;
 2051              		.loc 1 151 3 is_stmt 1 view .LVU534
 151:Src/main.c    **** 		can1.dataTx[6] = counter >> 8;
 2052              		.loc 1 151 28 is_stmt 0 view .LVU535
 2053 007e 1914     		asrs	r1, r3, #16
 151:Src/main.c    **** 		can1.dataTx[6] = counter >> 8;
 2054              		.loc 1 151 18 view .LVU536
 2055 0080 5174     		strb	r1, [r2, #17]
 152:Src/main.c    **** 		can1.dataTx[7] = counter % 256;
 2056              		.loc 1 152 3 is_stmt 1 view .LVU537
 152:Src/main.c    **** 		can1.dataTx[7] = counter % 256;
 2057              		.loc 1 152 28 is_stmt 0 view .LVU538
 2058 0082 1912     		asrs	r1, r3, #8
 152:Src/main.c    **** 		can1.dataTx[7] = counter % 256;
 2059              		.loc 1 152 18 view .LVU539
 2060 0084 9174     		strb	r1, [r2, #18]
 153:Src/main.c    **** 
 2061              		.loc 1 153 3 is_stmt 1 view .LVU540
 153:Src/main.c    **** 
 2062              		.loc 1 153 28 is_stmt 0 view .LVU541
 2063 0086 5942     		rsbs	r1, r3, #0
 2064 0088 DBB2     		uxtb	r3, r3
 2065 008a C9B2     		uxtb	r1, r1
 2066 008c 58BF     		it	pl
 2067 008e 4B42     		rsbpl	r3, r1, #0
 153:Src/main.c    **** 
 2068              		.loc 1 153 18 view .LVU542
 2069 0090 D374     		strb	r3, [r2, #19]
 155:Src/main.c    **** 
 2070              		.loc 1 155 3 is_stmt 1 view .LVU543
 155:Src/main.c    **** 
 2071              		.loc 1 155 14 is_stmt 0 view .LVU544
 2072 0092 A023     		movs	r3, #160
 2073 0094 D362     		str	r3, [r2, #44]
 162:Src/main.c    **** 			init();
 2074              		.loc 1 162 3 is_stmt 1 view .LVU545
 162:Src/main.c    **** 			init();
 2075              		.loc 1 162 21 is_stmt 0 view .LVU546
 2076 0096 0E4B     		ldr	r3, .L134+24
 2077 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 162:Src/main.c    **** 			init();
 2078              		.loc 1 162 6 view .LVU547
 2079 009a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccj1YXAy.s 			page 56


 2080 009c DFD1     		bne	.L126
 163:Src/main.c    **** 		} else if (current_state == STATE_IDLE) {
 2081              		.loc 1 163 4 is_stmt 1 view .LVU548
 2082 009e FFF7FEFF 		bl	init
 2083              	.LVL135:
 2084 00a2 E2E7     		b	.L125
 2085              	.L131:
 165:Src/main.c    **** 		} else if (current_state == STATE_SETUP) {
 2086              		.loc 1 165 4 view .LVU549
 2087 00a4 FFF7FEFF 		bl	idle
 2088              	.LVL136:
 2089 00a8 DFE7     		b	.L125
 2090              	.L132:
 167:Src/main.c    **** 		} else if (current_state == STATE_RUN) {
 2091              		.loc 1 167 4 view .LVU550
 2092 00aa FFF7FEFF 		bl	setup
 2093              	.LVL137:
 2094 00ae DCE7     		b	.L125
 2095              	.L133:
 169:Src/main.c    **** 		}
 2096              		.loc 1 169 4 view .LVU551
 2097 00b0 FFF7FEFF 		bl	run
 2098              	.LVL138:
 2099 00b4 D9E7     		b	.L125
 2100              	.L135:
 2101 00b6 00BF     		.align	2
 2102              	.L134:
 2103 00b8 00000000 		.word	htim2
 2104 00bc 00000000 		.word	can1
 2105 00c0 00000000 		.word	hcan1
 2106 00c4 00000000 		.word	debug_rx_count
 2107 00c8 00000000 		.word	debug_rx
 2108 00cc 00000000 		.word	huart3
 2109 00d0 00000000 		.word	current_state
 2110 00d4 00000000 		.word	.LANCHOR0
 2111              		.cfi_endproc
 2112              	.LFE144:
 2114              		.global	counter
 2115              		.comm	sFilter,40,4
 2116              		.comm	i_debug,1,1
 2117              		.comm	huart3,128,4
 2118              		.comm	htim2,64,4
 2119              		.comm	hsd1,132,4
 2120              		.comm	hcan1,40,4
 2121              		.comm	current_state,1,1
 2122              		.section	.bss.counter,"aw",%nobits
 2123              		.align	2
 2124              		.set	.LANCHOR0,. + 0
 2127              	counter:
 2128 0000 00000000 		.space	4
 2129              		.text
 2130              	.Letext0:
 2131              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 2132              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2133              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2134              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 2135              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
ARM GAS  /tmp/ccj1YXAy.s 			page 57


 2136              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2137              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2138              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 2139              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 2140              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 2141              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 2142              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 2143              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 2144              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 2145              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 2146              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 2147              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 2148              		.file 19 "Middlewares/Third_Party/FatFs/src/integer.h"
 2149              		.file 20 "/usr/arm-none-eabi/include/sys/lock.h"
 2150              		.file 21 "/usr/arm-none-eabi/include/sys/_types.h"
 2151              		.file 22 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 2152              		.file 23 "/usr/arm-none-eabi/include/sys/reent.h"
 2153              		.file 24 "/usr/arm-none-eabi/include/stdlib.h"
 2154              		.file 25 "Middlewares/Third_Party/FatFs/src/ff.h"
 2155              		.file 26 "Middlewares/Third_Party/FatFs/src/diskio.h"
 2156              		.file 27 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 2157              		.file 28 "Inc/sd_diskio.h"
 2158              		.file 29 "Inc/fatfs.h"
 2159              		.file 30 "Inc/can.h"
 2160              		.file 31 "Inc/global_variables.h"
 2161              		.file 32 "Inc/state.h"
 2162              		.file 33 "/usr/arm-none-eabi/include/stdio.h"
 2163              		.file 34 "/usr/arm-none-eabi/include/string.h"
 2164              		.file 35 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 2165              		.file 36 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 2166              		.file 37 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 2167              		.file 38 "Inc/sd.h"
 2168              		.file 39 "<built-in>"
ARM GAS  /tmp/ccj1YXAy.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccj1YXAy.s:17     .text.MX_SDMMC1_SD_Init:0000000000000000 $t
     /tmp/ccj1YXAy.s:24     .text.MX_SDMMC1_SD_Init:0000000000000000 MX_SDMMC1_SD_Init
     /tmp/ccj1YXAy.s:62     .text.MX_SDMMC1_SD_Init:0000000000000018 $d
                            *COM*:0000000000000084 hsd1
     /tmp/ccj1YXAy.s:68     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccj1YXAy.s:74     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccj1YXAy.s:223    .text.MX_GPIO_Init:00000000000000a4 $d
     /tmp/ccj1YXAy.s:231    .text.MX_NVIC_Init:0000000000000000 $t
     /tmp/ccj1YXAy.s:237    .text.MX_NVIC_Init:0000000000000000 MX_NVIC_Init
     /tmp/ccj1YXAy.s:324    .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:0000000000000000 $d
     /tmp/ccj1YXAy.s:328    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccj1YXAy.s:335    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccj1YXAy.s:546    .text.HAL_TIM_PeriodElapsedCallback:00000000000000ec $d
                            *COM*:0000000000000040 htim2
                            *COM*:0000000000000080 huart3
     /tmp/ccj1YXAy.s:564    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccj1YXAy.s:571    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccj1YXAy.s:653    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000044 $d
                            *COM*:0000000000000028 hcan1
     /tmp/ccj1YXAy.s:660    .rodata.HAL_CAN_RxFifo1MsgPendingCallback.str1.4:0000000000000000 $d
     /tmp/ccj1YXAy.s:664    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/ccj1YXAy.s:671    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/ccj1YXAy.s:709    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000018 $d
     /tmp/ccj1YXAy.s:716    .rodata.HAL_CAN_RxFifo0FullCallback.str1.4:0000000000000000 $d
     /tmp/ccj1YXAy.s:720    .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 $t
     /tmp/ccj1YXAy.s:727    .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 HAL_CAN_RxFifo0FullCallback
     /tmp/ccj1YXAy.s:765    .text.HAL_CAN_RxFifo0FullCallback:0000000000000018 $d
     /tmp/ccj1YXAy.s:772    .rodata.HAL_CAN_RxFifo1FullCallback.str1.4:0000000000000000 $d
     /tmp/ccj1YXAy.s:776    .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 $t
     /tmp/ccj1YXAy.s:783    .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 HAL_CAN_RxFifo1FullCallback
     /tmp/ccj1YXAy.s:821    .text.HAL_CAN_RxFifo1FullCallback:0000000000000018 $d
     /tmp/ccj1YXAy.s:828    .rodata.HAL_CAN_TxMailbox0CompleteCallback.str1.4:0000000000000000 $d
     /tmp/ccj1YXAy.s:835    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 $t
     /tmp/ccj1YXAy.s:842    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 HAL_CAN_TxMailbox0CompleteCallback
     /tmp/ccj1YXAy.s:939    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000068 $d
     /tmp/ccj1YXAy.s:950    .rodata.HAL_CAN_TxMailbox1CompleteCallback.str1.4:0000000000000000 $d
     /tmp/ccj1YXAy.s:954    .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 $t
     /tmp/ccj1YXAy.s:961    .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 HAL_CAN_TxMailbox1CompleteCallback
     /tmp/ccj1YXAy.s:1061   .text.HAL_CAN_TxMailbox1CompleteCallback:000000000000006c $d
     /tmp/ccj1YXAy.s:1072   .rodata.HAL_CAN_TxMailbox2CompleteCallback.str1.4:0000000000000000 $d
     /tmp/ccj1YXAy.s:1076   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 $t
     /tmp/ccj1YXAy.s:1083   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 HAL_CAN_TxMailbox2CompleteCallback
     /tmp/ccj1YXAy.s:1183   .text.HAL_CAN_TxMailbox2CompleteCallback:000000000000006c $d
     /tmp/ccj1YXAy.s:1194   .rodata.HAL_CAN_ErrorCallback.str1.4:0000000000000000 $d
     /tmp/ccj1YXAy.s:1198   .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/ccj1YXAy.s:1205   .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/ccj1YXAy.s:1263   .text.HAL_CAN_ErrorCallback:0000000000000034 $d
     /tmp/ccj1YXAy.s:1272   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccj1YXAy.s:1279   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccj1YXAy.s:1376   .text.HAL_UART_RxCpltCallback:0000000000000060 $d
     /tmp/ccj1YXAy.s:1384   .text.Error_Handler:0000000000000000 $t
     /tmp/ccj1YXAy.s:1391   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccj1YXAy.s:1427   .text.Error_Handler:0000000000000028 $d
     /tmp/ccj1YXAy.s:1432   .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccj1YXAy.s:1438   .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
ARM GAS  /tmp/ccj1YXAy.s 			page 59


     /tmp/ccj1YXAy.s:1502   .text.MX_USART3_UART_Init:0000000000000030 $d
     /tmp/ccj1YXAy.s:1509   .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccj1YXAy.s:1515   .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccj1YXAy.s:1587   .text.MX_CAN1_Init:000000000000003c $d
     /tmp/ccj1YXAy.s:1593   .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccj1YXAy.s:1599   .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccj1YXAy.s:1710   .text.MX_TIM2_Init:000000000000006c $d
     /tmp/ccj1YXAy.s:1715   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccj1YXAy.s:1722   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccj1YXAy.s:1922   .text.SystemClock_Config:00000000000000cc $d
     /tmp/ccj1YXAy.s:1929   .text.main:0000000000000000 $t
     /tmp/ccj1YXAy.s:1936   .text.main:0000000000000000 main
     /tmp/ccj1YXAy.s:2103   .text.main:00000000000000b8 $d
                            *COM*:0000000000000001 current_state
     /tmp/ccj1YXAy.s:2127   .bss.counter:0000000000000000 counter
                            *COM*:0000000000000028 sFilter
                            *COM*:0000000000000001 i_debug
     /tmp/ccj1YXAy.s:2123   .bss.counter:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Transmit
count_ms
count_ms_abs
count_dec
count_inverter
count_imu
count_atc
count_sec
count_min
count_hour
atc_connected
imu_connected
HAL_GPIO_TogglePin
HAL_CAN_GetRxFifoFillLevel
HAL_CAN_GetRxMessage
fifoRxDataCAN_push
can1
sprintf
strlen
fifoTxDataCAN_high_pop
CAN_Send_IT
fifoTxDataCAN_normal_pop
txt
CAN_Send_Bck
HAL_UART_Receive_IT
debug_rx_count
debug_rx
debug_msg_arrived
HAL_Delay
HAL_UART_Init
HAL_CAN_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
ARM GAS  /tmp/ccj1YXAy.s 			page 60


HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_FATFS_Init
HAL_TIM_Base_Start_IT
can_init
init_sd
init
idle
setup
run
