ARM GAS  /tmp/cczspUdn.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_SDMMC1_SD_Init:
  25              	.LFB148:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "fatfs.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include "state.h"
  28:Src/main.c    **** #include "can.h"
  29:Src/main.c    **** #include "global_variables.h"
  30:Src/main.c    **** #include "string.h"
  31:Src/main.c    **** #include "stdio.h"
  32:Src/main.c    **** #include "sd.h"
ARM GAS  /tmp/cczspUdn.s 			page 2


  33:Src/main.c    **** /* USER CODE END Includes */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PTD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PD */
  42:Src/main.c    **** /* USER CODE END PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** CAN_HandleTypeDef hcan1;
  51:Src/main.c    **** 
  52:Src/main.c    **** SD_HandleTypeDef hsd1;
  53:Src/main.c    **** 
  54:Src/main.c    **** TIM_HandleTypeDef htim2;
  55:Src/main.c    **** 
  56:Src/main.c    **** UART_HandleTypeDef huart3;
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** uint8_t i_debug;
  61:Src/main.c    **** extern canStruct can1,can3;
  62:Src/main.c    **** extern fifoPriority fifoPriority_t;
  63:Src/main.c    **** 
  64:Src/main.c    **** CAN_FilterTypeDef sFilter;
  65:Src/main.c    **** 
  66:Src/main.c    **** long int counter = 0;
  67:Src/main.c    **** /* USER CODE END PV */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  70:Src/main.c    **** void SystemClock_Config(void);
  71:Src/main.c    **** static void MX_GPIO_Init(void);
  72:Src/main.c    **** static void MX_SDMMC1_SD_Init(void);
  73:Src/main.c    **** static void MX_USART3_UART_Init(void);
  74:Src/main.c    **** static void MX_CAN1_Init(void);
  75:Src/main.c    **** static void MX_TIM2_Init(void);
  76:Src/main.c    **** static void MX_NVIC_Init(void);
  77:Src/main.c    **** /* USER CODE BEGIN PFP */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* USER CODE END PFP */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  82:Src/main.c    **** /* USER CODE BEGIN 0 */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* USER CODE END 0 */
  85:Src/main.c    **** 
  86:Src/main.c    **** /**
  87:Src/main.c    ****   * @brief  The application entry point.
  88:Src/main.c    ****   * @retval int
  89:Src/main.c    ****   */
ARM GAS  /tmp/cczspUdn.s 			page 3


  90:Src/main.c    **** int main(void)
  91:Src/main.c    **** {
  92:Src/main.c    ****   /* USER CODE BEGIN 1 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 1 */
  95:Src/main.c    ****   
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Src/main.c    ****   HAL_Init();
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE BEGIN Init */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE END Init */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Configure the system clock */
 107:Src/main.c    ****   SystemClock_Config();
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END SysInit */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Initialize all configured peripherals */
 114:Src/main.c    ****   MX_GPIO_Init();
 115:Src/main.c    ****   MX_SDMMC1_SD_Init();
 116:Src/main.c    ****   MX_USART3_UART_Init();
 117:Src/main.c    ****   MX_FATFS_Init();
 118:Src/main.c    ****   MX_CAN1_Init();
 119:Src/main.c    ****   MX_TIM2_Init();
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* Initialize interrupts */
 122:Src/main.c    ****   MX_NVIC_Init();
 123:Src/main.c    ****   /* USER CODE BEGIN 2 */
 124:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 125:Src/main.c    **** 
 126:Src/main.c    ****   can1.rx0_interrupt = CAN1_RX0_IRQn;
 127:Src/main.c    ****   can1.tx_interrupt = CAN1_TX_IRQn;
 128:Src/main.c    ****   can1.hcan = &hcan1;
 129:Src/main.c    **** 
 130:Src/main.c    ****   can_init();
 131:Src/main.c    **** 
 132:Src/main.c    ****   HAL_UART_Receive_IT(&huart3,(uint8_t*) &debug_rx[debug_rx_count], 1); //activate rx interrupt for
 133:Src/main.c    **** 
 134:Src/main.c    ****   current_state = STATE_INIT;
 135:Src/main.c    **** 
 136:Src/main.c    ****   init_sd();
 137:Src/main.c    ****   
 138:Src/main.c    ****   /* USER CODE END 2 */
 139:Src/main.c    **** 
 140:Src/main.c    ****   /* Infinite loop */
 141:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 142:Src/main.c    ****   while (1)
 143:Src/main.c    ****   {
 144:Src/main.c    ****     can1.dataTx[0] = 0;
 145:Src/main.c    **** 	  can1.dataTx[1] = 0;
 146:Src/main.c    **** 	  can1.dataTx[2] = 0;
ARM GAS  /tmp/cczspUdn.s 			page 4


 147:Src/main.c    **** 	  can1.dataTx[3] = 0;
 148:Src/main.c    **** 	  can1.dataTx[4] = counter >> 24;
 149:Src/main.c    **** 	  can1.dataTx[5] = counter >> 16;
 150:Src/main.c    **** 	  can1.dataTx[6] = counter >> 8;
 151:Src/main.c    **** 	  can1.dataTx[7] = counter % 256;
 152:Src/main.c    **** 
 153:Src/main.c    **** 	  can1.tx_id = 0xA0;
 154:Src/main.c    **** 
 155:Src/main.c    **** 	  //CAN_Send(&can1, normalPriority);
 156:Src/main.c    **** 	  //HAL_Delay(500);
 157:Src/main.c    **** 
 158:Src/main.c    **** 	  //counter ++;
 159:Src/main.c    **** 
 160:Src/main.c    **** 	  if(current_state == STATE_INIT){
 161:Src/main.c    **** 		  init();
 162:Src/main.c    **** 	  }else if(current_state == STATE_IDLE){
 163:Src/main.c    **** 		  idle();
 164:Src/main.c    **** 	  }else if(current_state == STATE_SETUP){
 165:Src/main.c    **** 		  setup();
 166:Src/main.c    **** 	  }else if(current_state == STATE_RUN){
 167:Src/main.c    **** 		  run();
 168:Src/main.c    **** 	  }
 169:Src/main.c    ****     /* USER CODE END WHILE */
 170:Src/main.c    **** 
 171:Src/main.c    ****     /* USER CODE BEGIN 3 */
 172:Src/main.c    ****   }
 173:Src/main.c    ****   /* USER CODE END 3 */
 174:Src/main.c    **** }
 175:Src/main.c    **** 
 176:Src/main.c    **** /**
 177:Src/main.c    ****   * @brief System Clock Configuration
 178:Src/main.c    ****   * @retval None
 179:Src/main.c    ****   */
 180:Src/main.c    **** void SystemClock_Config(void)
 181:Src/main.c    **** {
 182:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 183:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 184:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 185:Src/main.c    **** 
 186:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 187:Src/main.c    ****   */
 188:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 189:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 190:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 191:Src/main.c    ****   */
 192:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 193:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 194:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 201:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 202:Src/main.c    ****   {
 203:Src/main.c    ****     Error_Handler();
ARM GAS  /tmp/cczspUdn.s 			page 5


 204:Src/main.c    ****   }
 205:Src/main.c    ****   /** Activate the Over-Drive mode 
 206:Src/main.c    ****   */
 207:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 208:Src/main.c    ****   {
 209:Src/main.c    ****     Error_Handler();
 210:Src/main.c    ****   }
 211:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 212:Src/main.c    ****   */
 213:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 214:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 215:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 216:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 217:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 218:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 219:Src/main.c    **** 
 220:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 221:Src/main.c    ****   {
 222:Src/main.c    ****     Error_Handler();
 223:Src/main.c    ****   }
 224:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_SDMMC1
 225:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 226:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 227:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 228:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 229:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 230:Src/main.c    ****   {
 231:Src/main.c    ****     Error_Handler();
 232:Src/main.c    ****   }
 233:Src/main.c    **** }
 234:Src/main.c    **** 
 235:Src/main.c    **** /**
 236:Src/main.c    ****   * @brief NVIC Configuration.
 237:Src/main.c    ****   * @retval None
 238:Src/main.c    ****   */
 239:Src/main.c    **** static void MX_NVIC_Init(void)
 240:Src/main.c    **** {
 241:Src/main.c    ****   /* SDMMC1_IRQn interrupt configuration */
 242:Src/main.c    ****   HAL_NVIC_SetPriority(SDMMC1_IRQn, 0, 0);
 243:Src/main.c    ****   HAL_NVIC_EnableIRQ(SDMMC1_IRQn);
 244:Src/main.c    ****   /* USART3_IRQn interrupt configuration */
 245:Src/main.c    ****   HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 246:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART3_IRQn);
 247:Src/main.c    ****   /* CAN1_SCE_IRQn interrupt configuration */
 248:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_SCE_IRQn, 0, 0);
 249:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 250:Src/main.c    ****   /* CAN1_RX1_IRQn interrupt configuration */
 251:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 252:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 253:Src/main.c    ****   /* CAN1_RX0_IRQn interrupt configuration */
 254:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 255:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 256:Src/main.c    ****   /* CAN1_TX_IRQn interrupt configuration */
 257:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_TX_IRQn, 0, 0);
 258:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 259:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 260:Src/main.c    ****   HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
ARM GAS  /tmp/cczspUdn.s 			page 6


 261:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 262:Src/main.c    **** }
 263:Src/main.c    **** 
 264:Src/main.c    **** /**
 265:Src/main.c    ****   * @brief CAN1 Initialization Function
 266:Src/main.c    ****   * @param None
 267:Src/main.c    ****   * @retval None
 268:Src/main.c    ****   */
 269:Src/main.c    **** static void MX_CAN1_Init(void)
 270:Src/main.c    **** {
 271:Src/main.c    **** 
 272:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 0 */
 273:Src/main.c    **** 
 274:Src/main.c    ****   /* USER CODE END CAN1_Init 0 */
 275:Src/main.c    **** 
 276:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 1 */
 277:Src/main.c    **** 
 278:Src/main.c    ****   /* USER CODE END CAN1_Init 1 */
 279:Src/main.c    ****   hcan1.Instance = CAN1;
 280:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 281:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 282:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 283:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 284:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 285:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 286:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 287:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 288:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 289:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 290:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 291:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 292:Src/main.c    ****   {
 293:Src/main.c    ****     Error_Handler();
 294:Src/main.c    ****   }
 295:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 2 */
 296:Src/main.c    **** 
 297:Src/main.c    ****   /* USER CODE END CAN1_Init 2 */
 298:Src/main.c    **** 
 299:Src/main.c    **** }
 300:Src/main.c    **** 
 301:Src/main.c    **** /**
 302:Src/main.c    ****   * @brief SDMMC1 Initialization Function
 303:Src/main.c    ****   * @param None
 304:Src/main.c    ****   * @retval None
 305:Src/main.c    ****   */
 306:Src/main.c    **** static void MX_SDMMC1_SD_Init(void)
 307:Src/main.c    **** {
  27              		.loc 1 307 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 308:Src/main.c    **** 
 309:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 0 */
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* USER CODE END SDMMC1_Init 0 */
 312:Src/main.c    **** 
ARM GAS  /tmp/cczspUdn.s 			page 7


 313:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 1 */
 314:Src/main.c    **** 
 315:Src/main.c    ****   /* USER CODE END SDMMC1_Init 1 */
 316:Src/main.c    ****   hsd1.Instance = SDMMC1;
  32              		.loc 1 316 3 view .LVU1
  33              		.loc 1 316 17 is_stmt 0 view .LVU2
  34 0000 054B     		ldr	r3, .L2
  35 0002 064A     		ldr	r2, .L2+4
  36 0004 1A60     		str	r2, [r3]
 317:Src/main.c    ****   hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  37              		.loc 1 317 3 is_stmt 1 view .LVU3
  38              		.loc 1 317 23 is_stmt 0 view .LVU4
  39 0006 0022     		movs	r2, #0
  40 0008 5A60     		str	r2, [r3, #4]
 318:Src/main.c    ****   hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  41              		.loc 1 318 3 is_stmt 1 view .LVU5
  42              		.loc 1 318 25 is_stmt 0 view .LVU6
  43 000a 9A60     		str	r2, [r3, #8]
 319:Src/main.c    ****   hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  44              		.loc 1 319 3 is_stmt 1 view .LVU7
  45              		.loc 1 319 28 is_stmt 0 view .LVU8
  46 000c DA60     		str	r2, [r3, #12]
 320:Src/main.c    ****   hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
  47              		.loc 1 320 3 is_stmt 1 view .LVU9
  48              		.loc 1 320 21 is_stmt 0 view .LVU10
  49 000e 1A61     		str	r2, [r3, #16]
 321:Src/main.c    ****   hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  50              		.loc 1 321 3 is_stmt 1 view .LVU11
  51              		.loc 1 321 33 is_stmt 0 view .LVU12
  52 0010 5A61     		str	r2, [r3, #20]
 322:Src/main.c    ****   hsd1.Init.ClockDiv = 1;
  53              		.loc 1 322 3 is_stmt 1 view .LVU13
  54              		.loc 1 322 22 is_stmt 0 view .LVU14
  55 0012 0122     		movs	r2, #1
  56 0014 9A61     		str	r2, [r3, #24]
 323:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 2 */
 324:Src/main.c    **** 
 325:Src/main.c    ****   /* USER CODE END SDMMC1_Init 2 */
 326:Src/main.c    **** 
 327:Src/main.c    **** }
  57              		.loc 1 327 1 view .LVU15
  58 0016 7047     		bx	lr
  59              	.L3:
  60              		.align	2
  61              	.L2:
  62 0018 00000000 		.word	hsd1
  63 001c 002C0140 		.word	1073818624
  64              		.cfi_endproc
  65              	.LFE148:
  67              		.section	.text.MX_GPIO_Init,"ax",%progbits
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv5-d16
  74              	MX_GPIO_Init:
  75              	.LFB151:
ARM GAS  /tmp/cczspUdn.s 			page 8


 328:Src/main.c    **** 
 329:Src/main.c    **** /**
 330:Src/main.c    ****   * @brief TIM2 Initialization Function
 331:Src/main.c    ****   * @param None
 332:Src/main.c    ****   * @retval None
 333:Src/main.c    ****   */
 334:Src/main.c    **** static void MX_TIM2_Init(void)
 335:Src/main.c    **** {
 336:Src/main.c    **** 
 337:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 338:Src/main.c    **** 
 339:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 340:Src/main.c    **** 
 341:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 342:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 343:Src/main.c    **** 
 344:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 345:Src/main.c    **** 
 346:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 347:Src/main.c    ****   htim2.Instance = TIM2;
 348:Src/main.c    ****   htim2.Init.Prescaler = 108;
 349:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 350:Src/main.c    ****   htim2.Init.Period = 1000;
 351:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 352:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 353:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 354:Src/main.c    ****   {
 355:Src/main.c    ****     Error_Handler();
 356:Src/main.c    ****   }
 357:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 358:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 359:Src/main.c    ****   {
 360:Src/main.c    ****     Error_Handler();
 361:Src/main.c    ****   }
 362:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 363:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 364:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 365:Src/main.c    ****   {
 366:Src/main.c    ****     Error_Handler();
 367:Src/main.c    ****   }
 368:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 369:Src/main.c    **** 
 370:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 371:Src/main.c    **** 
 372:Src/main.c    **** }
 373:Src/main.c    **** 
 374:Src/main.c    **** /**
 375:Src/main.c    ****   * @brief USART3 Initialization Function
 376:Src/main.c    ****   * @param None
 377:Src/main.c    ****   * @retval None
 378:Src/main.c    ****   */
 379:Src/main.c    **** static void MX_USART3_UART_Init(void)
 380:Src/main.c    **** {
 381:Src/main.c    **** 
 382:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 0 */
 383:Src/main.c    **** 
 384:Src/main.c    ****   /* USER CODE END USART3_Init 0 */
ARM GAS  /tmp/cczspUdn.s 			page 9


 385:Src/main.c    **** 
 386:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 1 */
 387:Src/main.c    **** 
 388:Src/main.c    ****   /* USER CODE END USART3_Init 1 */
 389:Src/main.c    ****   huart3.Instance = USART3;
 390:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 391:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 392:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 393:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 394:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 395:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 396:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 397:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 398:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 399:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 400:Src/main.c    ****   {
 401:Src/main.c    ****     Error_Handler();
 402:Src/main.c    ****   }
 403:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 2 */
 404:Src/main.c    **** 
 405:Src/main.c    ****   /* USER CODE END USART3_Init 2 */
 406:Src/main.c    **** 
 407:Src/main.c    **** }
 408:Src/main.c    **** 
 409:Src/main.c    **** /**
 410:Src/main.c    ****   * @brief GPIO Initialization Function
 411:Src/main.c    ****   * @param None
 412:Src/main.c    ****   * @retval None
 413:Src/main.c    ****   */
 414:Src/main.c    **** static void MX_GPIO_Init(void)
 415:Src/main.c    **** {
  76              		.loc 1 415 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 40
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80 0000 30B5     		push	{r4, r5, lr}
  81              	.LCFI0:
  82              		.cfi_def_cfa_offset 12
  83              		.cfi_offset 4, -12
  84              		.cfi_offset 5, -8
  85              		.cfi_offset 14, -4
  86 0002 8BB0     		sub	sp, sp, #44
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 56
 416:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  89              		.loc 1 416 3 view .LVU17
  90              		.loc 1 416 20 is_stmt 0 view .LVU18
  91 0004 0024     		movs	r4, #0
  92 0006 0594     		str	r4, [sp, #20]
  93 0008 0694     		str	r4, [sp, #24]
  94 000a 0794     		str	r4, [sp, #28]
  95 000c 0894     		str	r4, [sp, #32]
  96 000e 0994     		str	r4, [sp, #36]
 417:Src/main.c    **** 
 418:Src/main.c    ****   /* GPIO Ports Clock Enable */
 419:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  97              		.loc 1 419 3 is_stmt 1 view .LVU19
ARM GAS  /tmp/cczspUdn.s 			page 10


  98              	.LBB2:
  99              		.loc 1 419 3 view .LVU20
 100              		.loc 1 419 3 view .LVU21
 101 0010 204B     		ldr	r3, .L6
 102 0012 1A6B     		ldr	r2, [r3, #48]
 103 0014 42F00102 		orr	r2, r2, #1
 104 0018 1A63     		str	r2, [r3, #48]
 105              		.loc 1 419 3 view .LVU22
 106 001a 1A6B     		ldr	r2, [r3, #48]
 107 001c 02F00102 		and	r2, r2, #1
 108 0020 0192     		str	r2, [sp, #4]
 109              		.loc 1 419 3 view .LVU23
 110 0022 019A     		ldr	r2, [sp, #4]
 111              	.LBE2:
 112              		.loc 1 419 3 view .LVU24
 420:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 113              		.loc 1 420 3 view .LVU25
 114              	.LBB3:
 115              		.loc 1 420 3 view .LVU26
 116              		.loc 1 420 3 view .LVU27
 117 0024 1A6B     		ldr	r2, [r3, #48]
 118 0026 42F00202 		orr	r2, r2, #2
 119 002a 1A63     		str	r2, [r3, #48]
 120              		.loc 1 420 3 view .LVU28
 121 002c 1A6B     		ldr	r2, [r3, #48]
 122 002e 02F00202 		and	r2, r2, #2
 123 0032 0292     		str	r2, [sp, #8]
 124              		.loc 1 420 3 view .LVU29
 125 0034 029A     		ldr	r2, [sp, #8]
 126              	.LBE3:
 127              		.loc 1 420 3 view .LVU30
 421:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 128              		.loc 1 421 3 view .LVU31
 129              	.LBB4:
 130              		.loc 1 421 3 view .LVU32
 131              		.loc 1 421 3 view .LVU33
 132 0036 1A6B     		ldr	r2, [r3, #48]
 133 0038 42F00802 		orr	r2, r2, #8
 134 003c 1A63     		str	r2, [r3, #48]
 135              		.loc 1 421 3 view .LVU34
 136 003e 1A6B     		ldr	r2, [r3, #48]
 137 0040 02F00802 		and	r2, r2, #8
 138 0044 0392     		str	r2, [sp, #12]
 139              		.loc 1 421 3 view .LVU35
 140 0046 039A     		ldr	r2, [sp, #12]
 141              	.LBE4:
 142              		.loc 1 421 3 view .LVU36
 422:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 143              		.loc 1 422 3 view .LVU37
 144              	.LBB5:
 145              		.loc 1 422 3 view .LVU38
 146              		.loc 1 422 3 view .LVU39
 147 0048 1A6B     		ldr	r2, [r3, #48]
 148 004a 42F00402 		orr	r2, r2, #4
 149 004e 1A63     		str	r2, [r3, #48]
 150              		.loc 1 422 3 view .LVU40
 151 0050 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/cczspUdn.s 			page 11


 152 0052 03F00403 		and	r3, r3, #4
 153 0056 0493     		str	r3, [sp, #16]
 154              		.loc 1 422 3 view .LVU41
 155 0058 049B     		ldr	r3, [sp, #16]
 156              	.LBE5:
 157              		.loc 1 422 3 view .LVU42
 423:Src/main.c    **** 
 424:Src/main.c    ****   /*Configure GPIO pin Output Level */
 425:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LED_green_Pin|LED_red_Pin|LED_blue_Pin, GPIO_PIN_RESET);
 158              		.loc 1 425 3 view .LVU43
 159 005a 0F4D     		ldr	r5, .L6+4
 160 005c 2246     		mov	r2, r4
 161 005e 44F28101 		movw	r1, #16513
 162 0062 2846     		mov	r0, r5
 163 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 164              	.LVL0:
 426:Src/main.c    **** 
 427:Src/main.c    ****   /*Configure GPIO pin : SD_detect_Pin */
 428:Src/main.c    ****   GPIO_InitStruct.Pin = SD_detect_Pin;
 165              		.loc 1 428 3 view .LVU44
 166              		.loc 1 428 23 is_stmt 0 view .LVU45
 167 0068 2023     		movs	r3, #32
 168 006a 0593     		str	r3, [sp, #20]
 429:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 169              		.loc 1 429 3 is_stmt 1 view .LVU46
 170              		.loc 1 429 24 is_stmt 0 view .LVU47
 171 006c 0694     		str	r4, [sp, #24]
 430:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 172              		.loc 1 430 3 is_stmt 1 view .LVU48
 173              		.loc 1 430 24 is_stmt 0 view .LVU49
 174 006e 0794     		str	r4, [sp, #28]
 431:Src/main.c    ****   HAL_GPIO_Init(SD_detect_GPIO_Port, &GPIO_InitStruct);
 175              		.loc 1 431 3 is_stmt 1 view .LVU50
 176 0070 05A9     		add	r1, sp, #20
 177 0072 0A48     		ldr	r0, .L6+8
 178 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 179              	.LVL1:
 432:Src/main.c    **** 
 433:Src/main.c    ****   /*Configure GPIO pins : LED_green_Pin LED_red_Pin LED_blue_Pin */
 434:Src/main.c    ****   GPIO_InitStruct.Pin = LED_green_Pin|LED_red_Pin|LED_blue_Pin;
 180              		.loc 1 434 3 view .LVU51
 181              		.loc 1 434 23 is_stmt 0 view .LVU52
 182 0078 44F28103 		movw	r3, #16513
 183 007c 0593     		str	r3, [sp, #20]
 435:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 184              		.loc 1 435 3 is_stmt 1 view .LVU53
 185              		.loc 1 435 24 is_stmt 0 view .LVU54
 186 007e 0123     		movs	r3, #1
 187 0080 0693     		str	r3, [sp, #24]
 436:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 188              		.loc 1 436 3 is_stmt 1 view .LVU55
 189              		.loc 1 436 24 is_stmt 0 view .LVU56
 190 0082 0794     		str	r4, [sp, #28]
 437:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 191              		.loc 1 437 3 is_stmt 1 view .LVU57
 192              		.loc 1 437 25 is_stmt 0 view .LVU58
 193 0084 0894     		str	r4, [sp, #32]
ARM GAS  /tmp/cczspUdn.s 			page 12


 438:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 194              		.loc 1 438 3 is_stmt 1 view .LVU59
 195 0086 05A9     		add	r1, sp, #20
 196 0088 2846     		mov	r0, r5
 197 008a FFF7FEFF 		bl	HAL_GPIO_Init
 198              	.LVL2:
 439:Src/main.c    **** 
 440:Src/main.c    **** }
 199              		.loc 1 440 1 is_stmt 0 view .LVU60
 200 008e 0BB0     		add	sp, sp, #44
 201              	.LCFI2:
 202              		.cfi_def_cfa_offset 12
 203              		@ sp needed
 204 0090 30BD     		pop	{r4, r5, pc}
 205              	.L7:
 206 0092 00BF     		.align	2
 207              	.L6:
 208 0094 00380240 		.word	1073887232
 209 0098 00040240 		.word	1073873920
 210 009c 00000240 		.word	1073872896
 211              		.cfi_endproc
 212              	.LFE151:
 214              		.section	.text.MX_NVIC_Init,"ax",%progbits
 215              		.align	1
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu fpv5-d16
 221              	MX_NVIC_Init:
 222              	.LFB146:
 240:Src/main.c    ****   /* SDMMC1_IRQn interrupt configuration */
 223              		.loc 1 240 1 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227 0000 08B5     		push	{r3, lr}
 228              	.LCFI3:
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 3, -8
 231              		.cfi_offset 14, -4
 242:Src/main.c    ****   HAL_NVIC_EnableIRQ(SDMMC1_IRQn);
 232              		.loc 1 242 3 view .LVU62
 233 0002 0022     		movs	r2, #0
 234 0004 1146     		mov	r1, r2
 235 0006 3120     		movs	r0, #49
 236 0008 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 237              	.LVL3:
 243:Src/main.c    ****   /* USART3_IRQn interrupt configuration */
 238              		.loc 1 243 3 view .LVU63
 239 000c 3120     		movs	r0, #49
 240 000e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 241              	.LVL4:
 245:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART3_IRQn);
 242              		.loc 1 245 3 view .LVU64
 243 0012 0022     		movs	r2, #0
 244 0014 1146     		mov	r1, r2
 245 0016 2720     		movs	r0, #39
ARM GAS  /tmp/cczspUdn.s 			page 13


 246 0018 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 247              	.LVL5:
 246:Src/main.c    ****   /* CAN1_SCE_IRQn interrupt configuration */
 248              		.loc 1 246 3 view .LVU65
 249 001c 2720     		movs	r0, #39
 250 001e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 251              	.LVL6:
 248:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 252              		.loc 1 248 3 view .LVU66
 253 0022 0022     		movs	r2, #0
 254 0024 1146     		mov	r1, r2
 255 0026 1620     		movs	r0, #22
 256 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 257              	.LVL7:
 249:Src/main.c    ****   /* CAN1_RX1_IRQn interrupt configuration */
 258              		.loc 1 249 3 view .LVU67
 259 002c 1620     		movs	r0, #22
 260 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 261              	.LVL8:
 251:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 262              		.loc 1 251 3 view .LVU68
 263 0032 0022     		movs	r2, #0
 264 0034 1146     		mov	r1, r2
 265 0036 1520     		movs	r0, #21
 266 0038 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 267              	.LVL9:
 252:Src/main.c    ****   /* CAN1_RX0_IRQn interrupt configuration */
 268              		.loc 1 252 3 view .LVU69
 269 003c 1520     		movs	r0, #21
 270 003e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 271              	.LVL10:
 254:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 272              		.loc 1 254 3 view .LVU70
 273 0042 0022     		movs	r2, #0
 274 0044 1146     		mov	r1, r2
 275 0046 1420     		movs	r0, #20
 276 0048 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 277              	.LVL11:
 255:Src/main.c    ****   /* CAN1_TX_IRQn interrupt configuration */
 278              		.loc 1 255 3 view .LVU71
 279 004c 1420     		movs	r0, #20
 280 004e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 281              	.LVL12:
 257:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 282              		.loc 1 257 3 view .LVU72
 283 0052 0022     		movs	r2, #0
 284 0054 1146     		mov	r1, r2
 285 0056 1320     		movs	r0, #19
 286 0058 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 287              	.LVL13:
 258:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 288              		.loc 1 258 3 view .LVU73
 289 005c 1320     		movs	r0, #19
 290 005e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 291              	.LVL14:
 260:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 292              		.loc 1 260 3 view .LVU74
ARM GAS  /tmp/cczspUdn.s 			page 14


 293 0062 0022     		movs	r2, #0
 294 0064 1146     		mov	r1, r2
 295 0066 1C20     		movs	r0, #28
 296 0068 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 297              	.LVL15:
 261:Src/main.c    **** }
 298              		.loc 1 261 3 view .LVU75
 299 006c 1C20     		movs	r0, #28
 300 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 301              	.LVL16:
 262:Src/main.c    **** 
 302              		.loc 1 262 1 is_stmt 0 view .LVU76
 303 0072 08BD     		pop	{r3, pc}
 304              		.cfi_endproc
 305              	.LFE146:
 307              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 308              		.align	2
 309              	.LC0:
 310 0000 494D5520 		.ascii	"IMU non presente\015\012\000"
 310      6E6F6E20 
 310      70726573 
 310      656E7465 
 310      0D0A00
 311              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 312              		.align	1
 313              		.global	HAL_TIM_PeriodElapsedCallback
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu fpv5-d16
 319              	HAL_TIM_PeriodElapsedCallback:
 320              	.LVL17:
 321              	.LFB152:
 441:Src/main.c    **** 
 442:Src/main.c    **** /* USER CODE BEGIN 4 */
 443:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 322              		.loc 1 443 60 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		.loc 1 443 60 is_stmt 0 view .LVU78
 327 0000 08B5     		push	{r3, lr}
 328              	.LCFI4:
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 3, -8
 331              		.cfi_offset 14, -4
 444:Src/main.c    **** 	if(htim == &htim2){
 332              		.loc 1 444 2 is_stmt 1 view .LVU79
 333              		.loc 1 444 4 is_stmt 0 view .LVU80
 334 0002 3B4B     		ldr	r3, .L26
 335 0004 8342     		cmp	r3, r0
 336 0006 00D0     		beq	.L19
 337              	.LVL18:
 338              	.L10:
 445:Src/main.c    **** 		count_ms += 1;
 446:Src/main.c    **** 		if(accel_implausibility_check_count_flag == 1){
 447:Src/main.c    **** 			accel_implausibility_check_count++;
ARM GAS  /tmp/cczspUdn.s 			page 15


 448:Src/main.c    **** 			if(accel_implausibility_check_count == 50){
 449:Src/main.c    **** 				accel_implausibility_check_count_flag = 2;
 450:Src/main.c    **** 				//TODO: add error messages
 451:Src/main.c    **** 			}
 452:Src/main.c    **** 		}
 453:Src/main.c    **** 		if(count_ms == 100){
 454:Src/main.c    **** 			count_ms = 0;
 455:Src/main.c    **** 			count_dec++;
 456:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 457:Src/main.c    **** 			count_inverter++;
 458:Src/main.c    **** 			count_imu++;
 459:Src/main.c    ****       		count_atc++;
 460:Src/main.c    **** 			if(count_inverter == 10){ //--- check if inverter is connected ---//
 461:Src/main.c    **** 				//TODO: to implement error functions
 462:Src/main.c    **** 			}else if(count_inverter == 11){
 463:Src/main.c    **** 				count_inverter = 10;
 464:Src/main.c    **** 			}
 465:Src/main.c    ****             if(count_atc == 10){ //--- check if Analog To Can is connected ---//
 466:Src/main.c    ****                 //TODO: to implement error functions
 467:Src/main.c    ****                 atc_connected = 0;
 468:Src/main.c    ****             }else if(count_atc == 11){
 469:Src/main.c    ****                 count_atc = 10;
 470:Src/main.c    ****             }
 471:Src/main.c    **** 			if(count_imu == 10){ //--- check if imu is connected ---//
 472:Src/main.c    **** 				// imu non presente //
 473:Src/main.c    **** 				imu_connected = 0; //imu not connected
 474:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t*)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 10
 475:Src/main.c    **** 			}else if(count_imu == 11){
 476:Src/main.c    **** 				count_imu = 10;
 477:Src/main.c    **** 			}
 478:Src/main.c    **** 			if(count_dec == 10){
 479:Src/main.c    **** 				count_dec = 0;
 480:Src/main.c    **** 				count_sec++;
 481:Src/main.c    **** 				if(count_sec == 60){
 482:Src/main.c    **** 					count_sec = 0;
 483:Src/main.c    **** 					count_min++;
 484:Src/main.c    **** 					if(count_min == 60){
 485:Src/main.c    **** 						count_min = 0;
 486:Src/main.c    **** 						count_hour++;
 487:Src/main.c    **** 					}
 488:Src/main.c    **** 				}
 489:Src/main.c    **** 			}
 490:Src/main.c    **** 		}
 491:Src/main.c    **** 	}
 492:Src/main.c    **** }
 339              		.loc 1 492 1 view .LVU81
 340 0008 08BD     		pop	{r3, pc}
 341              	.LVL19:
 342              	.L19:
 445:Src/main.c    **** 		count_ms += 1;
 343              		.loc 1 445 3 is_stmt 1 view .LVU82
 445:Src/main.c    **** 		count_ms += 1;
 344              		.loc 1 445 12 is_stmt 0 view .LVU83
 345 000a 3A4A     		ldr	r2, .L26+4
 346 000c 1388     		ldrh	r3, [r2]
 347 000e 0133     		adds	r3, r3, #1
 348 0010 9BB2     		uxth	r3, r3
ARM GAS  /tmp/cczspUdn.s 			page 16


 349 0012 1380     		strh	r3, [r2]	@ movhi
 446:Src/main.c    **** 			accel_implausibility_check_count++;
 350              		.loc 1 446 3 is_stmt 1 view .LVU84
 446:Src/main.c    **** 			accel_implausibility_check_count++;
 351              		.loc 1 446 44 is_stmt 0 view .LVU85
 352 0014 384A     		ldr	r2, .L26+8
 353 0016 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 446:Src/main.c    **** 			accel_implausibility_check_count++;
 354              		.loc 1 446 5 view .LVU86
 355 0018 012A     		cmp	r2, #1
 356 001a 43D0     		beq	.L20
 357              	.L12:
 453:Src/main.c    **** 			count_ms = 0;
 358              		.loc 1 453 3 is_stmt 1 view .LVU87
 453:Src/main.c    **** 			count_ms = 0;
 359              		.loc 1 453 5 is_stmt 0 view .LVU88
 360 001c 642B     		cmp	r3, #100
 361 001e F3D1     		bne	.L10
 454:Src/main.c    **** 			count_dec++;
 362              		.loc 1 454 4 is_stmt 1 view .LVU89
 454:Src/main.c    **** 			count_dec++;
 363              		.loc 1 454 13 is_stmt 0 view .LVU90
 364 0020 344B     		ldr	r3, .L26+4
 365 0022 0022     		movs	r2, #0
 366 0024 1A80     		strh	r2, [r3]	@ movhi
 455:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 367              		.loc 1 455 4 is_stmt 1 view .LVU91
 455:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 368              		.loc 1 455 13 is_stmt 0 view .LVU92
 369 0026 354A     		ldr	r2, .L26+12
 370 0028 1388     		ldrh	r3, [r2]
 371 002a 0133     		adds	r3, r3, #1
 372 002c 1380     		strh	r3, [r2]	@ movhi
 457:Src/main.c    **** 			count_imu++;
 373              		.loc 1 457 4 is_stmt 1 view .LVU93
 457:Src/main.c    **** 			count_imu++;
 374              		.loc 1 457 18 is_stmt 0 view .LVU94
 375 002e 344B     		ldr	r3, .L26+16
 376 0030 1988     		ldrh	r1, [r3]
 377 0032 0131     		adds	r1, r1, #1
 378 0034 89B2     		uxth	r1, r1
 379 0036 1980     		strh	r1, [r3]	@ movhi
 458:Src/main.c    ****       		count_atc++;
 380              		.loc 1 458 4 is_stmt 1 view .LVU95
 458:Src/main.c    ****       		count_atc++;
 381              		.loc 1 458 13 is_stmt 0 view .LVU96
 382 0038 324A     		ldr	r2, .L26+20
 383 003a 1388     		ldrh	r3, [r2]
 384 003c 0133     		adds	r3, r3, #1
 385 003e 9BB2     		uxth	r3, r3
 386 0040 1380     		strh	r3, [r2]	@ movhi
 459:Src/main.c    **** 			if(count_inverter == 10){ //--- check if inverter is connected ---//
 387              		.loc 1 459 9 is_stmt 1 view .LVU97
 459:Src/main.c    **** 			if(count_inverter == 10){ //--- check if inverter is connected ---//
 388              		.loc 1 459 18 is_stmt 0 view .LVU98
 389 0042 3148     		ldr	r0, .L26+24
 390              	.LVL20:
ARM GAS  /tmp/cczspUdn.s 			page 17


 459:Src/main.c    **** 			if(count_inverter == 10){ //--- check if inverter is connected ---//
 391              		.loc 1 459 18 view .LVU99
 392 0044 0288     		ldrh	r2, [r0]
 393 0046 0132     		adds	r2, r2, #1
 394 0048 92B2     		uxth	r2, r2
 395 004a 0280     		strh	r2, [r0]	@ movhi
 460:Src/main.c    **** 				//TODO: to implement error functions
 396              		.loc 1 460 4 is_stmt 1 view .LVU100
 460:Src/main.c    **** 				//TODO: to implement error functions
 397              		.loc 1 460 6 is_stmt 0 view .LVU101
 398 004c 0A29     		cmp	r1, #10
 399 004e 01D0     		beq	.L13
 462:Src/main.c    **** 				count_inverter = 10;
 400              		.loc 1 462 10 is_stmt 1 view .LVU102
 462:Src/main.c    **** 				count_inverter = 10;
 401              		.loc 1 462 12 is_stmt 0 view .LVU103
 402 0050 0B29     		cmp	r1, #11
 403 0052 32D0     		beq	.L21
 404              	.L13:
 465:Src/main.c    ****                 //TODO: to implement error functions
 405              		.loc 1 465 13 is_stmt 1 view .LVU104
 465:Src/main.c    ****                 //TODO: to implement error functions
 406              		.loc 1 465 15 is_stmt 0 view .LVU105
 407 0054 0A2A     		cmp	r2, #10
 408 0056 34D0     		beq	.L22
 468:Src/main.c    ****                 count_atc = 10;
 409              		.loc 1 468 19 is_stmt 1 view .LVU106
 468:Src/main.c    ****                 count_atc = 10;
 410              		.loc 1 468 21 is_stmt 0 view .LVU107
 411 0058 0B2A     		cmp	r2, #11
 412 005a 36D0     		beq	.L23
 413              	.L15:
 471:Src/main.c    **** 				// imu non presente //
 414              		.loc 1 471 4 is_stmt 1 view .LVU108
 471:Src/main.c    **** 				// imu non presente //
 415              		.loc 1 471 6 is_stmt 0 view .LVU109
 416 005c 0A2B     		cmp	r3, #10
 417 005e 38D0     		beq	.L24
 475:Src/main.c    **** 				count_imu = 10;
 418              		.loc 1 475 10 is_stmt 1 view .LVU110
 475:Src/main.c    **** 				count_imu = 10;
 419              		.loc 1 475 12 is_stmt 0 view .LVU111
 420 0060 0B2B     		cmp	r3, #11
 421 0062 40D0     		beq	.L25
 422              	.L17:
 478:Src/main.c    **** 				count_dec = 0;
 423              		.loc 1 478 4 is_stmt 1 view .LVU112
 478:Src/main.c    **** 				count_dec = 0;
 424              		.loc 1 478 17 is_stmt 0 view .LVU113
 425 0064 254B     		ldr	r3, .L26+12
 426 0066 1B88     		ldrh	r3, [r3]
 478:Src/main.c    **** 				count_dec = 0;
 427              		.loc 1 478 6 view .LVU114
 428 0068 0A2B     		cmp	r3, #10
 429 006a CDD1     		bne	.L10
 479:Src/main.c    **** 				count_sec++;
 430              		.loc 1 479 5 is_stmt 1 view .LVU115
ARM GAS  /tmp/cczspUdn.s 			page 18


 479:Src/main.c    **** 				count_sec++;
 431              		.loc 1 479 15 is_stmt 0 view .LVU116
 432 006c 234B     		ldr	r3, .L26+12
 433 006e 0022     		movs	r2, #0
 434 0070 1A80     		strh	r2, [r3]	@ movhi
 480:Src/main.c    **** 				if(count_sec == 60){
 435              		.loc 1 480 5 is_stmt 1 view .LVU117
 480:Src/main.c    **** 				if(count_sec == 60){
 436              		.loc 1 480 14 is_stmt 0 view .LVU118
 437 0072 264A     		ldr	r2, .L26+28
 438 0074 1388     		ldrh	r3, [r2]
 439 0076 0133     		adds	r3, r3, #1
 440 0078 9BB2     		uxth	r3, r3
 441 007a 1380     		strh	r3, [r2]	@ movhi
 481:Src/main.c    **** 					count_sec = 0;
 442              		.loc 1 481 5 is_stmt 1 view .LVU119
 481:Src/main.c    **** 					count_sec = 0;
 443              		.loc 1 481 7 is_stmt 0 view .LVU120
 444 007c 3C2B     		cmp	r3, #60
 445 007e C3D1     		bne	.L10
 482:Src/main.c    **** 					count_min++;
 446              		.loc 1 482 6 is_stmt 1 view .LVU121
 482:Src/main.c    **** 					count_min++;
 447              		.loc 1 482 16 is_stmt 0 view .LVU122
 448 0080 1346     		mov	r3, r2
 449 0082 0022     		movs	r2, #0
 450 0084 1A80     		strh	r2, [r3]	@ movhi
 483:Src/main.c    **** 					if(count_min == 60){
 451              		.loc 1 483 6 is_stmt 1 view .LVU123
 483:Src/main.c    **** 					if(count_min == 60){
 452              		.loc 1 483 15 is_stmt 0 view .LVU124
 453 0086 224A     		ldr	r2, .L26+32
 454 0088 1388     		ldrh	r3, [r2]
 455 008a 0133     		adds	r3, r3, #1
 456 008c 9BB2     		uxth	r3, r3
 457 008e 1380     		strh	r3, [r2]	@ movhi
 484:Src/main.c    **** 						count_min = 0;
 458              		.loc 1 484 6 is_stmt 1 view .LVU125
 484:Src/main.c    **** 						count_min = 0;
 459              		.loc 1 484 8 is_stmt 0 view .LVU126
 460 0090 3C2B     		cmp	r3, #60
 461 0092 B9D1     		bne	.L10
 485:Src/main.c    **** 						count_hour++;
 462              		.loc 1 485 7 is_stmt 1 view .LVU127
 485:Src/main.c    **** 						count_hour++;
 463              		.loc 1 485 17 is_stmt 0 view .LVU128
 464 0094 1346     		mov	r3, r2
 465 0096 0022     		movs	r2, #0
 466 0098 1A80     		strh	r2, [r3]	@ movhi
 486:Src/main.c    **** 					}
 467              		.loc 1 486 7 is_stmt 1 view .LVU129
 486:Src/main.c    **** 					}
 468              		.loc 1 486 17 is_stmt 0 view .LVU130
 469 009a 1E4A     		ldr	r2, .L26+36
 470 009c 1388     		ldrh	r3, [r2]
 471 009e 0133     		adds	r3, r3, #1
 472 00a0 1380     		strh	r3, [r2]	@ movhi
ARM GAS  /tmp/cczspUdn.s 			page 19


 473              		.loc 1 492 1 view .LVU131
 474 00a2 B1E7     		b	.L10
 475              	.LVL21:
 476              	.L20:
 447:Src/main.c    **** 			if(accel_implausibility_check_count == 50){
 477              		.loc 1 447 4 is_stmt 1 view .LVU132
 447:Src/main.c    **** 			if(accel_implausibility_check_count == 50){
 478              		.loc 1 447 36 is_stmt 0 view .LVU133
 479 00a4 1C49     		ldr	r1, .L26+40
 480 00a6 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 481 00a8 0132     		adds	r2, r2, #1
 482 00aa D2B2     		uxtb	r2, r2
 483 00ac 0A70     		strb	r2, [r1]
 448:Src/main.c    **** 				accel_implausibility_check_count_flag = 2;
 484              		.loc 1 448 4 is_stmt 1 view .LVU134
 448:Src/main.c    **** 				accel_implausibility_check_count_flag = 2;
 485              		.loc 1 448 6 is_stmt 0 view .LVU135
 486 00ae 322A     		cmp	r2, #50
 487 00b0 B4D1     		bne	.L12
 449:Src/main.c    **** 				//TODO: add error messages
 488              		.loc 1 449 5 is_stmt 1 view .LVU136
 449:Src/main.c    **** 				//TODO: add error messages
 489              		.loc 1 449 43 is_stmt 0 view .LVU137
 490 00b2 114A     		ldr	r2, .L26+8
 491 00b4 0221     		movs	r1, #2
 492 00b6 1170     		strb	r1, [r2]
 493 00b8 B0E7     		b	.L12
 494              	.LVL22:
 495              	.L21:
 463:Src/main.c    **** 			}
 496              		.loc 1 463 5 is_stmt 1 view .LVU138
 463:Src/main.c    **** 			}
 497              		.loc 1 463 20 is_stmt 0 view .LVU139
 498 00ba 1149     		ldr	r1, .L26+16
 499 00bc 0A20     		movs	r0, #10
 500 00be 0880     		strh	r0, [r1]	@ movhi
 501 00c0 C8E7     		b	.L13
 502              	.L22:
 467:Src/main.c    ****             }else if(count_atc == 11){
 503              		.loc 1 467 17 is_stmt 1 view .LVU140
 467:Src/main.c    ****             }else if(count_atc == 11){
 504              		.loc 1 467 31 is_stmt 0 view .LVU141
 505 00c2 164A     		ldr	r2, .L26+44
 506 00c4 0021     		movs	r1, #0
 507 00c6 1170     		strb	r1, [r2]
 508 00c8 C8E7     		b	.L15
 509              	.L23:
 469:Src/main.c    ****             }
 510              		.loc 1 469 17 is_stmt 1 view .LVU142
 469:Src/main.c    ****             }
 511              		.loc 1 469 27 is_stmt 0 view .LVU143
 512 00ca 0F4A     		ldr	r2, .L26+24
 513 00cc 0A21     		movs	r1, #10
 514 00ce 1180     		strh	r1, [r2]	@ movhi
 515 00d0 C4E7     		b	.L15
 516              	.L24:
 473:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t*)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 10
ARM GAS  /tmp/cczspUdn.s 			page 20


 517              		.loc 1 473 5 is_stmt 1 view .LVU144
 473:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t*)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 10
 518              		.loc 1 473 19 is_stmt 0 view .LVU145
 519 00d2 134B     		ldr	r3, .L26+48
 520 00d4 0022     		movs	r2, #0
 521 00d6 1A70     		strb	r2, [r3]
 474:Src/main.c    **** 			}else if(count_imu == 11){
 522              		.loc 1 474 5 is_stmt 1 view .LVU146
 523 00d8 0A23     		movs	r3, #10
 524 00da 1222     		movs	r2, #18
 525 00dc 1149     		ldr	r1, .L26+52
 526 00de 1248     		ldr	r0, .L26+56
 527 00e0 FFF7FEFF 		bl	HAL_UART_Transmit
 528              	.LVL23:
 529 00e4 BEE7     		b	.L17
 530              	.L25:
 476:Src/main.c    **** 			}
 531              		.loc 1 476 5 view .LVU147
 476:Src/main.c    **** 			}
 532              		.loc 1 476 15 is_stmt 0 view .LVU148
 533 00e6 074B     		ldr	r3, .L26+20
 534 00e8 0A22     		movs	r2, #10
 535 00ea 1A80     		strh	r2, [r3]	@ movhi
 536 00ec BAE7     		b	.L17
 537              	.L27:
 538 00ee 00BF     		.align	2
 539              	.L26:
 540 00f0 00000000 		.word	htim2
 541 00f4 00000000 		.word	count_ms
 542 00f8 00000000 		.word	accel_implausibility_check_count_flag
 543 00fc 00000000 		.word	count_dec
 544 0100 00000000 		.word	count_inverter
 545 0104 00000000 		.word	count_imu
 546 0108 00000000 		.word	count_atc
 547 010c 00000000 		.word	count_sec
 548 0110 00000000 		.word	count_min
 549 0114 00000000 		.word	count_hour
 550 0118 00000000 		.word	accel_implausibility_check_count
 551 011c 00000000 		.word	atc_connected
 552 0120 00000000 		.word	imu_connected
 553 0124 00000000 		.word	.LC0
 554 0128 00000000 		.word	huart3
 555              		.cfi_endproc
 556              	.LFE152:
 558              		.section	.rodata.HAL_CAN_RxFifo0MsgPendingCallback.str1.4,"aMS",%progbits,1
 559              		.align	2
 560              	.LC1:
 561 0000 44415441 		.ascii	"DATA: %d %d %d %d %d %d %d %d\015\012\000"
 561      3A202564 
 561      20256420 
 561      25642025 
 561      64202564 
 562              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 563              		.align	1
 564              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 565              		.syntax unified
 566              		.thumb
ARM GAS  /tmp/cczspUdn.s 			page 21


 567              		.thumb_func
 568              		.fpu fpv5-d16
 570              	HAL_CAN_RxFifo0MsgPendingCallback:
 571              	.LVL24:
 572              	.LFB153:
 493:Src/main.c    **** 
 494:Src/main.c    **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan){
 573              		.loc 1 494 64 is_stmt 1 view -0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 32
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577              		.loc 1 494 64 is_stmt 0 view .LVU150
 578 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 579              	.LCFI5:
 580              		.cfi_def_cfa_offset 20
 581              		.cfi_offset 4, -20
 582              		.cfi_offset 5, -16
 583              		.cfi_offset 6, -12
 584              		.cfi_offset 7, -8
 585              		.cfi_offset 14, -4
 586 0002 8FB0     		sub	sp, sp, #60
 587              	.LCFI6:
 588              		.cfi_def_cfa_offset 80
 589 0004 0446     		mov	r4, r0
 495:Src/main.c    **** 	/*sprintf(txt, "%d\r\n", HAL_CAN_GetRxFifoFillLevel(&hcan1, CAN_RX_FIFO0));
 496:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 10);*/
 497:Src/main.c    **** 
 498:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_blue_GPIO_Port, LED_blue_Pin);
 590              		.loc 1 498 2 is_stmt 1 view .LVU151
 591 0006 8021     		movs	r1, #128
 592 0008 1D48     		ldr	r0, .L32
 593              	.LVL25:
 594              		.loc 1 498 2 is_stmt 0 view .LVU152
 595 000a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 596              	.LVL26:
 499:Src/main.c    **** 	if (hcan == &hcan1){
 597              		.loc 1 499 2 is_stmt 1 view .LVU153
 598              		.loc 1 499 5 is_stmt 0 view .LVU154
 599 000e 1D4B     		ldr	r3, .L32+4
 600 0010 9C42     		cmp	r4, r3
 601 0012 01D0     		beq	.L31
 602              	.LVL27:
 603              	.L28:
 500:Src/main.c    **** 		//HAL_UART_Transmit(&huart3, (uint8_t*)"rx on FIFO0\r\n", strlen("rx on FIFO0\r\n"), 10);
 501:Src/main.c    **** 		if (HAL_CAN_GetRxFifoFillLevel(&hcan1, CAN_RX_FIFO0) != 0){
 502:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 503:Src/main.c    **** 			HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &header, can1.dataRx);
 504:Src/main.c    **** 			can1.rx_id = header.StdId;
 505:Src/main.c    **** 			can1.rx_size = header.DLC;
 506:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 507:Src/main.c    **** 			sprintf(txt,"DATA: %d %d %d %d %d %d %d %d\r\n",can1.dataRx[0],can1.dataRx[1],can1.dataRx[2],can
 508:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 509:Src/main.c    **** 			//HAL_UART_Transmit(&huart3, (uint8_t*)"ciao2\r\n", strlen("ciao2\r\n"), 10);
 510:Src/main.c    **** 
 511:Src/main.c    **** 
 512:Src/main.c    **** 		}
 513:Src/main.c    **** 	}
ARM GAS  /tmp/cczspUdn.s 			page 22


 514:Src/main.c    **** }
 604              		.loc 1 514 1 view .LVU155
 605 0014 0FB0     		add	sp, sp, #60
 606              	.LCFI7:
 607              		.cfi_remember_state
 608              		.cfi_def_cfa_offset 20
 609              		@ sp needed
 610 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
 611              	.LVL28:
 612              	.L31:
 613              	.LCFI8:
 614              		.cfi_restore_state
 501:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 615              		.loc 1 501 3 is_stmt 1 view .LVU156
 501:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 616              		.loc 1 501 7 is_stmt 0 view .LVU157
 617 0018 0021     		movs	r1, #0
 618 001a 1846     		mov	r0, r3
 619 001c FFF7FEFF 		bl	HAL_CAN_GetRxFifoFillLevel
 620              	.LVL29:
 501:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 621              		.loc 1 501 6 view .LVU158
 622 0020 0028     		cmp	r0, #0
 623 0022 F7D0     		beq	.L28
 624              	.LBB6:
 502:Src/main.c    **** 			HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &header, can1.dataRx);
 625              		.loc 1 502 4 is_stmt 1 view .LVU159
 503:Src/main.c    **** 			can1.rx_id = header.StdId;
 626              		.loc 1 503 4 view .LVU160
 627 0024 184C     		ldr	r4, .L32+8
 628              	.LVL30:
 503:Src/main.c    **** 			can1.rx_id = header.StdId;
 629              		.loc 1 503 4 is_stmt 0 view .LVU161
 630 0026 2346     		mov	r3, r4
 631 0028 07AA     		add	r2, sp, #28
 632 002a 0021     		movs	r1, #0
 633 002c 1548     		ldr	r0, .L32+4
 634 002e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 635              	.LVL31:
 504:Src/main.c    **** 			can1.rx_size = header.DLC;
 636              		.loc 1 504 4 is_stmt 1 view .LVU162
 504:Src/main.c    **** 			can1.rx_size = header.DLC;
 637              		.loc 1 504 15 is_stmt 0 view .LVU163
 638 0032 079B     		ldr	r3, [sp, #28]
 639 0034 6361     		str	r3, [r4, #20]
 505:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 640              		.loc 1 505 4 is_stmt 1 view .LVU164
 505:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 641              		.loc 1 505 25 is_stmt 0 view .LVU165
 642 0036 0B9B     		ldr	r3, [sp, #44]
 505:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 643              		.loc 1 505 17 view .LVU166
 644 0038 44F80C3C 		str	r3, [r4, #-12]
 504:Src/main.c    **** 			can1.rx_size = header.DLC;
 645              		.loc 1 504 15 view .LVU167
 646 003c 103C     		subs	r4, r4, #16
 506:Src/main.c    **** 			sprintf(txt,"DATA: %d %d %d %d %d %d %d %d\r\n",can1.dataRx[0],can1.dataRx[1],can1.dataRx[2],can
ARM GAS  /tmp/cczspUdn.s 			page 23


 647              		.loc 1 506 4 is_stmt 1 view .LVU168
 648 003e 2046     		mov	r0, r4
 649 0040 FFF7FEFF 		bl	fifoRxDataCAN_push
 650              	.LVL32:
 507:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 651              		.loc 1 507 4 view .LVU169
 507:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 652              		.loc 1 507 93 is_stmt 0 view .LVU170
 653 0044 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 507:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 654              		.loc 1 507 108 view .LVU171
 655 0046 E27C     		ldrb	r2, [r4, #19]	@ zero_extendqisi2
 507:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 656              		.loc 1 507 123 view .LVU172
 657 0048 217D     		ldrb	r1, [r4, #20]	@ zero_extendqisi2
 507:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 658              		.loc 1 507 138 view .LVU173
 659 004a 607D     		ldrb	r0, [r4, #21]	@ zero_extendqisi2
 507:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 660              		.loc 1 507 153 view .LVU174
 661 004c A67D     		ldrb	r6, [r4, #22]	@ zero_extendqisi2
 507:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 662              		.loc 1 507 168 view .LVU175
 663 004e E77D     		ldrb	r7, [r4, #23]	@ zero_extendqisi2
 507:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 664              		.loc 1 507 4 view .LVU176
 665 0050 0E4D     		ldr	r5, .L32+12
 666 0052 0597     		str	r7, [sp, #20]
 667 0054 0496     		str	r6, [sp, #16]
 668 0056 0390     		str	r0, [sp, #12]
 669 0058 0291     		str	r1, [sp, #8]
 670 005a 0192     		str	r2, [sp, #4]
 671 005c 0093     		str	r3, [sp]
 672 005e 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 673 0060 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 674 0062 0B49     		ldr	r1, .L32+16
 675 0064 2846     		mov	r0, r5
 676 0066 FFF7FEFF 		bl	sprintf
 677              	.LVL33:
 508:Src/main.c    **** 			//HAL_UART_Transmit(&huart3, (uint8_t*)"ciao2\r\n", strlen("ciao2\r\n"), 10);
 678              		.loc 1 508 4 is_stmt 1 view .LVU177
 508:Src/main.c    **** 			//HAL_UART_Transmit(&huart3, (uint8_t*)"ciao2\r\n", strlen("ciao2\r\n"), 10);
 679              		.loc 1 508 46 is_stmt 0 view .LVU178
 680 006a 2846     		mov	r0, r5
 681 006c FFF7FEFF 		bl	strlen
 682              	.LVL34:
 508:Src/main.c    **** 			//HAL_UART_Transmit(&huart3, (uint8_t*)"ciao2\r\n", strlen("ciao2\r\n"), 10);
 683              		.loc 1 508 4 view .LVU179
 684 0070 6423     		movs	r3, #100
 685 0072 82B2     		uxth	r2, r0
 686 0074 2946     		mov	r1, r5
 687 0076 0748     		ldr	r0, .L32+20
 688 0078 FFF7FEFF 		bl	HAL_UART_Transmit
 689              	.LVL35:
 690              	.LBE6:
 691              		.loc 1 514 1 view .LVU180
 692 007c CAE7     		b	.L28
ARM GAS  /tmp/cczspUdn.s 			page 24


 693              	.L33:
 694 007e 00BF     		.align	2
 695              	.L32:
 696 0080 00040240 		.word	1073873920
 697 0084 00000000 		.word	hcan1
 698 0088 10000000 		.word	can1+16
 699 008c 00000000 		.word	txt
 700 0090 00000000 		.word	.LC1
 701 0094 00000000 		.word	huart3
 702              		.cfi_endproc
 703              	.LFE153:
 705              		.section	.rodata.HAL_CAN_RxFifo1MsgPendingCallback.str1.4,"aMS",%progbits,1
 706              		.align	2
 707              	.LC2:
 708 0000 7278206F 		.ascii	"rx on FIFO1\015\012\000"
 708      6E204649 
 708      464F310D 
 708      0A00
 709              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 710              		.align	1
 711              		.global	HAL_CAN_RxFifo1MsgPendingCallback
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 715              		.fpu fpv5-d16
 717              	HAL_CAN_RxFifo1MsgPendingCallback:
 718              	.LVL36:
 719              	.LFB154:
 515:Src/main.c    **** void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan){
 720              		.loc 1 515 64 is_stmt 1 view -0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724              		.loc 1 515 64 is_stmt 0 view .LVU182
 725 0000 08B5     		push	{r3, lr}
 726              	.LCFI9:
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 3, -8
 729              		.cfi_offset 14, -4
 516:Src/main.c    **** 	if (hcan == &hcan1){
 730              		.loc 1 516 2 is_stmt 1 view .LVU183
 731              		.loc 1 516 5 is_stmt 0 view .LVU184
 732 0002 054B     		ldr	r3, .L38
 733 0004 8342     		cmp	r3, r0
 734 0006 00D0     		beq	.L37
 735              	.LVL37:
 736              	.L34:
 517:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"rx on FIFO1\r\n", strlen("rx on FIFO1\r\n"), 10);
 518:Src/main.c    **** 	}
 519:Src/main.c    **** }
 737              		.loc 1 519 1 view .LVU185
 738 0008 08BD     		pop	{r3, pc}
 739              	.LVL38:
 740              	.L37:
 517:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"rx on FIFO1\r\n", strlen("rx on FIFO1\r\n"), 10);
 741              		.loc 1 517 3 is_stmt 1 view .LVU186
 742 000a 0A23     		movs	r3, #10
ARM GAS  /tmp/cczspUdn.s 			page 25


 743 000c 0D22     		movs	r2, #13
 744 000e 0349     		ldr	r1, .L38+4
 745 0010 0348     		ldr	r0, .L38+8
 746              	.LVL39:
 517:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"rx on FIFO1\r\n", strlen("rx on FIFO1\r\n"), 10);
 747              		.loc 1 517 3 is_stmt 0 view .LVU187
 748 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 749              	.LVL40:
 750              		.loc 1 519 1 view .LVU188
 751 0016 F7E7     		b	.L34
 752              	.L39:
 753              		.align	2
 754              	.L38:
 755 0018 00000000 		.word	hcan1
 756 001c 00000000 		.word	.LC2
 757 0020 00000000 		.word	huart3
 758              		.cfi_endproc
 759              	.LFE154:
 761              		.section	.rodata.HAL_CAN_RxFifo0FullCallback.str1.4,"aMS",%progbits,1
 762              		.align	2
 763              	.LC3:
 764 0000 4649464F 		.ascii	"FIFO0 FULL\015\012\000"
 764      30204655 
 764      4C4C0D0A 
 764      00
 765              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 766              		.align	1
 767              		.global	HAL_CAN_RxFifo0FullCallback
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 771              		.fpu fpv5-d16
 773              	HAL_CAN_RxFifo0FullCallback:
 774              	.LVL41:
 775              	.LFB155:
 520:Src/main.c    **** 
 521:Src/main.c    **** void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan){
 776              		.loc 1 521 58 is_stmt 1 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780              		.loc 1 521 58 is_stmt 0 view .LVU190
 781 0000 08B5     		push	{r3, lr}
 782              	.LCFI10:
 783              		.cfi_def_cfa_offset 8
 784              		.cfi_offset 3, -8
 785              		.cfi_offset 14, -4
 522:Src/main.c    **** 	if (hcan == &hcan1){
 786              		.loc 1 522 2 is_stmt 1 view .LVU191
 787              		.loc 1 522 5 is_stmt 0 view .LVU192
 788 0002 054B     		ldr	r3, .L44
 789 0004 8342     		cmp	r3, r0
 790 0006 00D0     		beq	.L43
 791              	.LVL42:
 792              	.L40:
 523:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"FIFO0 FULL\r\n", strlen("FIFO0 FULL\r\n"), 10);
 524:Src/main.c    **** 	}
ARM GAS  /tmp/cczspUdn.s 			page 26


 525:Src/main.c    **** }
 793              		.loc 1 525 1 view .LVU193
 794 0008 08BD     		pop	{r3, pc}
 795              	.LVL43:
 796              	.L43:
 523:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"FIFO0 FULL\r\n", strlen("FIFO0 FULL\r\n"), 10);
 797              		.loc 1 523 3 is_stmt 1 view .LVU194
 798 000a 0A23     		movs	r3, #10
 799 000c 0C22     		movs	r2, #12
 800 000e 0349     		ldr	r1, .L44+4
 801 0010 0348     		ldr	r0, .L44+8
 802              	.LVL44:
 523:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"FIFO0 FULL\r\n", strlen("FIFO0 FULL\r\n"), 10);
 803              		.loc 1 523 3 is_stmt 0 view .LVU195
 804 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 805              	.LVL45:
 806              		.loc 1 525 1 view .LVU196
 807 0016 F7E7     		b	.L40
 808              	.L45:
 809              		.align	2
 810              	.L44:
 811 0018 00000000 		.word	hcan1
 812 001c 00000000 		.word	.LC3
 813 0020 00000000 		.word	huart3
 814              		.cfi_endproc
 815              	.LFE155:
 817              		.section	.rodata.HAL_CAN_RxFifo1FullCallback.str1.4,"aMS",%progbits,1
 818              		.align	2
 819              	.LC4:
 820 0000 4649464F 		.ascii	"FIFO1 FULL\015\012\000"
 820      31204655 
 820      4C4C0D0A 
 820      00
 821              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 822              		.align	1
 823              		.global	HAL_CAN_RxFifo1FullCallback
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 827              		.fpu fpv5-d16
 829              	HAL_CAN_RxFifo1FullCallback:
 830              	.LVL46:
 831              	.LFB156:
 526:Src/main.c    **** void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan){
 832              		.loc 1 526 58 is_stmt 1 view -0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836              		.loc 1 526 58 is_stmt 0 view .LVU198
 837 0000 08B5     		push	{r3, lr}
 838              	.LCFI11:
 839              		.cfi_def_cfa_offset 8
 840              		.cfi_offset 3, -8
 841              		.cfi_offset 14, -4
 527:Src/main.c    **** 	if (hcan == &hcan1){
 842              		.loc 1 527 2 is_stmt 1 view .LVU199
 843              		.loc 1 527 5 is_stmt 0 view .LVU200
ARM GAS  /tmp/cczspUdn.s 			page 27


 844 0002 054B     		ldr	r3, .L50
 845 0004 8342     		cmp	r3, r0
 846 0006 00D0     		beq	.L49
 847              	.LVL47:
 848              	.L46:
 528:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"FIFO1 FULL\r\n", strlen("FIFO1 FULL\r\n"), 10);
 529:Src/main.c    **** 	}
 530:Src/main.c    **** }
 849              		.loc 1 530 1 view .LVU201
 850 0008 08BD     		pop	{r3, pc}
 851              	.LVL48:
 852              	.L49:
 528:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"FIFO1 FULL\r\n", strlen("FIFO1 FULL\r\n"), 10);
 853              		.loc 1 528 3 is_stmt 1 view .LVU202
 854 000a 0A23     		movs	r3, #10
 855 000c 0C22     		movs	r2, #12
 856 000e 0349     		ldr	r1, .L50+4
 857 0010 0348     		ldr	r0, .L50+8
 858              	.LVL49:
 528:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"FIFO1 FULL\r\n", strlen("FIFO1 FULL\r\n"), 10);
 859              		.loc 1 528 3 is_stmt 0 view .LVU203
 860 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 861              	.LVL50:
 862              		.loc 1 530 1 view .LVU204
 863 0016 F7E7     		b	.L46
 864              	.L51:
 865              		.align	2
 866              	.L50:
 867 0018 00000000 		.word	hcan1
 868 001c 00000000 		.word	.LC4
 869 0020 00000000 		.word	huart3
 870              		.cfi_endproc
 871              	.LFE156:
 873              		.section	.rodata.HAL_CAN_TxMailbox0CompleteCallback.str1.4,"aMS",%progbits,1
 874              		.align	2
 875              	.LC5:
 876 0000 6D62303A 		.ascii	"mb0: %d\015\012\000"
 876      2025640D 
 876      0A00
 877 000a 0000     		.align	2
 878              	.LC6:
 879 000c 68696768 		.ascii	"high\015\012\000"
 879      0D0A00
 880              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 881              		.align	1
 882              		.global	HAL_CAN_TxMailbox0CompleteCallback
 883              		.syntax unified
 884              		.thumb
 885              		.thumb_func
 886              		.fpu fpv5-d16
 888              	HAL_CAN_TxMailbox0CompleteCallback:
 889              	.LVL51:
 890              	.LFB157:
 531:Src/main.c    **** 
 532:Src/main.c    **** void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan){
 891              		.loc 1 532 65 is_stmt 1 view -0
 892              		.cfi_startproc
ARM GAS  /tmp/cczspUdn.s 			page 28


 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              		.loc 1 532 65 is_stmt 0 view .LVU206
 896 0000 38B5     		push	{r3, r4, r5, lr}
 897              	.LCFI12:
 898              		.cfi_def_cfa_offset 16
 899              		.cfi_offset 3, -16
 900              		.cfi_offset 4, -12
 901              		.cfi_offset 5, -8
 902              		.cfi_offset 14, -4
 903 0002 0446     		mov	r4, r0
 533:Src/main.c    **** 	sprintf(txt,"mb0: %d\r\n", (int)can1.idBck);
 904              		.loc 1 533 2 is_stmt 1 view .LVU207
 905 0004 184D     		ldr	r5, .L57
 906 0006 194B     		ldr	r3, .L57+4
 907 0008 9A6A     		ldr	r2, [r3, #40]
 908 000a 1949     		ldr	r1, .L57+8
 909 000c 2846     		mov	r0, r5
 910              	.LVL52:
 911              		.loc 1 533 2 is_stmt 0 view .LVU208
 912 000e FFF7FEFF 		bl	sprintf
 913              	.LVL53:
 534:Src/main.c    **** 	HAL_UART_Transmit(&huart3,(uint8_t*)(txt), strlen(txt), 10);
 914              		.loc 1 534 2 is_stmt 1 view .LVU209
 915              		.loc 1 534 45 is_stmt 0 view .LVU210
 916 0012 2846     		mov	r0, r5
 917 0014 FFF7FEFF 		bl	strlen
 918              	.LVL54:
 919              		.loc 1 534 2 view .LVU211
 920 0018 0A23     		movs	r3, #10
 921 001a 82B2     		uxth	r2, r0
 922 001c 2946     		mov	r1, r5
 923 001e 1548     		ldr	r0, .L57+12
 924 0020 FFF7FEFF 		bl	HAL_UART_Transmit
 925              	.LVL55:
 535:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 926              		.loc 1 535 2 is_stmt 1 view .LVU212
 927 0024 0121     		movs	r1, #1
 928 0026 1448     		ldr	r0, .L57+16
 929 0028 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 930              	.LVL56:
 536:Src/main.c    **** 	if(hcan == &hcan1){
 931              		.loc 1 536 2 view .LVU213
 932              		.loc 1 536 4 is_stmt 0 view .LVU214
 933 002c 134B     		ldr	r3, .L57+20
 934 002e 9C42     		cmp	r4, r3
 935 0030 00D0     		beq	.L56
 936              	.L52:
 537:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 538:Src/main.c    **** 			if(CAN_Send_IT(&can1) == 0){
 539:Src/main.c    **** 				//TODO: implementare errore
 540:Src/main.c    **** 			}else{
 541:Src/main.c    **** 				HAL_UART_Transmit(&huart3,(uint8_t*)("high\r\n"), strlen("high\r\n"), 10);
 542:Src/main.c    **** 			}
 543:Src/main.c    **** 		}else if(fifoTxDataCAN_normal_pop(&can1)){
 544:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 545:Src/main.c    **** 			if(CAN_Send_IT(&can1) == 0){
ARM GAS  /tmp/cczspUdn.s 			page 29


 546:Src/main.c    **** 				//TODO: implementare errore
 547:Src/main.c    **** 			}
 548:Src/main.c    **** 		}else{
 549:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"), strlen("Fifo vuota\r\n"), 10);
 550:Src/main.c    **** 		}
 551:Src/main.c    **** 	}/*else{
 552:Src/main.c    **** 	HAL_UART_Transmit(&huart3,(uint8_t*)("Messaggio trasmesso\r\n"), strlen("Messaggio trasmesso\r\n")
 553:Src/main.c    **** 		//HAL_GPIO_TogglePin(USER_LED_4_GPIO_Port, USER_LED_4_Pin);
 554:Src/main.c    **** 		fifoDataType fifodata;
 555:Src/main.c    **** 		if(fifoTxDataCAN3_high_pop(&fifoCAN3, &fifodata)){
 556:Src/main.c    **** 			for(int i = 0; i < 8; i++){
 557:Src/main.c    **** 				can3.dataTx[i] = fifodata.data[i];
 558:Src/main.c    **** 			}
 559:Src/main.c    **** 			if(CAN_Send_IT(&can3, fifodata.id) == 0){
 560:Src/main.c    **** 				//TODO: implementare errore
 561:Src/main.c    **** 			}
 562:Src/main.c    **** 		}else if(fifoTxDataCAN3_normal_pop(&fifoCAN3, &fifodata)){
 563:Src/main.c    **** 			HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n"), 
 564:Src/main.c    **** 			for(int i = 0; i < 8; i++){
 565:Src/main.c    **** 				can3.dataTx[i] = fifodata.data[i];
 566:Src/main.c    **** 			}
 567:Src/main.c    **** 			if(CAN_Send_IT(&can3, fifodata.id) == 0){
 568:Src/main.c    **** 				//TODO: implementare errore
 569:Src/main.c    **** 			}
 570:Src/main.c    **** 		}else{
 571:Src/main.c    **** 			//TODO: riattivare interrupt
 572:Src/main.c    **** 			HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"), strlen("Fifo vuota\r\n"), 10);
 573:Src/main.c    **** 		}*/
 574:Src/main.c    **** 	//}
 575:Src/main.c    **** }
 937              		.loc 1 575 1 view .LVU215
 938 0032 38BD     		pop	{r3, r4, r5, pc}
 939              	.LVL57:
 940              	.L56:
 537:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 941              		.loc 1 537 3 is_stmt 1 view .LVU216
 537:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 942              		.loc 1 537 6 is_stmt 0 view .LVU217
 943 0034 0D48     		ldr	r0, .L57+4
 944 0036 FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 945              	.LVL58:
 537:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 946              		.loc 1 537 5 view .LVU218
 947 003a 58B1     		cbz	r0, .L54
 538:Src/main.c    **** 				//TODO: implementare errore
 948              		.loc 1 538 4 is_stmt 1 view .LVU219
 538:Src/main.c    **** 				//TODO: implementare errore
 949              		.loc 1 538 7 is_stmt 0 view .LVU220
 950 003c 0B48     		ldr	r0, .L57+4
 951 003e FFF7FEFF 		bl	CAN_Send_IT
 952              	.LVL59:
 538:Src/main.c    **** 				//TODO: implementare errore
 953              		.loc 1 538 6 view .LVU221
 954 0042 0028     		cmp	r0, #0
 955 0044 F5D0     		beq	.L52
 541:Src/main.c    **** 			}
 956              		.loc 1 541 5 is_stmt 1 view .LVU222
ARM GAS  /tmp/cczspUdn.s 			page 30


 957 0046 0A23     		movs	r3, #10
 958 0048 0622     		movs	r2, #6
 959 004a 0D49     		ldr	r1, .L57+24
 960 004c 0948     		ldr	r0, .L57+12
 961 004e FFF7FEFF 		bl	HAL_UART_Transmit
 962              	.LVL60:
 963 0052 EEE7     		b	.L52
 964              	.L54:
 543:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 965              		.loc 1 543 9 view .LVU223
 543:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 966              		.loc 1 543 12 is_stmt 0 view .LVU224
 967 0054 0548     		ldr	r0, .L57+4
 968 0056 FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 969              	.LVL61:
 543:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 970              		.loc 1 543 11 view .LVU225
 971 005a 0028     		cmp	r0, #0
 972 005c E9D0     		beq	.L52
 545:Src/main.c    **** 				//TODO: implementare errore
 973              		.loc 1 545 4 is_stmt 1 view .LVU226
 545:Src/main.c    **** 				//TODO: implementare errore
 974              		.loc 1 545 7 is_stmt 0 view .LVU227
 975 005e 0348     		ldr	r0, .L57+4
 976 0060 FFF7FEFF 		bl	CAN_Send_IT
 977              	.LVL62:
 547:Src/main.c    **** 		}else{
 978              		.loc 1 547 4 is_stmt 1 view .LVU228
 550:Src/main.c    **** 	}/*else{
 979              		.loc 1 550 3 view .LVU229
 980              		.loc 1 575 1 is_stmt 0 view .LVU230
 981 0064 E5E7     		b	.L52
 982              	.L58:
 983 0066 00BF     		.align	2
 984              	.L57:
 985 0068 00000000 		.word	txt
 986 006c 00000000 		.word	can1
 987 0070 00000000 		.word	.LC5
 988 0074 00000000 		.word	huart3
 989 0078 00040240 		.word	1073873920
 990 007c 00000000 		.word	hcan1
 991 0080 0C000000 		.word	.LC6
 992              		.cfi_endproc
 993              	.LFE157:
 995              		.section	.rodata.HAL_CAN_TxMailbox1CompleteCallback.str1.4,"aMS",%progbits,1
 996              		.align	2
 997              	.LC7:
 998 0000 6D62313A 		.ascii	"mb1: %d %d\015\012\000"
 998      20256420 
 998      25640D0A 
 998      00
 999              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 1000              		.align	1
 1001              		.global	HAL_CAN_TxMailbox1CompleteCallback
 1002              		.syntax unified
 1003              		.thumb
 1004              		.thumb_func
ARM GAS  /tmp/cczspUdn.s 			page 31


 1005              		.fpu fpv5-d16
 1007              	HAL_CAN_TxMailbox1CompleteCallback:
 1008              	.LVL63:
 1009              	.LFB158:
 576:Src/main.c    **** void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan){
 1010              		.loc 1 576 65 is_stmt 1 view -0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014              		.loc 1 576 65 is_stmt 0 view .LVU232
 1015 0000 38B5     		push	{r3, r4, r5, lr}
 1016              	.LCFI13:
 1017              		.cfi_def_cfa_offset 16
 1018              		.cfi_offset 3, -16
 1019              		.cfi_offset 4, -12
 1020              		.cfi_offset 5, -8
 1021              		.cfi_offset 14, -4
 1022 0002 0446     		mov	r4, r0
 577:Src/main.c    **** 	sprintf(txt,"mb1: %d %d\r\n" ,can1.fifo.txTailNormal, can1.fifo.txHeadNormal);
 1023              		.loc 1 577 2 is_stmt 1 view .LVU233
 1024              		.loc 1 577 41 is_stmt 0 view .LVU234
 1025 0004 194A     		ldr	r2, .L64
 1026              		.loc 1 577 2 view .LVU235
 1027 0006 1A4D     		ldr	r5, .L64+4
 1028 0008 92F86230 		ldrb	r3, [r2, #98]	@ zero_extendqisi2
 1029 000c 92F86320 		ldrb	r2, [r2, #99]	@ zero_extendqisi2
 1030 0010 1849     		ldr	r1, .L64+8
 1031 0012 2846     		mov	r0, r5
 1032              	.LVL64:
 1033              		.loc 1 577 2 view .LVU236
 1034 0014 FFF7FEFF 		bl	sprintf
 1035              	.LVL65:
 578:Src/main.c    **** 	HAL_UART_Transmit(&huart3,(uint8_t*)(txt), strlen(txt), 10);
 1036              		.loc 1 578 2 is_stmt 1 view .LVU237
 1037              		.loc 1 578 45 is_stmt 0 view .LVU238
 1038 0018 2846     		mov	r0, r5
 1039 001a FFF7FEFF 		bl	strlen
 1040              	.LVL66:
 1041              		.loc 1 578 2 view .LVU239
 1042 001e 0A23     		movs	r3, #10
 1043 0020 82B2     		uxth	r2, r0
 1044 0022 2946     		mov	r1, r5
 1045 0024 1448     		ldr	r0, .L64+12
 1046 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 1047              	.LVL67:
 579:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 1048              		.loc 1 579 2 is_stmt 1 view .LVU240
 1049 002a 0121     		movs	r1, #1
 1050 002c 1348     		ldr	r0, .L64+16
 1051 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1052              	.LVL68:
 580:Src/main.c    **** 	if(hcan == &hcan1){
 1053              		.loc 1 580 2 view .LVU241
 1054              		.loc 1 580 4 is_stmt 0 view .LVU242
 1055 0032 134B     		ldr	r3, .L64+20
 1056 0034 9C42     		cmp	r4, r3
 1057 0036 00D0     		beq	.L63
ARM GAS  /tmp/cczspUdn.s 			page 32


 1058              	.L59:
 581:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 582:Src/main.c    **** 			if(CAN_Send_IT(&can1) == 0){
 583:Src/main.c    **** 				//TODO: implementare errore
 584:Src/main.c    **** 			}else{
 585:Src/main.c    **** 				HAL_UART_Transmit(&huart3,(uint8_t*)("high\r\n"), strlen("high\r\n"), 10);
 586:Src/main.c    **** 			}
 587:Src/main.c    **** 		}else if(fifoTxDataCAN_normal_pop(&can1)){
 588:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 589:Src/main.c    **** 			if(CAN_Send_IT(&can1) == 0){
 590:Src/main.c    **** 				//TODO: implementare errore
 591:Src/main.c    **** 			}
 592:Src/main.c    **** 		}else{
 593:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"), strlen("Fifo vuota\r\n"), 10);
 594:Src/main.c    **** 		}
 595:Src/main.c    **** 	}
 596:Src/main.c    **** }
 1059              		.loc 1 596 1 view .LVU243
 1060 0038 38BD     		pop	{r3, r4, r5, pc}
 1061              	.LVL69:
 1062              	.L63:
 581:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 1063              		.loc 1 581 3 is_stmt 1 view .LVU244
 581:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 1064              		.loc 1 581 6 is_stmt 0 view .LVU245
 1065 003a 0C48     		ldr	r0, .L64
 1066 003c FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 1067              	.LVL70:
 581:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 1068              		.loc 1 581 5 view .LVU246
 1069 0040 58B1     		cbz	r0, .L61
 582:Src/main.c    **** 				//TODO: implementare errore
 1070              		.loc 1 582 4 is_stmt 1 view .LVU247
 582:Src/main.c    **** 				//TODO: implementare errore
 1071              		.loc 1 582 7 is_stmt 0 view .LVU248
 1072 0042 0A48     		ldr	r0, .L64
 1073 0044 FFF7FEFF 		bl	CAN_Send_IT
 1074              	.LVL71:
 582:Src/main.c    **** 				//TODO: implementare errore
 1075              		.loc 1 582 6 view .LVU249
 1076 0048 0028     		cmp	r0, #0
 1077 004a F5D0     		beq	.L59
 585:Src/main.c    **** 			}
 1078              		.loc 1 585 5 is_stmt 1 view .LVU250
 1079 004c 0A23     		movs	r3, #10
 1080 004e 0622     		movs	r2, #6
 1081 0050 0C49     		ldr	r1, .L64+24
 1082 0052 0948     		ldr	r0, .L64+12
 1083 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 1084              	.LVL72:
 1085 0058 EEE7     		b	.L59
 1086              	.L61:
 587:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 1087              		.loc 1 587 9 view .LVU251
 587:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 1088              		.loc 1 587 12 is_stmt 0 view .LVU252
 1089 005a 0448     		ldr	r0, .L64
ARM GAS  /tmp/cczspUdn.s 			page 33


 1090 005c FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 1091              	.LVL73:
 587:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 1092              		.loc 1 587 11 view .LVU253
 1093 0060 0028     		cmp	r0, #0
 1094 0062 E9D0     		beq	.L59
 589:Src/main.c    **** 				//TODO: implementare errore
 1095              		.loc 1 589 4 is_stmt 1 view .LVU254
 589:Src/main.c    **** 				//TODO: implementare errore
 1096              		.loc 1 589 7 is_stmt 0 view .LVU255
 1097 0064 0148     		ldr	r0, .L64
 1098 0066 FFF7FEFF 		bl	CAN_Send_IT
 1099              	.LVL74:
 591:Src/main.c    **** 		}else{
 1100              		.loc 1 591 4 is_stmt 1 view .LVU256
 594:Src/main.c    **** 	}
 1101              		.loc 1 594 3 view .LVU257
 1102              		.loc 1 596 1 is_stmt 0 view .LVU258
 1103 006a E5E7     		b	.L59
 1104              	.L65:
 1105              		.align	2
 1106              	.L64:
 1107 006c 00000000 		.word	can1
 1108 0070 00000000 		.word	txt
 1109 0074 00000000 		.word	.LC7
 1110 0078 00000000 		.word	huart3
 1111 007c 00040240 		.word	1073873920
 1112 0080 00000000 		.word	hcan1
 1113 0084 0C000000 		.word	.LC6
 1114              		.cfi_endproc
 1115              	.LFE158:
 1117              		.section	.rodata.HAL_CAN_TxMailbox2CompleteCallback.str1.4,"aMS",%progbits,1
 1118              		.align	2
 1119              	.LC8:
 1120 0000 6D62323A 		.ascii	"mb2: %d %d\015\012\000"
 1120      20256420 
 1120      25640D0A 
 1120      00
 1121              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 1122              		.align	1
 1123              		.global	HAL_CAN_TxMailbox2CompleteCallback
 1124              		.syntax unified
 1125              		.thumb
 1126              		.thumb_func
 1127              		.fpu fpv5-d16
 1129              	HAL_CAN_TxMailbox2CompleteCallback:
 1130              	.LVL75:
 1131              	.LFB159:
 597:Src/main.c    **** void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan){
 1132              		.loc 1 597 65 is_stmt 1 view -0
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 0
 1135              		@ frame_needed = 0, uses_anonymous_args = 0
 1136              		.loc 1 597 65 is_stmt 0 view .LVU260
 1137 0000 38B5     		push	{r3, r4, r5, lr}
 1138              	.LCFI14:
 1139              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cczspUdn.s 			page 34


 1140              		.cfi_offset 3, -16
 1141              		.cfi_offset 4, -12
 1142              		.cfi_offset 5, -8
 1143              		.cfi_offset 14, -4
 1144 0002 0446     		mov	r4, r0
 598:Src/main.c    **** 	sprintf(txt,"mb2: %d %d\r\n", can1.fifo.txTailNormal, can1.fifo.txHeadNormal);
 1145              		.loc 1 598 2 is_stmt 1 view .LVU261
 1146              		.loc 1 598 41 is_stmt 0 view .LVU262
 1147 0004 194A     		ldr	r2, .L71
 1148              		.loc 1 598 2 view .LVU263
 1149 0006 1A4D     		ldr	r5, .L71+4
 1150 0008 92F86230 		ldrb	r3, [r2, #98]	@ zero_extendqisi2
 1151 000c 92F86320 		ldrb	r2, [r2, #99]	@ zero_extendqisi2
 1152 0010 1849     		ldr	r1, .L71+8
 1153 0012 2846     		mov	r0, r5
 1154              	.LVL76:
 1155              		.loc 1 598 2 view .LVU264
 1156 0014 FFF7FEFF 		bl	sprintf
 1157              	.LVL77:
 599:Src/main.c    **** 	HAL_UART_Transmit(&huart3,(uint8_t*)(txt), strlen(txt), 10);
 1158              		.loc 1 599 2 is_stmt 1 view .LVU265
 1159              		.loc 1 599 45 is_stmt 0 view .LVU266
 1160 0018 2846     		mov	r0, r5
 1161 001a FFF7FEFF 		bl	strlen
 1162              	.LVL78:
 1163              		.loc 1 599 2 view .LVU267
 1164 001e 0A23     		movs	r3, #10
 1165 0020 82B2     		uxth	r2, r0
 1166 0022 2946     		mov	r1, r5
 1167 0024 1448     		ldr	r0, .L71+12
 1168 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 1169              	.LVL79:
 600:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 1170              		.loc 1 600 2 is_stmt 1 view .LVU268
 1171 002a 0121     		movs	r1, #1
 1172 002c 1348     		ldr	r0, .L71+16
 1173 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1174              	.LVL80:
 601:Src/main.c    **** 	if(hcan == &hcan1){
 1175              		.loc 1 601 2 view .LVU269
 1176              		.loc 1 601 4 is_stmt 0 view .LVU270
 1177 0032 134B     		ldr	r3, .L71+20
 1178 0034 9C42     		cmp	r4, r3
 1179 0036 00D0     		beq	.L70
 1180              	.L66:
 602:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 603:Src/main.c    **** 			if(CAN_Send_IT(&can1) == 0){
 604:Src/main.c    **** 				//TODO: implementare errore
 605:Src/main.c    **** 			}else{
 606:Src/main.c    **** 				HAL_UART_Transmit(&huart3,(uint8_t*)("high\r\n"), strlen("high\r\n"), 10);
 607:Src/main.c    **** 			}
 608:Src/main.c    **** 		}else if(fifoTxDataCAN_normal_pop(&can1)){
 609:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 610:Src/main.c    **** 			if(CAN_Send_IT(&can1) == 0){
 611:Src/main.c    **** 				//TODO: implementare errore
 612:Src/main.c    **** 			}
 613:Src/main.c    **** 		}else{
ARM GAS  /tmp/cczspUdn.s 			page 35


 614:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"), strlen("Fifo vuota\r\n"), 10);
 615:Src/main.c    **** 		}
 616:Src/main.c    **** 	}
 617:Src/main.c    **** }
 1181              		.loc 1 617 1 view .LVU271
 1182 0038 38BD     		pop	{r3, r4, r5, pc}
 1183              	.LVL81:
 1184              	.L70:
 602:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 1185              		.loc 1 602 3 is_stmt 1 view .LVU272
 602:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 1186              		.loc 1 602 6 is_stmt 0 view .LVU273
 1187 003a 0C48     		ldr	r0, .L71
 1188 003c FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 1189              	.LVL82:
 602:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 1190              		.loc 1 602 5 view .LVU274
 1191 0040 58B1     		cbz	r0, .L68
 603:Src/main.c    **** 				//TODO: implementare errore
 1192              		.loc 1 603 4 is_stmt 1 view .LVU275
 603:Src/main.c    **** 				//TODO: implementare errore
 1193              		.loc 1 603 7 is_stmt 0 view .LVU276
 1194 0042 0A48     		ldr	r0, .L71
 1195 0044 FFF7FEFF 		bl	CAN_Send_IT
 1196              	.LVL83:
 603:Src/main.c    **** 				//TODO: implementare errore
 1197              		.loc 1 603 6 view .LVU277
 1198 0048 0028     		cmp	r0, #0
 1199 004a F5D0     		beq	.L66
 606:Src/main.c    **** 			}
 1200              		.loc 1 606 5 is_stmt 1 view .LVU278
 1201 004c 0A23     		movs	r3, #10
 1202 004e 0622     		movs	r2, #6
 1203 0050 0C49     		ldr	r1, .L71+24
 1204 0052 0948     		ldr	r0, .L71+12
 1205 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 1206              	.LVL84:
 1207 0058 EEE7     		b	.L66
 1208              	.L68:
 608:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 1209              		.loc 1 608 9 view .LVU279
 608:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 1210              		.loc 1 608 12 is_stmt 0 view .LVU280
 1211 005a 0448     		ldr	r0, .L71
 1212 005c FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 1213              	.LVL85:
 608:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 1214              		.loc 1 608 11 view .LVU281
 1215 0060 0028     		cmp	r0, #0
 1216 0062 E9D0     		beq	.L66
 610:Src/main.c    **** 				//TODO: implementare errore
 1217              		.loc 1 610 4 is_stmt 1 view .LVU282
 610:Src/main.c    **** 				//TODO: implementare errore
 1218              		.loc 1 610 7 is_stmt 0 view .LVU283
 1219 0064 0148     		ldr	r0, .L71
 1220 0066 FFF7FEFF 		bl	CAN_Send_IT
 1221              	.LVL86:
ARM GAS  /tmp/cczspUdn.s 			page 36


 612:Src/main.c    **** 		}else{
 1222              		.loc 1 612 4 is_stmt 1 view .LVU284
 615:Src/main.c    **** 	}
 1223              		.loc 1 615 3 view .LVU285
 1224              		.loc 1 617 1 is_stmt 0 view .LVU286
 1225 006a E5E7     		b	.L66
 1226              	.L72:
 1227              		.align	2
 1228              	.L71:
 1229 006c 00000000 		.word	can1
 1230 0070 00000000 		.word	txt
 1231 0074 00000000 		.word	.LC8
 1232 0078 00000000 		.word	huart3
 1233 007c 00040240 		.word	1073873920
 1234 0080 00000000 		.word	hcan1
 1235 0084 0C000000 		.word	.LC6
 1236              		.cfi_endproc
 1237              	.LFE159:
 1239              		.section	.rodata.HAL_CAN_ErrorCallback.str1.4,"aMS",%progbits,1
 1240              		.align	2
 1241              	.LC9:
 1242 0000 2D2D2D20 		.ascii	"--- Errore ---: %d\015\012\000"
 1242      4572726F 
 1242      7265202D 
 1242      2D2D3A20 
 1242      25640D0A 
 1243              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 1244              		.align	1
 1245              		.global	HAL_CAN_ErrorCallback
 1246              		.syntax unified
 1247              		.thumb
 1248              		.thumb_func
 1249              		.fpu fpv5-d16
 1251              	HAL_CAN_ErrorCallback:
 1252              	.LVL87:
 1253              	.LFB160:
 618:Src/main.c    **** void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan){
 1254              		.loc 1 618 52 is_stmt 1 view -0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 0
 1257              		@ frame_needed = 0, uses_anonymous_args = 0
 1258              		.loc 1 618 52 is_stmt 0 view .LVU288
 1259 0000 38B5     		push	{r3, r4, r5, lr}
 1260              	.LCFI15:
 1261              		.cfi_def_cfa_offset 16
 1262              		.cfi_offset 3, -16
 1263              		.cfi_offset 4, -12
 1264              		.cfi_offset 5, -8
 1265              		.cfi_offset 14, -4
 1266 0002 0446     		mov	r4, r0
 619:Src/main.c    **** 	sprintf(txt,"--- Errore ---: %d\r\n",(int)hcan->ErrorCode);
 1267              		.loc 1 619 2 is_stmt 1 view .LVU289
 1268              		.loc 1 619 48 is_stmt 0 view .LVU290
 1269 0004 426A     		ldr	r2, [r0, #36]
 1270              		.loc 1 619 2 view .LVU291
 1271 0006 0B4D     		ldr	r5, .L77
 1272 0008 0B49     		ldr	r1, .L77+4
ARM GAS  /tmp/cczspUdn.s 			page 37


 1273 000a 2846     		mov	r0, r5
 1274              	.LVL88:
 1275              		.loc 1 619 2 view .LVU292
 1276 000c FFF7FEFF 		bl	sprintf
 1277              	.LVL89:
 620:Src/main.c    **** 	HAL_UART_Transmit(&huart3,(uint8_t*)(txt), strlen(txt), 10);
 1278              		.loc 1 620 2 is_stmt 1 view .LVU293
 1279              		.loc 1 620 45 is_stmt 0 view .LVU294
 1280 0010 2846     		mov	r0, r5
 1281 0012 FFF7FEFF 		bl	strlen
 1282              	.LVL90:
 1283              		.loc 1 620 2 view .LVU295
 1284 0016 0A23     		movs	r3, #10
 1285 0018 82B2     		uxth	r2, r0
 1286 001a 2946     		mov	r1, r5
 1287 001c 0748     		ldr	r0, .L77+8
 1288 001e FFF7FEFF 		bl	HAL_UART_Transmit
 1289              	.LVL91:
 621:Src/main.c    **** 	if(hcan == &hcan1){
 1290              		.loc 1 621 2 is_stmt 1 view .LVU296
 1291              		.loc 1 621 4 is_stmt 0 view .LVU297
 1292 0022 074B     		ldr	r3, .L77+12
 1293 0024 9C42     		cmp	r4, r3
 1294 0026 00D0     		beq	.L76
 1295              	.L73:
 622:Src/main.c    **** 		CAN_Send_Bck(&can1);
 623:Src/main.c    **** 	}
 624:Src/main.c    **** }
 1296              		.loc 1 624 1 view .LVU298
 1297 0028 38BD     		pop	{r3, r4, r5, pc}
 1298              	.LVL92:
 1299              	.L76:
 622:Src/main.c    **** 		CAN_Send_Bck(&can1);
 1300              		.loc 1 622 3 is_stmt 1 view .LVU299
 1301 002a 0648     		ldr	r0, .L77+16
 1302 002c FFF7FEFF 		bl	CAN_Send_Bck
 1303              	.LVL93:
 1304              		.loc 1 624 1 is_stmt 0 view .LVU300
 1305 0030 FAE7     		b	.L73
 1306              	.L78:
 1307 0032 00BF     		.align	2
 1308              	.L77:
 1309 0034 00000000 		.word	txt
 1310 0038 00000000 		.word	.LC9
 1311 003c 00000000 		.word	huart3
 1312 0040 00000000 		.word	hcan1
 1313 0044 00000000 		.word	can1
 1314              		.cfi_endproc
 1315              	.LFE160:
 1317              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1318              		.align	1
 1319              		.global	HAL_UART_RxCpltCallback
 1320              		.syntax unified
 1321              		.thumb
 1322              		.thumb_func
 1323              		.fpu fpv5-d16
 1325              	HAL_UART_RxCpltCallback:
ARM GAS  /tmp/cczspUdn.s 			page 38


 1326              	.LVL94:
 1327              	.LFB161:
 625:Src/main.c    **** 
 626:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 1328              		.loc 1 626 56 is_stmt 1 view -0
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 0
 1331              		@ frame_needed = 0, uses_anonymous_args = 0
 1332              		.loc 1 626 56 is_stmt 0 view .LVU302
 1333 0000 08B5     		push	{r3, lr}
 1334              	.LCFI16:
 1335              		.cfi_def_cfa_offset 8
 1336              		.cfi_offset 3, -8
 1337              		.cfi_offset 14, -4
 627:Src/main.c    **** 	if(huart == &huart3){
 1338              		.loc 1 627 2 is_stmt 1 view .LVU303
 1339              		.loc 1 627 4 is_stmt 0 view .LVU304
 1340 0002 174B     		ldr	r3, .L86
 1341 0004 8342     		cmp	r3, r0
 1342 0006 00D0     		beq	.L85
 1343              	.LVL95:
 1344              	.L79:
 628:Src/main.c    **** 		if((debug_rx[debug_rx_count] == '\r') | (debug_rx[debug_rx_count] == '\n')){
 629:Src/main.c    **** 			debug_msg_arrived = 1; //set flag
 630:Src/main.c    **** 			debug_rx[debug_rx_count] = 0; //set end of the string
 631:Src/main.c    **** 			debug_rx_count = 0; //reset counter
 632:Src/main.c    **** 		}else{
 633:Src/main.c    **** 			if(debug_rx_count == MAX_DEBUG_RX_L){
 634:Src/main.c    **** 				//overflow
 635:Src/main.c    **** 				debug_rx_count = 0; //reset counter for overflow
 636:Src/main.c    **** 			}else{
 637:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t*)&debug_rx[debug_rx_count], 1, 10); //retransmit char
 638:Src/main.c    **** 				debug_rx_count++;
 639:Src/main.c    **** 			}
 640:Src/main.c    **** 		}
 641:Src/main.c    **** 		HAL_UART_Receive_IT(&huart3,(uint8_t*) &debug_rx[debug_rx_count], 1); //activate rx interrupt for
 642:Src/main.c    **** 	}
 643:Src/main.c    **** }
 1345              		.loc 1 643 1 view .LVU305
 1346 0008 08BD     		pop	{r3, pc}
 1347              	.LVL96:
 1348              	.L85:
 628:Src/main.c    **** 		if((debug_rx[debug_rx_count] == '\r') | (debug_rx[debug_rx_count] == '\n')){
 1349              		.loc 1 628 3 is_stmt 1 view .LVU306
 628:Src/main.c    **** 		if((debug_rx[debug_rx_count] == '\r') | (debug_rx[debug_rx_count] == '\n')){
 1350              		.loc 1 628 15 is_stmt 0 view .LVU307
 1351 000a 164B     		ldr	r3, .L86+4
 1352 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1353 000e 164B     		ldr	r3, .L86+8
 1354 0010 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 628:Src/main.c    **** 		if((debug_rx[debug_rx_count] == '\r') | (debug_rx[debug_rx_count] == '\n')){
 1355              		.loc 1 628 5 view .LVU308
 1356 0012 0A2B     		cmp	r3, #10
 1357 0014 18BF     		it	ne
 1358 0016 0D2B     		cmpne	r3, #13
 1359 0018 10D1     		bne	.L81
 629:Src/main.c    **** 			debug_rx[debug_rx_count] = 0; //set end of the string
ARM GAS  /tmp/cczspUdn.s 			page 39


 1360              		.loc 1 629 4 is_stmt 1 view .LVU309
 629:Src/main.c    **** 			debug_rx[debug_rx_count] = 0; //set end of the string
 1361              		.loc 1 629 22 is_stmt 0 view .LVU310
 1362 001a 144B     		ldr	r3, .L86+12
 1363 001c 0122     		movs	r2, #1
 1364 001e 1A70     		strb	r2, [r3]
 630:Src/main.c    **** 			debug_rx_count = 0; //reset counter
 1365              		.loc 1 630 4 is_stmt 1 view .LVU311
 630:Src/main.c    **** 			debug_rx_count = 0; //reset counter
 1366              		.loc 1 630 29 is_stmt 0 view .LVU312
 1367 0020 0023     		movs	r3, #0
 1368 0022 114A     		ldr	r2, .L86+8
 1369 0024 5354     		strb	r3, [r2, r1]
 631:Src/main.c    **** 		}else{
 1370              		.loc 1 631 4 is_stmt 1 view .LVU313
 631:Src/main.c    **** 		}else{
 1371              		.loc 1 631 19 is_stmt 0 view .LVU314
 1372 0026 0F4A     		ldr	r2, .L86+4
 1373 0028 1370     		strb	r3, [r2]
 1374              	.LVL97:
 1375              	.L82:
 641:Src/main.c    **** 	}
 1376              		.loc 1 641 3 is_stmt 1 view .LVU315
 641:Src/main.c    **** 	}
 1377              		.loc 1 641 51 is_stmt 0 view .LVU316
 1378 002a 0E4B     		ldr	r3, .L86+4
 1379 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 641:Src/main.c    **** 	}
 1380              		.loc 1 641 3 view .LVU317
 1381 002e 0122     		movs	r2, #1
 1382 0030 0D49     		ldr	r1, .L86+8
 1383 0032 1944     		add	r1, r1, r3
 1384 0034 0A48     		ldr	r0, .L86
 1385 0036 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1386              	.LVL98:
 1387              		.loc 1 643 1 view .LVU318
 1388 003a E5E7     		b	.L79
 1389              	.LVL99:
 1390              	.L81:
 633:Src/main.c    **** 				//overflow
 1391              		.loc 1 633 4 is_stmt 1 view .LVU319
 633:Src/main.c    **** 				//overflow
 1392              		.loc 1 633 6 is_stmt 0 view .LVU320
 1393 003c 1429     		cmp	r1, #20
 1394 003e 03D1     		bne	.L83
 635:Src/main.c    **** 			}else{
 1395              		.loc 1 635 5 is_stmt 1 view .LVU321
 635:Src/main.c    **** 			}else{
 1396              		.loc 1 635 20 is_stmt 0 view .LVU322
 1397 0040 084B     		ldr	r3, .L86+4
 1398 0042 0022     		movs	r2, #0
 1399 0044 1A70     		strb	r2, [r3]
 1400 0046 F0E7     		b	.L82
 1401              	.L83:
 637:Src/main.c    **** 				debug_rx_count++;
 1402              		.loc 1 637 5 is_stmt 1 view .LVU323
 1403 0048 0A23     		movs	r3, #10
ARM GAS  /tmp/cczspUdn.s 			page 40


 1404 004a 0122     		movs	r2, #1
 1405 004c 0648     		ldr	r0, .L86+8
 1406              	.LVL100:
 637:Src/main.c    **** 				debug_rx_count++;
 1407              		.loc 1 637 5 is_stmt 0 view .LVU324
 1408 004e 0144     		add	r1, r1, r0
 1409 0050 0348     		ldr	r0, .L86
 1410 0052 FFF7FEFF 		bl	HAL_UART_Transmit
 1411              	.LVL101:
 638:Src/main.c    **** 			}
 1412              		.loc 1 638 5 is_stmt 1 view .LVU325
 638:Src/main.c    **** 			}
 1413              		.loc 1 638 19 is_stmt 0 view .LVU326
 1414 0056 034A     		ldr	r2, .L86+4
 1415 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1416 005a 0133     		adds	r3, r3, #1
 1417 005c 1370     		strb	r3, [r2]
 1418 005e E4E7     		b	.L82
 1419              	.L87:
 1420              		.align	2
 1421              	.L86:
 1422 0060 00000000 		.word	huart3
 1423 0064 00000000 		.word	debug_rx_count
 1424 0068 00000000 		.word	debug_rx
 1425 006c 00000000 		.word	debug_msg_arrived
 1426              		.cfi_endproc
 1427              	.LFE161:
 1429              		.section	.text.Error_Handler,"ax",%progbits
 1430              		.align	1
 1431              		.global	Error_Handler
 1432              		.syntax unified
 1433              		.thumb
 1434              		.thumb_func
 1435              		.fpu fpv5-d16
 1437              	Error_Handler:
 1438              	.LFB162:
 644:Src/main.c    **** /* USER CODE END 4 */
 645:Src/main.c    **** 
 646:Src/main.c    **** /**
 647:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 648:Src/main.c    ****   * @retval None
 649:Src/main.c    ****   */
 650:Src/main.c    **** void Error_Handler(void)
 651:Src/main.c    **** {
 1439              		.loc 1 651 1 is_stmt 1 view -0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 0
 1442              		@ frame_needed = 0, uses_anonymous_args = 0
 1443 0000 10B5     		push	{r4, lr}
 1444              	.LCFI17:
 1445              		.cfi_def_cfa_offset 8
 1446              		.cfi_offset 4, -8
 1447              		.cfi_offset 14, -4
 652:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 653:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 654:Src/main.c    ****   HAL_GPIO_TogglePin(LED_blue_GPIO_Port,LED_blue_Pin);
 1448              		.loc 1 654 3 view .LVU328
ARM GAS  /tmp/cczspUdn.s 			page 41


 1449 0002 094C     		ldr	r4, .L90
 1450 0004 8021     		movs	r1, #128
 1451 0006 2046     		mov	r0, r4
 1452 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1453              	.LVL102:
 655:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 1454              		.loc 1 655 2 view .LVU329
 1455 000c 0121     		movs	r1, #1
 1456 000e 2046     		mov	r0, r4
 1457 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1458              	.LVL103:
 656:Src/main.c    ****   HAL_GPIO_TogglePin(LED_red_GPIO_Port, LED_red_Pin);
 1459              		.loc 1 656 3 view .LVU330
 1460 0014 4FF48041 		mov	r1, #16384
 1461 0018 2046     		mov	r0, r4
 1462 001a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1463              	.LVL104:
 657:Src/main.c    **** 
 658:Src/main.c    **** 	HAL_Delay(100);
 1464              		.loc 1 658 2 view .LVU331
 1465 001e 6420     		movs	r0, #100
 1466 0020 FFF7FEFF 		bl	HAL_Delay
 1467              	.LVL105:
 659:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 660:Src/main.c    **** }
 1468              		.loc 1 660 1 is_stmt 0 view .LVU332
 1469 0024 10BD     		pop	{r4, pc}
 1470              	.L91:
 1471 0026 00BF     		.align	2
 1472              	.L90:
 1473 0028 00040240 		.word	1073873920
 1474              		.cfi_endproc
 1475              	.LFE162:
 1477              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 1478              		.align	1
 1479              		.syntax unified
 1480              		.thumb
 1481              		.thumb_func
 1482              		.fpu fpv5-d16
 1484              	MX_USART3_UART_Init:
 1485              	.LFB150:
 380:Src/main.c    **** 
 1486              		.loc 1 380 1 is_stmt 1 view -0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 0
 1489              		@ frame_needed = 0, uses_anonymous_args = 0
 1490 0000 08B5     		push	{r3, lr}
 1491              	.LCFI18:
 1492              		.cfi_def_cfa_offset 8
 1493              		.cfi_offset 3, -8
 1494              		.cfi_offset 14, -4
 389:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 1495              		.loc 1 389 3 view .LVU334
 389:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 1496              		.loc 1 389 19 is_stmt 0 view .LVU335
 1497 0002 0B48     		ldr	r0, .L96
 1498 0004 0B4B     		ldr	r3, .L96+4
ARM GAS  /tmp/cczspUdn.s 			page 42


 1499 0006 0360     		str	r3, [r0]
 390:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1500              		.loc 1 390 3 is_stmt 1 view .LVU336
 390:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1501              		.loc 1 390 24 is_stmt 0 view .LVU337
 1502 0008 0B4B     		ldr	r3, .L96+8
 1503 000a 4360     		str	r3, [r0, #4]
 391:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1504              		.loc 1 391 3 is_stmt 1 view .LVU338
 391:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1505              		.loc 1 391 26 is_stmt 0 view .LVU339
 1506 000c 0023     		movs	r3, #0
 1507 000e 8360     		str	r3, [r0, #8]
 392:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 1508              		.loc 1 392 3 is_stmt 1 view .LVU340
 392:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 1509              		.loc 1 392 24 is_stmt 0 view .LVU341
 1510 0010 C360     		str	r3, [r0, #12]
 393:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1511              		.loc 1 393 3 is_stmt 1 view .LVU342
 393:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1512              		.loc 1 393 22 is_stmt 0 view .LVU343
 1513 0012 0361     		str	r3, [r0, #16]
 394:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1514              		.loc 1 394 3 is_stmt 1 view .LVU344
 394:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1515              		.loc 1 394 20 is_stmt 0 view .LVU345
 1516 0014 0C22     		movs	r2, #12
 1517 0016 4261     		str	r2, [r0, #20]
 395:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1518              		.loc 1 395 3 is_stmt 1 view .LVU346
 395:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1519              		.loc 1 395 25 is_stmt 0 view .LVU347
 1520 0018 8361     		str	r3, [r0, #24]
 396:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1521              		.loc 1 396 3 is_stmt 1 view .LVU348
 396:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1522              		.loc 1 396 28 is_stmt 0 view .LVU349
 1523 001a C361     		str	r3, [r0, #28]
 397:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1524              		.loc 1 397 3 is_stmt 1 view .LVU350
 397:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1525              		.loc 1 397 30 is_stmt 0 view .LVU351
 1526 001c 0362     		str	r3, [r0, #32]
 398:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1527              		.loc 1 398 3 is_stmt 1 view .LVU352
 398:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1528              		.loc 1 398 38 is_stmt 0 view .LVU353
 1529 001e 4362     		str	r3, [r0, #36]
 399:Src/main.c    ****   {
 1530              		.loc 1 399 3 is_stmt 1 view .LVU354
 399:Src/main.c    ****   {
 1531              		.loc 1 399 7 is_stmt 0 view .LVU355
 1532 0020 FFF7FEFF 		bl	HAL_UART_Init
 1533              	.LVL106:
 399:Src/main.c    ****   {
 1534              		.loc 1 399 6 view .LVU356
ARM GAS  /tmp/cczspUdn.s 			page 43


 1535 0024 00B9     		cbnz	r0, .L95
 1536              	.L92:
 407:Src/main.c    **** 
 1537              		.loc 1 407 1 view .LVU357
 1538 0026 08BD     		pop	{r3, pc}
 1539              	.L95:
 401:Src/main.c    ****   }
 1540              		.loc 1 401 5 is_stmt 1 view .LVU358
 1541 0028 FFF7FEFF 		bl	Error_Handler
 1542              	.LVL107:
 407:Src/main.c    **** 
 1543              		.loc 1 407 1 is_stmt 0 view .LVU359
 1544 002c FBE7     		b	.L92
 1545              	.L97:
 1546 002e 00BF     		.align	2
 1547              	.L96:
 1548 0030 00000000 		.word	huart3
 1549 0034 00480040 		.word	1073760256
 1550 0038 80841E00 		.word	2000000
 1551              		.cfi_endproc
 1552              	.LFE150:
 1554              		.section	.text.MX_CAN1_Init,"ax",%progbits
 1555              		.align	1
 1556              		.syntax unified
 1557              		.thumb
 1558              		.thumb_func
 1559              		.fpu fpv5-d16
 1561              	MX_CAN1_Init:
 1562              	.LFB147:
 270:Src/main.c    **** 
 1563              		.loc 1 270 1 is_stmt 1 view -0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 0
 1566              		@ frame_needed = 0, uses_anonymous_args = 0
 1567 0000 08B5     		push	{r3, lr}
 1568              	.LCFI19:
 1569              		.cfi_def_cfa_offset 8
 1570              		.cfi_offset 3, -8
 1571              		.cfi_offset 14, -4
 279:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 1572              		.loc 1 279 3 view .LVU361
 279:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 1573              		.loc 1 279 18 is_stmt 0 view .LVU362
 1574 0002 0E48     		ldr	r0, .L102
 1575 0004 0E4B     		ldr	r3, .L102+4
 1576 0006 0360     		str	r3, [r0]
 280:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1577              		.loc 1 280 3 is_stmt 1 view .LVU363
 280:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1578              		.loc 1 280 24 is_stmt 0 view .LVU364
 1579 0008 0323     		movs	r3, #3
 1580 000a 4360     		str	r3, [r0, #4]
 281:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1581              		.loc 1 281 3 is_stmt 1 view .LVU365
 281:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1582              		.loc 1 281 19 is_stmt 0 view .LVU366
 1583 000c 0023     		movs	r3, #0
ARM GAS  /tmp/cczspUdn.s 			page 44


 1584 000e 8360     		str	r3, [r0, #8]
 282:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 1585              		.loc 1 282 3 is_stmt 1 view .LVU367
 282:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 1586              		.loc 1 282 28 is_stmt 0 view .LVU368
 1587 0010 C360     		str	r3, [r0, #12]
 283:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1588              		.loc 1 283 3 is_stmt 1 view .LVU369
 283:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1589              		.loc 1 283 23 is_stmt 0 view .LVU370
 1590 0012 4FF46022 		mov	r2, #917504
 1591 0016 0261     		str	r2, [r0, #16]
 284:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1592              		.loc 1 284 3 is_stmt 1 view .LVU371
 284:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1593              		.loc 1 284 23 is_stmt 0 view .LVU372
 1594 0018 4FF48012 		mov	r2, #1048576
 1595 001c 4261     		str	r2, [r0, #20]
 285:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 1596              		.loc 1 285 3 is_stmt 1 view .LVU373
 285:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 1597              		.loc 1 285 32 is_stmt 0 view .LVU374
 1598 001e 0376     		strb	r3, [r0, #24]
 286:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 1599              		.loc 1 286 3 is_stmt 1 view .LVU375
 286:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 1600              		.loc 1 286 25 is_stmt 0 view .LVU376
 1601 0020 4376     		strb	r3, [r0, #25]
 287:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 1602              		.loc 1 287 3 is_stmt 1 view .LVU377
 287:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 1603              		.loc 1 287 25 is_stmt 0 view .LVU378
 1604 0022 0122     		movs	r2, #1
 1605 0024 8276     		strb	r2, [r0, #26]
 288:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1606              		.loc 1 288 3 is_stmt 1 view .LVU379
 288:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1607              		.loc 1 288 33 is_stmt 0 view .LVU380
 1608 0026 C276     		strb	r2, [r0, #27]
 289:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1609              		.loc 1 289 3 is_stmt 1 view .LVU381
 289:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1610              		.loc 1 289 32 is_stmt 0 view .LVU382
 1611 0028 0377     		strb	r3, [r0, #28]
 290:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1612              		.loc 1 290 3 is_stmt 1 view .LVU383
 290:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1613              		.loc 1 290 35 is_stmt 0 view .LVU384
 1614 002a 4377     		strb	r3, [r0, #29]
 291:Src/main.c    ****   {
 1615              		.loc 1 291 3 is_stmt 1 view .LVU385
 291:Src/main.c    ****   {
 1616              		.loc 1 291 7 is_stmt 0 view .LVU386
 1617 002c FFF7FEFF 		bl	HAL_CAN_Init
 1618              	.LVL108:
 291:Src/main.c    ****   {
 1619              		.loc 1 291 6 view .LVU387
ARM GAS  /tmp/cczspUdn.s 			page 45


 1620 0030 00B9     		cbnz	r0, .L101
 1621              	.L98:
 299:Src/main.c    **** 
 1622              		.loc 1 299 1 view .LVU388
 1623 0032 08BD     		pop	{r3, pc}
 1624              	.L101:
 293:Src/main.c    ****   }
 1625              		.loc 1 293 5 is_stmt 1 view .LVU389
 1626 0034 FFF7FEFF 		bl	Error_Handler
 1627              	.LVL109:
 299:Src/main.c    **** 
 1628              		.loc 1 299 1 is_stmt 0 view .LVU390
 1629 0038 FBE7     		b	.L98
 1630              	.L103:
 1631 003a 00BF     		.align	2
 1632              	.L102:
 1633 003c 00000000 		.word	hcan1
 1634 0040 00640040 		.word	1073767424
 1635              		.cfi_endproc
 1636              	.LFE147:
 1638              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1639              		.align	1
 1640              		.syntax unified
 1641              		.thumb
 1642              		.thumb_func
 1643              		.fpu fpv5-d16
 1645              	MX_TIM2_Init:
 1646              	.LFB149:
 335:Src/main.c    **** 
 1647              		.loc 1 335 1 is_stmt 1 view -0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 32
 1650              		@ frame_needed = 0, uses_anonymous_args = 0
 1651 0000 00B5     		push	{lr}
 1652              	.LCFI20:
 1653              		.cfi_def_cfa_offset 4
 1654              		.cfi_offset 14, -4
 1655 0002 89B0     		sub	sp, sp, #36
 1656              	.LCFI21:
 1657              		.cfi_def_cfa_offset 40
 341:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1658              		.loc 1 341 3 view .LVU392
 341:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1659              		.loc 1 341 26 is_stmt 0 view .LVU393
 1660 0004 0023     		movs	r3, #0
 1661 0006 0493     		str	r3, [sp, #16]
 1662 0008 0593     		str	r3, [sp, #20]
 1663 000a 0693     		str	r3, [sp, #24]
 1664 000c 0793     		str	r3, [sp, #28]
 342:Src/main.c    **** 
 1665              		.loc 1 342 3 is_stmt 1 view .LVU394
 342:Src/main.c    **** 
 1666              		.loc 1 342 27 is_stmt 0 view .LVU395
 1667 000e 0193     		str	r3, [sp, #4]
 1668 0010 0293     		str	r3, [sp, #8]
 1669 0012 0393     		str	r3, [sp, #12]
 347:Src/main.c    ****   htim2.Init.Prescaler = 108;
ARM GAS  /tmp/cczspUdn.s 			page 46


 1670              		.loc 1 347 3 is_stmt 1 view .LVU396
 347:Src/main.c    ****   htim2.Init.Prescaler = 108;
 1671              		.loc 1 347 18 is_stmt 0 view .LVU397
 1672 0014 1548     		ldr	r0, .L112
 1673 0016 4FF08042 		mov	r2, #1073741824
 1674 001a 0260     		str	r2, [r0]
 348:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1675              		.loc 1 348 3 is_stmt 1 view .LVU398
 348:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1676              		.loc 1 348 24 is_stmt 0 view .LVU399
 1677 001c 6C22     		movs	r2, #108
 1678 001e 4260     		str	r2, [r0, #4]
 349:Src/main.c    ****   htim2.Init.Period = 1000;
 1679              		.loc 1 349 3 is_stmt 1 view .LVU400
 349:Src/main.c    ****   htim2.Init.Period = 1000;
 1680              		.loc 1 349 26 is_stmt 0 view .LVU401
 1681 0020 8360     		str	r3, [r0, #8]
 350:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1682              		.loc 1 350 3 is_stmt 1 view .LVU402
 350:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1683              		.loc 1 350 21 is_stmt 0 view .LVU403
 1684 0022 4FF47A72 		mov	r2, #1000
 1685 0026 C260     		str	r2, [r0, #12]
 351:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1686              		.loc 1 351 3 is_stmt 1 view .LVU404
 351:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1687              		.loc 1 351 28 is_stmt 0 view .LVU405
 1688 0028 0361     		str	r3, [r0, #16]
 352:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1689              		.loc 1 352 3 is_stmt 1 view .LVU406
 352:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1690              		.loc 1 352 32 is_stmt 0 view .LVU407
 1691 002a 8361     		str	r3, [r0, #24]
 353:Src/main.c    ****   {
 1692              		.loc 1 353 3 is_stmt 1 view .LVU408
 353:Src/main.c    ****   {
 1693              		.loc 1 353 7 is_stmt 0 view .LVU409
 1694 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1695              	.LVL110:
 353:Src/main.c    ****   {
 1696              		.loc 1 353 6 view .LVU410
 1697 0030 90B9     		cbnz	r0, .L109
 1698              	.L105:
 357:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1699              		.loc 1 357 3 is_stmt 1 view .LVU411
 357:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1700              		.loc 1 357 34 is_stmt 0 view .LVU412
 1701 0032 4FF48053 		mov	r3, #4096
 1702 0036 0493     		str	r3, [sp, #16]
 358:Src/main.c    ****   {
 1703              		.loc 1 358 3 is_stmt 1 view .LVU413
 358:Src/main.c    ****   {
 1704              		.loc 1 358 7 is_stmt 0 view .LVU414
 1705 0038 04A9     		add	r1, sp, #16
 1706 003a 0C48     		ldr	r0, .L112
 1707 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1708              	.LVL111:
ARM GAS  /tmp/cczspUdn.s 			page 47


 358:Src/main.c    ****   {
 1709              		.loc 1 358 6 view .LVU415
 1710 0040 68B9     		cbnz	r0, .L110
 1711              	.L106:
 362:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1712              		.loc 1 362 3 is_stmt 1 view .LVU416
 362:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1713              		.loc 1 362 37 is_stmt 0 view .LVU417
 1714 0042 0023     		movs	r3, #0
 1715 0044 0193     		str	r3, [sp, #4]
 363:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1716              		.loc 1 363 3 is_stmt 1 view .LVU418
 363:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1717              		.loc 1 363 33 is_stmt 0 view .LVU419
 1718 0046 0393     		str	r3, [sp, #12]
 364:Src/main.c    ****   {
 1719              		.loc 1 364 3 is_stmt 1 view .LVU420
 364:Src/main.c    ****   {
 1720              		.loc 1 364 7 is_stmt 0 view .LVU421
 1721 0048 01A9     		add	r1, sp, #4
 1722 004a 0848     		ldr	r0, .L112
 1723 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1724              	.LVL112:
 364:Src/main.c    ****   {
 1725              		.loc 1 364 6 view .LVU422
 1726 0050 40B9     		cbnz	r0, .L111
 1727              	.L104:
 372:Src/main.c    **** 
 1728              		.loc 1 372 1 view .LVU423
 1729 0052 09B0     		add	sp, sp, #36
 1730              	.LCFI22:
 1731              		.cfi_remember_state
 1732              		.cfi_def_cfa_offset 4
 1733              		@ sp needed
 1734 0054 5DF804FB 		ldr	pc, [sp], #4
 1735              	.L109:
 1736              	.LCFI23:
 1737              		.cfi_restore_state
 355:Src/main.c    ****   }
 1738              		.loc 1 355 5 is_stmt 1 view .LVU424
 1739 0058 FFF7FEFF 		bl	Error_Handler
 1740              	.LVL113:
 1741 005c E9E7     		b	.L105
 1742              	.L110:
 360:Src/main.c    ****   }
 1743              		.loc 1 360 5 view .LVU425
 1744 005e FFF7FEFF 		bl	Error_Handler
 1745              	.LVL114:
 1746 0062 EEE7     		b	.L106
 1747              	.L111:
 366:Src/main.c    ****   }
 1748              		.loc 1 366 5 view .LVU426
 1749 0064 FFF7FEFF 		bl	Error_Handler
 1750              	.LVL115:
 372:Src/main.c    **** 
 1751              		.loc 1 372 1 is_stmt 0 view .LVU427
 1752 0068 F3E7     		b	.L104
ARM GAS  /tmp/cczspUdn.s 			page 48


 1753              	.L113:
 1754 006a 00BF     		.align	2
 1755              	.L112:
 1756 006c 00000000 		.word	htim2
 1757              		.cfi_endproc
 1758              	.LFE149:
 1760              		.section	.text.SystemClock_Config,"ax",%progbits
 1761              		.align	1
 1762              		.global	SystemClock_Config
 1763              		.syntax unified
 1764              		.thumb
 1765              		.thumb_func
 1766              		.fpu fpv5-d16
 1768              	SystemClock_Config:
 1769              	.LFB145:
 181:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1770              		.loc 1 181 1 is_stmt 1 view -0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 224
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
 1774 0000 10B5     		push	{r4, lr}
 1775              	.LCFI24:
 1776              		.cfi_def_cfa_offset 8
 1777              		.cfi_offset 4, -8
 1778              		.cfi_offset 14, -4
 1779 0002 B8B0     		sub	sp, sp, #224
 1780              	.LCFI25:
 1781              		.cfi_def_cfa_offset 232
 182:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1782              		.loc 1 182 3 view .LVU429
 182:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1783              		.loc 1 182 22 is_stmt 0 view .LVU430
 1784 0004 3422     		movs	r2, #52
 1785 0006 0021     		movs	r1, #0
 1786 0008 2BA8     		add	r0, sp, #172
 1787 000a FFF7FEFF 		bl	memset
 1788              	.LVL116:
 183:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 1789              		.loc 1 183 3 is_stmt 1 view .LVU431
 183:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 1790              		.loc 1 183 22 is_stmt 0 view .LVU432
 1791 000e 0024     		movs	r4, #0
 1792 0010 2694     		str	r4, [sp, #152]
 1793 0012 2794     		str	r4, [sp, #156]
 1794 0014 2894     		str	r4, [sp, #160]
 1795 0016 2994     		str	r4, [sp, #164]
 1796 0018 2A94     		str	r4, [sp, #168]
 184:Src/main.c    **** 
 1797              		.loc 1 184 3 is_stmt 1 view .LVU433
 184:Src/main.c    **** 
 1798              		.loc 1 184 28 is_stmt 0 view .LVU434
 1799 001a 9022     		movs	r2, #144
 1800 001c 2146     		mov	r1, r4
 1801 001e 02A8     		add	r0, sp, #8
 1802 0020 FFF7FEFF 		bl	memset
 1803              	.LVL117:
 188:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  /tmp/cczspUdn.s 			page 49


 1804              		.loc 1 188 3 is_stmt 1 view .LVU435
 1805              	.LBB7:
 188:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1806              		.loc 1 188 3 view .LVU436
 188:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1807              		.loc 1 188 3 view .LVU437
 1808 0024 294B     		ldr	r3, .L124
 1809 0026 1A6C     		ldr	r2, [r3, #64]
 1810 0028 42F08052 		orr	r2, r2, #268435456
 1811 002c 1A64     		str	r2, [r3, #64]
 188:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1812              		.loc 1 188 3 view .LVU438
 1813 002e 1B6C     		ldr	r3, [r3, #64]
 1814 0030 03F08053 		and	r3, r3, #268435456
 1815 0034 0093     		str	r3, [sp]
 188:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1816              		.loc 1 188 3 view .LVU439
 1817 0036 009B     		ldr	r3, [sp]
 1818              	.LBE7:
 188:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1819              		.loc 1 188 3 view .LVU440
 189:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1820              		.loc 1 189 3 view .LVU441
 1821              	.LBB8:
 189:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1822              		.loc 1 189 3 view .LVU442
 189:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1823              		.loc 1 189 3 view .LVU443
 1824 0038 254B     		ldr	r3, .L124+4
 1825 003a 1A68     		ldr	r2, [r3]
 1826 003c 42F44042 		orr	r2, r2, #49152
 1827 0040 1A60     		str	r2, [r3]
 189:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1828              		.loc 1 189 3 view .LVU444
 1829 0042 1B68     		ldr	r3, [r3]
 1830 0044 03F44043 		and	r3, r3, #49152
 1831 0048 0193     		str	r3, [sp, #4]
 189:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1832              		.loc 1 189 3 view .LVU445
 1833 004a 019B     		ldr	r3, [sp, #4]
 1834              	.LBE8:
 189:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1835              		.loc 1 189 3 view .LVU446
 192:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1836              		.loc 1 192 3 view .LVU447
 192:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1837              		.loc 1 192 36 is_stmt 0 view .LVU448
 1838 004c 0223     		movs	r3, #2
 1839 004e 2B93     		str	r3, [sp, #172]
 193:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1840              		.loc 1 193 3 is_stmt 1 view .LVU449
 193:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1841              		.loc 1 193 30 is_stmt 0 view .LVU450
 1842 0050 0122     		movs	r2, #1
 1843 0052 2E92     		str	r2, [sp, #184]
 194:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1844              		.loc 1 194 3 is_stmt 1 view .LVU451
ARM GAS  /tmp/cczspUdn.s 			page 50


 194:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1845              		.loc 1 194 41 is_stmt 0 view .LVU452
 1846 0054 1022     		movs	r2, #16
 1847 0056 2F92     		str	r2, [sp, #188]
 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1848              		.loc 1 195 3 is_stmt 1 view .LVU453
 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1849              		.loc 1 195 34 is_stmt 0 view .LVU454
 1850 0058 3193     		str	r3, [sp, #196]
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1851              		.loc 1 196 3 is_stmt 1 view .LVU455
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1852              		.loc 1 196 35 is_stmt 0 view .LVU456
 1853 005a 3294     		str	r4, [sp, #200]
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 1854              		.loc 1 197 3 is_stmt 1 view .LVU457
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 1855              		.loc 1 197 30 is_stmt 0 view .LVU458
 1856 005c 0822     		movs	r2, #8
 1857 005e 3392     		str	r2, [sp, #204]
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1858              		.loc 1 198 3 is_stmt 1 view .LVU459
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1859              		.loc 1 198 30 is_stmt 0 view .LVU460
 1860 0060 D822     		movs	r2, #216
 1861 0062 3492     		str	r2, [sp, #208]
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 1862              		.loc 1 199 3 is_stmt 1 view .LVU461
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 1863              		.loc 1 199 30 is_stmt 0 view .LVU462
 1864 0064 3593     		str	r3, [sp, #212]
 200:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1865              		.loc 1 200 3 is_stmt 1 view .LVU463
 200:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1866              		.loc 1 200 30 is_stmt 0 view .LVU464
 1867 0066 0923     		movs	r3, #9
 1868 0068 3693     		str	r3, [sp, #216]
 201:Src/main.c    ****   {
 1869              		.loc 1 201 3 is_stmt 1 view .LVU465
 201:Src/main.c    ****   {
 1870              		.loc 1 201 7 is_stmt 0 view .LVU466
 1871 006a 2BA8     		add	r0, sp, #172
 1872 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1873              	.LVL118:
 201:Src/main.c    ****   {
 1874              		.loc 1 201 6 view .LVU467
 1875 0070 F8B9     		cbnz	r0, .L120
 1876              	.L115:
 207:Src/main.c    ****   {
 1877              		.loc 1 207 3 is_stmt 1 view .LVU468
 207:Src/main.c    ****   {
 1878              		.loc 1 207 7 is_stmt 0 view .LVU469
 1879 0072 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 1880              	.LVL119:
 207:Src/main.c    ****   {
 1881              		.loc 1 207 6 view .LVU470
 1882 0076 F8B9     		cbnz	r0, .L121
ARM GAS  /tmp/cczspUdn.s 			page 51


 1883              	.L116:
 213:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1884              		.loc 1 213 3 is_stmt 1 view .LVU471
 213:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1885              		.loc 1 213 31 is_stmt 0 view .LVU472
 1886 0078 0F23     		movs	r3, #15
 1887 007a 2693     		str	r3, [sp, #152]
 215:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1888              		.loc 1 215 3 is_stmt 1 view .LVU473
 215:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1889              		.loc 1 215 34 is_stmt 0 view .LVU474
 1890 007c 0223     		movs	r3, #2
 1891 007e 2793     		str	r3, [sp, #156]
 216:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1892              		.loc 1 216 3 is_stmt 1 view .LVU475
 216:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1893              		.loc 1 216 35 is_stmt 0 view .LVU476
 1894 0080 0023     		movs	r3, #0
 1895 0082 2893     		str	r3, [sp, #160]
 217:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1896              		.loc 1 217 3 is_stmt 1 view .LVU477
 217:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1897              		.loc 1 217 36 is_stmt 0 view .LVU478
 1898 0084 4FF4A053 		mov	r3, #5120
 1899 0088 2993     		str	r3, [sp, #164]
 218:Src/main.c    **** 
 1900              		.loc 1 218 3 is_stmt 1 view .LVU479
 218:Src/main.c    **** 
 1901              		.loc 1 218 36 is_stmt 0 view .LVU480
 1902 008a 4FF48053 		mov	r3, #4096
 1903 008e 2A93     		str	r3, [sp, #168]
 220:Src/main.c    ****   {
 1904              		.loc 1 220 3 is_stmt 1 view .LVU481
 220:Src/main.c    ****   {
 1905              		.loc 1 220 7 is_stmt 0 view .LVU482
 1906 0090 0721     		movs	r1, #7
 1907 0092 26A8     		add	r0, sp, #152
 1908 0094 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1909              	.LVL120:
 220:Src/main.c    ****   {
 1910              		.loc 1 220 6 view .LVU483
 1911 0098 88B9     		cbnz	r0, .L122
 1912              	.L117:
 224:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 1913              		.loc 1 224 3 is_stmt 1 view .LVU484
 224:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 1914              		.loc 1 224 44 is_stmt 0 view .LVU485
 1915 009a 0E4B     		ldr	r3, .L124+8
 1916 009c 0293     		str	r3, [sp, #8]
 226:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 1917              		.loc 1 226 3 is_stmt 1 view .LVU486
 226:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 1918              		.loc 1 226 44 is_stmt 0 view .LVU487
 1919 009e 0023     		movs	r3, #0
 1920 00a0 1593     		str	r3, [sp, #84]
 227:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 1921              		.loc 1 227 3 is_stmt 1 view .LVU488
ARM GAS  /tmp/cczspUdn.s 			page 52


 227:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 1922              		.loc 1 227 43 is_stmt 0 view .LVU489
 1923 00a2 2193     		str	r3, [sp, #132]
 228:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1924              		.loc 1 228 3 is_stmt 1 view .LVU490
 228:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1925              		.loc 1 228 44 is_stmt 0 view .LVU491
 1926 00a4 2293     		str	r3, [sp, #136]
 229:Src/main.c    ****   {
 1927              		.loc 1 229 3 is_stmt 1 view .LVU492
 229:Src/main.c    ****   {
 1928              		.loc 1 229 7 is_stmt 0 view .LVU493
 1929 00a6 02A8     		add	r0, sp, #8
 1930 00a8 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1931              	.LVL121:
 229:Src/main.c    ****   {
 1932              		.loc 1 229 6 view .LVU494
 1933 00ac 50B9     		cbnz	r0, .L123
 1934              	.L114:
 233:Src/main.c    **** 
 1935              		.loc 1 233 1 view .LVU495
 1936 00ae 38B0     		add	sp, sp, #224
 1937              	.LCFI26:
 1938              		.cfi_remember_state
 1939              		.cfi_def_cfa_offset 8
 1940              		@ sp needed
 1941 00b0 10BD     		pop	{r4, pc}
 1942              	.L120:
 1943              	.LCFI27:
 1944              		.cfi_restore_state
 203:Src/main.c    ****   }
 1945              		.loc 1 203 5 is_stmt 1 view .LVU496
 1946 00b2 FFF7FEFF 		bl	Error_Handler
 1947              	.LVL122:
 1948 00b6 DCE7     		b	.L115
 1949              	.L121:
 209:Src/main.c    ****   }
 1950              		.loc 1 209 5 view .LVU497
 1951 00b8 FFF7FEFF 		bl	Error_Handler
 1952              	.LVL123:
 1953 00bc DCE7     		b	.L116
 1954              	.L122:
 222:Src/main.c    ****   }
 1955              		.loc 1 222 5 view .LVU498
 1956 00be FFF7FEFF 		bl	Error_Handler
 1957              	.LVL124:
 1958 00c2 EAE7     		b	.L117
 1959              	.L123:
 231:Src/main.c    ****   }
 1960              		.loc 1 231 5 view .LVU499
 1961 00c4 FFF7FEFF 		bl	Error_Handler
 1962              	.LVL125:
 233:Src/main.c    **** 
 1963              		.loc 1 233 1 is_stmt 0 view .LVU500
 1964 00c8 F1E7     		b	.L114
 1965              	.L125:
 1966 00ca 00BF     		.align	2
ARM GAS  /tmp/cczspUdn.s 			page 53


 1967              	.L124:
 1968 00cc 00380240 		.word	1073887232
 1969 00d0 00700040 		.word	1073770496
 1970 00d4 0001A000 		.word	10486016
 1971              		.cfi_endproc
 1972              	.LFE145:
 1974              		.section	.text.main,"ax",%progbits
 1975              		.align	1
 1976              		.global	main
 1977              		.syntax unified
 1978              		.thumb
 1979              		.thumb_func
 1980              		.fpu fpv5-d16
 1982              	main:
 1983              	.LFB144:
  91:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1984              		.loc 1 91 1 is_stmt 1 view -0
 1985              		.cfi_startproc
 1986              		@ Volatile: function does not return.
 1987              		@ args = 0, pretend = 0, frame = 0
 1988              		@ frame_needed = 0, uses_anonymous_args = 0
 1989 0000 08B5     		push	{r3, lr}
 1990              	.LCFI28:
 1991              		.cfi_def_cfa_offset 8
 1992              		.cfi_offset 3, -8
 1993              		.cfi_offset 14, -4
 100:Src/main.c    **** 
 1994              		.loc 1 100 3 view .LVU502
 1995 0002 FFF7FEFF 		bl	HAL_Init
 1996              	.LVL126:
 107:Src/main.c    **** 
 1997              		.loc 1 107 3 view .LVU503
 1998 0006 FFF7FEFF 		bl	SystemClock_Config
 1999              	.LVL127:
 114:Src/main.c    ****   MX_SDMMC1_SD_Init();
 2000              		.loc 1 114 3 view .LVU504
 2001 000a FFF7FEFF 		bl	MX_GPIO_Init
 2002              	.LVL128:
 115:Src/main.c    ****   MX_USART3_UART_Init();
 2003              		.loc 1 115 3 view .LVU505
 2004 000e FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 2005              	.LVL129:
 116:Src/main.c    ****   MX_FATFS_Init();
 2006              		.loc 1 116 3 view .LVU506
 2007 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 2008              	.LVL130:
 117:Src/main.c    ****   MX_CAN1_Init();
 2009              		.loc 1 117 3 view .LVU507
 2010 0016 FFF7FEFF 		bl	MX_FATFS_Init
 2011              	.LVL131:
 118:Src/main.c    ****   MX_TIM2_Init();
 2012              		.loc 1 118 3 view .LVU508
 2013 001a FFF7FEFF 		bl	MX_CAN1_Init
 2014              	.LVL132:
 119:Src/main.c    **** 
 2015              		.loc 1 119 3 view .LVU509
 2016 001e FFF7FEFF 		bl	MX_TIM2_Init
ARM GAS  /tmp/cczspUdn.s 			page 54


 2017              	.LVL133:
 122:Src/main.c    ****   /* USER CODE BEGIN 2 */
 2018              		.loc 1 122 3 view .LVU510
 2019 0022 FFF7FEFF 		bl	MX_NVIC_Init
 2020              	.LVL134:
 124:Src/main.c    **** 
 2021              		.loc 1 124 3 view .LVU511
 2022 0026 2448     		ldr	r0, .L136
 2023 0028 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2024              	.LVL135:
 126:Src/main.c    ****   can1.tx_interrupt = CAN1_TX_IRQn;
 2025              		.loc 1 126 3 view .LVU512
 126:Src/main.c    ****   can1.tx_interrupt = CAN1_TX_IRQn;
 2026              		.loc 1 126 22 is_stmt 0 view .LVU513
 2027 002c 234B     		ldr	r3, .L136+4
 2028 002e 1422     		movs	r2, #20
 2029 0030 83F8882D 		strb	r2, [r3, #3464]
 127:Src/main.c    ****   can1.hcan = &hcan1;
 2030              		.loc 1 127 3 is_stmt 1 view .LVU514
 127:Src/main.c    ****   can1.hcan = &hcan1;
 2031              		.loc 1 127 21 is_stmt 0 view .LVU515
 2032 0034 1322     		movs	r2, #19
 2033 0036 83F8892D 		strb	r2, [r3, #3465]
 128:Src/main.c    **** 
 2034              		.loc 1 128 3 is_stmt 1 view .LVU516
 128:Src/main.c    **** 
 2035              		.loc 1 128 13 is_stmt 0 view .LVU517
 2036 003a 214A     		ldr	r2, .L136+8
 2037 003c 1A63     		str	r2, [r3, #48]
 130:Src/main.c    **** 
 2038              		.loc 1 130 3 is_stmt 1 view .LVU518
 2039 003e FFF7FEFF 		bl	can_init
 2040              	.LVL136:
 132:Src/main.c    **** 
 2041              		.loc 1 132 3 view .LVU519
 132:Src/main.c    **** 
 2042              		.loc 1 132 51 is_stmt 0 view .LVU520
 2043 0042 204B     		ldr	r3, .L136+12
 2044 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132:Src/main.c    **** 
 2045              		.loc 1 132 3 view .LVU521
 2046 0046 0122     		movs	r2, #1
 2047 0048 1F49     		ldr	r1, .L136+16
 2048 004a 1944     		add	r1, r1, r3
 2049 004c 1F48     		ldr	r0, .L136+20
 2050 004e FFF7FEFF 		bl	HAL_UART_Receive_IT
 2051              	.LVL137:
 134:Src/main.c    **** 
 2052              		.loc 1 134 3 is_stmt 1 view .LVU522
 134:Src/main.c    **** 
 2053              		.loc 1 134 17 is_stmt 0 view .LVU523
 2054 0052 1F4B     		ldr	r3, .L136+24
 2055 0054 0022     		movs	r2, #0
 2056 0056 1A70     		strb	r2, [r3]
 136:Src/main.c    ****   
 2057              		.loc 1 136 3 is_stmt 1 view .LVU524
 2058 0058 FFF7FEFF 		bl	init_sd
ARM GAS  /tmp/cczspUdn.s 			page 55


 2059              	.LVL138:
 2060 005c 05E0     		b	.L127
 2061              	.L128:
 162:Src/main.c    **** 		  idle();
 2062              		.loc 1 162 10 view .LVU525
 162:Src/main.c    **** 		  idle();
 2063              		.loc 1 162 12 is_stmt 0 view .LVU526
 2064 005e 012B     		cmp	r3, #1
 2065 0060 20D0     		beq	.L133
 164:Src/main.c    **** 		  setup();
 2066              		.loc 1 164 10 is_stmt 1 view .LVU527
 164:Src/main.c    **** 		  setup();
 2067              		.loc 1 164 12 is_stmt 0 view .LVU528
 2068 0062 022B     		cmp	r3, #2
 2069 0064 21D0     		beq	.L134
 166:Src/main.c    **** 		  run();
 2070              		.loc 1 166 10 is_stmt 1 view .LVU529
 166:Src/main.c    **** 		  run();
 2071              		.loc 1 166 12 is_stmt 0 view .LVU530
 2072 0066 032B     		cmp	r3, #3
 2073 0068 22D0     		beq	.L135
 2074              	.L127:
 142:Src/main.c    ****   {
 2075              		.loc 1 142 3 is_stmt 1 view .LVU531
 144:Src/main.c    **** 	  can1.dataTx[1] = 0;
 2076              		.loc 1 144 5 view .LVU532
 144:Src/main.c    **** 	  can1.dataTx[1] = 0;
 2077              		.loc 1 144 20 is_stmt 0 view .LVU533
 2078 006a 144A     		ldr	r2, .L136+4
 2079 006c 0023     		movs	r3, #0
 2080 006e 1372     		strb	r3, [r2, #8]
 145:Src/main.c    **** 	  can1.dataTx[2] = 0;
 2081              		.loc 1 145 4 is_stmt 1 view .LVU534
 145:Src/main.c    **** 	  can1.dataTx[2] = 0;
 2082              		.loc 1 145 19 is_stmt 0 view .LVU535
 2083 0070 5372     		strb	r3, [r2, #9]
 146:Src/main.c    **** 	  can1.dataTx[3] = 0;
 2084              		.loc 1 146 4 is_stmt 1 view .LVU536
 146:Src/main.c    **** 	  can1.dataTx[3] = 0;
 2085              		.loc 1 146 19 is_stmt 0 view .LVU537
 2086 0072 9372     		strb	r3, [r2, #10]
 147:Src/main.c    **** 	  can1.dataTx[4] = counter >> 24;
 2087              		.loc 1 147 4 is_stmt 1 view .LVU538
 147:Src/main.c    **** 	  can1.dataTx[4] = counter >> 24;
 2088              		.loc 1 147 19 is_stmt 0 view .LVU539
 2089 0074 D372     		strb	r3, [r2, #11]
 148:Src/main.c    **** 	  can1.dataTx[5] = counter >> 16;
 2090              		.loc 1 148 4 is_stmt 1 view .LVU540
 148:Src/main.c    **** 	  can1.dataTx[5] = counter >> 16;
 2091              		.loc 1 148 29 is_stmt 0 view .LVU541
 2092 0076 174B     		ldr	r3, .L136+28
 2093 0078 1B68     		ldr	r3, [r3]
 2094 007a 1916     		asrs	r1, r3, #24
 148:Src/main.c    **** 	  can1.dataTx[5] = counter >> 16;
 2095              		.loc 1 148 19 view .LVU542
 2096 007c 1173     		strb	r1, [r2, #12]
 149:Src/main.c    **** 	  can1.dataTx[6] = counter >> 8;
ARM GAS  /tmp/cczspUdn.s 			page 56


 2097              		.loc 1 149 4 is_stmt 1 view .LVU543
 149:Src/main.c    **** 	  can1.dataTx[6] = counter >> 8;
 2098              		.loc 1 149 29 is_stmt 0 view .LVU544
 2099 007e 1914     		asrs	r1, r3, #16
 149:Src/main.c    **** 	  can1.dataTx[6] = counter >> 8;
 2100              		.loc 1 149 19 view .LVU545
 2101 0080 5173     		strb	r1, [r2, #13]
 150:Src/main.c    **** 	  can1.dataTx[7] = counter % 256;
 2102              		.loc 1 150 4 is_stmt 1 view .LVU546
 150:Src/main.c    **** 	  can1.dataTx[7] = counter % 256;
 2103              		.loc 1 150 29 is_stmt 0 view .LVU547
 2104 0082 1912     		asrs	r1, r3, #8
 150:Src/main.c    **** 	  can1.dataTx[7] = counter % 256;
 2105              		.loc 1 150 19 view .LVU548
 2106 0084 9173     		strb	r1, [r2, #14]
 151:Src/main.c    **** 
 2107              		.loc 1 151 4 is_stmt 1 view .LVU549
 151:Src/main.c    **** 
 2108              		.loc 1 151 29 is_stmt 0 view .LVU550
 2109 0086 5942     		rsbs	r1, r3, #0
 2110 0088 DBB2     		uxtb	r3, r3
 2111 008a C9B2     		uxtb	r1, r1
 2112 008c 58BF     		it	pl
 2113 008e 4B42     		rsbpl	r3, r1, #0
 151:Src/main.c    **** 
 2114              		.loc 1 151 19 view .LVU551
 2115 0090 D373     		strb	r3, [r2, #15]
 153:Src/main.c    **** 
 2116              		.loc 1 153 4 is_stmt 1 view .LVU552
 153:Src/main.c    **** 
 2117              		.loc 1 153 15 is_stmt 0 view .LVU553
 2118 0092 A023     		movs	r3, #160
 2119 0094 1362     		str	r3, [r2, #32]
 160:Src/main.c    **** 		  init();
 2120              		.loc 1 160 4 is_stmt 1 view .LVU554
 160:Src/main.c    **** 		  init();
 2121              		.loc 1 160 21 is_stmt 0 view .LVU555
 2122 0096 0E4B     		ldr	r3, .L136+24
 2123 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 160:Src/main.c    **** 		  init();
 2124              		.loc 1 160 6 view .LVU556
 2125 009a 002B     		cmp	r3, #0
 2126 009c DFD1     		bne	.L128
 161:Src/main.c    **** 	  }else if(current_state == STATE_IDLE){
 2127              		.loc 1 161 5 is_stmt 1 view .LVU557
 2128 009e FFF7FEFF 		bl	init
 2129              	.LVL139:
 2130 00a2 E2E7     		b	.L127
 2131              	.L133:
 163:Src/main.c    **** 	  }else if(current_state == STATE_SETUP){
 2132              		.loc 1 163 5 view .LVU558
 2133 00a4 FFF7FEFF 		bl	idle
 2134              	.LVL140:
 2135 00a8 DFE7     		b	.L127
 2136              	.L134:
 165:Src/main.c    **** 	  }else if(current_state == STATE_RUN){
 2137              		.loc 1 165 5 view .LVU559
ARM GAS  /tmp/cczspUdn.s 			page 57


 2138 00aa FFF7FEFF 		bl	setup
 2139              	.LVL141:
 2140 00ae DCE7     		b	.L127
 2141              	.L135:
 167:Src/main.c    **** 	  }
 2142              		.loc 1 167 5 view .LVU560
 2143 00b0 FFF7FEFF 		bl	run
 2144              	.LVL142:
 2145 00b4 D9E7     		b	.L127
 2146              	.L137:
 2147 00b6 00BF     		.align	2
 2148              	.L136:
 2149 00b8 00000000 		.word	htim2
 2150 00bc 00000000 		.word	can1
 2151 00c0 00000000 		.word	hcan1
 2152 00c4 00000000 		.word	debug_rx_count
 2153 00c8 00000000 		.word	debug_rx
 2154 00cc 00000000 		.word	huart3
 2155 00d0 00000000 		.word	current_state
 2156 00d4 00000000 		.word	.LANCHOR0
 2157              		.cfi_endproc
 2158              	.LFE144:
 2160              		.global	counter
 2161              		.comm	sFilter,40,4
 2162              		.comm	i_debug,1,1
 2163              		.comm	huart3,128,4
 2164              		.comm	htim2,64,4
 2165              		.comm	hsd1,132,4
 2166              		.comm	hcan1,40,4
 2167              		.comm	current_state,1,1
 2168              		.section	.bss.counter,"aw",%nobits
 2169              		.align	2
 2170              		.set	.LANCHOR0,. + 0
 2173              	counter:
 2174 0000 00000000 		.space	4
 2175              		.text
 2176              	.Letext0:
 2177              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 2178              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2179              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2180              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 2181              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 2182              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2183              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2184              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 2185              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 2186              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 2187              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 2188              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 2189              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 2190              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 2191              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 2192              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 2193              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 2194              		.file 19 "Middlewares/Third_Party/FatFs/src/integer.h"
 2195              		.file 20 "/usr/arm-none-eabi/include/sys/lock.h"
 2196              		.file 21 "/usr/arm-none-eabi/include/sys/_types.h"
ARM GAS  /tmp/cczspUdn.s 			page 58


 2197              		.file 22 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 2198              		.file 23 "/usr/arm-none-eabi/include/sys/reent.h"
 2199              		.file 24 "/usr/arm-none-eabi/include/stdlib.h"
 2200              		.file 25 "Middlewares/Third_Party/FatFs/src/ff.h"
 2201              		.file 26 "Middlewares/Third_Party/FatFs/src/diskio.h"
 2202              		.file 27 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 2203              		.file 28 "Inc/sd_diskio.h"
 2204              		.file 29 "Inc/fatfs.h"
 2205              		.file 30 "Inc/state.h"
 2206              		.file 31 "Inc/can.h"
 2207              		.file 32 "Inc/pedals.h"
 2208              		.file 33 "Inc/global_variables.h"
 2209              		.file 34 "/usr/arm-none-eabi/include/stdio.h"
 2210              		.file 35 "/usr/arm-none-eabi/include/string.h"
 2211              		.file 36 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 2212              		.file 37 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 2213              		.file 38 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 2214              		.file 39 "Inc/sd.h"
 2215              		.file 40 "<built-in>"
ARM GAS  /tmp/cczspUdn.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cczspUdn.s:17     .text.MX_SDMMC1_SD_Init:0000000000000000 $t
     /tmp/cczspUdn.s:24     .text.MX_SDMMC1_SD_Init:0000000000000000 MX_SDMMC1_SD_Init
     /tmp/cczspUdn.s:62     .text.MX_SDMMC1_SD_Init:0000000000000018 $d
                            *COM*:0000000000000084 hsd1
     /tmp/cczspUdn.s:68     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cczspUdn.s:74     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cczspUdn.s:208    .text.MX_GPIO_Init:0000000000000094 $d
     /tmp/cczspUdn.s:215    .text.MX_NVIC_Init:0000000000000000 $t
     /tmp/cczspUdn.s:221    .text.MX_NVIC_Init:0000000000000000 MX_NVIC_Init
     /tmp/cczspUdn.s:308    .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:0000000000000000 $d
     /tmp/cczspUdn.s:312    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cczspUdn.s:319    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cczspUdn.s:540    .text.HAL_TIM_PeriodElapsedCallback:00000000000000f0 $d
                            *COM*:0000000000000040 htim2
                            *COM*:0000000000000080 huart3
     /tmp/cczspUdn.s:559    .rodata.HAL_CAN_RxFifo0MsgPendingCallback.str1.4:0000000000000000 $d
     /tmp/cczspUdn.s:563    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/cczspUdn.s:570    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/cczspUdn.s:696    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000080 $d
                            *COM*:0000000000000028 hcan1
     /tmp/cczspUdn.s:706    .rodata.HAL_CAN_RxFifo1MsgPendingCallback.str1.4:0000000000000000 $d
     /tmp/cczspUdn.s:710    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/cczspUdn.s:717    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/cczspUdn.s:755    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000018 $d
     /tmp/cczspUdn.s:762    .rodata.HAL_CAN_RxFifo0FullCallback.str1.4:0000000000000000 $d
     /tmp/cczspUdn.s:766    .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 $t
     /tmp/cczspUdn.s:773    .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 HAL_CAN_RxFifo0FullCallback
     /tmp/cczspUdn.s:811    .text.HAL_CAN_RxFifo0FullCallback:0000000000000018 $d
     /tmp/cczspUdn.s:818    .rodata.HAL_CAN_RxFifo1FullCallback.str1.4:0000000000000000 $d
     /tmp/cczspUdn.s:822    .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 $t
     /tmp/cczspUdn.s:829    .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 HAL_CAN_RxFifo1FullCallback
     /tmp/cczspUdn.s:867    .text.HAL_CAN_RxFifo1FullCallback:0000000000000018 $d
     /tmp/cczspUdn.s:874    .rodata.HAL_CAN_TxMailbox0CompleteCallback.str1.4:0000000000000000 $d
     /tmp/cczspUdn.s:881    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 $t
     /tmp/cczspUdn.s:888    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 HAL_CAN_TxMailbox0CompleteCallback
     /tmp/cczspUdn.s:985    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000068 $d
     /tmp/cczspUdn.s:996    .rodata.HAL_CAN_TxMailbox1CompleteCallback.str1.4:0000000000000000 $d
     /tmp/cczspUdn.s:1000   .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 $t
     /tmp/cczspUdn.s:1007   .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 HAL_CAN_TxMailbox1CompleteCallback
     /tmp/cczspUdn.s:1107   .text.HAL_CAN_TxMailbox1CompleteCallback:000000000000006c $d
     /tmp/cczspUdn.s:1118   .rodata.HAL_CAN_TxMailbox2CompleteCallback.str1.4:0000000000000000 $d
     /tmp/cczspUdn.s:1122   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 $t
     /tmp/cczspUdn.s:1129   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 HAL_CAN_TxMailbox2CompleteCallback
     /tmp/cczspUdn.s:1229   .text.HAL_CAN_TxMailbox2CompleteCallback:000000000000006c $d
     /tmp/cczspUdn.s:1240   .rodata.HAL_CAN_ErrorCallback.str1.4:0000000000000000 $d
     /tmp/cczspUdn.s:1244   .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/cczspUdn.s:1251   .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/cczspUdn.s:1309   .text.HAL_CAN_ErrorCallback:0000000000000034 $d
     /tmp/cczspUdn.s:1318   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cczspUdn.s:1325   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cczspUdn.s:1422   .text.HAL_UART_RxCpltCallback:0000000000000060 $d
     /tmp/cczspUdn.s:1430   .text.Error_Handler:0000000000000000 $t
     /tmp/cczspUdn.s:1437   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cczspUdn.s:1473   .text.Error_Handler:0000000000000028 $d
     /tmp/cczspUdn.s:1478   .text.MX_USART3_UART_Init:0000000000000000 $t
ARM GAS  /tmp/cczspUdn.s 			page 60


     /tmp/cczspUdn.s:1484   .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/cczspUdn.s:1548   .text.MX_USART3_UART_Init:0000000000000030 $d
     /tmp/cczspUdn.s:1555   .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/cczspUdn.s:1561   .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/cczspUdn.s:1633   .text.MX_CAN1_Init:000000000000003c $d
     /tmp/cczspUdn.s:1639   .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/cczspUdn.s:1645   .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/cczspUdn.s:1756   .text.MX_TIM2_Init:000000000000006c $d
     /tmp/cczspUdn.s:1761   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cczspUdn.s:1768   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cczspUdn.s:1968   .text.SystemClock_Config:00000000000000cc $d
     /tmp/cczspUdn.s:1975   .text.main:0000000000000000 $t
     /tmp/cczspUdn.s:1982   .text.main:0000000000000000 main
     /tmp/cczspUdn.s:2149   .text.main:00000000000000b8 $d
                            *COM*:0000000000000001 current_state
     /tmp/cczspUdn.s:2173   .bss.counter:0000000000000000 counter
                            *COM*:0000000000000028 sFilter
                            *COM*:0000000000000001 i_debug
     /tmp/cczspUdn.s:2169   .bss.counter:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Transmit
count_ms
accel_implausibility_check_count_flag
count_dec
count_inverter
count_imu
count_atc
count_sec
count_min
count_hour
accel_implausibility_check_count
atc_connected
imu_connected
HAL_GPIO_TogglePin
HAL_CAN_GetRxFifoFillLevel
HAL_CAN_GetRxMessage
fifoRxDataCAN_push
sprintf
strlen
can1
txt
fifoTxDataCAN_high_pop
CAN_Send_IT
fifoTxDataCAN_normal_pop
CAN_Send_Bck
HAL_UART_Receive_IT
debug_rx_count
debug_rx
debug_msg_arrived
HAL_Delay
HAL_UART_Init
HAL_CAN_Init
ARM GAS  /tmp/cczspUdn.s 			page 61


HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_FATFS_Init
HAL_TIM_Base_Start_IT
can_init
init_sd
init
idle
setup
run
