ARM GAS  /tmp/cc7n1NbK.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_SDMMC1_SD_Init:
  25              	.LFB148:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "fatfs.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include "id.h"
  28:Src/main.c    **** #include "state.h"
  29:Src/main.c    **** #include "can.h"
  30:Src/main.c    **** #include "global_variables.h"
  31:Src/main.c    **** #include "string.h"
  32:Src/main.c    **** #include "stdio.h"
ARM GAS  /tmp/cc7n1NbK.s 			page 2


  33:Src/main.c    **** /* USER CODE END Includes */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PTD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PD */
  42:Src/main.c    **** /* USER CODE END PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** CAN_HandleTypeDef hcan1;
  51:Src/main.c    **** 
  52:Src/main.c    **** SD_HandleTypeDef hsd1;
  53:Src/main.c    **** 
  54:Src/main.c    **** TIM_HandleTypeDef htim2;
  55:Src/main.c    **** 
  56:Src/main.c    **** UART_HandleTypeDef huart3;
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** ID id;
  61:Src/main.c    **** uint8_t i_debug;
  62:Src/main.c    **** extern canStruct can1,can3;
  63:Src/main.c    **** extern fifoPriority fifoPriority_t;
  64:Src/main.c    **** 
  65:Src/main.c    **** CAN_FilterTypeDef sFilter;
  66:Src/main.c    **** 
  67:Src/main.c    **** long int counter = 0;
  68:Src/main.c    **** /* USER CODE END PV */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  71:Src/main.c    **** void SystemClock_Config(void);
  72:Src/main.c    **** static void MX_GPIO_Init(void);
  73:Src/main.c    **** static void MX_SDMMC1_SD_Init(void);
  74:Src/main.c    **** static void MX_USART3_UART_Init(void);
  75:Src/main.c    **** static void MX_CAN1_Init(void);
  76:Src/main.c    **** static void MX_TIM2_Init(void);
  77:Src/main.c    **** static void MX_NVIC_Init(void);
  78:Src/main.c    **** /* USER CODE BEGIN PFP */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END PFP */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  83:Src/main.c    **** /* USER CODE BEGIN 0 */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* USER CODE END 0 */
  86:Src/main.c    **** 
  87:Src/main.c    **** /**
  88:Src/main.c    ****   * @brief  The application entry point.
  89:Src/main.c    ****   * @retval int
ARM GAS  /tmp/cc7n1NbK.s 			page 3


  90:Src/main.c    ****   */
  91:Src/main.c    **** int main(void)
  92:Src/main.c    **** {
  93:Src/main.c    ****   /* USER CODE BEGIN 1 */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END 1 */
  96:Src/main.c    ****   
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 101:Src/main.c    ****   HAL_Init();
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE BEGIN Init */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE END Init */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* Configure the system clock */
 108:Src/main.c    ****   SystemClock_Config();
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* USER CODE END SysInit */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* Initialize all configured peripherals */
 115:Src/main.c    ****   MX_GPIO_Init();
 116:Src/main.c    ****   MX_SDMMC1_SD_Init();
 117:Src/main.c    ****   MX_USART3_UART_Init();
 118:Src/main.c    ****   MX_FATFS_Init();
 119:Src/main.c    ****   MX_CAN1_Init();
 120:Src/main.c    ****   MX_TIM2_Init();
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Initialize interrupts */
 123:Src/main.c    ****   MX_NVIC_Init();
 124:Src/main.c    ****   /* USER CODE BEGIN 2 */
 125:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 126:Src/main.c    **** 
 127:Src/main.c    ****   can1.rx0_interrupt = CAN1_RX0_IRQn;
 128:Src/main.c    ****   can1.tx_interrupt = CAN1_TX_IRQn;
 129:Src/main.c    ****   can1.hcan = &hcan1;
 130:Src/main.c    **** 
 131:Src/main.c    ****   can_init();
 132:Src/main.c    ****   ID_init(&id);
 133:Src/main.c    **** 
 134:Src/main.c    ****   HAL_UART_Receive_IT(&huart3,(uint8_t*) &debug_rx[debug_rx_count], 1); //activate rx interrupt for
 135:Src/main.c    **** 
 136:Src/main.c    ****   current_state = STATE_INIT;
 137:Src/main.c    **** 
 138:Src/main.c    ****   
 139:Src/main.c    ****   /* USER CODE END 2 */
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* Infinite loop */
 142:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 143:Src/main.c    ****   while (1)
 144:Src/main.c    ****   {
 145:Src/main.c    ****     can1.dataTx[0] = 0;
 146:Src/main.c    **** 	  can1.dataTx[1] = 0;
ARM GAS  /tmp/cc7n1NbK.s 			page 4


 147:Src/main.c    **** 	  can1.dataTx[2] = 0;
 148:Src/main.c    **** 	  can1.dataTx[3] = 0;
 149:Src/main.c    **** 	  can1.dataTx[4] = counter >> 24;
 150:Src/main.c    **** 	  can1.dataTx[5] = counter >> 16;
 151:Src/main.c    **** 	  can1.dataTx[6] = counter >> 8;
 152:Src/main.c    **** 	  can1.dataTx[7] = counter % 256;
 153:Src/main.c    **** 
 154:Src/main.c    **** 	  can1.tx_id = 0xA0;
 155:Src/main.c    **** 
 156:Src/main.c    **** 	  //CAN_Send(&can1, normalPriority);
 157:Src/main.c    **** 	  //HAL_Delay(500);
 158:Src/main.c    **** 
 159:Src/main.c    **** 	  //counter ++;
 160:Src/main.c    **** 
 161:Src/main.c    **** 	  if(current_state == STATE_INIT){
 162:Src/main.c    **** 		  init();
 163:Src/main.c    **** 	  }else if(current_state == STATE_IDLE){
 164:Src/main.c    **** 		  idle();
 165:Src/main.c    **** 	  }else if(current_state == STATE_CALIB){
 166:Src/main.c    **** 		  calib();
 167:Src/main.c    **** 	  }else if(current_state == STATE_SETUP){
 168:Src/main.c    **** 		  setup();
 169:Src/main.c    **** 	  }else if(current_state == STATE_RUN){
 170:Src/main.c    **** 		  run();
 171:Src/main.c    **** 	  }
 172:Src/main.c    ****     /* USER CODE END WHILE */
 173:Src/main.c    **** 
 174:Src/main.c    ****     /* USER CODE BEGIN 3 */
 175:Src/main.c    ****   }
 176:Src/main.c    ****   /* USER CODE END 3 */
 177:Src/main.c    **** }
 178:Src/main.c    **** 
 179:Src/main.c    **** /**
 180:Src/main.c    ****   * @brief System Clock Configuration
 181:Src/main.c    ****   * @retval None
 182:Src/main.c    ****   */
 183:Src/main.c    **** void SystemClock_Config(void)
 184:Src/main.c    **** {
 185:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 186:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 187:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 188:Src/main.c    **** 
 189:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 190:Src/main.c    ****   */
 191:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 192:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 193:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 194:Src/main.c    ****   */
 195:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 196:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 197:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 203:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
ARM GAS  /tmp/cc7n1NbK.s 			page 5


 204:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 205:Src/main.c    ****   {
 206:Src/main.c    ****     Error_Handler();
 207:Src/main.c    ****   }
 208:Src/main.c    ****   /** Activate the Over-Drive mode 
 209:Src/main.c    ****   */
 210:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 211:Src/main.c    ****   {
 212:Src/main.c    ****     Error_Handler();
 213:Src/main.c    ****   }
 214:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 215:Src/main.c    ****   */
 216:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 217:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 218:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 219:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 220:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 221:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 222:Src/main.c    **** 
 223:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 224:Src/main.c    ****   {
 225:Src/main.c    ****     Error_Handler();
 226:Src/main.c    ****   }
 227:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_SDMMC1
 228:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 229:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 230:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 231:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 232:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 233:Src/main.c    ****   {
 234:Src/main.c    ****     Error_Handler();
 235:Src/main.c    ****   }
 236:Src/main.c    **** }
 237:Src/main.c    **** 
 238:Src/main.c    **** /**
 239:Src/main.c    ****   * @brief NVIC Configuration.
 240:Src/main.c    ****   * @retval None
 241:Src/main.c    ****   */
 242:Src/main.c    **** static void MX_NVIC_Init(void)
 243:Src/main.c    **** {
 244:Src/main.c    ****   /* SDMMC1_IRQn interrupt configuration */
 245:Src/main.c    ****   HAL_NVIC_SetPriority(SDMMC1_IRQn, 0, 0);
 246:Src/main.c    ****   HAL_NVIC_EnableIRQ(SDMMC1_IRQn);
 247:Src/main.c    ****   /* USART3_IRQn interrupt configuration */
 248:Src/main.c    ****   HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 249:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART3_IRQn);
 250:Src/main.c    ****   /* CAN1_SCE_IRQn interrupt configuration */
 251:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_SCE_IRQn, 0, 0);
 252:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 253:Src/main.c    ****   /* CAN1_RX1_IRQn interrupt configuration */
 254:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 255:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 256:Src/main.c    ****   /* CAN1_RX0_IRQn interrupt configuration */
 257:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 258:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 259:Src/main.c    ****   /* CAN1_TX_IRQn interrupt configuration */
 260:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_TX_IRQn, 0, 0);
ARM GAS  /tmp/cc7n1NbK.s 			page 6


 261:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 262:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 263:Src/main.c    ****   HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 264:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 265:Src/main.c    **** }
 266:Src/main.c    **** 
 267:Src/main.c    **** /**
 268:Src/main.c    ****   * @brief CAN1 Initialization Function
 269:Src/main.c    ****   * @param None
 270:Src/main.c    ****   * @retval None
 271:Src/main.c    ****   */
 272:Src/main.c    **** static void MX_CAN1_Init(void)
 273:Src/main.c    **** {
 274:Src/main.c    **** 
 275:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 0 */
 276:Src/main.c    **** 
 277:Src/main.c    ****   /* USER CODE END CAN1_Init 0 */
 278:Src/main.c    **** 
 279:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 1 */
 280:Src/main.c    **** 
 281:Src/main.c    ****   /* USER CODE END CAN1_Init 1 */
 282:Src/main.c    ****   hcan1.Instance = CAN1;
 283:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 284:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 285:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 286:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 287:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 288:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 289:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 290:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 291:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 292:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 293:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 294:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 295:Src/main.c    ****   {
 296:Src/main.c    ****     Error_Handler();
 297:Src/main.c    ****   }
 298:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 2 */
 299:Src/main.c    **** 
 300:Src/main.c    ****   /* USER CODE END CAN1_Init 2 */
 301:Src/main.c    **** 
 302:Src/main.c    **** }
 303:Src/main.c    **** 
 304:Src/main.c    **** /**
 305:Src/main.c    ****   * @brief SDMMC1 Initialization Function
 306:Src/main.c    ****   * @param None
 307:Src/main.c    ****   * @retval None
 308:Src/main.c    ****   */
 309:Src/main.c    **** static void MX_SDMMC1_SD_Init(void)
 310:Src/main.c    **** {
  27              		.loc 1 310 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 311:Src/main.c    **** 
 312:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 0 */
ARM GAS  /tmp/cc7n1NbK.s 			page 7


 313:Src/main.c    **** 
 314:Src/main.c    ****   /* USER CODE END SDMMC1_Init 0 */
 315:Src/main.c    **** 
 316:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 1 */
 317:Src/main.c    **** 
 318:Src/main.c    ****   /* USER CODE END SDMMC1_Init 1 */
 319:Src/main.c    ****   hsd1.Instance = SDMMC1;
  32              		.loc 1 319 3 view .LVU1
  33              		.loc 1 319 17 is_stmt 0 view .LVU2
  34 0000 054B     		ldr	r3, .L2
  35 0002 064A     		ldr	r2, .L2+4
  36 0004 1A60     		str	r2, [r3]
 320:Src/main.c    ****   hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  37              		.loc 1 320 3 is_stmt 1 view .LVU3
  38              		.loc 1 320 23 is_stmt 0 view .LVU4
  39 0006 0022     		movs	r2, #0
  40 0008 5A60     		str	r2, [r3, #4]
 321:Src/main.c    ****   hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  41              		.loc 1 321 3 is_stmt 1 view .LVU5
  42              		.loc 1 321 25 is_stmt 0 view .LVU6
  43 000a 9A60     		str	r2, [r3, #8]
 322:Src/main.c    ****   hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  44              		.loc 1 322 3 is_stmt 1 view .LVU7
  45              		.loc 1 322 28 is_stmt 0 view .LVU8
  46 000c DA60     		str	r2, [r3, #12]
 323:Src/main.c    ****   hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
  47              		.loc 1 323 3 is_stmt 1 view .LVU9
  48              		.loc 1 323 21 is_stmt 0 view .LVU10
  49 000e 1A61     		str	r2, [r3, #16]
 324:Src/main.c    ****   hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  50              		.loc 1 324 3 is_stmt 1 view .LVU11
  51              		.loc 1 324 33 is_stmt 0 view .LVU12
  52 0010 5A61     		str	r2, [r3, #20]
 325:Src/main.c    ****   hsd1.Init.ClockDiv = 1;
  53              		.loc 1 325 3 is_stmt 1 view .LVU13
  54              		.loc 1 325 22 is_stmt 0 view .LVU14
  55 0012 0122     		movs	r2, #1
  56 0014 9A61     		str	r2, [r3, #24]
 326:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 2 */
 327:Src/main.c    **** 
 328:Src/main.c    ****   /* USER CODE END SDMMC1_Init 2 */
 329:Src/main.c    **** 
 330:Src/main.c    **** }
  57              		.loc 1 330 1 view .LVU15
  58 0016 7047     		bx	lr
  59              	.L3:
  60              		.align	2
  61              	.L2:
  62 0018 00000000 		.word	hsd1
  63 001c 002C0140 		.word	1073818624
  64              		.cfi_endproc
  65              	.LFE148:
  67              		.section	.text.MX_GPIO_Init,"ax",%progbits
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
ARM GAS  /tmp/cc7n1NbK.s 			page 8


  72              		.fpu fpv5-d16
  74              	MX_GPIO_Init:
  75              	.LFB151:
 331:Src/main.c    **** 
 332:Src/main.c    **** /**
 333:Src/main.c    ****   * @brief TIM2 Initialization Function
 334:Src/main.c    ****   * @param None
 335:Src/main.c    ****   * @retval None
 336:Src/main.c    ****   */
 337:Src/main.c    **** static void MX_TIM2_Init(void)
 338:Src/main.c    **** {
 339:Src/main.c    **** 
 340:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 341:Src/main.c    **** 
 342:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 343:Src/main.c    **** 
 344:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 345:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 346:Src/main.c    **** 
 347:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 350:Src/main.c    ****   htim2.Instance = TIM2;
 351:Src/main.c    ****   htim2.Init.Prescaler = 108;
 352:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 353:Src/main.c    ****   htim2.Init.Period = 1000;
 354:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 355:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 356:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 357:Src/main.c    ****   {
 358:Src/main.c    ****     Error_Handler();
 359:Src/main.c    ****   }
 360:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 361:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 362:Src/main.c    ****   {
 363:Src/main.c    ****     Error_Handler();
 364:Src/main.c    ****   }
 365:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 366:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 367:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 368:Src/main.c    ****   {
 369:Src/main.c    ****     Error_Handler();
 370:Src/main.c    ****   }
 371:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 372:Src/main.c    **** 
 373:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 374:Src/main.c    **** 
 375:Src/main.c    **** }
 376:Src/main.c    **** 
 377:Src/main.c    **** /**
 378:Src/main.c    ****   * @brief USART3 Initialization Function
 379:Src/main.c    ****   * @param None
 380:Src/main.c    ****   * @retval None
 381:Src/main.c    ****   */
 382:Src/main.c    **** static void MX_USART3_UART_Init(void)
 383:Src/main.c    **** {
 384:Src/main.c    **** 
ARM GAS  /tmp/cc7n1NbK.s 			page 9


 385:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 0 */
 386:Src/main.c    **** 
 387:Src/main.c    ****   /* USER CODE END USART3_Init 0 */
 388:Src/main.c    **** 
 389:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 1 */
 390:Src/main.c    **** 
 391:Src/main.c    ****   /* USER CODE END USART3_Init 1 */
 392:Src/main.c    ****   huart3.Instance = USART3;
 393:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 394:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 395:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 396:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 397:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 398:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 399:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 400:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 401:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 402:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 403:Src/main.c    ****   {
 404:Src/main.c    ****     Error_Handler();
 405:Src/main.c    ****   }
 406:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 2 */
 407:Src/main.c    **** 
 408:Src/main.c    ****   /* USER CODE END USART3_Init 2 */
 409:Src/main.c    **** 
 410:Src/main.c    **** }
 411:Src/main.c    **** 
 412:Src/main.c    **** /**
 413:Src/main.c    ****   * @brief GPIO Initialization Function
 414:Src/main.c    ****   * @param None
 415:Src/main.c    ****   * @retval None
 416:Src/main.c    ****   */
 417:Src/main.c    **** static void MX_GPIO_Init(void)
 418:Src/main.c    **** {
  76              		.loc 1 418 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 40
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80 0000 30B5     		push	{r4, r5, lr}
  81              	.LCFI0:
  82              		.cfi_def_cfa_offset 12
  83              		.cfi_offset 4, -12
  84              		.cfi_offset 5, -8
  85              		.cfi_offset 14, -4
  86 0002 8BB0     		sub	sp, sp, #44
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 56
 419:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  89              		.loc 1 419 3 view .LVU17
  90              		.loc 1 419 20 is_stmt 0 view .LVU18
  91 0004 0024     		movs	r4, #0
  92 0006 0594     		str	r4, [sp, #20]
  93 0008 0694     		str	r4, [sp, #24]
  94 000a 0794     		str	r4, [sp, #28]
  95 000c 0894     		str	r4, [sp, #32]
  96 000e 0994     		str	r4, [sp, #36]
 420:Src/main.c    **** 
ARM GAS  /tmp/cc7n1NbK.s 			page 10


 421:Src/main.c    ****   /* GPIO Ports Clock Enable */
 422:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  97              		.loc 1 422 3 is_stmt 1 view .LVU19
  98              	.LBB2:
  99              		.loc 1 422 3 view .LVU20
 100              		.loc 1 422 3 view .LVU21
 101 0010 204B     		ldr	r3, .L6
 102 0012 1A6B     		ldr	r2, [r3, #48]
 103 0014 42F00102 		orr	r2, r2, #1
 104 0018 1A63     		str	r2, [r3, #48]
 105              		.loc 1 422 3 view .LVU22
 106 001a 1A6B     		ldr	r2, [r3, #48]
 107 001c 02F00102 		and	r2, r2, #1
 108 0020 0192     		str	r2, [sp, #4]
 109              		.loc 1 422 3 view .LVU23
 110 0022 019A     		ldr	r2, [sp, #4]
 111              	.LBE2:
 112              		.loc 1 422 3 view .LVU24
 423:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 113              		.loc 1 423 3 view .LVU25
 114              	.LBB3:
 115              		.loc 1 423 3 view .LVU26
 116              		.loc 1 423 3 view .LVU27
 117 0024 1A6B     		ldr	r2, [r3, #48]
 118 0026 42F00202 		orr	r2, r2, #2
 119 002a 1A63     		str	r2, [r3, #48]
 120              		.loc 1 423 3 view .LVU28
 121 002c 1A6B     		ldr	r2, [r3, #48]
 122 002e 02F00202 		and	r2, r2, #2
 123 0032 0292     		str	r2, [sp, #8]
 124              		.loc 1 423 3 view .LVU29
 125 0034 029A     		ldr	r2, [sp, #8]
 126              	.LBE3:
 127              		.loc 1 423 3 view .LVU30
 424:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 128              		.loc 1 424 3 view .LVU31
 129              	.LBB4:
 130              		.loc 1 424 3 view .LVU32
 131              		.loc 1 424 3 view .LVU33
 132 0036 1A6B     		ldr	r2, [r3, #48]
 133 0038 42F00802 		orr	r2, r2, #8
 134 003c 1A63     		str	r2, [r3, #48]
 135              		.loc 1 424 3 view .LVU34
 136 003e 1A6B     		ldr	r2, [r3, #48]
 137 0040 02F00802 		and	r2, r2, #8
 138 0044 0392     		str	r2, [sp, #12]
 139              		.loc 1 424 3 view .LVU35
 140 0046 039A     		ldr	r2, [sp, #12]
 141              	.LBE4:
 142              		.loc 1 424 3 view .LVU36
 425:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 143              		.loc 1 425 3 view .LVU37
 144              	.LBB5:
 145              		.loc 1 425 3 view .LVU38
 146              		.loc 1 425 3 view .LVU39
 147 0048 1A6B     		ldr	r2, [r3, #48]
 148 004a 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/cc7n1NbK.s 			page 11


 149 004e 1A63     		str	r2, [r3, #48]
 150              		.loc 1 425 3 view .LVU40
 151 0050 1B6B     		ldr	r3, [r3, #48]
 152 0052 03F00403 		and	r3, r3, #4
 153 0056 0493     		str	r3, [sp, #16]
 154              		.loc 1 425 3 view .LVU41
 155 0058 049B     		ldr	r3, [sp, #16]
 156              	.LBE5:
 157              		.loc 1 425 3 view .LVU42
 426:Src/main.c    **** 
 427:Src/main.c    ****   /*Configure GPIO pin Output Level */
 428:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LED_green_Pin|LED_red_Pin|LED_blue_Pin, GPIO_PIN_RESET);
 158              		.loc 1 428 3 view .LVU43
 159 005a 0F4D     		ldr	r5, .L6+4
 160 005c 2246     		mov	r2, r4
 161 005e 44F28101 		movw	r1, #16513
 162 0062 2846     		mov	r0, r5
 163 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 164              	.LVL0:
 429:Src/main.c    **** 
 430:Src/main.c    ****   /*Configure GPIO pin : SD_detect_Pin */
 431:Src/main.c    ****   GPIO_InitStruct.Pin = SD_detect_Pin;
 165              		.loc 1 431 3 view .LVU44
 166              		.loc 1 431 23 is_stmt 0 view .LVU45
 167 0068 2023     		movs	r3, #32
 168 006a 0593     		str	r3, [sp, #20]
 432:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 169              		.loc 1 432 3 is_stmt 1 view .LVU46
 170              		.loc 1 432 24 is_stmt 0 view .LVU47
 171 006c 0694     		str	r4, [sp, #24]
 433:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 172              		.loc 1 433 3 is_stmt 1 view .LVU48
 173              		.loc 1 433 24 is_stmt 0 view .LVU49
 174 006e 0794     		str	r4, [sp, #28]
 434:Src/main.c    ****   HAL_GPIO_Init(SD_detect_GPIO_Port, &GPIO_InitStruct);
 175              		.loc 1 434 3 is_stmt 1 view .LVU50
 176 0070 05A9     		add	r1, sp, #20
 177 0072 0A48     		ldr	r0, .L6+8
 178 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 179              	.LVL1:
 435:Src/main.c    **** 
 436:Src/main.c    ****   /*Configure GPIO pins : LED_green_Pin LED_red_Pin LED_blue_Pin */
 437:Src/main.c    ****   GPIO_InitStruct.Pin = LED_green_Pin|LED_red_Pin|LED_blue_Pin;
 180              		.loc 1 437 3 view .LVU51
 181              		.loc 1 437 23 is_stmt 0 view .LVU52
 182 0078 44F28103 		movw	r3, #16513
 183 007c 0593     		str	r3, [sp, #20]
 438:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 184              		.loc 1 438 3 is_stmt 1 view .LVU53
 185              		.loc 1 438 24 is_stmt 0 view .LVU54
 186 007e 0123     		movs	r3, #1
 187 0080 0693     		str	r3, [sp, #24]
 439:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 188              		.loc 1 439 3 is_stmt 1 view .LVU55
 189              		.loc 1 439 24 is_stmt 0 view .LVU56
 190 0082 0794     		str	r4, [sp, #28]
 440:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/cc7n1NbK.s 			page 12


 191              		.loc 1 440 3 is_stmt 1 view .LVU57
 192              		.loc 1 440 25 is_stmt 0 view .LVU58
 193 0084 0894     		str	r4, [sp, #32]
 441:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 194              		.loc 1 441 3 is_stmt 1 view .LVU59
 195 0086 05A9     		add	r1, sp, #20
 196 0088 2846     		mov	r0, r5
 197 008a FFF7FEFF 		bl	HAL_GPIO_Init
 198              	.LVL2:
 442:Src/main.c    **** 
 443:Src/main.c    **** }
 199              		.loc 1 443 1 is_stmt 0 view .LVU60
 200 008e 0BB0     		add	sp, sp, #44
 201              	.LCFI2:
 202              		.cfi_def_cfa_offset 12
 203              		@ sp needed
 204 0090 30BD     		pop	{r4, r5, pc}
 205              	.L7:
 206 0092 00BF     		.align	2
 207              	.L6:
 208 0094 00380240 		.word	1073887232
 209 0098 00040240 		.word	1073873920
 210 009c 00000240 		.word	1073872896
 211              		.cfi_endproc
 212              	.LFE151:
 214              		.section	.text.MX_NVIC_Init,"ax",%progbits
 215              		.align	1
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu fpv5-d16
 221              	MX_NVIC_Init:
 222              	.LFB146:
 243:Src/main.c    ****   /* SDMMC1_IRQn interrupt configuration */
 223              		.loc 1 243 1 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227 0000 08B5     		push	{r3, lr}
 228              	.LCFI3:
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 3, -8
 231              		.cfi_offset 14, -4
 245:Src/main.c    ****   HAL_NVIC_EnableIRQ(SDMMC1_IRQn);
 232              		.loc 1 245 3 view .LVU62
 233 0002 0022     		movs	r2, #0
 234 0004 1146     		mov	r1, r2
 235 0006 3120     		movs	r0, #49
 236 0008 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 237              	.LVL3:
 246:Src/main.c    ****   /* USART3_IRQn interrupt configuration */
 238              		.loc 1 246 3 view .LVU63
 239 000c 3120     		movs	r0, #49
 240 000e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 241              	.LVL4:
 248:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART3_IRQn);
 242              		.loc 1 248 3 view .LVU64
ARM GAS  /tmp/cc7n1NbK.s 			page 13


 243 0012 0022     		movs	r2, #0
 244 0014 1146     		mov	r1, r2
 245 0016 2720     		movs	r0, #39
 246 0018 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 247              	.LVL5:
 249:Src/main.c    ****   /* CAN1_SCE_IRQn interrupt configuration */
 248              		.loc 1 249 3 view .LVU65
 249 001c 2720     		movs	r0, #39
 250 001e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 251              	.LVL6:
 251:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 252              		.loc 1 251 3 view .LVU66
 253 0022 0022     		movs	r2, #0
 254 0024 1146     		mov	r1, r2
 255 0026 1620     		movs	r0, #22
 256 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 257              	.LVL7:
 252:Src/main.c    ****   /* CAN1_RX1_IRQn interrupt configuration */
 258              		.loc 1 252 3 view .LVU67
 259 002c 1620     		movs	r0, #22
 260 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 261              	.LVL8:
 254:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 262              		.loc 1 254 3 view .LVU68
 263 0032 0022     		movs	r2, #0
 264 0034 1146     		mov	r1, r2
 265 0036 1520     		movs	r0, #21
 266 0038 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 267              	.LVL9:
 255:Src/main.c    ****   /* CAN1_RX0_IRQn interrupt configuration */
 268              		.loc 1 255 3 view .LVU69
 269 003c 1520     		movs	r0, #21
 270 003e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 271              	.LVL10:
 257:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 272              		.loc 1 257 3 view .LVU70
 273 0042 0022     		movs	r2, #0
 274 0044 1146     		mov	r1, r2
 275 0046 1420     		movs	r0, #20
 276 0048 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 277              	.LVL11:
 258:Src/main.c    ****   /* CAN1_TX_IRQn interrupt configuration */
 278              		.loc 1 258 3 view .LVU71
 279 004c 1420     		movs	r0, #20
 280 004e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 281              	.LVL12:
 260:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 282              		.loc 1 260 3 view .LVU72
 283 0052 0022     		movs	r2, #0
 284 0054 1146     		mov	r1, r2
 285 0056 1320     		movs	r0, #19
 286 0058 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 287              	.LVL13:
 261:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 288              		.loc 1 261 3 view .LVU73
 289 005c 1320     		movs	r0, #19
 290 005e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  /tmp/cc7n1NbK.s 			page 14


 291              	.LVL14:
 263:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 292              		.loc 1 263 3 view .LVU74
 293 0062 0022     		movs	r2, #0
 294 0064 1146     		mov	r1, r2
 295 0066 1C20     		movs	r0, #28
 296 0068 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 297              	.LVL15:
 264:Src/main.c    **** }
 298              		.loc 1 264 3 view .LVU75
 299 006c 1C20     		movs	r0, #28
 300 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 301              	.LVL16:
 265:Src/main.c    **** 
 302              		.loc 1 265 1 is_stmt 0 view .LVU76
 303 0072 08BD     		pop	{r3, pc}
 304              		.cfi_endproc
 305              	.LFE146:
 307              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 308              		.align	2
 309              	.LC0:
 310 0000 494D5520 		.ascii	"IMU non presente\015\012\000"
 310      6E6F6E20 
 310      70726573 
 310      656E7465 
 310      0D0A00
 311              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 312              		.align	1
 313              		.global	HAL_TIM_PeriodElapsedCallback
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu fpv5-d16
 319              	HAL_TIM_PeriodElapsedCallback:
 320              	.LVL17:
 321              	.LFB152:
 444:Src/main.c    **** 
 445:Src/main.c    **** /* USER CODE BEGIN 4 */
 446:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 322              		.loc 1 446 60 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		.loc 1 446 60 is_stmt 0 view .LVU78
 327 0000 08B5     		push	{r3, lr}
 328              	.LCFI4:
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 3, -8
 331              		.cfi_offset 14, -4
 447:Src/main.c    **** 	if(htim == &htim2){
 332              		.loc 1 447 2 is_stmt 1 view .LVU79
 333              		.loc 1 447 4 is_stmt 0 view .LVU80
 334 0002 2B4B     		ldr	r3, .L20
 335 0004 8342     		cmp	r3, r0
 336 0006 00D0     		beq	.L16
 337              	.LVL18:
 338              	.L10:
ARM GAS  /tmp/cc7n1NbK.s 			page 15


 448:Src/main.c    **** 		count_ms += 1;
 449:Src/main.c    **** 		if(count_ms == 100){
 450:Src/main.c    **** 			count_ms = 0;
 451:Src/main.c    **** 			count_dec++;
 452:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 453:Src/main.c    **** 			count_inverter++;
 454:Src/main.c    **** 			count_imu++;
 455:Src/main.c    **** 			if(count_inverter == 10){
 456:Src/main.c    **** 				//TODO: implementare funzione
 457:Src/main.c    **** 			}else if(count_inverter == 11){
 458:Src/main.c    **** 				count_inverter = 10;
 459:Src/main.c    **** 			}
 460:Src/main.c    **** 			if(count_imu == 10){
 461:Src/main.c    **** 				// imu non presente //
 462:Src/main.c    **** 				imu_connected = 0; //imu not connected
 463:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t*)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 10
 464:Src/main.c    **** 			}else if(count_imu == 11){
 465:Src/main.c    **** 				count_imu = 10;
 466:Src/main.c    **** 			}
 467:Src/main.c    **** 			if(count_dec == 10){
 468:Src/main.c    **** 				count_dec = 0;
 469:Src/main.c    **** 				count_sec++;
 470:Src/main.c    **** 				if(count_sec == 60){
 471:Src/main.c    **** 					count_sec = 0;
 472:Src/main.c    **** 					count_min++;
 473:Src/main.c    **** 					if(count_min == 60){
 474:Src/main.c    **** 						count_min = 0;
 475:Src/main.c    **** 						count_hour++;
 476:Src/main.c    **** 					}
 477:Src/main.c    **** 				}
 478:Src/main.c    **** 			}
 479:Src/main.c    **** 		}
 480:Src/main.c    **** 	}
 481:Src/main.c    **** }
 339              		.loc 1 481 1 view .LVU81
 340 0008 08BD     		pop	{r3, pc}
 341              	.LVL19:
 342              	.L16:
 448:Src/main.c    **** 		count_ms += 1;
 343              		.loc 1 448 3 is_stmt 1 view .LVU82
 448:Src/main.c    **** 		count_ms += 1;
 344              		.loc 1 448 12 is_stmt 0 view .LVU83
 345 000a 2A4A     		ldr	r2, .L20+4
 346 000c 1388     		ldrh	r3, [r2]
 347 000e 0133     		adds	r3, r3, #1
 348 0010 9BB2     		uxth	r3, r3
 349 0012 1380     		strh	r3, [r2]	@ movhi
 449:Src/main.c    **** 			count_ms = 0;
 350              		.loc 1 449 3 is_stmt 1 view .LVU84
 449:Src/main.c    **** 			count_ms = 0;
 351              		.loc 1 449 5 is_stmt 0 view .LVU85
 352 0014 642B     		cmp	r3, #100
 353 0016 F7D1     		bne	.L10
 450:Src/main.c    **** 			count_dec++;
 354              		.loc 1 450 4 is_stmt 1 view .LVU86
 450:Src/main.c    **** 			count_dec++;
 355              		.loc 1 450 13 is_stmt 0 view .LVU87
ARM GAS  /tmp/cc7n1NbK.s 			page 16


 356 0018 1346     		mov	r3, r2
 357 001a 0022     		movs	r2, #0
 358 001c 1A80     		strh	r2, [r3]	@ movhi
 451:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 359              		.loc 1 451 4 is_stmt 1 view .LVU88
 451:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 360              		.loc 1 451 13 is_stmt 0 view .LVU89
 361 001e 264A     		ldr	r2, .L20+8
 362 0020 1388     		ldrh	r3, [r2]
 363 0022 0133     		adds	r3, r3, #1
 364 0024 1380     		strh	r3, [r2]	@ movhi
 453:Src/main.c    **** 			count_imu++;
 365              		.loc 1 453 4 is_stmt 1 view .LVU90
 453:Src/main.c    **** 			count_imu++;
 366              		.loc 1 453 18 is_stmt 0 view .LVU91
 367 0026 254B     		ldr	r3, .L20+12
 368 0028 1A88     		ldrh	r2, [r3]
 369 002a 0132     		adds	r2, r2, #1
 370 002c 92B2     		uxth	r2, r2
 371 002e 1A80     		strh	r2, [r3]	@ movhi
 454:Src/main.c    **** 			if(count_inverter == 10){
 372              		.loc 1 454 4 is_stmt 1 view .LVU92
 454:Src/main.c    **** 			if(count_inverter == 10){
 373              		.loc 1 454 13 is_stmt 0 view .LVU93
 374 0030 2349     		ldr	r1, .L20+16
 375 0032 0B88     		ldrh	r3, [r1]
 376 0034 0133     		adds	r3, r3, #1
 377 0036 9BB2     		uxth	r3, r3
 378 0038 0B80     		strh	r3, [r1]	@ movhi
 455:Src/main.c    **** 				//TODO: implementare funzione
 379              		.loc 1 455 4 is_stmt 1 view .LVU94
 455:Src/main.c    **** 				//TODO: implementare funzione
 380              		.loc 1 455 6 is_stmt 0 view .LVU95
 381 003a 0A2A     		cmp	r2, #10
 382 003c 01D0     		beq	.L12
 457:Src/main.c    **** 				count_inverter = 10;
 383              		.loc 1 457 10 is_stmt 1 view .LVU96
 457:Src/main.c    **** 				count_inverter = 10;
 384              		.loc 1 457 12 is_stmt 0 view .LVU97
 385 003e 0B2A     		cmp	r2, #11
 386 0040 23D0     		beq	.L17
 387              	.L12:
 460:Src/main.c    **** 				// imu non presente //
 388              		.loc 1 460 4 is_stmt 1 view .LVU98
 460:Src/main.c    **** 				// imu non presente //
 389              		.loc 1 460 6 is_stmt 0 view .LVU99
 390 0042 0A2B     		cmp	r3, #10
 391 0044 25D0     		beq	.L18
 464:Src/main.c    **** 				count_imu = 10;
 392              		.loc 1 464 10 is_stmt 1 view .LVU100
 464:Src/main.c    **** 				count_imu = 10;
 393              		.loc 1 464 12 is_stmt 0 view .LVU101
 394 0046 0B2B     		cmp	r3, #11
 395 0048 2DD0     		beq	.L19
 396              	.LVL20:
 397              	.L14:
 467:Src/main.c    **** 				count_dec = 0;
ARM GAS  /tmp/cc7n1NbK.s 			page 17


 398              		.loc 1 467 4 is_stmt 1 view .LVU102
 467:Src/main.c    **** 				count_dec = 0;
 399              		.loc 1 467 17 is_stmt 0 view .LVU103
 400 004a 1B4B     		ldr	r3, .L20+8
 401 004c 1B88     		ldrh	r3, [r3]
 467:Src/main.c    **** 				count_dec = 0;
 402              		.loc 1 467 6 view .LVU104
 403 004e 0A2B     		cmp	r3, #10
 404 0050 DAD1     		bne	.L10
 468:Src/main.c    **** 				count_sec++;
 405              		.loc 1 468 5 is_stmt 1 view .LVU105
 468:Src/main.c    **** 				count_sec++;
 406              		.loc 1 468 15 is_stmt 0 view .LVU106
 407 0052 194B     		ldr	r3, .L20+8
 408 0054 0022     		movs	r2, #0
 409 0056 1A80     		strh	r2, [r3]	@ movhi
 469:Src/main.c    **** 				if(count_sec == 60){
 410              		.loc 1 469 5 is_stmt 1 view .LVU107
 469:Src/main.c    **** 				if(count_sec == 60){
 411              		.loc 1 469 14 is_stmt 0 view .LVU108
 412 0058 1A4A     		ldr	r2, .L20+20
 413 005a 1388     		ldrh	r3, [r2]
 414 005c 0133     		adds	r3, r3, #1
 415 005e 9BB2     		uxth	r3, r3
 416 0060 1380     		strh	r3, [r2]	@ movhi
 470:Src/main.c    **** 					count_sec = 0;
 417              		.loc 1 470 5 is_stmt 1 view .LVU109
 470:Src/main.c    **** 					count_sec = 0;
 418              		.loc 1 470 7 is_stmt 0 view .LVU110
 419 0062 3C2B     		cmp	r3, #60
 420 0064 D0D1     		bne	.L10
 471:Src/main.c    **** 					count_min++;
 421              		.loc 1 471 6 is_stmt 1 view .LVU111
 471:Src/main.c    **** 					count_min++;
 422              		.loc 1 471 16 is_stmt 0 view .LVU112
 423 0066 1346     		mov	r3, r2
 424 0068 0022     		movs	r2, #0
 425 006a 1A80     		strh	r2, [r3]	@ movhi
 472:Src/main.c    **** 					if(count_min == 60){
 426              		.loc 1 472 6 is_stmt 1 view .LVU113
 472:Src/main.c    **** 					if(count_min == 60){
 427              		.loc 1 472 15 is_stmt 0 view .LVU114
 428 006c 164A     		ldr	r2, .L20+24
 429 006e 1388     		ldrh	r3, [r2]
 430 0070 0133     		adds	r3, r3, #1
 431 0072 9BB2     		uxth	r3, r3
 432 0074 1380     		strh	r3, [r2]	@ movhi
 473:Src/main.c    **** 						count_min = 0;
 433              		.loc 1 473 6 is_stmt 1 view .LVU115
 473:Src/main.c    **** 						count_min = 0;
 434              		.loc 1 473 8 is_stmt 0 view .LVU116
 435 0076 3C2B     		cmp	r3, #60
 436 0078 C6D1     		bne	.L10
 474:Src/main.c    **** 						count_hour++;
 437              		.loc 1 474 7 is_stmt 1 view .LVU117
 474:Src/main.c    **** 						count_hour++;
 438              		.loc 1 474 17 is_stmt 0 view .LVU118
ARM GAS  /tmp/cc7n1NbK.s 			page 18


 439 007a 1346     		mov	r3, r2
 440 007c 0022     		movs	r2, #0
 441 007e 1A80     		strh	r2, [r3]	@ movhi
 475:Src/main.c    **** 					}
 442              		.loc 1 475 7 is_stmt 1 view .LVU119
 475:Src/main.c    **** 					}
 443              		.loc 1 475 17 is_stmt 0 view .LVU120
 444 0080 124A     		ldr	r2, .L20+28
 445 0082 1388     		ldrh	r3, [r2]
 446 0084 0133     		adds	r3, r3, #1
 447 0086 1380     		strh	r3, [r2]	@ movhi
 448              		.loc 1 481 1 view .LVU121
 449 0088 BEE7     		b	.L10
 450              	.LVL21:
 451              	.L17:
 458:Src/main.c    **** 			}
 452              		.loc 1 458 5 is_stmt 1 view .LVU122
 458:Src/main.c    **** 			}
 453              		.loc 1 458 20 is_stmt 0 view .LVU123
 454 008a 0C4A     		ldr	r2, .L20+12
 455 008c 0A21     		movs	r1, #10
 456 008e 1180     		strh	r1, [r2]	@ movhi
 457 0090 D7E7     		b	.L12
 458              	.L18:
 462:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t*)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 10
 459              		.loc 1 462 5 is_stmt 1 view .LVU124
 462:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t*)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 10
 460              		.loc 1 462 19 is_stmt 0 view .LVU125
 461 0092 0F4B     		ldr	r3, .L20+32
 462 0094 0022     		movs	r2, #0
 463 0096 1A70     		strb	r2, [r3]
 463:Src/main.c    **** 			}else if(count_imu == 11){
 464              		.loc 1 463 5 is_stmt 1 view .LVU126
 465 0098 0A23     		movs	r3, #10
 466 009a 1222     		movs	r2, #18
 467 009c 0D49     		ldr	r1, .L20+36
 468 009e 0E48     		ldr	r0, .L20+40
 469              	.LVL22:
 463:Src/main.c    **** 			}else if(count_imu == 11){
 470              		.loc 1 463 5 is_stmt 0 view .LVU127
 471 00a0 FFF7FEFF 		bl	HAL_UART_Transmit
 472              	.LVL23:
 473 00a4 D1E7     		b	.L14
 474              	.LVL24:
 475              	.L19:
 465:Src/main.c    **** 			}
 476              		.loc 1 465 5 is_stmt 1 view .LVU128
 465:Src/main.c    **** 			}
 477              		.loc 1 465 15 is_stmt 0 view .LVU129
 478 00a6 064B     		ldr	r3, .L20+16
 479 00a8 0A22     		movs	r2, #10
 480 00aa 1A80     		strh	r2, [r3]	@ movhi
 481 00ac CDE7     		b	.L14
 482              	.L21:
 483 00ae 00BF     		.align	2
 484              	.L20:
 485 00b0 00000000 		.word	htim2
ARM GAS  /tmp/cc7n1NbK.s 			page 19


 486 00b4 00000000 		.word	count_ms
 487 00b8 00000000 		.word	count_dec
 488 00bc 00000000 		.word	count_inverter
 489 00c0 00000000 		.word	count_imu
 490 00c4 00000000 		.word	count_sec
 491 00c8 00000000 		.word	count_min
 492 00cc 00000000 		.word	count_hour
 493 00d0 00000000 		.word	imu_connected
 494 00d4 00000000 		.word	.LC0
 495 00d8 00000000 		.word	huart3
 496              		.cfi_endproc
 497              	.LFE152:
 499              		.section	.rodata.HAL_CAN_RxFifo0MsgPendingCallback.str1.4,"aMS",%progbits,1
 500              		.align	2
 501              	.LC1:
 502 0000 44415441 		.ascii	"DATA: %d %d %d %d %d %d %d %d\015\012\000"
 502      3A202564 
 502      20256420 
 502      25642025 
 502      64202564 
 503              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 504              		.align	1
 505              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 509              		.fpu fpv5-d16
 511              	HAL_CAN_RxFifo0MsgPendingCallback:
 512              	.LVL25:
 513              	.LFB153:
 482:Src/main.c    **** 
 483:Src/main.c    **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan){
 514              		.loc 1 483 64 is_stmt 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 32
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		.loc 1 483 64 is_stmt 0 view .LVU131
 519 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 520              	.LCFI5:
 521              		.cfi_def_cfa_offset 20
 522              		.cfi_offset 4, -20
 523              		.cfi_offset 5, -16
 524              		.cfi_offset 6, -12
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 8FB0     		sub	sp, sp, #60
 528              	.LCFI6:
 529              		.cfi_def_cfa_offset 80
 530 0004 0446     		mov	r4, r0
 484:Src/main.c    **** 	/*sprintf(txt, "%d\r\n", HAL_CAN_GetRxFifoFillLevel(&hcan1, CAN_RX_FIFO0));
 485:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 10);*/
 486:Src/main.c    **** 
 487:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_blue_GPIO_Port, LED_blue_Pin);
 531              		.loc 1 487 2 is_stmt 1 view .LVU132
 532 0006 8021     		movs	r1, #128
 533 0008 1D48     		ldr	r0, .L26
 534              	.LVL26:
ARM GAS  /tmp/cc7n1NbK.s 			page 20


 535              		.loc 1 487 2 is_stmt 0 view .LVU133
 536 000a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 537              	.LVL27:
 488:Src/main.c    **** 	if (hcan == &hcan1){
 538              		.loc 1 488 2 is_stmt 1 view .LVU134
 539              		.loc 1 488 5 is_stmt 0 view .LVU135
 540 000e 1D4B     		ldr	r3, .L26+4
 541 0010 9C42     		cmp	r4, r3
 542 0012 01D0     		beq	.L25
 543              	.LVL28:
 544              	.L22:
 489:Src/main.c    **** 		//HAL_UART_Transmit(&huart3, (uint8_t*)"rx on FIFO0\r\n", strlen("rx on FIFO0\r\n"), 10);
 490:Src/main.c    **** 		if (HAL_CAN_GetRxFifoFillLevel(&hcan1, CAN_RX_FIFO0) != 0){
 491:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 492:Src/main.c    **** 			HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &header, can1.dataRx);
 493:Src/main.c    **** 			can1.rx_id = header.StdId;
 494:Src/main.c    **** 			can1.rx_size = header.DLC;
 495:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 496:Src/main.c    **** 			sprintf(txt,"DATA: %d %d %d %d %d %d %d %d\r\n",can1.dataRx[0],can1.dataRx[1],can1.dataRx[2],can
 497:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 498:Src/main.c    **** 			//HAL_UART_Transmit(&huart3, (uint8_t*)"ciao2\r\n", strlen("ciao2\r\n"), 10);
 499:Src/main.c    **** 
 500:Src/main.c    **** 
 501:Src/main.c    **** 		}
 502:Src/main.c    **** 	}
 503:Src/main.c    **** }
 545              		.loc 1 503 1 view .LVU136
 546 0014 0FB0     		add	sp, sp, #60
 547              	.LCFI7:
 548              		.cfi_remember_state
 549              		.cfi_def_cfa_offset 20
 550              		@ sp needed
 551 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
 552              	.LVL29:
 553              	.L25:
 554              	.LCFI8:
 555              		.cfi_restore_state
 490:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 556              		.loc 1 490 3 is_stmt 1 view .LVU137
 490:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 557              		.loc 1 490 7 is_stmt 0 view .LVU138
 558 0018 0021     		movs	r1, #0
 559 001a 1846     		mov	r0, r3
 560 001c FFF7FEFF 		bl	HAL_CAN_GetRxFifoFillLevel
 561              	.LVL30:
 490:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 562              		.loc 1 490 6 view .LVU139
 563 0020 0028     		cmp	r0, #0
 564 0022 F7D0     		beq	.L22
 565              	.LBB6:
 491:Src/main.c    **** 			HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &header, can1.dataRx);
 566              		.loc 1 491 4 is_stmt 1 view .LVU140
 492:Src/main.c    **** 			can1.rx_id = header.StdId;
 567              		.loc 1 492 4 view .LVU141
 568 0024 184C     		ldr	r4, .L26+8
 569              	.LVL31:
 492:Src/main.c    **** 			can1.rx_id = header.StdId;
ARM GAS  /tmp/cc7n1NbK.s 			page 21


 570              		.loc 1 492 4 is_stmt 0 view .LVU142
 571 0026 2346     		mov	r3, r4
 572 0028 07AA     		add	r2, sp, #28
 573 002a 0021     		movs	r1, #0
 574 002c 1548     		ldr	r0, .L26+4
 575 002e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 576              	.LVL32:
 493:Src/main.c    **** 			can1.rx_size = header.DLC;
 577              		.loc 1 493 4 is_stmt 1 view .LVU143
 493:Src/main.c    **** 			can1.rx_size = header.DLC;
 578              		.loc 1 493 15 is_stmt 0 view .LVU144
 579 0032 079B     		ldr	r3, [sp, #28]
 580 0034 6361     		str	r3, [r4, #20]
 494:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 581              		.loc 1 494 4 is_stmt 1 view .LVU145
 494:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 582              		.loc 1 494 25 is_stmt 0 view .LVU146
 583 0036 0B9B     		ldr	r3, [sp, #44]
 494:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 584              		.loc 1 494 17 view .LVU147
 585 0038 44F80C3C 		str	r3, [r4, #-12]
 493:Src/main.c    **** 			can1.rx_size = header.DLC;
 586              		.loc 1 493 15 view .LVU148
 587 003c 103C     		subs	r4, r4, #16
 495:Src/main.c    **** 			sprintf(txt,"DATA: %d %d %d %d %d %d %d %d\r\n",can1.dataRx[0],can1.dataRx[1],can1.dataRx[2],can
 588              		.loc 1 495 4 is_stmt 1 view .LVU149
 589 003e 2046     		mov	r0, r4
 590 0040 FFF7FEFF 		bl	fifoRxDataCAN_push
 591              	.LVL33:
 496:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 592              		.loc 1 496 4 view .LVU150
 496:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 593              		.loc 1 496 93 is_stmt 0 view .LVU151
 594 0044 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 496:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 595              		.loc 1 496 108 view .LVU152
 596 0046 E27C     		ldrb	r2, [r4, #19]	@ zero_extendqisi2
 496:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 597              		.loc 1 496 123 view .LVU153
 598 0048 217D     		ldrb	r1, [r4, #20]	@ zero_extendqisi2
 496:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 599              		.loc 1 496 138 view .LVU154
 600 004a 607D     		ldrb	r0, [r4, #21]	@ zero_extendqisi2
 496:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 601              		.loc 1 496 153 view .LVU155
 602 004c A67D     		ldrb	r6, [r4, #22]	@ zero_extendqisi2
 496:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 603              		.loc 1 496 168 view .LVU156
 604 004e E77D     		ldrb	r7, [r4, #23]	@ zero_extendqisi2
 496:Src/main.c    **** 			HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 100);
 605              		.loc 1 496 4 view .LVU157
 606 0050 0E4D     		ldr	r5, .L26+12
 607 0052 0597     		str	r7, [sp, #20]
 608 0054 0496     		str	r6, [sp, #16]
 609 0056 0390     		str	r0, [sp, #12]
 610 0058 0291     		str	r1, [sp, #8]
 611 005a 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/cc7n1NbK.s 			page 22


 612 005c 0093     		str	r3, [sp]
 613 005e 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 614 0060 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 615 0062 0B49     		ldr	r1, .L26+16
 616 0064 2846     		mov	r0, r5
 617 0066 FFF7FEFF 		bl	sprintf
 618              	.LVL34:
 497:Src/main.c    **** 			//HAL_UART_Transmit(&huart3, (uint8_t*)"ciao2\r\n", strlen("ciao2\r\n"), 10);
 619              		.loc 1 497 4 is_stmt 1 view .LVU158
 497:Src/main.c    **** 			//HAL_UART_Transmit(&huart3, (uint8_t*)"ciao2\r\n", strlen("ciao2\r\n"), 10);
 620              		.loc 1 497 46 is_stmt 0 view .LVU159
 621 006a 2846     		mov	r0, r5
 622 006c FFF7FEFF 		bl	strlen
 623              	.LVL35:
 497:Src/main.c    **** 			//HAL_UART_Transmit(&huart3, (uint8_t*)"ciao2\r\n", strlen("ciao2\r\n"), 10);
 624              		.loc 1 497 4 view .LVU160
 625 0070 6423     		movs	r3, #100
 626 0072 82B2     		uxth	r2, r0
 627 0074 2946     		mov	r1, r5
 628 0076 0748     		ldr	r0, .L26+20
 629 0078 FFF7FEFF 		bl	HAL_UART_Transmit
 630              	.LVL36:
 631              	.LBE6:
 632              		.loc 1 503 1 view .LVU161
 633 007c CAE7     		b	.L22
 634              	.L27:
 635 007e 00BF     		.align	2
 636              	.L26:
 637 0080 00040240 		.word	1073873920
 638 0084 00000000 		.word	hcan1
 639 0088 10000000 		.word	can1+16
 640 008c 00000000 		.word	txt
 641 0090 00000000 		.word	.LC1
 642 0094 00000000 		.word	huart3
 643              		.cfi_endproc
 644              	.LFE153:
 646              		.section	.rodata.HAL_CAN_RxFifo1MsgPendingCallback.str1.4,"aMS",%progbits,1
 647              		.align	2
 648              	.LC2:
 649 0000 7278206F 		.ascii	"rx on FIFO1\015\012\000"
 649      6E204649 
 649      464F310D 
 649      0A00
 650              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 651              		.align	1
 652              		.global	HAL_CAN_RxFifo1MsgPendingCallback
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv5-d16
 658              	HAL_CAN_RxFifo1MsgPendingCallback:
 659              	.LVL37:
 660              	.LFB154:
 504:Src/main.c    **** void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan){
 661              		.loc 1 504 64 is_stmt 1 view -0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc7n1NbK.s 			page 23


 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		.loc 1 504 64 is_stmt 0 view .LVU163
 666 0000 08B5     		push	{r3, lr}
 667              	.LCFI9:
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 3, -8
 670              		.cfi_offset 14, -4
 505:Src/main.c    **** 	if (hcan == &hcan1){
 671              		.loc 1 505 2 is_stmt 1 view .LVU164
 672              		.loc 1 505 5 is_stmt 0 view .LVU165
 673 0002 054B     		ldr	r3, .L32
 674 0004 8342     		cmp	r3, r0
 675 0006 00D0     		beq	.L31
 676              	.LVL38:
 677              	.L28:
 506:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"rx on FIFO1\r\n", strlen("rx on FIFO1\r\n"), 10);
 507:Src/main.c    **** 	}
 508:Src/main.c    **** }
 678              		.loc 1 508 1 view .LVU166
 679 0008 08BD     		pop	{r3, pc}
 680              	.LVL39:
 681              	.L31:
 506:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"rx on FIFO1\r\n", strlen("rx on FIFO1\r\n"), 10);
 682              		.loc 1 506 3 is_stmt 1 view .LVU167
 683 000a 0A23     		movs	r3, #10
 684 000c 0D22     		movs	r2, #13
 685 000e 0349     		ldr	r1, .L32+4
 686 0010 0348     		ldr	r0, .L32+8
 687              	.LVL40:
 506:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"rx on FIFO1\r\n", strlen("rx on FIFO1\r\n"), 10);
 688              		.loc 1 506 3 is_stmt 0 view .LVU168
 689 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 690              	.LVL41:
 691              		.loc 1 508 1 view .LVU169
 692 0016 F7E7     		b	.L28
 693              	.L33:
 694              		.align	2
 695              	.L32:
 696 0018 00000000 		.word	hcan1
 697 001c 00000000 		.word	.LC2
 698 0020 00000000 		.word	huart3
 699              		.cfi_endproc
 700              	.LFE154:
 702              		.section	.rodata.HAL_CAN_RxFifo0FullCallback.str1.4,"aMS",%progbits,1
 703              		.align	2
 704              	.LC3:
 705 0000 4649464F 		.ascii	"FIFO0 FULL\015\012\000"
 705      30204655 
 705      4C4C0D0A 
 705      00
 706              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 707              		.align	1
 708              		.global	HAL_CAN_RxFifo0FullCallback
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 712              		.fpu fpv5-d16
ARM GAS  /tmp/cc7n1NbK.s 			page 24


 714              	HAL_CAN_RxFifo0FullCallback:
 715              	.LVL42:
 716              	.LFB155:
 509:Src/main.c    **** 
 510:Src/main.c    **** void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan){
 717              		.loc 1 510 58 is_stmt 1 view -0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              		.loc 1 510 58 is_stmt 0 view .LVU171
 722 0000 08B5     		push	{r3, lr}
 723              	.LCFI10:
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 3, -8
 726              		.cfi_offset 14, -4
 511:Src/main.c    **** 	if (hcan == &hcan1){
 727              		.loc 1 511 2 is_stmt 1 view .LVU172
 728              		.loc 1 511 5 is_stmt 0 view .LVU173
 729 0002 054B     		ldr	r3, .L38
 730 0004 8342     		cmp	r3, r0
 731 0006 00D0     		beq	.L37
 732              	.LVL43:
 733              	.L34:
 512:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"FIFO0 FULL\r\n", strlen("FIFO0 FULL\r\n"), 10);
 513:Src/main.c    **** 	}
 514:Src/main.c    **** }
 734              		.loc 1 514 1 view .LVU174
 735 0008 08BD     		pop	{r3, pc}
 736              	.LVL44:
 737              	.L37:
 512:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"FIFO0 FULL\r\n", strlen("FIFO0 FULL\r\n"), 10);
 738              		.loc 1 512 3 is_stmt 1 view .LVU175
 739 000a 0A23     		movs	r3, #10
 740 000c 0C22     		movs	r2, #12
 741 000e 0349     		ldr	r1, .L38+4
 742 0010 0348     		ldr	r0, .L38+8
 743              	.LVL45:
 512:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"FIFO0 FULL\r\n", strlen("FIFO0 FULL\r\n"), 10);
 744              		.loc 1 512 3 is_stmt 0 view .LVU176
 745 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 746              	.LVL46:
 747              		.loc 1 514 1 view .LVU177
 748 0016 F7E7     		b	.L34
 749              	.L39:
 750              		.align	2
 751              	.L38:
 752 0018 00000000 		.word	hcan1
 753 001c 00000000 		.word	.LC3
 754 0020 00000000 		.word	huart3
 755              		.cfi_endproc
 756              	.LFE155:
 758              		.section	.rodata.HAL_CAN_RxFifo1FullCallback.str1.4,"aMS",%progbits,1
 759              		.align	2
 760              	.LC4:
 761 0000 4649464F 		.ascii	"FIFO1 FULL\015\012\000"
 761      31204655 
 761      4C4C0D0A 
ARM GAS  /tmp/cc7n1NbK.s 			page 25


 761      00
 762              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 763              		.align	1
 764              		.global	HAL_CAN_RxFifo1FullCallback
 765              		.syntax unified
 766              		.thumb
 767              		.thumb_func
 768              		.fpu fpv5-d16
 770              	HAL_CAN_RxFifo1FullCallback:
 771              	.LVL47:
 772              	.LFB156:
 515:Src/main.c    **** void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan){
 773              		.loc 1 515 58 is_stmt 1 view -0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		.loc 1 515 58 is_stmt 0 view .LVU179
 778 0000 08B5     		push	{r3, lr}
 779              	.LCFI11:
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 3, -8
 782              		.cfi_offset 14, -4
 516:Src/main.c    **** 	if (hcan == &hcan1){
 783              		.loc 1 516 2 is_stmt 1 view .LVU180
 784              		.loc 1 516 5 is_stmt 0 view .LVU181
 785 0002 054B     		ldr	r3, .L44
 786 0004 8342     		cmp	r3, r0
 787 0006 00D0     		beq	.L43
 788              	.LVL48:
 789              	.L40:
 517:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"FIFO1 FULL\r\n", strlen("FIFO1 FULL\r\n"), 10);
 518:Src/main.c    **** 	}
 519:Src/main.c    **** }
 790              		.loc 1 519 1 view .LVU182
 791 0008 08BD     		pop	{r3, pc}
 792              	.LVL49:
 793              	.L43:
 517:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"FIFO1 FULL\r\n", strlen("FIFO1 FULL\r\n"), 10);
 794              		.loc 1 517 3 is_stmt 1 view .LVU183
 795 000a 0A23     		movs	r3, #10
 796 000c 0C22     		movs	r2, #12
 797 000e 0349     		ldr	r1, .L44+4
 798 0010 0348     		ldr	r0, .L44+8
 799              	.LVL50:
 517:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t*)"FIFO1 FULL\r\n", strlen("FIFO1 FULL\r\n"), 10);
 800              		.loc 1 517 3 is_stmt 0 view .LVU184
 801 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 802              	.LVL51:
 803              		.loc 1 519 1 view .LVU185
 804 0016 F7E7     		b	.L40
 805              	.L45:
 806              		.align	2
 807              	.L44:
 808 0018 00000000 		.word	hcan1
 809 001c 00000000 		.word	.LC4
 810 0020 00000000 		.word	huart3
 811              		.cfi_endproc
ARM GAS  /tmp/cc7n1NbK.s 			page 26


 812              	.LFE156:
 814              		.section	.rodata.HAL_CAN_TxMailbox0CompleteCallback.str1.4,"aMS",%progbits,1
 815              		.align	2
 816              	.LC5:
 817 0000 6D62303A 		.ascii	"mb0: %d\015\012\000"
 817      2025640D 
 817      0A00
 818 000a 0000     		.align	2
 819              	.LC6:
 820 000c 68696768 		.ascii	"high\015\012\000"
 820      0D0A00
 821              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 822              		.align	1
 823              		.global	HAL_CAN_TxMailbox0CompleteCallback
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 827              		.fpu fpv5-d16
 829              	HAL_CAN_TxMailbox0CompleteCallback:
 830              	.LVL52:
 831              	.LFB157:
 520:Src/main.c    **** 
 521:Src/main.c    **** void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan){
 832              		.loc 1 521 65 is_stmt 1 view -0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836              		.loc 1 521 65 is_stmt 0 view .LVU187
 837 0000 38B5     		push	{r3, r4, r5, lr}
 838              	.LCFI12:
 839              		.cfi_def_cfa_offset 16
 840              		.cfi_offset 3, -16
 841              		.cfi_offset 4, -12
 842              		.cfi_offset 5, -8
 843              		.cfi_offset 14, -4
 844 0002 0446     		mov	r4, r0
 522:Src/main.c    **** 	sprintf(txt,"mb0: %d\r\n", (int)can1.idBck);
 845              		.loc 1 522 2 is_stmt 1 view .LVU188
 846 0004 184D     		ldr	r5, .L51
 847 0006 194B     		ldr	r3, .L51+4
 848 0008 9A6A     		ldr	r2, [r3, #40]
 849 000a 1949     		ldr	r1, .L51+8
 850 000c 2846     		mov	r0, r5
 851              	.LVL53:
 852              		.loc 1 522 2 is_stmt 0 view .LVU189
 853 000e FFF7FEFF 		bl	sprintf
 854              	.LVL54:
 523:Src/main.c    **** 	HAL_UART_Transmit(&huart3,(uint8_t*)(txt), strlen(txt), 10);
 855              		.loc 1 523 2 is_stmt 1 view .LVU190
 856              		.loc 1 523 45 is_stmt 0 view .LVU191
 857 0012 2846     		mov	r0, r5
 858 0014 FFF7FEFF 		bl	strlen
 859              	.LVL55:
 860              		.loc 1 523 2 view .LVU192
 861 0018 0A23     		movs	r3, #10
 862 001a 82B2     		uxth	r2, r0
 863 001c 2946     		mov	r1, r5
ARM GAS  /tmp/cc7n1NbK.s 			page 27


 864 001e 1548     		ldr	r0, .L51+12
 865 0020 FFF7FEFF 		bl	HAL_UART_Transmit
 866              	.LVL56:
 524:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 867              		.loc 1 524 2 is_stmt 1 view .LVU193
 868 0024 0121     		movs	r1, #1
 869 0026 1448     		ldr	r0, .L51+16
 870 0028 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 871              	.LVL57:
 525:Src/main.c    **** 	if(hcan == &hcan1){
 872              		.loc 1 525 2 view .LVU194
 873              		.loc 1 525 4 is_stmt 0 view .LVU195
 874 002c 134B     		ldr	r3, .L51+20
 875 002e 9C42     		cmp	r4, r3
 876 0030 00D0     		beq	.L50
 877              	.L46:
 526:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 527:Src/main.c    **** 			if(CAN_Send_IT(&can1) == 0){
 528:Src/main.c    **** 				//TODO: implementare errore
 529:Src/main.c    **** 			}else{
 530:Src/main.c    **** 				HAL_UART_Transmit(&huart3,(uint8_t*)("high\r\n"), strlen("high\r\n"), 10);
 531:Src/main.c    **** 			}
 532:Src/main.c    **** 		}else if(fifoTxDataCAN_normal_pop(&can1)){
 533:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 534:Src/main.c    **** 			if(CAN_Send_IT(&can1) == 0){
 535:Src/main.c    **** 				//TODO: implementare errore
 536:Src/main.c    **** 			}
 537:Src/main.c    **** 		}else{
 538:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"), strlen("Fifo vuota\r\n"), 10);
 539:Src/main.c    **** 		}
 540:Src/main.c    **** 	}/*else{
 541:Src/main.c    **** 	HAL_UART_Transmit(&huart3,(uint8_t*)("Messaggio trasmesso\r\n"), strlen("Messaggio trasmesso\r\n")
 542:Src/main.c    **** 		//HAL_GPIO_TogglePin(USER_LED_4_GPIO_Port, USER_LED_4_Pin);
 543:Src/main.c    **** 		fifoDataType fifodata;
 544:Src/main.c    **** 		if(fifoTxDataCAN3_high_pop(&fifoCAN3, &fifodata)){
 545:Src/main.c    **** 			for(int i = 0; i < 8; i++){
 546:Src/main.c    **** 				can3.dataTx[i] = fifodata.data[i];
 547:Src/main.c    **** 			}
 548:Src/main.c    **** 			if(CAN_Send_IT(&can3, fifodata.id) == 0){
 549:Src/main.c    **** 				//TODO: implementare errore
 550:Src/main.c    **** 			}
 551:Src/main.c    **** 		}else if(fifoTxDataCAN3_normal_pop(&fifoCAN3, &fifodata)){
 552:Src/main.c    **** 			HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n"), 
 553:Src/main.c    **** 			for(int i = 0; i < 8; i++){
 554:Src/main.c    **** 				can3.dataTx[i] = fifodata.data[i];
 555:Src/main.c    **** 			}
 556:Src/main.c    **** 			if(CAN_Send_IT(&can3, fifodata.id) == 0){
 557:Src/main.c    **** 				//TODO: implementare errore
 558:Src/main.c    **** 			}
 559:Src/main.c    **** 		}else{
 560:Src/main.c    **** 			//TODO: riattivare interrupt
 561:Src/main.c    **** 			HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"), strlen("Fifo vuota\r\n"), 10);
 562:Src/main.c    **** 		}*/
 563:Src/main.c    **** 	//}
 564:Src/main.c    **** }
 878              		.loc 1 564 1 view .LVU196
 879 0032 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc7n1NbK.s 			page 28


 880              	.LVL58:
 881              	.L50:
 526:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 882              		.loc 1 526 3 is_stmt 1 view .LVU197
 526:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 883              		.loc 1 526 6 is_stmt 0 view .LVU198
 884 0034 0D48     		ldr	r0, .L51+4
 885 0036 FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 886              	.LVL59:
 526:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 887              		.loc 1 526 5 view .LVU199
 888 003a 58B1     		cbz	r0, .L48
 527:Src/main.c    **** 				//TODO: implementare errore
 889              		.loc 1 527 4 is_stmt 1 view .LVU200
 527:Src/main.c    **** 				//TODO: implementare errore
 890              		.loc 1 527 7 is_stmt 0 view .LVU201
 891 003c 0B48     		ldr	r0, .L51+4
 892 003e FFF7FEFF 		bl	CAN_Send_IT
 893              	.LVL60:
 527:Src/main.c    **** 				//TODO: implementare errore
 894              		.loc 1 527 6 view .LVU202
 895 0042 0028     		cmp	r0, #0
 896 0044 F5D0     		beq	.L46
 530:Src/main.c    **** 			}
 897              		.loc 1 530 5 is_stmt 1 view .LVU203
 898 0046 0A23     		movs	r3, #10
 899 0048 0622     		movs	r2, #6
 900 004a 0D49     		ldr	r1, .L51+24
 901 004c 0948     		ldr	r0, .L51+12
 902 004e FFF7FEFF 		bl	HAL_UART_Transmit
 903              	.LVL61:
 904 0052 EEE7     		b	.L46
 905              	.L48:
 532:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 906              		.loc 1 532 9 view .LVU204
 532:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 907              		.loc 1 532 12 is_stmt 0 view .LVU205
 908 0054 0548     		ldr	r0, .L51+4
 909 0056 FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 910              	.LVL62:
 532:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 911              		.loc 1 532 11 view .LVU206
 912 005a 0028     		cmp	r0, #0
 913 005c E9D0     		beq	.L46
 534:Src/main.c    **** 				//TODO: implementare errore
 914              		.loc 1 534 4 is_stmt 1 view .LVU207
 534:Src/main.c    **** 				//TODO: implementare errore
 915              		.loc 1 534 7 is_stmt 0 view .LVU208
 916 005e 0348     		ldr	r0, .L51+4
 917 0060 FFF7FEFF 		bl	CAN_Send_IT
 918              	.LVL63:
 536:Src/main.c    **** 		}else{
 919              		.loc 1 536 4 is_stmt 1 view .LVU209
 539:Src/main.c    **** 	}/*else{
 920              		.loc 1 539 3 view .LVU210
 921              		.loc 1 564 1 is_stmt 0 view .LVU211
 922 0064 E5E7     		b	.L46
ARM GAS  /tmp/cc7n1NbK.s 			page 29


 923              	.L52:
 924 0066 00BF     		.align	2
 925              	.L51:
 926 0068 00000000 		.word	txt
 927 006c 00000000 		.word	can1
 928 0070 00000000 		.word	.LC5
 929 0074 00000000 		.word	huart3
 930 0078 00040240 		.word	1073873920
 931 007c 00000000 		.word	hcan1
 932 0080 0C000000 		.word	.LC6
 933              		.cfi_endproc
 934              	.LFE157:
 936              		.section	.rodata.HAL_CAN_TxMailbox1CompleteCallback.str1.4,"aMS",%progbits,1
 937              		.align	2
 938              	.LC7:
 939 0000 6D62313A 		.ascii	"mb1: %d %d\015\012\000"
 939      20256420 
 939      25640D0A 
 939      00
 940              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 941              		.align	1
 942              		.global	HAL_CAN_TxMailbox1CompleteCallback
 943              		.syntax unified
 944              		.thumb
 945              		.thumb_func
 946              		.fpu fpv5-d16
 948              	HAL_CAN_TxMailbox1CompleteCallback:
 949              	.LVL64:
 950              	.LFB158:
 565:Src/main.c    **** void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan){
 951              		.loc 1 565 65 is_stmt 1 view -0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              		.loc 1 565 65 is_stmt 0 view .LVU213
 956 0000 38B5     		push	{r3, r4, r5, lr}
 957              	.LCFI13:
 958              		.cfi_def_cfa_offset 16
 959              		.cfi_offset 3, -16
 960              		.cfi_offset 4, -12
 961              		.cfi_offset 5, -8
 962              		.cfi_offset 14, -4
 963 0002 0446     		mov	r4, r0
 566:Src/main.c    **** 	sprintf(txt,"mb1: %d %d\r\n" ,can1.fifo.txTailNormal, can1.fifo.txHeadNormal);
 964              		.loc 1 566 2 is_stmt 1 view .LVU214
 965              		.loc 1 566 41 is_stmt 0 view .LVU215
 966 0004 194A     		ldr	r2, .L58
 967              		.loc 1 566 2 view .LVU216
 968 0006 1A4D     		ldr	r5, .L58+4
 969 0008 92F86230 		ldrb	r3, [r2, #98]	@ zero_extendqisi2
 970 000c 92F86320 		ldrb	r2, [r2, #99]	@ zero_extendqisi2
 971 0010 1849     		ldr	r1, .L58+8
 972 0012 2846     		mov	r0, r5
 973              	.LVL65:
 974              		.loc 1 566 2 view .LVU217
 975 0014 FFF7FEFF 		bl	sprintf
 976              	.LVL66:
ARM GAS  /tmp/cc7n1NbK.s 			page 30


 567:Src/main.c    **** 	HAL_UART_Transmit(&huart3,(uint8_t*)(txt), strlen(txt), 10);
 977              		.loc 1 567 2 is_stmt 1 view .LVU218
 978              		.loc 1 567 45 is_stmt 0 view .LVU219
 979 0018 2846     		mov	r0, r5
 980 001a FFF7FEFF 		bl	strlen
 981              	.LVL67:
 982              		.loc 1 567 2 view .LVU220
 983 001e 0A23     		movs	r3, #10
 984 0020 82B2     		uxth	r2, r0
 985 0022 2946     		mov	r1, r5
 986 0024 1448     		ldr	r0, .L58+12
 987 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 988              	.LVL68:
 568:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 989              		.loc 1 568 2 is_stmt 1 view .LVU221
 990 002a 0121     		movs	r1, #1
 991 002c 1348     		ldr	r0, .L58+16
 992 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 993              	.LVL69:
 569:Src/main.c    **** 	if(hcan == &hcan1){
 994              		.loc 1 569 2 view .LVU222
 995              		.loc 1 569 4 is_stmt 0 view .LVU223
 996 0032 134B     		ldr	r3, .L58+20
 997 0034 9C42     		cmp	r4, r3
 998 0036 00D0     		beq	.L57
 999              	.L53:
 570:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 571:Src/main.c    **** 			if(CAN_Send_IT(&can1) == 0){
 572:Src/main.c    **** 				//TODO: implementare errore
 573:Src/main.c    **** 			}else{
 574:Src/main.c    **** 				HAL_UART_Transmit(&huart3,(uint8_t*)("high\r\n"), strlen("high\r\n"), 10);
 575:Src/main.c    **** 			}
 576:Src/main.c    **** 		}else if(fifoTxDataCAN_normal_pop(&can1)){
 577:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 578:Src/main.c    **** 			if(CAN_Send_IT(&can1) == 0){
 579:Src/main.c    **** 				//TODO: implementare errore
 580:Src/main.c    **** 			}
 581:Src/main.c    **** 		}else{
 582:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"), strlen("Fifo vuota\r\n"), 10);
 583:Src/main.c    **** 		}
 584:Src/main.c    **** 	}
 585:Src/main.c    **** }
 1000              		.loc 1 585 1 view .LVU224
 1001 0038 38BD     		pop	{r3, r4, r5, pc}
 1002              	.LVL70:
 1003              	.L57:
 570:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 1004              		.loc 1 570 3 is_stmt 1 view .LVU225
 570:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 1005              		.loc 1 570 6 is_stmt 0 view .LVU226
 1006 003a 0C48     		ldr	r0, .L58
 1007 003c FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 1008              	.LVL71:
 570:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 1009              		.loc 1 570 5 view .LVU227
 1010 0040 58B1     		cbz	r0, .L55
 571:Src/main.c    **** 				//TODO: implementare errore
ARM GAS  /tmp/cc7n1NbK.s 			page 31


 1011              		.loc 1 571 4 is_stmt 1 view .LVU228
 571:Src/main.c    **** 				//TODO: implementare errore
 1012              		.loc 1 571 7 is_stmt 0 view .LVU229
 1013 0042 0A48     		ldr	r0, .L58
 1014 0044 FFF7FEFF 		bl	CAN_Send_IT
 1015              	.LVL72:
 571:Src/main.c    **** 				//TODO: implementare errore
 1016              		.loc 1 571 6 view .LVU230
 1017 0048 0028     		cmp	r0, #0
 1018 004a F5D0     		beq	.L53
 574:Src/main.c    **** 			}
 1019              		.loc 1 574 5 is_stmt 1 view .LVU231
 1020 004c 0A23     		movs	r3, #10
 1021 004e 0622     		movs	r2, #6
 1022 0050 0C49     		ldr	r1, .L58+24
 1023 0052 0948     		ldr	r0, .L58+12
 1024 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 1025              	.LVL73:
 1026 0058 EEE7     		b	.L53
 1027              	.L55:
 576:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 1028              		.loc 1 576 9 view .LVU232
 576:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 1029              		.loc 1 576 12 is_stmt 0 view .LVU233
 1030 005a 0448     		ldr	r0, .L58
 1031 005c FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 1032              	.LVL74:
 576:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 1033              		.loc 1 576 11 view .LVU234
 1034 0060 0028     		cmp	r0, #0
 1035 0062 E9D0     		beq	.L53
 578:Src/main.c    **** 				//TODO: implementare errore
 1036              		.loc 1 578 4 is_stmt 1 view .LVU235
 578:Src/main.c    **** 				//TODO: implementare errore
 1037              		.loc 1 578 7 is_stmt 0 view .LVU236
 1038 0064 0148     		ldr	r0, .L58
 1039 0066 FFF7FEFF 		bl	CAN_Send_IT
 1040              	.LVL75:
 580:Src/main.c    **** 		}else{
 1041              		.loc 1 580 4 is_stmt 1 view .LVU237
 583:Src/main.c    **** 	}
 1042              		.loc 1 583 3 view .LVU238
 1043              		.loc 1 585 1 is_stmt 0 view .LVU239
 1044 006a E5E7     		b	.L53
 1045              	.L59:
 1046              		.align	2
 1047              	.L58:
 1048 006c 00000000 		.word	can1
 1049 0070 00000000 		.word	txt
 1050 0074 00000000 		.word	.LC7
 1051 0078 00000000 		.word	huart3
 1052 007c 00040240 		.word	1073873920
 1053 0080 00000000 		.word	hcan1
 1054 0084 0C000000 		.word	.LC6
 1055              		.cfi_endproc
 1056              	.LFE158:
 1058              		.section	.rodata.HAL_CAN_TxMailbox2CompleteCallback.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/cc7n1NbK.s 			page 32


 1059              		.align	2
 1060              	.LC8:
 1061 0000 6D62323A 		.ascii	"mb2: %d %d\015\012\000"
 1061      20256420 
 1061      25640D0A 
 1061      00
 1062              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 1063              		.align	1
 1064              		.global	HAL_CAN_TxMailbox2CompleteCallback
 1065              		.syntax unified
 1066              		.thumb
 1067              		.thumb_func
 1068              		.fpu fpv5-d16
 1070              	HAL_CAN_TxMailbox2CompleteCallback:
 1071              	.LVL76:
 1072              	.LFB159:
 586:Src/main.c    **** void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan){
 1073              		.loc 1 586 65 is_stmt 1 view -0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 0
 1076              		@ frame_needed = 0, uses_anonymous_args = 0
 1077              		.loc 1 586 65 is_stmt 0 view .LVU241
 1078 0000 38B5     		push	{r3, r4, r5, lr}
 1079              	.LCFI14:
 1080              		.cfi_def_cfa_offset 16
 1081              		.cfi_offset 3, -16
 1082              		.cfi_offset 4, -12
 1083              		.cfi_offset 5, -8
 1084              		.cfi_offset 14, -4
 1085 0002 0446     		mov	r4, r0
 587:Src/main.c    **** 	sprintf(txt,"mb2: %d %d\r\n", can1.fifo.txTailNormal, can1.fifo.txHeadNormal);
 1086              		.loc 1 587 2 is_stmt 1 view .LVU242
 1087              		.loc 1 587 41 is_stmt 0 view .LVU243
 1088 0004 194A     		ldr	r2, .L65
 1089              		.loc 1 587 2 view .LVU244
 1090 0006 1A4D     		ldr	r5, .L65+4
 1091 0008 92F86230 		ldrb	r3, [r2, #98]	@ zero_extendqisi2
 1092 000c 92F86320 		ldrb	r2, [r2, #99]	@ zero_extendqisi2
 1093 0010 1849     		ldr	r1, .L65+8
 1094 0012 2846     		mov	r0, r5
 1095              	.LVL77:
 1096              		.loc 1 587 2 view .LVU245
 1097 0014 FFF7FEFF 		bl	sprintf
 1098              	.LVL78:
 588:Src/main.c    **** 	HAL_UART_Transmit(&huart3,(uint8_t*)(txt), strlen(txt), 10);
 1099              		.loc 1 588 2 is_stmt 1 view .LVU246
 1100              		.loc 1 588 45 is_stmt 0 view .LVU247
 1101 0018 2846     		mov	r0, r5
 1102 001a FFF7FEFF 		bl	strlen
 1103              	.LVL79:
 1104              		.loc 1 588 2 view .LVU248
 1105 001e 0A23     		movs	r3, #10
 1106 0020 82B2     		uxth	r2, r0
 1107 0022 2946     		mov	r1, r5
 1108 0024 1448     		ldr	r0, .L65+12
 1109 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 1110              	.LVL80:
ARM GAS  /tmp/cc7n1NbK.s 			page 33


 589:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 1111              		.loc 1 589 2 is_stmt 1 view .LVU249
 1112 002a 0121     		movs	r1, #1
 1113 002c 1348     		ldr	r0, .L65+16
 1114 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1115              	.LVL81:
 590:Src/main.c    **** 	if(hcan == &hcan1){
 1116              		.loc 1 590 2 view .LVU250
 1117              		.loc 1 590 4 is_stmt 0 view .LVU251
 1118 0032 134B     		ldr	r3, .L65+20
 1119 0034 9C42     		cmp	r4, r3
 1120 0036 00D0     		beq	.L64
 1121              	.L60:
 591:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 592:Src/main.c    **** 			if(CAN_Send_IT(&can1) == 0){
 593:Src/main.c    **** 				//TODO: implementare errore
 594:Src/main.c    **** 			}else{
 595:Src/main.c    **** 				HAL_UART_Transmit(&huart3,(uint8_t*)("high\r\n"), strlen("high\r\n"), 10);
 596:Src/main.c    **** 			}
 597:Src/main.c    **** 		}else if(fifoTxDataCAN_normal_pop(&can1)){
 598:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 599:Src/main.c    **** 			if(CAN_Send_IT(&can1) == 0){
 600:Src/main.c    **** 				//TODO: implementare errore
 601:Src/main.c    **** 			}
 602:Src/main.c    **** 		}else{
 603:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"), strlen("Fifo vuota\r\n"), 10);
 604:Src/main.c    **** 		}
 605:Src/main.c    **** 	}
 606:Src/main.c    **** }
 1122              		.loc 1 606 1 view .LVU252
 1123 0038 38BD     		pop	{r3, r4, r5, pc}
 1124              	.LVL82:
 1125              	.L64:
 591:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 1126              		.loc 1 591 3 is_stmt 1 view .LVU253
 591:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 1127              		.loc 1 591 6 is_stmt 0 view .LVU254
 1128 003a 0C48     		ldr	r0, .L65
 1129 003c FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 1130              	.LVL83:
 591:Src/main.c    **** 		if(fifoTxDataCAN_high_pop(&can1)){
 1131              		.loc 1 591 5 view .LVU255
 1132 0040 58B1     		cbz	r0, .L62
 592:Src/main.c    **** 				//TODO: implementare errore
 1133              		.loc 1 592 4 is_stmt 1 view .LVU256
 592:Src/main.c    **** 				//TODO: implementare errore
 1134              		.loc 1 592 7 is_stmt 0 view .LVU257
 1135 0042 0A48     		ldr	r0, .L65
 1136 0044 FFF7FEFF 		bl	CAN_Send_IT
 1137              	.LVL84:
 592:Src/main.c    **** 				//TODO: implementare errore
 1138              		.loc 1 592 6 view .LVU258
 1139 0048 0028     		cmp	r0, #0
 1140 004a F5D0     		beq	.L60
 595:Src/main.c    **** 			}
 1141              		.loc 1 595 5 is_stmt 1 view .LVU259
 1142 004c 0A23     		movs	r3, #10
ARM GAS  /tmp/cc7n1NbK.s 			page 34


 1143 004e 0622     		movs	r2, #6
 1144 0050 0C49     		ldr	r1, .L65+24
 1145 0052 0948     		ldr	r0, .L65+12
 1146 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 1147              	.LVL85:
 1148 0058 EEE7     		b	.L60
 1149              	.L62:
 597:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 1150              		.loc 1 597 9 view .LVU260
 597:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 1151              		.loc 1 597 12 is_stmt 0 view .LVU261
 1152 005a 0448     		ldr	r0, .L65
 1153 005c FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 1154              	.LVL86:
 597:Src/main.c    **** 			//HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"), strlen("Prendo dalla fifo\r\n")
 1155              		.loc 1 597 11 view .LVU262
 1156 0060 0028     		cmp	r0, #0
 1157 0062 E9D0     		beq	.L60
 599:Src/main.c    **** 				//TODO: implementare errore
 1158              		.loc 1 599 4 is_stmt 1 view .LVU263
 599:Src/main.c    **** 				//TODO: implementare errore
 1159              		.loc 1 599 7 is_stmt 0 view .LVU264
 1160 0064 0148     		ldr	r0, .L65
 1161 0066 FFF7FEFF 		bl	CAN_Send_IT
 1162              	.LVL87:
 601:Src/main.c    **** 		}else{
 1163              		.loc 1 601 4 is_stmt 1 view .LVU265
 604:Src/main.c    **** 	}
 1164              		.loc 1 604 3 view .LVU266
 1165              		.loc 1 606 1 is_stmt 0 view .LVU267
 1166 006a E5E7     		b	.L60
 1167              	.L66:
 1168              		.align	2
 1169              	.L65:
 1170 006c 00000000 		.word	can1
 1171 0070 00000000 		.word	txt
 1172 0074 00000000 		.word	.LC8
 1173 0078 00000000 		.word	huart3
 1174 007c 00040240 		.word	1073873920
 1175 0080 00000000 		.word	hcan1
 1176 0084 0C000000 		.word	.LC6
 1177              		.cfi_endproc
 1178              	.LFE159:
 1180              		.section	.rodata.HAL_CAN_ErrorCallback.str1.4,"aMS",%progbits,1
 1181              		.align	2
 1182              	.LC9:
 1183 0000 2D2D2D20 		.ascii	"--- Errore ---: %d\015\012\000"
 1183      4572726F 
 1183      7265202D 
 1183      2D2D3A20 
 1183      25640D0A 
 1184              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 1185              		.align	1
 1186              		.global	HAL_CAN_ErrorCallback
 1187              		.syntax unified
 1188              		.thumb
 1189              		.thumb_func
ARM GAS  /tmp/cc7n1NbK.s 			page 35


 1190              		.fpu fpv5-d16
 1192              	HAL_CAN_ErrorCallback:
 1193              	.LVL88:
 1194              	.LFB160:
 607:Src/main.c    **** void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan){
 1195              		.loc 1 607 52 is_stmt 1 view -0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 0
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199              		.loc 1 607 52 is_stmt 0 view .LVU269
 1200 0000 38B5     		push	{r3, r4, r5, lr}
 1201              	.LCFI15:
 1202              		.cfi_def_cfa_offset 16
 1203              		.cfi_offset 3, -16
 1204              		.cfi_offset 4, -12
 1205              		.cfi_offset 5, -8
 1206              		.cfi_offset 14, -4
 1207 0002 0446     		mov	r4, r0
 608:Src/main.c    **** 	sprintf(txt,"--- Errore ---: %d\r\n",(int)hcan->ErrorCode);
 1208              		.loc 1 608 2 is_stmt 1 view .LVU270
 1209              		.loc 1 608 48 is_stmt 0 view .LVU271
 1210 0004 426A     		ldr	r2, [r0, #36]
 1211              		.loc 1 608 2 view .LVU272
 1212 0006 0B4D     		ldr	r5, .L71
 1213 0008 0B49     		ldr	r1, .L71+4
 1214 000a 2846     		mov	r0, r5
 1215              	.LVL89:
 1216              		.loc 1 608 2 view .LVU273
 1217 000c FFF7FEFF 		bl	sprintf
 1218              	.LVL90:
 609:Src/main.c    **** 	HAL_UART_Transmit(&huart3,(uint8_t*)(txt), strlen(txt), 10);
 1219              		.loc 1 609 2 is_stmt 1 view .LVU274
 1220              		.loc 1 609 45 is_stmt 0 view .LVU275
 1221 0010 2846     		mov	r0, r5
 1222 0012 FFF7FEFF 		bl	strlen
 1223              	.LVL91:
 1224              		.loc 1 609 2 view .LVU276
 1225 0016 0A23     		movs	r3, #10
 1226 0018 82B2     		uxth	r2, r0
 1227 001a 2946     		mov	r1, r5
 1228 001c 0748     		ldr	r0, .L71+8
 1229 001e FFF7FEFF 		bl	HAL_UART_Transmit
 1230              	.LVL92:
 610:Src/main.c    **** 	if(hcan == &hcan1){
 1231              		.loc 1 610 2 is_stmt 1 view .LVU277
 1232              		.loc 1 610 4 is_stmt 0 view .LVU278
 1233 0022 074B     		ldr	r3, .L71+12
 1234 0024 9C42     		cmp	r4, r3
 1235 0026 00D0     		beq	.L70
 1236              	.L67:
 611:Src/main.c    **** 		CAN_Send_Bck(&can1);
 612:Src/main.c    **** 	}
 613:Src/main.c    **** }
 1237              		.loc 1 613 1 view .LVU279
 1238 0028 38BD     		pop	{r3, r4, r5, pc}
 1239              	.LVL93:
 1240              	.L70:
ARM GAS  /tmp/cc7n1NbK.s 			page 36


 611:Src/main.c    **** 		CAN_Send_Bck(&can1);
 1241              		.loc 1 611 3 is_stmt 1 view .LVU280
 1242 002a 0648     		ldr	r0, .L71+16
 1243 002c FFF7FEFF 		bl	CAN_Send_Bck
 1244              	.LVL94:
 1245              		.loc 1 613 1 is_stmt 0 view .LVU281
 1246 0030 FAE7     		b	.L67
 1247              	.L72:
 1248 0032 00BF     		.align	2
 1249              	.L71:
 1250 0034 00000000 		.word	txt
 1251 0038 00000000 		.word	.LC9
 1252 003c 00000000 		.word	huart3
 1253 0040 00000000 		.word	hcan1
 1254 0044 00000000 		.word	can1
 1255              		.cfi_endproc
 1256              	.LFE160:
 1258              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1259              		.align	1
 1260              		.global	HAL_UART_RxCpltCallback
 1261              		.syntax unified
 1262              		.thumb
 1263              		.thumb_func
 1264              		.fpu fpv5-d16
 1266              	HAL_UART_RxCpltCallback:
 1267              	.LVL95:
 1268              	.LFB161:
 614:Src/main.c    **** 
 615:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 1269              		.loc 1 615 56 is_stmt 1 view -0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 0
 1272              		@ frame_needed = 0, uses_anonymous_args = 0
 1273              		.loc 1 615 56 is_stmt 0 view .LVU283
 1274 0000 08B5     		push	{r3, lr}
 1275              	.LCFI16:
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 3, -8
 1278              		.cfi_offset 14, -4
 616:Src/main.c    **** 	if(huart == &huart3){
 1279              		.loc 1 616 2 is_stmt 1 view .LVU284
 1280              		.loc 1 616 4 is_stmt 0 view .LVU285
 1281 0002 174B     		ldr	r3, .L80
 1282 0004 8342     		cmp	r3, r0
 1283 0006 00D0     		beq	.L79
 1284              	.LVL96:
 1285              	.L73:
 617:Src/main.c    **** 		if((debug_rx[debug_rx_count] == '\r') | (debug_rx[debug_rx_count] == '\n')){
 618:Src/main.c    **** 			debug_msg_arrived = 1; //set flag
 619:Src/main.c    **** 			debug_rx[debug_rx_count] = 0; //set end of the string
 620:Src/main.c    **** 			debug_rx_count = 0; //reset counter
 621:Src/main.c    **** 		}else{
 622:Src/main.c    **** 			if(debug_rx_count == MAX_DEBUG_RX_L){
 623:Src/main.c    **** 				//overflow
 624:Src/main.c    **** 				debug_rx_count = 0; //reset counter for overflow
 625:Src/main.c    **** 			}else{
 626:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t*)&debug_rx[debug_rx_count], 1, 10); //retransmit char
ARM GAS  /tmp/cc7n1NbK.s 			page 37


 627:Src/main.c    **** 				debug_rx_count++;
 628:Src/main.c    **** 			}
 629:Src/main.c    **** 		}
 630:Src/main.c    **** 		HAL_UART_Receive_IT(&huart3,(uint8_t*) &debug_rx[debug_rx_count], 1); //activate rx interrupt for
 631:Src/main.c    **** 	}
 632:Src/main.c    **** }
 1286              		.loc 1 632 1 view .LVU286
 1287 0008 08BD     		pop	{r3, pc}
 1288              	.LVL97:
 1289              	.L79:
 617:Src/main.c    **** 		if((debug_rx[debug_rx_count] == '\r') | (debug_rx[debug_rx_count] == '\n')){
 1290              		.loc 1 617 3 is_stmt 1 view .LVU287
 617:Src/main.c    **** 		if((debug_rx[debug_rx_count] == '\r') | (debug_rx[debug_rx_count] == '\n')){
 1291              		.loc 1 617 15 is_stmt 0 view .LVU288
 1292 000a 164B     		ldr	r3, .L80+4
 1293 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1294 000e 164B     		ldr	r3, .L80+8
 1295 0010 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 617:Src/main.c    **** 		if((debug_rx[debug_rx_count] == '\r') | (debug_rx[debug_rx_count] == '\n')){
 1296              		.loc 1 617 5 view .LVU289
 1297 0012 0A2B     		cmp	r3, #10
 1298 0014 18BF     		it	ne
 1299 0016 0D2B     		cmpne	r3, #13
 1300 0018 10D1     		bne	.L75
 618:Src/main.c    **** 			debug_rx[debug_rx_count] = 0; //set end of the string
 1301              		.loc 1 618 4 is_stmt 1 view .LVU290
 618:Src/main.c    **** 			debug_rx[debug_rx_count] = 0; //set end of the string
 1302              		.loc 1 618 22 is_stmt 0 view .LVU291
 1303 001a 144B     		ldr	r3, .L80+12
 1304 001c 0122     		movs	r2, #1
 1305 001e 1A70     		strb	r2, [r3]
 619:Src/main.c    **** 			debug_rx_count = 0; //reset counter
 1306              		.loc 1 619 4 is_stmt 1 view .LVU292
 619:Src/main.c    **** 			debug_rx_count = 0; //reset counter
 1307              		.loc 1 619 29 is_stmt 0 view .LVU293
 1308 0020 0023     		movs	r3, #0
 1309 0022 114A     		ldr	r2, .L80+8
 1310 0024 5354     		strb	r3, [r2, r1]
 620:Src/main.c    **** 		}else{
 1311              		.loc 1 620 4 is_stmt 1 view .LVU294
 620:Src/main.c    **** 		}else{
 1312              		.loc 1 620 19 is_stmt 0 view .LVU295
 1313 0026 0F4A     		ldr	r2, .L80+4
 1314 0028 1370     		strb	r3, [r2]
 1315              	.LVL98:
 1316              	.L76:
 630:Src/main.c    **** 	}
 1317              		.loc 1 630 3 is_stmt 1 view .LVU296
 630:Src/main.c    **** 	}
 1318              		.loc 1 630 51 is_stmt 0 view .LVU297
 1319 002a 0E4B     		ldr	r3, .L80+4
 1320 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 630:Src/main.c    **** 	}
 1321              		.loc 1 630 3 view .LVU298
 1322 002e 0122     		movs	r2, #1
 1323 0030 0D49     		ldr	r1, .L80+8
 1324 0032 1944     		add	r1, r1, r3
ARM GAS  /tmp/cc7n1NbK.s 			page 38


 1325 0034 0A48     		ldr	r0, .L80
 1326 0036 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1327              	.LVL99:
 1328              		.loc 1 632 1 view .LVU299
 1329 003a E5E7     		b	.L73
 1330              	.LVL100:
 1331              	.L75:
 622:Src/main.c    **** 				//overflow
 1332              		.loc 1 622 4 is_stmt 1 view .LVU300
 622:Src/main.c    **** 				//overflow
 1333              		.loc 1 622 6 is_stmt 0 view .LVU301
 1334 003c 1429     		cmp	r1, #20
 1335 003e 03D1     		bne	.L77
 624:Src/main.c    **** 			}else{
 1336              		.loc 1 624 5 is_stmt 1 view .LVU302
 624:Src/main.c    **** 			}else{
 1337              		.loc 1 624 20 is_stmt 0 view .LVU303
 1338 0040 084B     		ldr	r3, .L80+4
 1339 0042 0022     		movs	r2, #0
 1340 0044 1A70     		strb	r2, [r3]
 1341 0046 F0E7     		b	.L76
 1342              	.L77:
 626:Src/main.c    **** 				debug_rx_count++;
 1343              		.loc 1 626 5 is_stmt 1 view .LVU304
 1344 0048 0A23     		movs	r3, #10
 1345 004a 0122     		movs	r2, #1
 1346 004c 0648     		ldr	r0, .L80+8
 1347              	.LVL101:
 626:Src/main.c    **** 				debug_rx_count++;
 1348              		.loc 1 626 5 is_stmt 0 view .LVU305
 1349 004e 0144     		add	r1, r1, r0
 1350 0050 0348     		ldr	r0, .L80
 1351 0052 FFF7FEFF 		bl	HAL_UART_Transmit
 1352              	.LVL102:
 627:Src/main.c    **** 			}
 1353              		.loc 1 627 5 is_stmt 1 view .LVU306
 627:Src/main.c    **** 			}
 1354              		.loc 1 627 19 is_stmt 0 view .LVU307
 1355 0056 034A     		ldr	r2, .L80+4
 1356 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1357 005a 0133     		adds	r3, r3, #1
 1358 005c 1370     		strb	r3, [r2]
 1359 005e E4E7     		b	.L76
 1360              	.L81:
 1361              		.align	2
 1362              	.L80:
 1363 0060 00000000 		.word	huart3
 1364 0064 00000000 		.word	debug_rx_count
 1365 0068 00000000 		.word	debug_rx
 1366 006c 00000000 		.word	debug_msg_arrived
 1367              		.cfi_endproc
 1368              	.LFE161:
 1370              		.section	.text.Error_Handler,"ax",%progbits
 1371              		.align	1
 1372              		.global	Error_Handler
 1373              		.syntax unified
 1374              		.thumb
ARM GAS  /tmp/cc7n1NbK.s 			page 39


 1375              		.thumb_func
 1376              		.fpu fpv5-d16
 1378              	Error_Handler:
 1379              	.LFB162:
 633:Src/main.c    **** /* USER CODE END 4 */
 634:Src/main.c    **** 
 635:Src/main.c    **** /**
 636:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 637:Src/main.c    ****   * @retval None
 638:Src/main.c    ****   */
 639:Src/main.c    **** void Error_Handler(void)
 640:Src/main.c    **** {
 1380              		.loc 1 640 1 is_stmt 1 view -0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 0
 1383              		@ frame_needed = 0, uses_anonymous_args = 0
 1384 0000 10B5     		push	{r4, lr}
 1385              	.LCFI17:
 1386              		.cfi_def_cfa_offset 8
 1387              		.cfi_offset 4, -8
 1388              		.cfi_offset 14, -4
 641:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 642:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 643:Src/main.c    ****   HAL_GPIO_TogglePin(LED_blue_GPIO_Port,LED_blue_Pin);
 1389              		.loc 1 643 3 view .LVU309
 1390 0002 094C     		ldr	r4, .L84
 1391 0004 8021     		movs	r1, #128
 1392 0006 2046     		mov	r0, r4
 1393 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1394              	.LVL103:
 644:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 1395              		.loc 1 644 2 view .LVU310
 1396 000c 0121     		movs	r1, #1
 1397 000e 2046     		mov	r0, r4
 1398 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1399              	.LVL104:
 645:Src/main.c    ****   HAL_GPIO_TogglePin(LED_red_GPIO_Port, LED_red_Pin);
 1400              		.loc 1 645 3 view .LVU311
 1401 0014 4FF48041 		mov	r1, #16384
 1402 0018 2046     		mov	r0, r4
 1403 001a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1404              	.LVL105:
 646:Src/main.c    **** 
 647:Src/main.c    **** 	HAL_Delay(100);
 1405              		.loc 1 647 2 view .LVU312
 1406 001e 6420     		movs	r0, #100
 1407 0020 FFF7FEFF 		bl	HAL_Delay
 1408              	.LVL106:
 648:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 649:Src/main.c    **** }
 1409              		.loc 1 649 1 is_stmt 0 view .LVU313
 1410 0024 10BD     		pop	{r4, pc}
 1411              	.L85:
 1412 0026 00BF     		.align	2
 1413              	.L84:
 1414 0028 00040240 		.word	1073873920
 1415              		.cfi_endproc
ARM GAS  /tmp/cc7n1NbK.s 			page 40


 1416              	.LFE162:
 1418              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 1419              		.align	1
 1420              		.syntax unified
 1421              		.thumb
 1422              		.thumb_func
 1423              		.fpu fpv5-d16
 1425              	MX_USART3_UART_Init:
 1426              	.LFB150:
 383:Src/main.c    **** 
 1427              		.loc 1 383 1 is_stmt 1 view -0
 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 0
 1430              		@ frame_needed = 0, uses_anonymous_args = 0
 1431 0000 08B5     		push	{r3, lr}
 1432              	.LCFI18:
 1433              		.cfi_def_cfa_offset 8
 1434              		.cfi_offset 3, -8
 1435              		.cfi_offset 14, -4
 392:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 1436              		.loc 1 392 3 view .LVU315
 392:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 1437              		.loc 1 392 19 is_stmt 0 view .LVU316
 1438 0002 0B48     		ldr	r0, .L90
 1439 0004 0B4B     		ldr	r3, .L90+4
 1440 0006 0360     		str	r3, [r0]
 393:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1441              		.loc 1 393 3 is_stmt 1 view .LVU317
 393:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1442              		.loc 1 393 24 is_stmt 0 view .LVU318
 1443 0008 0B4B     		ldr	r3, .L90+8
 1444 000a 4360     		str	r3, [r0, #4]
 394:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1445              		.loc 1 394 3 is_stmt 1 view .LVU319
 394:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1446              		.loc 1 394 26 is_stmt 0 view .LVU320
 1447 000c 0023     		movs	r3, #0
 1448 000e 8360     		str	r3, [r0, #8]
 395:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 1449              		.loc 1 395 3 is_stmt 1 view .LVU321
 395:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 1450              		.loc 1 395 24 is_stmt 0 view .LVU322
 1451 0010 C360     		str	r3, [r0, #12]
 396:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1452              		.loc 1 396 3 is_stmt 1 view .LVU323
 396:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1453              		.loc 1 396 22 is_stmt 0 view .LVU324
 1454 0012 0361     		str	r3, [r0, #16]
 397:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1455              		.loc 1 397 3 is_stmt 1 view .LVU325
 397:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1456              		.loc 1 397 20 is_stmt 0 view .LVU326
 1457 0014 0C22     		movs	r2, #12
 1458 0016 4261     		str	r2, [r0, #20]
 398:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1459              		.loc 1 398 3 is_stmt 1 view .LVU327
 398:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/cc7n1NbK.s 			page 41


 1460              		.loc 1 398 25 is_stmt 0 view .LVU328
 1461 0018 8361     		str	r3, [r0, #24]
 399:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1462              		.loc 1 399 3 is_stmt 1 view .LVU329
 399:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1463              		.loc 1 399 28 is_stmt 0 view .LVU330
 1464 001a C361     		str	r3, [r0, #28]
 400:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1465              		.loc 1 400 3 is_stmt 1 view .LVU331
 400:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1466              		.loc 1 400 30 is_stmt 0 view .LVU332
 1467 001c 0362     		str	r3, [r0, #32]
 401:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1468              		.loc 1 401 3 is_stmt 1 view .LVU333
 401:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1469              		.loc 1 401 38 is_stmt 0 view .LVU334
 1470 001e 4362     		str	r3, [r0, #36]
 402:Src/main.c    ****   {
 1471              		.loc 1 402 3 is_stmt 1 view .LVU335
 402:Src/main.c    ****   {
 1472              		.loc 1 402 7 is_stmt 0 view .LVU336
 1473 0020 FFF7FEFF 		bl	HAL_UART_Init
 1474              	.LVL107:
 402:Src/main.c    ****   {
 1475              		.loc 1 402 6 view .LVU337
 1476 0024 00B9     		cbnz	r0, .L89
 1477              	.L86:
 410:Src/main.c    **** 
 1478              		.loc 1 410 1 view .LVU338
 1479 0026 08BD     		pop	{r3, pc}
 1480              	.L89:
 404:Src/main.c    ****   }
 1481              		.loc 1 404 5 is_stmt 1 view .LVU339
 1482 0028 FFF7FEFF 		bl	Error_Handler
 1483              	.LVL108:
 410:Src/main.c    **** 
 1484              		.loc 1 410 1 is_stmt 0 view .LVU340
 1485 002c FBE7     		b	.L86
 1486              	.L91:
 1487 002e 00BF     		.align	2
 1488              	.L90:
 1489 0030 00000000 		.word	huart3
 1490 0034 00480040 		.word	1073760256
 1491 0038 80841E00 		.word	2000000
 1492              		.cfi_endproc
 1493              	.LFE150:
 1495              		.section	.text.MX_CAN1_Init,"ax",%progbits
 1496              		.align	1
 1497              		.syntax unified
 1498              		.thumb
 1499              		.thumb_func
 1500              		.fpu fpv5-d16
 1502              	MX_CAN1_Init:
 1503              	.LFB147:
 273:Src/main.c    **** 
 1504              		.loc 1 273 1 is_stmt 1 view -0
 1505              		.cfi_startproc
ARM GAS  /tmp/cc7n1NbK.s 			page 42


 1506              		@ args = 0, pretend = 0, frame = 0
 1507              		@ frame_needed = 0, uses_anonymous_args = 0
 1508 0000 08B5     		push	{r3, lr}
 1509              	.LCFI19:
 1510              		.cfi_def_cfa_offset 8
 1511              		.cfi_offset 3, -8
 1512              		.cfi_offset 14, -4
 282:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 1513              		.loc 1 282 3 view .LVU342
 282:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 1514              		.loc 1 282 18 is_stmt 0 view .LVU343
 1515 0002 0E48     		ldr	r0, .L96
 1516 0004 0E4B     		ldr	r3, .L96+4
 1517 0006 0360     		str	r3, [r0]
 283:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1518              		.loc 1 283 3 is_stmt 1 view .LVU344
 283:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1519              		.loc 1 283 24 is_stmt 0 view .LVU345
 1520 0008 0323     		movs	r3, #3
 1521 000a 4360     		str	r3, [r0, #4]
 284:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1522              		.loc 1 284 3 is_stmt 1 view .LVU346
 284:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1523              		.loc 1 284 19 is_stmt 0 view .LVU347
 1524 000c 0023     		movs	r3, #0
 1525 000e 8360     		str	r3, [r0, #8]
 285:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 1526              		.loc 1 285 3 is_stmt 1 view .LVU348
 285:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 1527              		.loc 1 285 28 is_stmt 0 view .LVU349
 1528 0010 C360     		str	r3, [r0, #12]
 286:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1529              		.loc 1 286 3 is_stmt 1 view .LVU350
 286:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1530              		.loc 1 286 23 is_stmt 0 view .LVU351
 1531 0012 4FF46022 		mov	r2, #917504
 1532 0016 0261     		str	r2, [r0, #16]
 287:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1533              		.loc 1 287 3 is_stmt 1 view .LVU352
 287:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1534              		.loc 1 287 23 is_stmt 0 view .LVU353
 1535 0018 4FF48012 		mov	r2, #1048576
 1536 001c 4261     		str	r2, [r0, #20]
 288:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 1537              		.loc 1 288 3 is_stmt 1 view .LVU354
 288:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 1538              		.loc 1 288 32 is_stmt 0 view .LVU355
 1539 001e 0376     		strb	r3, [r0, #24]
 289:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 1540              		.loc 1 289 3 is_stmt 1 view .LVU356
 289:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 1541              		.loc 1 289 25 is_stmt 0 view .LVU357
 1542 0020 4376     		strb	r3, [r0, #25]
 290:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 1543              		.loc 1 290 3 is_stmt 1 view .LVU358
 290:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 1544              		.loc 1 290 25 is_stmt 0 view .LVU359
ARM GAS  /tmp/cc7n1NbK.s 			page 43


 1545 0022 0122     		movs	r2, #1
 1546 0024 8276     		strb	r2, [r0, #26]
 291:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1547              		.loc 1 291 3 is_stmt 1 view .LVU360
 291:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1548              		.loc 1 291 33 is_stmt 0 view .LVU361
 1549 0026 C276     		strb	r2, [r0, #27]
 292:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1550              		.loc 1 292 3 is_stmt 1 view .LVU362
 292:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1551              		.loc 1 292 32 is_stmt 0 view .LVU363
 1552 0028 0377     		strb	r3, [r0, #28]
 293:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1553              		.loc 1 293 3 is_stmt 1 view .LVU364
 293:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1554              		.loc 1 293 35 is_stmt 0 view .LVU365
 1555 002a 4377     		strb	r3, [r0, #29]
 294:Src/main.c    ****   {
 1556              		.loc 1 294 3 is_stmt 1 view .LVU366
 294:Src/main.c    ****   {
 1557              		.loc 1 294 7 is_stmt 0 view .LVU367
 1558 002c FFF7FEFF 		bl	HAL_CAN_Init
 1559              	.LVL109:
 294:Src/main.c    ****   {
 1560              		.loc 1 294 6 view .LVU368
 1561 0030 00B9     		cbnz	r0, .L95
 1562              	.L92:
 302:Src/main.c    **** 
 1563              		.loc 1 302 1 view .LVU369
 1564 0032 08BD     		pop	{r3, pc}
 1565              	.L95:
 296:Src/main.c    ****   }
 1566              		.loc 1 296 5 is_stmt 1 view .LVU370
 1567 0034 FFF7FEFF 		bl	Error_Handler
 1568              	.LVL110:
 302:Src/main.c    **** 
 1569              		.loc 1 302 1 is_stmt 0 view .LVU371
 1570 0038 FBE7     		b	.L92
 1571              	.L97:
 1572 003a 00BF     		.align	2
 1573              	.L96:
 1574 003c 00000000 		.word	hcan1
 1575 0040 00640040 		.word	1073767424
 1576              		.cfi_endproc
 1577              	.LFE147:
 1579              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1580              		.align	1
 1581              		.syntax unified
 1582              		.thumb
 1583              		.thumb_func
 1584              		.fpu fpv5-d16
 1586              	MX_TIM2_Init:
 1587              	.LFB149:
 338:Src/main.c    **** 
 1588              		.loc 1 338 1 is_stmt 1 view -0
 1589              		.cfi_startproc
 1590              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /tmp/cc7n1NbK.s 			page 44


 1591              		@ frame_needed = 0, uses_anonymous_args = 0
 1592 0000 00B5     		push	{lr}
 1593              	.LCFI20:
 1594              		.cfi_def_cfa_offset 4
 1595              		.cfi_offset 14, -4
 1596 0002 89B0     		sub	sp, sp, #36
 1597              	.LCFI21:
 1598              		.cfi_def_cfa_offset 40
 344:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1599              		.loc 1 344 3 view .LVU373
 344:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1600              		.loc 1 344 26 is_stmt 0 view .LVU374
 1601 0004 0023     		movs	r3, #0
 1602 0006 0493     		str	r3, [sp, #16]
 1603 0008 0593     		str	r3, [sp, #20]
 1604 000a 0693     		str	r3, [sp, #24]
 1605 000c 0793     		str	r3, [sp, #28]
 345:Src/main.c    **** 
 1606              		.loc 1 345 3 is_stmt 1 view .LVU375
 345:Src/main.c    **** 
 1607              		.loc 1 345 27 is_stmt 0 view .LVU376
 1608 000e 0193     		str	r3, [sp, #4]
 1609 0010 0293     		str	r3, [sp, #8]
 1610 0012 0393     		str	r3, [sp, #12]
 350:Src/main.c    ****   htim2.Init.Prescaler = 108;
 1611              		.loc 1 350 3 is_stmt 1 view .LVU377
 350:Src/main.c    ****   htim2.Init.Prescaler = 108;
 1612              		.loc 1 350 18 is_stmt 0 view .LVU378
 1613 0014 1548     		ldr	r0, .L106
 1614 0016 4FF08042 		mov	r2, #1073741824
 1615 001a 0260     		str	r2, [r0]
 351:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1616              		.loc 1 351 3 is_stmt 1 view .LVU379
 351:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1617              		.loc 1 351 24 is_stmt 0 view .LVU380
 1618 001c 6C22     		movs	r2, #108
 1619 001e 4260     		str	r2, [r0, #4]
 352:Src/main.c    ****   htim2.Init.Period = 1000;
 1620              		.loc 1 352 3 is_stmt 1 view .LVU381
 352:Src/main.c    ****   htim2.Init.Period = 1000;
 1621              		.loc 1 352 26 is_stmt 0 view .LVU382
 1622 0020 8360     		str	r3, [r0, #8]
 353:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1623              		.loc 1 353 3 is_stmt 1 view .LVU383
 353:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1624              		.loc 1 353 21 is_stmt 0 view .LVU384
 1625 0022 4FF47A72 		mov	r2, #1000
 1626 0026 C260     		str	r2, [r0, #12]
 354:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1627              		.loc 1 354 3 is_stmt 1 view .LVU385
 354:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1628              		.loc 1 354 28 is_stmt 0 view .LVU386
 1629 0028 0361     		str	r3, [r0, #16]
 355:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1630              		.loc 1 355 3 is_stmt 1 view .LVU387
 355:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1631              		.loc 1 355 32 is_stmt 0 view .LVU388
ARM GAS  /tmp/cc7n1NbK.s 			page 45


 1632 002a 8361     		str	r3, [r0, #24]
 356:Src/main.c    ****   {
 1633              		.loc 1 356 3 is_stmt 1 view .LVU389
 356:Src/main.c    ****   {
 1634              		.loc 1 356 7 is_stmt 0 view .LVU390
 1635 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1636              	.LVL111:
 356:Src/main.c    ****   {
 1637              		.loc 1 356 6 view .LVU391
 1638 0030 90B9     		cbnz	r0, .L103
 1639              	.L99:
 360:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1640              		.loc 1 360 3 is_stmt 1 view .LVU392
 360:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1641              		.loc 1 360 34 is_stmt 0 view .LVU393
 1642 0032 4FF48053 		mov	r3, #4096
 1643 0036 0493     		str	r3, [sp, #16]
 361:Src/main.c    ****   {
 1644              		.loc 1 361 3 is_stmt 1 view .LVU394
 361:Src/main.c    ****   {
 1645              		.loc 1 361 7 is_stmt 0 view .LVU395
 1646 0038 04A9     		add	r1, sp, #16
 1647 003a 0C48     		ldr	r0, .L106
 1648 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1649              	.LVL112:
 361:Src/main.c    ****   {
 1650              		.loc 1 361 6 view .LVU396
 1651 0040 68B9     		cbnz	r0, .L104
 1652              	.L100:
 365:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1653              		.loc 1 365 3 is_stmt 1 view .LVU397
 365:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1654              		.loc 1 365 37 is_stmt 0 view .LVU398
 1655 0042 0023     		movs	r3, #0
 1656 0044 0193     		str	r3, [sp, #4]
 366:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1657              		.loc 1 366 3 is_stmt 1 view .LVU399
 366:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1658              		.loc 1 366 33 is_stmt 0 view .LVU400
 1659 0046 0393     		str	r3, [sp, #12]
 367:Src/main.c    ****   {
 1660              		.loc 1 367 3 is_stmt 1 view .LVU401
 367:Src/main.c    ****   {
 1661              		.loc 1 367 7 is_stmt 0 view .LVU402
 1662 0048 01A9     		add	r1, sp, #4
 1663 004a 0848     		ldr	r0, .L106
 1664 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1665              	.LVL113:
 367:Src/main.c    ****   {
 1666              		.loc 1 367 6 view .LVU403
 1667 0050 40B9     		cbnz	r0, .L105
 1668              	.L98:
 375:Src/main.c    **** 
 1669              		.loc 1 375 1 view .LVU404
 1670 0052 09B0     		add	sp, sp, #36
 1671              	.LCFI22:
 1672              		.cfi_remember_state
ARM GAS  /tmp/cc7n1NbK.s 			page 46


 1673              		.cfi_def_cfa_offset 4
 1674              		@ sp needed
 1675 0054 5DF804FB 		ldr	pc, [sp], #4
 1676              	.L103:
 1677              	.LCFI23:
 1678              		.cfi_restore_state
 358:Src/main.c    ****   }
 1679              		.loc 1 358 5 is_stmt 1 view .LVU405
 1680 0058 FFF7FEFF 		bl	Error_Handler
 1681              	.LVL114:
 1682 005c E9E7     		b	.L99
 1683              	.L104:
 363:Src/main.c    ****   }
 1684              		.loc 1 363 5 view .LVU406
 1685 005e FFF7FEFF 		bl	Error_Handler
 1686              	.LVL115:
 1687 0062 EEE7     		b	.L100
 1688              	.L105:
 369:Src/main.c    ****   }
 1689              		.loc 1 369 5 view .LVU407
 1690 0064 FFF7FEFF 		bl	Error_Handler
 1691              	.LVL116:
 375:Src/main.c    **** 
 1692              		.loc 1 375 1 is_stmt 0 view .LVU408
 1693 0068 F3E7     		b	.L98
 1694              	.L107:
 1695 006a 00BF     		.align	2
 1696              	.L106:
 1697 006c 00000000 		.word	htim2
 1698              		.cfi_endproc
 1699              	.LFE149:
 1701              		.section	.text.SystemClock_Config,"ax",%progbits
 1702              		.align	1
 1703              		.global	SystemClock_Config
 1704              		.syntax unified
 1705              		.thumb
 1706              		.thumb_func
 1707              		.fpu fpv5-d16
 1709              	SystemClock_Config:
 1710              	.LFB145:
 184:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1711              		.loc 1 184 1 is_stmt 1 view -0
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 224
 1714              		@ frame_needed = 0, uses_anonymous_args = 0
 1715 0000 10B5     		push	{r4, lr}
 1716              	.LCFI24:
 1717              		.cfi_def_cfa_offset 8
 1718              		.cfi_offset 4, -8
 1719              		.cfi_offset 14, -4
 1720 0002 B8B0     		sub	sp, sp, #224
 1721              	.LCFI25:
 1722              		.cfi_def_cfa_offset 232
 185:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1723              		.loc 1 185 3 view .LVU410
 185:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1724              		.loc 1 185 22 is_stmt 0 view .LVU411
ARM GAS  /tmp/cc7n1NbK.s 			page 47


 1725 0004 3422     		movs	r2, #52
 1726 0006 0021     		movs	r1, #0
 1727 0008 2BA8     		add	r0, sp, #172
 1728 000a FFF7FEFF 		bl	memset
 1729              	.LVL117:
 186:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 1730              		.loc 1 186 3 is_stmt 1 view .LVU412
 186:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 1731              		.loc 1 186 22 is_stmt 0 view .LVU413
 1732 000e 0024     		movs	r4, #0
 1733 0010 2694     		str	r4, [sp, #152]
 1734 0012 2794     		str	r4, [sp, #156]
 1735 0014 2894     		str	r4, [sp, #160]
 1736 0016 2994     		str	r4, [sp, #164]
 1737 0018 2A94     		str	r4, [sp, #168]
 187:Src/main.c    **** 
 1738              		.loc 1 187 3 is_stmt 1 view .LVU414
 187:Src/main.c    **** 
 1739              		.loc 1 187 28 is_stmt 0 view .LVU415
 1740 001a 9022     		movs	r2, #144
 1741 001c 2146     		mov	r1, r4
 1742 001e 02A8     		add	r0, sp, #8
 1743 0020 FFF7FEFF 		bl	memset
 1744              	.LVL118:
 191:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1745              		.loc 1 191 3 is_stmt 1 view .LVU416
 1746              	.LBB7:
 191:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1747              		.loc 1 191 3 view .LVU417
 191:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1748              		.loc 1 191 3 view .LVU418
 1749 0024 294B     		ldr	r3, .L118
 1750 0026 1A6C     		ldr	r2, [r3, #64]
 1751 0028 42F08052 		orr	r2, r2, #268435456
 1752 002c 1A64     		str	r2, [r3, #64]
 191:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1753              		.loc 1 191 3 view .LVU419
 1754 002e 1B6C     		ldr	r3, [r3, #64]
 1755 0030 03F08053 		and	r3, r3, #268435456
 1756 0034 0093     		str	r3, [sp]
 191:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1757              		.loc 1 191 3 view .LVU420
 1758 0036 009B     		ldr	r3, [sp]
 1759              	.LBE7:
 191:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1760              		.loc 1 191 3 view .LVU421
 192:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1761              		.loc 1 192 3 view .LVU422
 1762              	.LBB8:
 192:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1763              		.loc 1 192 3 view .LVU423
 192:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1764              		.loc 1 192 3 view .LVU424
 1765 0038 254B     		ldr	r3, .L118+4
 1766 003a 1A68     		ldr	r2, [r3]
 1767 003c 42F44042 		orr	r2, r2, #49152
 1768 0040 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc7n1NbK.s 			page 48


 192:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1769              		.loc 1 192 3 view .LVU425
 1770 0042 1B68     		ldr	r3, [r3]
 1771 0044 03F44043 		and	r3, r3, #49152
 1772 0048 0193     		str	r3, [sp, #4]
 192:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1773              		.loc 1 192 3 view .LVU426
 1774 004a 019B     		ldr	r3, [sp, #4]
 1775              	.LBE8:
 192:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1776              		.loc 1 192 3 view .LVU427
 195:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1777              		.loc 1 195 3 view .LVU428
 195:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1778              		.loc 1 195 36 is_stmt 0 view .LVU429
 1779 004c 0223     		movs	r3, #2
 1780 004e 2B93     		str	r3, [sp, #172]
 196:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1781              		.loc 1 196 3 is_stmt 1 view .LVU430
 196:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1782              		.loc 1 196 30 is_stmt 0 view .LVU431
 1783 0050 0122     		movs	r2, #1
 1784 0052 2E92     		str	r2, [sp, #184]
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1785              		.loc 1 197 3 is_stmt 1 view .LVU432
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1786              		.loc 1 197 41 is_stmt 0 view .LVU433
 1787 0054 1022     		movs	r2, #16
 1788 0056 2F92     		str	r2, [sp, #188]
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1789              		.loc 1 198 3 is_stmt 1 view .LVU434
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1790              		.loc 1 198 34 is_stmt 0 view .LVU435
 1791 0058 3193     		str	r3, [sp, #196]
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1792              		.loc 1 199 3 is_stmt 1 view .LVU436
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1793              		.loc 1 199 35 is_stmt 0 view .LVU437
 1794 005a 3294     		str	r4, [sp, #200]
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 1795              		.loc 1 200 3 is_stmt 1 view .LVU438
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 1796              		.loc 1 200 30 is_stmt 0 view .LVU439
 1797 005c 0822     		movs	r2, #8
 1798 005e 3392     		str	r2, [sp, #204]
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1799              		.loc 1 201 3 is_stmt 1 view .LVU440
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1800              		.loc 1 201 30 is_stmt 0 view .LVU441
 1801 0060 D822     		movs	r2, #216
 1802 0062 3492     		str	r2, [sp, #208]
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 1803              		.loc 1 202 3 is_stmt 1 view .LVU442
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 1804              		.loc 1 202 30 is_stmt 0 view .LVU443
 1805 0064 3593     		str	r3, [sp, #212]
 203:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/cc7n1NbK.s 			page 49


 1806              		.loc 1 203 3 is_stmt 1 view .LVU444
 203:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1807              		.loc 1 203 30 is_stmt 0 view .LVU445
 1808 0066 0923     		movs	r3, #9
 1809 0068 3693     		str	r3, [sp, #216]
 204:Src/main.c    ****   {
 1810              		.loc 1 204 3 is_stmt 1 view .LVU446
 204:Src/main.c    ****   {
 1811              		.loc 1 204 7 is_stmt 0 view .LVU447
 1812 006a 2BA8     		add	r0, sp, #172
 1813 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1814              	.LVL119:
 204:Src/main.c    ****   {
 1815              		.loc 1 204 6 view .LVU448
 1816 0070 F8B9     		cbnz	r0, .L114
 1817              	.L109:
 210:Src/main.c    ****   {
 1818              		.loc 1 210 3 is_stmt 1 view .LVU449
 210:Src/main.c    ****   {
 1819              		.loc 1 210 7 is_stmt 0 view .LVU450
 1820 0072 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 1821              	.LVL120:
 210:Src/main.c    ****   {
 1822              		.loc 1 210 6 view .LVU451
 1823 0076 F8B9     		cbnz	r0, .L115
 1824              	.L110:
 216:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1825              		.loc 1 216 3 is_stmt 1 view .LVU452
 216:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1826              		.loc 1 216 31 is_stmt 0 view .LVU453
 1827 0078 0F23     		movs	r3, #15
 1828 007a 2693     		str	r3, [sp, #152]
 218:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1829              		.loc 1 218 3 is_stmt 1 view .LVU454
 218:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1830              		.loc 1 218 34 is_stmt 0 view .LVU455
 1831 007c 0223     		movs	r3, #2
 1832 007e 2793     		str	r3, [sp, #156]
 219:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1833              		.loc 1 219 3 is_stmt 1 view .LVU456
 219:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1834              		.loc 1 219 35 is_stmt 0 view .LVU457
 1835 0080 0023     		movs	r3, #0
 1836 0082 2893     		str	r3, [sp, #160]
 220:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1837              		.loc 1 220 3 is_stmt 1 view .LVU458
 220:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1838              		.loc 1 220 36 is_stmt 0 view .LVU459
 1839 0084 4FF4A053 		mov	r3, #5120
 1840 0088 2993     		str	r3, [sp, #164]
 221:Src/main.c    **** 
 1841              		.loc 1 221 3 is_stmt 1 view .LVU460
 221:Src/main.c    **** 
 1842              		.loc 1 221 36 is_stmt 0 view .LVU461
 1843 008a 4FF48053 		mov	r3, #4096
 1844 008e 2A93     		str	r3, [sp, #168]
 223:Src/main.c    ****   {
ARM GAS  /tmp/cc7n1NbK.s 			page 50


 1845              		.loc 1 223 3 is_stmt 1 view .LVU462
 223:Src/main.c    ****   {
 1846              		.loc 1 223 7 is_stmt 0 view .LVU463
 1847 0090 0721     		movs	r1, #7
 1848 0092 26A8     		add	r0, sp, #152
 1849 0094 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1850              	.LVL121:
 223:Src/main.c    ****   {
 1851              		.loc 1 223 6 view .LVU464
 1852 0098 88B9     		cbnz	r0, .L116
 1853              	.L111:
 227:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 1854              		.loc 1 227 3 is_stmt 1 view .LVU465
 227:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 1855              		.loc 1 227 44 is_stmt 0 view .LVU466
 1856 009a 0E4B     		ldr	r3, .L118+8
 1857 009c 0293     		str	r3, [sp, #8]
 229:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 1858              		.loc 1 229 3 is_stmt 1 view .LVU467
 229:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 1859              		.loc 1 229 44 is_stmt 0 view .LVU468
 1860 009e 0023     		movs	r3, #0
 1861 00a0 1593     		str	r3, [sp, #84]
 230:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 1862              		.loc 1 230 3 is_stmt 1 view .LVU469
 230:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 1863              		.loc 1 230 43 is_stmt 0 view .LVU470
 1864 00a2 2193     		str	r3, [sp, #132]
 231:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1865              		.loc 1 231 3 is_stmt 1 view .LVU471
 231:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1866              		.loc 1 231 44 is_stmt 0 view .LVU472
 1867 00a4 2293     		str	r3, [sp, #136]
 232:Src/main.c    ****   {
 1868              		.loc 1 232 3 is_stmt 1 view .LVU473
 232:Src/main.c    ****   {
 1869              		.loc 1 232 7 is_stmt 0 view .LVU474
 1870 00a6 02A8     		add	r0, sp, #8
 1871 00a8 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1872              	.LVL122:
 232:Src/main.c    ****   {
 1873              		.loc 1 232 6 view .LVU475
 1874 00ac 50B9     		cbnz	r0, .L117
 1875              	.L108:
 236:Src/main.c    **** 
 1876              		.loc 1 236 1 view .LVU476
 1877 00ae 38B0     		add	sp, sp, #224
 1878              	.LCFI26:
 1879              		.cfi_remember_state
 1880              		.cfi_def_cfa_offset 8
 1881              		@ sp needed
 1882 00b0 10BD     		pop	{r4, pc}
 1883              	.L114:
 1884              	.LCFI27:
 1885              		.cfi_restore_state
 206:Src/main.c    ****   }
 1886              		.loc 1 206 5 is_stmt 1 view .LVU477
ARM GAS  /tmp/cc7n1NbK.s 			page 51


 1887 00b2 FFF7FEFF 		bl	Error_Handler
 1888              	.LVL123:
 1889 00b6 DCE7     		b	.L109
 1890              	.L115:
 212:Src/main.c    ****   }
 1891              		.loc 1 212 5 view .LVU478
 1892 00b8 FFF7FEFF 		bl	Error_Handler
 1893              	.LVL124:
 1894 00bc DCE7     		b	.L110
 1895              	.L116:
 225:Src/main.c    ****   }
 1896              		.loc 1 225 5 view .LVU479
 1897 00be FFF7FEFF 		bl	Error_Handler
 1898              	.LVL125:
 1899 00c2 EAE7     		b	.L111
 1900              	.L117:
 234:Src/main.c    ****   }
 1901              		.loc 1 234 5 view .LVU480
 1902 00c4 FFF7FEFF 		bl	Error_Handler
 1903              	.LVL126:
 236:Src/main.c    **** 
 1904              		.loc 1 236 1 is_stmt 0 view .LVU481
 1905 00c8 F1E7     		b	.L108
 1906              	.L119:
 1907 00ca 00BF     		.align	2
 1908              	.L118:
 1909 00cc 00380240 		.word	1073887232
 1910 00d0 00700040 		.word	1073770496
 1911 00d4 0001A000 		.word	10486016
 1912              		.cfi_endproc
 1913              	.LFE145:
 1915              		.section	.text.main,"ax",%progbits
 1916              		.align	1
 1917              		.global	main
 1918              		.syntax unified
 1919              		.thumb
 1920              		.thumb_func
 1921              		.fpu fpv5-d16
 1923              	main:
 1924              	.LFB144:
  92:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1925              		.loc 1 92 1 is_stmt 1 view -0
 1926              		.cfi_startproc
 1927              		@ Volatile: function does not return.
 1928              		@ args = 0, pretend = 0, frame = 0
 1929              		@ frame_needed = 0, uses_anonymous_args = 0
 1930 0000 08B5     		push	{r3, lr}
 1931              	.LCFI28:
 1932              		.cfi_def_cfa_offset 8
 1933              		.cfi_offset 3, -8
 1934              		.cfi_offset 14, -4
 101:Src/main.c    **** 
 1935              		.loc 1 101 3 view .LVU483
 1936 0002 FFF7FEFF 		bl	HAL_Init
 1937              	.LVL127:
 108:Src/main.c    **** 
 1938              		.loc 1 108 3 view .LVU484
ARM GAS  /tmp/cc7n1NbK.s 			page 52


 1939 0006 FFF7FEFF 		bl	SystemClock_Config
 1940              	.LVL128:
 115:Src/main.c    ****   MX_SDMMC1_SD_Init();
 1941              		.loc 1 115 3 view .LVU485
 1942 000a FFF7FEFF 		bl	MX_GPIO_Init
 1943              	.LVL129:
 116:Src/main.c    ****   MX_USART3_UART_Init();
 1944              		.loc 1 116 3 view .LVU486
 1945 000e FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 1946              	.LVL130:
 117:Src/main.c    ****   MX_FATFS_Init();
 1947              		.loc 1 117 3 view .LVU487
 1948 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 1949              	.LVL131:
 118:Src/main.c    ****   MX_CAN1_Init();
 1950              		.loc 1 118 3 view .LVU488
 1951 0016 FFF7FEFF 		bl	MX_FATFS_Init
 1952              	.LVL132:
 119:Src/main.c    ****   MX_TIM2_Init();
 1953              		.loc 1 119 3 view .LVU489
 1954 001a FFF7FEFF 		bl	MX_CAN1_Init
 1955              	.LVL133:
 120:Src/main.c    **** 
 1956              		.loc 1 120 3 view .LVU490
 1957 001e FFF7FEFF 		bl	MX_TIM2_Init
 1958              	.LVL134:
 123:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1959              		.loc 1 123 3 view .LVU491
 1960 0022 FFF7FEFF 		bl	MX_NVIC_Init
 1961              	.LVL135:
 125:Src/main.c    **** 
 1962              		.loc 1 125 3 view .LVU492
 1963 0026 2648     		ldr	r0, .L132
 1964 0028 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1965              	.LVL136:
 127:Src/main.c    ****   can1.tx_interrupt = CAN1_TX_IRQn;
 1966              		.loc 1 127 3 view .LVU493
 127:Src/main.c    ****   can1.tx_interrupt = CAN1_TX_IRQn;
 1967              		.loc 1 127 22 is_stmt 0 view .LVU494
 1968 002c 254B     		ldr	r3, .L132+4
 1969 002e 1422     		movs	r2, #20
 1970 0030 83F8882D 		strb	r2, [r3, #3464]
 128:Src/main.c    ****   can1.hcan = &hcan1;
 1971              		.loc 1 128 3 is_stmt 1 view .LVU495
 128:Src/main.c    ****   can1.hcan = &hcan1;
 1972              		.loc 1 128 21 is_stmt 0 view .LVU496
 1973 0034 1322     		movs	r2, #19
 1974 0036 83F8892D 		strb	r2, [r3, #3465]
 129:Src/main.c    **** 
 1975              		.loc 1 129 3 is_stmt 1 view .LVU497
 129:Src/main.c    **** 
 1976              		.loc 1 129 13 is_stmt 0 view .LVU498
 1977 003a 234A     		ldr	r2, .L132+8
 1978 003c 1A63     		str	r2, [r3, #48]
 131:Src/main.c    ****   ID_init(&id);
 1979              		.loc 1 131 3 is_stmt 1 view .LVU499
 1980 003e FFF7FEFF 		bl	can_init
ARM GAS  /tmp/cc7n1NbK.s 			page 53


 1981              	.LVL137:
 132:Src/main.c    **** 
 1982              		.loc 1 132 3 view .LVU500
 1983 0042 2248     		ldr	r0, .L132+12
 1984 0044 FFF7FEFF 		bl	ID_init
 1985              	.LVL138:
 134:Src/main.c    **** 
 1986              		.loc 1 134 3 view .LVU501
 134:Src/main.c    **** 
 1987              		.loc 1 134 51 is_stmt 0 view .LVU502
 1988 0048 214B     		ldr	r3, .L132+16
 1989 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 134:Src/main.c    **** 
 1990              		.loc 1 134 3 view .LVU503
 1991 004c 0122     		movs	r2, #1
 1992 004e 2149     		ldr	r1, .L132+20
 1993 0050 1944     		add	r1, r1, r3
 1994 0052 2148     		ldr	r0, .L132+24
 1995 0054 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1996              	.LVL139:
 136:Src/main.c    **** 
 1997              		.loc 1 136 3 is_stmt 1 view .LVU504
 136:Src/main.c    **** 
 1998              		.loc 1 136 17 is_stmt 0 view .LVU505
 1999 0058 204B     		ldr	r3, .L132+28
 2000 005a 0022     		movs	r2, #0
 2001 005c 1A70     		strb	r2, [r3]
 2002 005e 01E0     		b	.L121
 2003              	.L128:
 162:Src/main.c    **** 	  }else if(current_state == STATE_IDLE){
 2004              		.loc 1 162 5 is_stmt 1 view .LVU506
 2005 0060 FFF7FEFF 		bl	init
 2006              	.LVL140:
 2007              	.L121:
 143:Src/main.c    ****   {
 2008              		.loc 1 143 3 view .LVU507
 145:Src/main.c    **** 	  can1.dataTx[1] = 0;
 2009              		.loc 1 145 5 view .LVU508
 145:Src/main.c    **** 	  can1.dataTx[1] = 0;
 2010              		.loc 1 145 20 is_stmt 0 view .LVU509
 2011 0064 174A     		ldr	r2, .L132+4
 2012 0066 0023     		movs	r3, #0
 2013 0068 1372     		strb	r3, [r2, #8]
 146:Src/main.c    **** 	  can1.dataTx[2] = 0;
 2014              		.loc 1 146 4 is_stmt 1 view .LVU510
 146:Src/main.c    **** 	  can1.dataTx[2] = 0;
 2015              		.loc 1 146 19 is_stmt 0 view .LVU511
 2016 006a 5372     		strb	r3, [r2, #9]
 147:Src/main.c    **** 	  can1.dataTx[3] = 0;
 2017              		.loc 1 147 4 is_stmt 1 view .LVU512
 147:Src/main.c    **** 	  can1.dataTx[3] = 0;
 2018              		.loc 1 147 19 is_stmt 0 view .LVU513
 2019 006c 9372     		strb	r3, [r2, #10]
 148:Src/main.c    **** 	  can1.dataTx[4] = counter >> 24;
 2020              		.loc 1 148 4 is_stmt 1 view .LVU514
 148:Src/main.c    **** 	  can1.dataTx[4] = counter >> 24;
 2021              		.loc 1 148 19 is_stmt 0 view .LVU515
ARM GAS  /tmp/cc7n1NbK.s 			page 54


 2022 006e D372     		strb	r3, [r2, #11]
 149:Src/main.c    **** 	  can1.dataTx[5] = counter >> 16;
 2023              		.loc 1 149 4 is_stmt 1 view .LVU516
 149:Src/main.c    **** 	  can1.dataTx[5] = counter >> 16;
 2024              		.loc 1 149 29 is_stmt 0 view .LVU517
 2025 0070 1B4B     		ldr	r3, .L132+32
 2026 0072 1B68     		ldr	r3, [r3]
 2027 0074 1916     		asrs	r1, r3, #24
 149:Src/main.c    **** 	  can1.dataTx[5] = counter >> 16;
 2028              		.loc 1 149 19 view .LVU518
 2029 0076 1173     		strb	r1, [r2, #12]
 150:Src/main.c    **** 	  can1.dataTx[6] = counter >> 8;
 2030              		.loc 1 150 4 is_stmt 1 view .LVU519
 150:Src/main.c    **** 	  can1.dataTx[6] = counter >> 8;
 2031              		.loc 1 150 29 is_stmt 0 view .LVU520
 2032 0078 1914     		asrs	r1, r3, #16
 150:Src/main.c    **** 	  can1.dataTx[6] = counter >> 8;
 2033              		.loc 1 150 19 view .LVU521
 2034 007a 5173     		strb	r1, [r2, #13]
 151:Src/main.c    **** 	  can1.dataTx[7] = counter % 256;
 2035              		.loc 1 151 4 is_stmt 1 view .LVU522
 151:Src/main.c    **** 	  can1.dataTx[7] = counter % 256;
 2036              		.loc 1 151 29 is_stmt 0 view .LVU523
 2037 007c 1912     		asrs	r1, r3, #8
 151:Src/main.c    **** 	  can1.dataTx[7] = counter % 256;
 2038              		.loc 1 151 19 view .LVU524
 2039 007e 9173     		strb	r1, [r2, #14]
 152:Src/main.c    **** 
 2040              		.loc 1 152 4 is_stmt 1 view .LVU525
 152:Src/main.c    **** 
 2041              		.loc 1 152 29 is_stmt 0 view .LVU526
 2042 0080 5942     		rsbs	r1, r3, #0
 2043 0082 DBB2     		uxtb	r3, r3
 2044 0084 C9B2     		uxtb	r1, r1
 2045 0086 58BF     		it	pl
 2046 0088 4B42     		rsbpl	r3, r1, #0
 152:Src/main.c    **** 
 2047              		.loc 1 152 19 view .LVU527
 2048 008a D373     		strb	r3, [r2, #15]
 154:Src/main.c    **** 
 2049              		.loc 1 154 4 is_stmt 1 view .LVU528
 154:Src/main.c    **** 
 2050              		.loc 1 154 15 is_stmt 0 view .LVU529
 2051 008c A023     		movs	r3, #160
 2052 008e 1362     		str	r3, [r2, #32]
 161:Src/main.c    **** 		  init();
 2053              		.loc 1 161 4 is_stmt 1 view .LVU530
 161:Src/main.c    **** 		  init();
 2054              		.loc 1 161 21 is_stmt 0 view .LVU531
 2055 0090 124B     		ldr	r3, .L132+28
 2056 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 161:Src/main.c    **** 		  init();
 2057              		.loc 1 161 6 view .LVU532
 2058 0094 002B     		cmp	r3, #0
 2059 0096 E3D0     		beq	.L128
 163:Src/main.c    **** 		  idle();
 2060              		.loc 1 163 10 is_stmt 1 view .LVU533
ARM GAS  /tmp/cc7n1NbK.s 			page 55


 163:Src/main.c    **** 		  idle();
 2061              		.loc 1 163 12 is_stmt 0 view .LVU534
 2062 0098 012B     		cmp	r3, #1
 2063 009a 08D0     		beq	.L129
 165:Src/main.c    **** 		  calib();
 2064              		.loc 1 165 10 is_stmt 1 view .LVU535
 165:Src/main.c    **** 		  calib();
 2065              		.loc 1 165 12 is_stmt 0 view .LVU536
 2066 009c 022B     		cmp	r3, #2
 2067 009e 09D0     		beq	.L130
 167:Src/main.c    **** 		  setup();
 2068              		.loc 1 167 10 is_stmt 1 view .LVU537
 167:Src/main.c    **** 		  setup();
 2069              		.loc 1 167 12 is_stmt 0 view .LVU538
 2070 00a0 032B     		cmp	r3, #3
 2071 00a2 0AD0     		beq	.L131
 169:Src/main.c    **** 		  run();
 2072              		.loc 1 169 10 is_stmt 1 view .LVU539
 169:Src/main.c    **** 		  run();
 2073              		.loc 1 169 12 is_stmt 0 view .LVU540
 2074 00a4 042B     		cmp	r3, #4
 2075 00a6 DDD1     		bne	.L121
 170:Src/main.c    **** 	  }
 2076              		.loc 1 170 5 is_stmt 1 view .LVU541
 2077 00a8 FFF7FEFF 		bl	run
 2078              	.LVL141:
 2079 00ac DAE7     		b	.L121
 2080              	.L129:
 164:Src/main.c    **** 	  }else if(current_state == STATE_CALIB){
 2081              		.loc 1 164 5 view .LVU542
 2082 00ae FFF7FEFF 		bl	idle
 2083              	.LVL142:
 2084 00b2 D7E7     		b	.L121
 2085              	.L130:
 166:Src/main.c    **** 	  }else if(current_state == STATE_SETUP){
 2086              		.loc 1 166 5 view .LVU543
 2087 00b4 FFF7FEFF 		bl	calib
 2088              	.LVL143:
 2089 00b8 D4E7     		b	.L121
 2090              	.L131:
 168:Src/main.c    **** 	  }else if(current_state == STATE_RUN){
 2091              		.loc 1 168 5 view .LVU544
 2092 00ba FFF7FEFF 		bl	setup
 2093              	.LVL144:
 2094 00be D1E7     		b	.L121
 2095              	.L133:
 2096              		.align	2
 2097              	.L132:
 2098 00c0 00000000 		.word	htim2
 2099 00c4 00000000 		.word	can1
 2100 00c8 00000000 		.word	hcan1
 2101 00cc 00000000 		.word	id
 2102 00d0 00000000 		.word	debug_rx_count
 2103 00d4 00000000 		.word	debug_rx
 2104 00d8 00000000 		.word	huart3
 2105 00dc 00000000 		.word	current_state
 2106 00e0 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cc7n1NbK.s 			page 56


 2107              		.cfi_endproc
 2108              	.LFE144:
 2110              		.global	counter
 2111              		.comm	sFilter,40,4
 2112              		.comm	i_debug,1,1
 2113              		.comm	id,116,4
 2114              		.comm	huart3,128,4
 2115              		.comm	htim2,64,4
 2116              		.comm	hsd1,132,4
 2117              		.comm	hcan1,40,4
 2118              		.comm	current_state,1,1
 2119              		.section	.bss.counter,"aw",%nobits
 2120              		.align	2
 2121              		.set	.LANCHOR0,. + 0
 2124              	counter:
 2125 0000 00000000 		.space	4
 2126              		.text
 2127              	.Letext0:
 2128              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 2129              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2130              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2131              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 2132              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 2133              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2134              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2135              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 2136              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 2137              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 2138              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 2139              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 2140              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 2141              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 2142              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 2143              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 2144              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 2145              		.file 19 "Middlewares/Third_Party/FatFs/src/integer.h"
 2146              		.file 20 "/usr/arm-none-eabi/include/sys/lock.h"
 2147              		.file 21 "/usr/arm-none-eabi/include/sys/_types.h"
 2148              		.file 22 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 2149              		.file 23 "/usr/arm-none-eabi/include/sys/reent.h"
 2150              		.file 24 "/usr/arm-none-eabi/include/stdlib.h"
 2151              		.file 25 "Middlewares/Third_Party/FatFs/src/ff.h"
 2152              		.file 26 "Middlewares/Third_Party/FatFs/src/diskio.h"
 2153              		.file 27 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 2154              		.file 28 "Inc/sd_diskio.h"
 2155              		.file 29 "Inc/fatfs.h"
 2156              		.file 30 "Inc/id.h"
 2157              		.file 31 "Inc/state.h"
 2158              		.file 32 "Inc/can.h"
 2159              		.file 33 "Inc/global_variables.h"
 2160              		.file 34 "/usr/arm-none-eabi/include/stdio.h"
 2161              		.file 35 "/usr/arm-none-eabi/include/string.h"
 2162              		.file 36 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 2163              		.file 37 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 2164              		.file 38 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 2165              		.file 39 "<built-in>"
ARM GAS  /tmp/cc7n1NbK.s 			page 57


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc7n1NbK.s:17     .text.MX_SDMMC1_SD_Init:0000000000000000 $t
     /tmp/cc7n1NbK.s:24     .text.MX_SDMMC1_SD_Init:0000000000000000 MX_SDMMC1_SD_Init
     /tmp/cc7n1NbK.s:62     .text.MX_SDMMC1_SD_Init:0000000000000018 $d
                            *COM*:0000000000000084 hsd1
     /tmp/cc7n1NbK.s:68     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc7n1NbK.s:74     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc7n1NbK.s:208    .text.MX_GPIO_Init:0000000000000094 $d
     /tmp/cc7n1NbK.s:215    .text.MX_NVIC_Init:0000000000000000 $t
     /tmp/cc7n1NbK.s:221    .text.MX_NVIC_Init:0000000000000000 MX_NVIC_Init
     /tmp/cc7n1NbK.s:308    .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:0000000000000000 $d
     /tmp/cc7n1NbK.s:312    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cc7n1NbK.s:319    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc7n1NbK.s:485    .text.HAL_TIM_PeriodElapsedCallback:00000000000000b0 $d
                            *COM*:0000000000000040 htim2
                            *COM*:0000000000000080 huart3
     /tmp/cc7n1NbK.s:500    .rodata.HAL_CAN_RxFifo0MsgPendingCallback.str1.4:0000000000000000 $d
     /tmp/cc7n1NbK.s:504    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/cc7n1NbK.s:511    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/cc7n1NbK.s:637    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000080 $d
                            *COM*:0000000000000028 hcan1
     /tmp/cc7n1NbK.s:647    .rodata.HAL_CAN_RxFifo1MsgPendingCallback.str1.4:0000000000000000 $d
     /tmp/cc7n1NbK.s:651    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/cc7n1NbK.s:658    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/cc7n1NbK.s:696    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000018 $d
     /tmp/cc7n1NbK.s:703    .rodata.HAL_CAN_RxFifo0FullCallback.str1.4:0000000000000000 $d
     /tmp/cc7n1NbK.s:707    .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 $t
     /tmp/cc7n1NbK.s:714    .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 HAL_CAN_RxFifo0FullCallback
     /tmp/cc7n1NbK.s:752    .text.HAL_CAN_RxFifo0FullCallback:0000000000000018 $d
     /tmp/cc7n1NbK.s:759    .rodata.HAL_CAN_RxFifo1FullCallback.str1.4:0000000000000000 $d
     /tmp/cc7n1NbK.s:763    .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 $t
     /tmp/cc7n1NbK.s:770    .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 HAL_CAN_RxFifo1FullCallback
     /tmp/cc7n1NbK.s:808    .text.HAL_CAN_RxFifo1FullCallback:0000000000000018 $d
     /tmp/cc7n1NbK.s:815    .rodata.HAL_CAN_TxMailbox0CompleteCallback.str1.4:0000000000000000 $d
     /tmp/cc7n1NbK.s:822    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 $t
     /tmp/cc7n1NbK.s:829    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 HAL_CAN_TxMailbox0CompleteCallback
     /tmp/cc7n1NbK.s:926    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000068 $d
     /tmp/cc7n1NbK.s:937    .rodata.HAL_CAN_TxMailbox1CompleteCallback.str1.4:0000000000000000 $d
     /tmp/cc7n1NbK.s:941    .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 $t
     /tmp/cc7n1NbK.s:948    .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 HAL_CAN_TxMailbox1CompleteCallback
     /tmp/cc7n1NbK.s:1048   .text.HAL_CAN_TxMailbox1CompleteCallback:000000000000006c $d
     /tmp/cc7n1NbK.s:1059   .rodata.HAL_CAN_TxMailbox2CompleteCallback.str1.4:0000000000000000 $d
     /tmp/cc7n1NbK.s:1063   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 $t
     /tmp/cc7n1NbK.s:1070   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 HAL_CAN_TxMailbox2CompleteCallback
     /tmp/cc7n1NbK.s:1170   .text.HAL_CAN_TxMailbox2CompleteCallback:000000000000006c $d
     /tmp/cc7n1NbK.s:1181   .rodata.HAL_CAN_ErrorCallback.str1.4:0000000000000000 $d
     /tmp/cc7n1NbK.s:1185   .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/cc7n1NbK.s:1192   .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/cc7n1NbK.s:1250   .text.HAL_CAN_ErrorCallback:0000000000000034 $d
     /tmp/cc7n1NbK.s:1259   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc7n1NbK.s:1266   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cc7n1NbK.s:1363   .text.HAL_UART_RxCpltCallback:0000000000000060 $d
     /tmp/cc7n1NbK.s:1371   .text.Error_Handler:0000000000000000 $t
     /tmp/cc7n1NbK.s:1378   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc7n1NbK.s:1414   .text.Error_Handler:0000000000000028 $d
     /tmp/cc7n1NbK.s:1419   .text.MX_USART3_UART_Init:0000000000000000 $t
ARM GAS  /tmp/cc7n1NbK.s 			page 58


     /tmp/cc7n1NbK.s:1425   .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/cc7n1NbK.s:1489   .text.MX_USART3_UART_Init:0000000000000030 $d
     /tmp/cc7n1NbK.s:1496   .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/cc7n1NbK.s:1502   .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/cc7n1NbK.s:1574   .text.MX_CAN1_Init:000000000000003c $d
     /tmp/cc7n1NbK.s:1580   .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/cc7n1NbK.s:1586   .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/cc7n1NbK.s:1697   .text.MX_TIM2_Init:000000000000006c $d
     /tmp/cc7n1NbK.s:1702   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc7n1NbK.s:1709   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc7n1NbK.s:1909   .text.SystemClock_Config:00000000000000cc $d
     /tmp/cc7n1NbK.s:1916   .text.main:0000000000000000 $t
     /tmp/cc7n1NbK.s:1923   .text.main:0000000000000000 main
     /tmp/cc7n1NbK.s:2098   .text.main:00000000000000c0 $d
                            *COM*:0000000000000074 id
                            *COM*:0000000000000001 current_state
     /tmp/cc7n1NbK.s:2124   .bss.counter:0000000000000000 counter
                            *COM*:0000000000000028 sFilter
                            *COM*:0000000000000001 i_debug
     /tmp/cc7n1NbK.s:2120   .bss.counter:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Transmit
count_ms
count_dec
count_inverter
count_imu
count_sec
count_min
count_hour
imu_connected
HAL_GPIO_TogglePin
HAL_CAN_GetRxFifoFillLevel
HAL_CAN_GetRxMessage
fifoRxDataCAN_push
sprintf
strlen
can1
txt
fifoTxDataCAN_high_pop
CAN_Send_IT
fifoTxDataCAN_normal_pop
CAN_Send_Bck
HAL_UART_Receive_IT
debug_rx_count
debug_rx
debug_msg_arrived
HAL_Delay
HAL_UART_Init
HAL_CAN_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
ARM GAS  /tmp/cc7n1NbK.s 			page 59


memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_FATFS_Init
HAL_TIM_Base_Start_IT
can_init
ID_init
init
run
idle
calib
setup
