ARM GAS  /tmp/cchXJTuc.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_SDMMC1_SD_Init:
  25              	.LFB148:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.</center></h2>
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****  * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****  * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****  *                             www.st.com/SLA0044
  16:Src/main.c    ****  *
  17:Src/main.c    ****  ******************************************************************************
  18:Src/main.c    ****  */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "fatfs.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include "can.h"
  28:Src/main.c    **** #include "global_variables.h"
  29:Src/main.c    **** #include "sd.h"
  30:Src/main.c    **** #include "state.h"
  31:Src/main.c    **** #include "stdio.h"
  32:Src/main.c    **** #include "string.h"
ARM GAS  /tmp/cchXJTuc.s 			page 2


  33:Src/main.c    **** /* USER CODE END Includes */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PTD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PD */
  42:Src/main.c    **** /* USER CODE END PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** CAN_HandleTypeDef hcan1;
  51:Src/main.c    **** 
  52:Src/main.c    **** SD_HandleTypeDef hsd1;
  53:Src/main.c    **** 
  54:Src/main.c    **** TIM_HandleTypeDef htim2;
  55:Src/main.c    **** 
  56:Src/main.c    **** UART_HandleTypeDef huart3;
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** uint8_t i_debug;
  61:Src/main.c    **** extern canStruct can1, can3;
  62:Src/main.c    **** extern fifoPriority fifoPriority_t;
  63:Src/main.c    **** 
  64:Src/main.c    **** CAN_FilterTypeDef sFilter;
  65:Src/main.c    **** 
  66:Src/main.c    **** long int counter = 0;
  67:Src/main.c    **** /* USER CODE END PV */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  70:Src/main.c    **** void SystemClock_Config(void);
  71:Src/main.c    **** static void MX_GPIO_Init(void);
  72:Src/main.c    **** static void MX_SDMMC1_SD_Init(void);
  73:Src/main.c    **** static void MX_USART3_UART_Init(void);
  74:Src/main.c    **** static void MX_CAN1_Init(void);
  75:Src/main.c    **** static void MX_TIM2_Init(void);
  76:Src/main.c    **** static void MX_NVIC_Init(void);
  77:Src/main.c    **** /* USER CODE BEGIN PFP */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* USER CODE END PFP */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  82:Src/main.c    **** /* USER CODE BEGIN 0 */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* USER CODE END 0 */
  85:Src/main.c    **** 
  86:Src/main.c    **** /**
  87:Src/main.c    ****   * @brief  The application entry point.
  88:Src/main.c    ****   * @retval int
  89:Src/main.c    ****   */
ARM GAS  /tmp/cchXJTuc.s 			page 3


  90:Src/main.c    **** int main(void)
  91:Src/main.c    **** {
  92:Src/main.c    ****   /* USER CODE BEGIN 1 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 1 */
  95:Src/main.c    ****   
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Src/main.c    ****   HAL_Init();
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE BEGIN Init */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE END Init */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Configure the system clock */
 107:Src/main.c    ****   SystemClock_Config();
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END SysInit */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Initialize all configured peripherals */
 114:Src/main.c    ****   MX_GPIO_Init();
 115:Src/main.c    ****   MX_SDMMC1_SD_Init();
 116:Src/main.c    ****   MX_USART3_UART_Init();
 117:Src/main.c    ****   MX_FATFS_Init();
 118:Src/main.c    ****   MX_CAN1_Init();
 119:Src/main.c    ****   MX_TIM2_Init();
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* Initialize interrupts */
 122:Src/main.c    ****   MX_NVIC_Init();
 123:Src/main.c    ****   /* USER CODE BEGIN 2 */
 124:Src/main.c    **** 	HAL_TIM_Base_Start_IT(&htim2);
 125:Src/main.c    **** 
 126:Src/main.c    **** 	can1.rx0_interrupt = CAN1_RX0_IRQn;
 127:Src/main.c    **** 	can1.tx_interrupt = CAN1_TX_IRQn;
 128:Src/main.c    **** 	can1.hcan = &hcan1;
 129:Src/main.c    **** 
 130:Src/main.c    **** 	can_init();
 131:Src/main.c    **** 
 132:Src/main.c    **** 	HAL_UART_Receive_IT(&huart3, (uint8_t *)&debug_rx[debug_rx_count],
 133:Src/main.c    **** 						1);  // activate rx interrupt for debug
 134:Src/main.c    **** 
 135:Src/main.c    **** 	current_state = STATE_INIT;
 136:Src/main.c    **** 
 137:Src/main.c    **** 	accel.pot1_max_val = 4096;
 138:Src/main.c    **** 	accel.pot1_min_val = 0;
 139:Src/main.c    **** 	accel.pot1_range = accel.pot1_max_val - accel.pot1_min_val;
 140:Src/main.c    **** 	accel.pot2_max_val = 4096;
 141:Src/main.c    **** 	accel.pot2_min_val = 0;
 142:Src/main.c    **** 	accel.pot2_range = accel.pot2_max_val - accel.pot2_min_val;
 143:Src/main.c    **** 
 144:Src/main.c    **** 	init_sd();
 145:Src/main.c    **** 
 146:Src/main.c    **** 	
ARM GAS  /tmp/cchXJTuc.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****   /* USER CODE END 2 */
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* Infinite loop */
 151:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 152:Src/main.c    **** 	while (1) {
 153:Src/main.c    **** 		can1.dataTx[0] = 0;
 154:Src/main.c    **** 		can1.dataTx[1] = 0;
 155:Src/main.c    **** 		can1.dataTx[2] = 0;
 156:Src/main.c    **** 		can1.dataTx[3] = 0;
 157:Src/main.c    **** 		can1.dataTx[4] = counter >> 24;
 158:Src/main.c    **** 		can1.dataTx[5] = counter >> 16;
 159:Src/main.c    **** 		can1.dataTx[6] = counter >> 8;
 160:Src/main.c    **** 		can1.dataTx[7] = counter % 256;
 161:Src/main.c    **** 
 162:Src/main.c    **** 		can1.tx_id = 0xA0;
 163:Src/main.c    **** 
 164:Src/main.c    **** 		// CAN_Send(&can1, normalPriority);
 165:Src/main.c    **** 		// HAL_Delay(500);
 166:Src/main.c    **** 
 167:Src/main.c    **** 		// counter ++;
 168:Src/main.c    **** 
 169:Src/main.c    **** 		if (current_state == STATE_INIT) {
 170:Src/main.c    **** 			init();
 171:Src/main.c    **** 		} else if (current_state == STATE_IDLE) {
 172:Src/main.c    **** 			idle();
 173:Src/main.c    **** 		} else if (current_state == STATE_SETUP) {
 174:Src/main.c    **** 			setup();
 175:Src/main.c    **** 		} else if (current_state == STATE_RUN) {
 176:Src/main.c    **** 			run();
 177:Src/main.c    **** 		}
 178:Src/main.c    ****     /* USER CODE END WHILE */
 179:Src/main.c    **** 
 180:Src/main.c    ****     /* USER CODE BEGIN 3 */
 181:Src/main.c    **** 	}
 182:Src/main.c    ****   /* USER CODE END 3 */
 183:Src/main.c    **** }
 184:Src/main.c    **** 
 185:Src/main.c    **** /**
 186:Src/main.c    ****   * @brief System Clock Configuration
 187:Src/main.c    ****   * @retval None
 188:Src/main.c    ****   */
 189:Src/main.c    **** void SystemClock_Config(void)
 190:Src/main.c    **** {
 191:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 192:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 193:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 194:Src/main.c    **** 
 195:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 196:Src/main.c    ****   */
 197:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 198:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 199:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 200:Src/main.c    ****   */
 201:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 202:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 203:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  /tmp/cchXJTuc.s 			page 5


 204:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 210:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 211:Src/main.c    ****   {
 212:Src/main.c    ****     Error_Handler();
 213:Src/main.c    ****   }
 214:Src/main.c    ****   /** Activate the Over-Drive mode 
 215:Src/main.c    ****   */
 216:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 217:Src/main.c    ****   {
 218:Src/main.c    ****     Error_Handler();
 219:Src/main.c    ****   }
 220:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 221:Src/main.c    ****   */
 222:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 223:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 224:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 225:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 226:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 227:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 228:Src/main.c    **** 
 229:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 230:Src/main.c    ****   {
 231:Src/main.c    ****     Error_Handler();
 232:Src/main.c    ****   }
 233:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_SDMMC1
 234:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 235:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 236:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 237:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 238:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 239:Src/main.c    ****   {
 240:Src/main.c    ****     Error_Handler();
 241:Src/main.c    ****   }
 242:Src/main.c    **** }
 243:Src/main.c    **** 
 244:Src/main.c    **** /**
 245:Src/main.c    ****   * @brief NVIC Configuration.
 246:Src/main.c    ****   * @retval None
 247:Src/main.c    ****   */
 248:Src/main.c    **** static void MX_NVIC_Init(void)
 249:Src/main.c    **** {
 250:Src/main.c    ****   /* SDMMC1_IRQn interrupt configuration */
 251:Src/main.c    ****   HAL_NVIC_SetPriority(SDMMC1_IRQn, 0, 0);
 252:Src/main.c    ****   HAL_NVIC_EnableIRQ(SDMMC1_IRQn);
 253:Src/main.c    ****   /* USART3_IRQn interrupt configuration */
 254:Src/main.c    ****   HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 255:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART3_IRQn);
 256:Src/main.c    ****   /* CAN1_SCE_IRQn interrupt configuration */
 257:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_SCE_IRQn, 0, 0);
 258:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 259:Src/main.c    ****   /* CAN1_RX1_IRQn interrupt configuration */
 260:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
ARM GAS  /tmp/cchXJTuc.s 			page 6


 261:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 262:Src/main.c    ****   /* CAN1_RX0_IRQn interrupt configuration */
 263:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 264:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 265:Src/main.c    ****   /* CAN1_TX_IRQn interrupt configuration */
 266:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_TX_IRQn, 0, 0);
 267:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 268:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 269:Src/main.c    ****   HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 270:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 271:Src/main.c    **** }
 272:Src/main.c    **** 
 273:Src/main.c    **** /**
 274:Src/main.c    ****   * @brief CAN1 Initialization Function
 275:Src/main.c    ****   * @param None
 276:Src/main.c    ****   * @retval None
 277:Src/main.c    ****   */
 278:Src/main.c    **** static void MX_CAN1_Init(void)
 279:Src/main.c    **** {
 280:Src/main.c    **** 
 281:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 0 */
 282:Src/main.c    **** 
 283:Src/main.c    ****   /* USER CODE END CAN1_Init 0 */
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 1 */
 286:Src/main.c    **** 
 287:Src/main.c    ****   /* USER CODE END CAN1_Init 1 */
 288:Src/main.c    ****   hcan1.Instance = CAN1;
 289:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 290:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 291:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 292:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 293:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 294:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 295:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 296:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 297:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 298:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 299:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 300:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 301:Src/main.c    ****   {
 302:Src/main.c    ****     Error_Handler();
 303:Src/main.c    ****   }
 304:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 2 */
 305:Src/main.c    **** 
 306:Src/main.c    ****   /* USER CODE END CAN1_Init 2 */
 307:Src/main.c    **** 
 308:Src/main.c    **** }
 309:Src/main.c    **** 
 310:Src/main.c    **** /**
 311:Src/main.c    ****   * @brief SDMMC1 Initialization Function
 312:Src/main.c    ****   * @param None
 313:Src/main.c    ****   * @retval None
 314:Src/main.c    ****   */
 315:Src/main.c    **** static void MX_SDMMC1_SD_Init(void)
 316:Src/main.c    **** {
  27              		.loc 1 316 1 view -0
ARM GAS  /tmp/cchXJTuc.s 			page 7


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 317:Src/main.c    **** 
 318:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 0 */
 319:Src/main.c    **** 
 320:Src/main.c    ****   /* USER CODE END SDMMC1_Init 0 */
 321:Src/main.c    **** 
 322:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 1 */
 323:Src/main.c    **** 
 324:Src/main.c    ****   /* USER CODE END SDMMC1_Init 1 */
 325:Src/main.c    ****   hsd1.Instance = SDMMC1;
  32              		.loc 1 325 3 view .LVU1
  33              		.loc 1 325 17 is_stmt 0 view .LVU2
  34 0000 054B     		ldr	r3, .L2
  35 0002 064A     		ldr	r2, .L2+4
  36 0004 1A60     		str	r2, [r3]
 326:Src/main.c    ****   hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  37              		.loc 1 326 3 is_stmt 1 view .LVU3
  38              		.loc 1 326 23 is_stmt 0 view .LVU4
  39 0006 0022     		movs	r2, #0
  40 0008 5A60     		str	r2, [r3, #4]
 327:Src/main.c    ****   hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  41              		.loc 1 327 3 is_stmt 1 view .LVU5
  42              		.loc 1 327 25 is_stmt 0 view .LVU6
  43 000a 9A60     		str	r2, [r3, #8]
 328:Src/main.c    ****   hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  44              		.loc 1 328 3 is_stmt 1 view .LVU7
  45              		.loc 1 328 28 is_stmt 0 view .LVU8
  46 000c DA60     		str	r2, [r3, #12]
 329:Src/main.c    ****   hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
  47              		.loc 1 329 3 is_stmt 1 view .LVU9
  48              		.loc 1 329 21 is_stmt 0 view .LVU10
  49 000e 1A61     		str	r2, [r3, #16]
 330:Src/main.c    ****   hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  50              		.loc 1 330 3 is_stmt 1 view .LVU11
  51              		.loc 1 330 33 is_stmt 0 view .LVU12
  52 0010 5A61     		str	r2, [r3, #20]
 331:Src/main.c    ****   hsd1.Init.ClockDiv = 1;
  53              		.loc 1 331 3 is_stmt 1 view .LVU13
  54              		.loc 1 331 22 is_stmt 0 view .LVU14
  55 0012 0122     		movs	r2, #1
  56 0014 9A61     		str	r2, [r3, #24]
 332:Src/main.c    ****   /* USER CODE BEGIN SDMMC1_Init 2 */
 333:Src/main.c    **** 
 334:Src/main.c    ****   /* USER CODE END SDMMC1_Init 2 */
 335:Src/main.c    **** 
 336:Src/main.c    **** }
  57              		.loc 1 336 1 view .LVU15
  58 0016 7047     		bx	lr
  59              	.L3:
  60              		.align	2
  61              	.L2:
  62 0018 00000000 		.word	hsd1
  63 001c 002C0140 		.word	1073818624
  64              		.cfi_endproc
ARM GAS  /tmp/cchXJTuc.s 			page 8


  65              	.LFE148:
  67              		.section	.text.MX_GPIO_Init,"ax",%progbits
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv5-d16
  74              	MX_GPIO_Init:
  75              	.LFB151:
 337:Src/main.c    **** 
 338:Src/main.c    **** /**
 339:Src/main.c    ****   * @brief TIM2 Initialization Function
 340:Src/main.c    ****   * @param None
 341:Src/main.c    ****   * @retval None
 342:Src/main.c    ****   */
 343:Src/main.c    **** static void MX_TIM2_Init(void)
 344:Src/main.c    **** {
 345:Src/main.c    **** 
 346:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 347:Src/main.c    **** 
 348:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 349:Src/main.c    **** 
 350:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 351:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 352:Src/main.c    **** 
 353:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 354:Src/main.c    **** 
 355:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 356:Src/main.c    ****   htim2.Instance = TIM2;
 357:Src/main.c    ****   htim2.Init.Prescaler = 108;
 358:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 359:Src/main.c    ****   htim2.Init.Period = 1000;
 360:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 361:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 362:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 363:Src/main.c    ****   {
 364:Src/main.c    ****     Error_Handler();
 365:Src/main.c    ****   }
 366:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 367:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 368:Src/main.c    ****   {
 369:Src/main.c    ****     Error_Handler();
 370:Src/main.c    ****   }
 371:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 372:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 373:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 374:Src/main.c    ****   {
 375:Src/main.c    ****     Error_Handler();
 376:Src/main.c    ****   }
 377:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 378:Src/main.c    **** 
 379:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 380:Src/main.c    **** 
 381:Src/main.c    **** }
 382:Src/main.c    **** 
 383:Src/main.c    **** /**
 384:Src/main.c    ****   * @brief USART3 Initialization Function
ARM GAS  /tmp/cchXJTuc.s 			page 9


 385:Src/main.c    ****   * @param None
 386:Src/main.c    ****   * @retval None
 387:Src/main.c    ****   */
 388:Src/main.c    **** static void MX_USART3_UART_Init(void)
 389:Src/main.c    **** {
 390:Src/main.c    **** 
 391:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 0 */
 392:Src/main.c    **** 
 393:Src/main.c    ****   /* USER CODE END USART3_Init 0 */
 394:Src/main.c    **** 
 395:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 1 */
 396:Src/main.c    **** 
 397:Src/main.c    ****   /* USER CODE END USART3_Init 1 */
 398:Src/main.c    ****   huart3.Instance = USART3;
 399:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 400:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 401:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 402:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 403:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 404:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 405:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 406:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 407:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 408:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 409:Src/main.c    ****   {
 410:Src/main.c    ****     Error_Handler();
 411:Src/main.c    ****   }
 412:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 2 */
 413:Src/main.c    **** 
 414:Src/main.c    ****   /* USER CODE END USART3_Init 2 */
 415:Src/main.c    **** 
 416:Src/main.c    **** }
 417:Src/main.c    **** 
 418:Src/main.c    **** /**
 419:Src/main.c    ****   * @brief GPIO Initialization Function
 420:Src/main.c    ****   * @param None
 421:Src/main.c    ****   * @retval None
 422:Src/main.c    ****   */
 423:Src/main.c    **** static void MX_GPIO_Init(void)
 424:Src/main.c    **** {
  76              		.loc 1 424 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 40
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80 0000 30B5     		push	{r4, r5, lr}
  81              	.LCFI0:
  82              		.cfi_def_cfa_offset 12
  83              		.cfi_offset 4, -12
  84              		.cfi_offset 5, -8
  85              		.cfi_offset 14, -4
  86 0002 8BB0     		sub	sp, sp, #44
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 56
 425:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  89              		.loc 1 425 3 view .LVU17
  90              		.loc 1 425 20 is_stmt 0 view .LVU18
  91 0004 0024     		movs	r4, #0
ARM GAS  /tmp/cchXJTuc.s 			page 10


  92 0006 0594     		str	r4, [sp, #20]
  93 0008 0694     		str	r4, [sp, #24]
  94 000a 0794     		str	r4, [sp, #28]
  95 000c 0894     		str	r4, [sp, #32]
  96 000e 0994     		str	r4, [sp, #36]
 426:Src/main.c    **** 
 427:Src/main.c    ****   /* GPIO Ports Clock Enable */
 428:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  97              		.loc 1 428 3 is_stmt 1 view .LVU19
  98              	.LBB2:
  99              		.loc 1 428 3 view .LVU20
 100              		.loc 1 428 3 view .LVU21
 101 0010 244B     		ldr	r3, .L6
 102 0012 1A6B     		ldr	r2, [r3, #48]
 103 0014 42F00402 		orr	r2, r2, #4
 104 0018 1A63     		str	r2, [r3, #48]
 105              		.loc 1 428 3 view .LVU22
 106 001a 1A6B     		ldr	r2, [r3, #48]
 107 001c 02F00402 		and	r2, r2, #4
 108 0020 0192     		str	r2, [sp, #4]
 109              		.loc 1 428 3 view .LVU23
 110 0022 019A     		ldr	r2, [sp, #4]
 111              	.LBE2:
 112              		.loc 1 428 3 view .LVU24
 429:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 113              		.loc 1 429 3 view .LVU25
 114              	.LBB3:
 115              		.loc 1 429 3 view .LVU26
 116              		.loc 1 429 3 view .LVU27
 117 0024 1A6B     		ldr	r2, [r3, #48]
 118 0026 42F00102 		orr	r2, r2, #1
 119 002a 1A63     		str	r2, [r3, #48]
 120              		.loc 1 429 3 view .LVU28
 121 002c 1A6B     		ldr	r2, [r3, #48]
 122 002e 02F00102 		and	r2, r2, #1
 123 0032 0292     		str	r2, [sp, #8]
 124              		.loc 1 429 3 view .LVU29
 125 0034 029A     		ldr	r2, [sp, #8]
 126              	.LBE3:
 127              		.loc 1 429 3 view .LVU30
 430:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 128              		.loc 1 430 3 view .LVU31
 129              	.LBB4:
 130              		.loc 1 430 3 view .LVU32
 131              		.loc 1 430 3 view .LVU33
 132 0036 1A6B     		ldr	r2, [r3, #48]
 133 0038 42F00202 		orr	r2, r2, #2
 134 003c 1A63     		str	r2, [r3, #48]
 135              		.loc 1 430 3 view .LVU34
 136 003e 1A6B     		ldr	r2, [r3, #48]
 137 0040 02F00202 		and	r2, r2, #2
 138 0044 0392     		str	r2, [sp, #12]
 139              		.loc 1 430 3 view .LVU35
 140 0046 039A     		ldr	r2, [sp, #12]
 141              	.LBE4:
 142              		.loc 1 430 3 view .LVU36
 431:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
ARM GAS  /tmp/cchXJTuc.s 			page 11


 143              		.loc 1 431 3 view .LVU37
 144              	.LBB5:
 145              		.loc 1 431 3 view .LVU38
 146              		.loc 1 431 3 view .LVU39
 147 0048 1A6B     		ldr	r2, [r3, #48]
 148 004a 42F00802 		orr	r2, r2, #8
 149 004e 1A63     		str	r2, [r3, #48]
 150              		.loc 1 431 3 view .LVU40
 151 0050 1B6B     		ldr	r3, [r3, #48]
 152 0052 03F00803 		and	r3, r3, #8
 153 0056 0493     		str	r3, [sp, #16]
 154              		.loc 1 431 3 view .LVU41
 155 0058 049B     		ldr	r3, [sp, #16]
 156              	.LBE5:
 157              		.loc 1 431 3 view .LVU42
 432:Src/main.c    **** 
 433:Src/main.c    ****   /*Configure GPIO pin Output Level */
 434:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LED_green_Pin|LED_red_Pin|LED_blue_Pin, GPIO_PIN_RESET);
 158              		.loc 1 434 3 view .LVU43
 159 005a 134D     		ldr	r5, .L6+4
 160 005c 2246     		mov	r2, r4
 161 005e 44F28101 		movw	r1, #16513
 162 0062 2846     		mov	r0, r5
 163 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 164              	.LVL0:
 435:Src/main.c    **** 
 436:Src/main.c    ****   /*Configure GPIO pin : USER_BUTTON_Pin */
 437:Src/main.c    ****   GPIO_InitStruct.Pin = USER_BUTTON_Pin;
 165              		.loc 1 437 3 view .LVU44
 166              		.loc 1 437 23 is_stmt 0 view .LVU45
 167 0068 4FF40053 		mov	r3, #8192
 168 006c 0593     		str	r3, [sp, #20]
 438:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 169              		.loc 1 438 3 is_stmt 1 view .LVU46
 170              		.loc 1 438 24 is_stmt 0 view .LVU47
 171 006e 0694     		str	r4, [sp, #24]
 439:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 172              		.loc 1 439 3 is_stmt 1 view .LVU48
 173              		.loc 1 439 24 is_stmt 0 view .LVU49
 174 0070 0794     		str	r4, [sp, #28]
 440:Src/main.c    ****   HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 175              		.loc 1 440 3 is_stmt 1 view .LVU50
 176 0072 05A9     		add	r1, sp, #20
 177 0074 0D48     		ldr	r0, .L6+8
 178 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 179              	.LVL1:
 441:Src/main.c    **** 
 442:Src/main.c    ****   /*Configure GPIO pin : SD_detect_Pin */
 443:Src/main.c    ****   GPIO_InitStruct.Pin = SD_detect_Pin;
 180              		.loc 1 443 3 view .LVU51
 181              		.loc 1 443 23 is_stmt 0 view .LVU52
 182 007a 2023     		movs	r3, #32
 183 007c 0593     		str	r3, [sp, #20]
 444:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 184              		.loc 1 444 3 is_stmt 1 view .LVU53
 185              		.loc 1 444 24 is_stmt 0 view .LVU54
 186 007e 0694     		str	r4, [sp, #24]
ARM GAS  /tmp/cchXJTuc.s 			page 12


 445:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 187              		.loc 1 445 3 is_stmt 1 view .LVU55
 188              		.loc 1 445 24 is_stmt 0 view .LVU56
 189 0080 0794     		str	r4, [sp, #28]
 446:Src/main.c    ****   HAL_GPIO_Init(SD_detect_GPIO_Port, &GPIO_InitStruct);
 190              		.loc 1 446 3 is_stmt 1 view .LVU57
 191 0082 05A9     		add	r1, sp, #20
 192 0084 0A48     		ldr	r0, .L6+12
 193 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 194              	.LVL2:
 447:Src/main.c    **** 
 448:Src/main.c    ****   /*Configure GPIO pins : LED_green_Pin LED_red_Pin LED_blue_Pin */
 449:Src/main.c    ****   GPIO_InitStruct.Pin = LED_green_Pin|LED_red_Pin|LED_blue_Pin;
 195              		.loc 1 449 3 view .LVU58
 196              		.loc 1 449 23 is_stmt 0 view .LVU59
 197 008a 44F28103 		movw	r3, #16513
 198 008e 0593     		str	r3, [sp, #20]
 450:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 199              		.loc 1 450 3 is_stmt 1 view .LVU60
 200              		.loc 1 450 24 is_stmt 0 view .LVU61
 201 0090 0123     		movs	r3, #1
 202 0092 0693     		str	r3, [sp, #24]
 451:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 451 3 is_stmt 1 view .LVU62
 204              		.loc 1 451 24 is_stmt 0 view .LVU63
 205 0094 0794     		str	r4, [sp, #28]
 452:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 206              		.loc 1 452 3 is_stmt 1 view .LVU64
 207              		.loc 1 452 25 is_stmt 0 view .LVU65
 208 0096 0894     		str	r4, [sp, #32]
 453:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 209              		.loc 1 453 3 is_stmt 1 view .LVU66
 210 0098 05A9     		add	r1, sp, #20
 211 009a 2846     		mov	r0, r5
 212 009c FFF7FEFF 		bl	HAL_GPIO_Init
 213              	.LVL3:
 454:Src/main.c    **** 
 455:Src/main.c    **** }
 214              		.loc 1 455 1 is_stmt 0 view .LVU67
 215 00a0 0BB0     		add	sp, sp, #44
 216              	.LCFI2:
 217              		.cfi_def_cfa_offset 12
 218              		@ sp needed
 219 00a2 30BD     		pop	{r4, r5, pc}
 220              	.L7:
 221              		.align	2
 222              	.L6:
 223 00a4 00380240 		.word	1073887232
 224 00a8 00040240 		.word	1073873920
 225 00ac 00080240 		.word	1073874944
 226 00b0 00000240 		.word	1073872896
 227              		.cfi_endproc
 228              	.LFE151:
 230              		.section	.text.MX_NVIC_Init,"ax",%progbits
 231              		.align	1
 232              		.syntax unified
 233              		.thumb
ARM GAS  /tmp/cchXJTuc.s 			page 13


 234              		.thumb_func
 235              		.fpu fpv5-d16
 237              	MX_NVIC_Init:
 238              	.LFB146:
 249:Src/main.c    ****   /* SDMMC1_IRQn interrupt configuration */
 239              		.loc 1 249 1 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 08B5     		push	{r3, lr}
 244              	.LCFI3:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 3, -8
 247              		.cfi_offset 14, -4
 251:Src/main.c    ****   HAL_NVIC_EnableIRQ(SDMMC1_IRQn);
 248              		.loc 1 251 3 view .LVU69
 249 0002 0022     		movs	r2, #0
 250 0004 1146     		mov	r1, r2
 251 0006 3120     		movs	r0, #49
 252 0008 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 253              	.LVL4:
 252:Src/main.c    ****   /* USART3_IRQn interrupt configuration */
 254              		.loc 1 252 3 view .LVU70
 255 000c 3120     		movs	r0, #49
 256 000e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 257              	.LVL5:
 254:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART3_IRQn);
 258              		.loc 1 254 3 view .LVU71
 259 0012 0022     		movs	r2, #0
 260 0014 1146     		mov	r1, r2
 261 0016 2720     		movs	r0, #39
 262 0018 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 263              	.LVL6:
 255:Src/main.c    ****   /* CAN1_SCE_IRQn interrupt configuration */
 264              		.loc 1 255 3 view .LVU72
 265 001c 2720     		movs	r0, #39
 266 001e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 267              	.LVL7:
 257:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 268              		.loc 1 257 3 view .LVU73
 269 0022 0022     		movs	r2, #0
 270 0024 1146     		mov	r1, r2
 271 0026 1620     		movs	r0, #22
 272 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 273              	.LVL8:
 258:Src/main.c    ****   /* CAN1_RX1_IRQn interrupt configuration */
 274              		.loc 1 258 3 view .LVU74
 275 002c 1620     		movs	r0, #22
 276 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 277              	.LVL9:
 260:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 278              		.loc 1 260 3 view .LVU75
 279 0032 0022     		movs	r2, #0
 280 0034 1146     		mov	r1, r2
 281 0036 1520     		movs	r0, #21
 282 0038 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 283              	.LVL10:
ARM GAS  /tmp/cchXJTuc.s 			page 14


 261:Src/main.c    ****   /* CAN1_RX0_IRQn interrupt configuration */
 284              		.loc 1 261 3 view .LVU76
 285 003c 1520     		movs	r0, #21
 286 003e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 287              	.LVL11:
 263:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 288              		.loc 1 263 3 view .LVU77
 289 0042 0022     		movs	r2, #0
 290 0044 1146     		mov	r1, r2
 291 0046 1420     		movs	r0, #20
 292 0048 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 293              	.LVL12:
 264:Src/main.c    ****   /* CAN1_TX_IRQn interrupt configuration */
 294              		.loc 1 264 3 view .LVU78
 295 004c 1420     		movs	r0, #20
 296 004e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 297              	.LVL13:
 266:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 298              		.loc 1 266 3 view .LVU79
 299 0052 0022     		movs	r2, #0
 300 0054 1146     		mov	r1, r2
 301 0056 1320     		movs	r0, #19
 302 0058 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 303              	.LVL14:
 267:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 304              		.loc 1 267 3 view .LVU80
 305 005c 1320     		movs	r0, #19
 306 005e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 307              	.LVL15:
 269:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 308              		.loc 1 269 3 view .LVU81
 309 0062 0022     		movs	r2, #0
 310 0064 1146     		mov	r1, r2
 311 0066 1C20     		movs	r0, #28
 312 0068 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 313              	.LVL16:
 270:Src/main.c    **** }
 314              		.loc 1 270 3 view .LVU82
 315 006c 1C20     		movs	r0, #28
 316 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 317              	.LVL17:
 271:Src/main.c    **** 
 318              		.loc 1 271 1 is_stmt 0 view .LVU83
 319 0072 08BD     		pop	{r3, pc}
 320              		.cfi_endproc
 321              	.LFE146:
 323              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 324              		.align	2
 325              	.LC0:
 326 0000 494D5520 		.ascii	"IMU non presente\015\012\000"
 326      6E6F6E20 
 326      70726573 
 326      656E7465 
 326      0D0A00
 327              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 328              		.align	1
 329              		.global	HAL_TIM_PeriodElapsedCallback
ARM GAS  /tmp/cchXJTuc.s 			page 15


 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv5-d16
 335              	HAL_TIM_PeriodElapsedCallback:
 336              	.LVL18:
 337              	.LFB152:
 456:Src/main.c    **** 
 457:Src/main.c    **** /* USER CODE BEGIN 4 */
 458:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 338              		.loc 1 458 61 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		.loc 1 458 61 is_stmt 0 view .LVU85
 343 0000 08B5     		push	{r3, lr}
 344              	.LCFI4:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 3, -8
 347              		.cfi_offset 14, -4
 459:Src/main.c    **** 	if (htim == &htim2) {
 348              		.loc 1 459 2 is_stmt 1 view .LVU86
 349              		.loc 1 459 5 is_stmt 0 view .LVU87
 350 0002 434B     		ldr	r3, .L26
 351 0004 8342     		cmp	r3, r0
 352 0006 00D0     		beq	.L19
 353              	.LVL19:
 354              	.L10:
 460:Src/main.c    **** 		count_ms += 1;
 461:Src/main.c    **** 		count_ms_abs++; //absolute 32 bit counter -> up to 50 days 
 462:Src/main.c    **** 		if (accel_implausibility_check_count_flag == 1) {
 463:Src/main.c    **** 			accel_implausibility_check_count++;
 464:Src/main.c    **** 			if (accel_implausibility_check_count == 50) {
 465:Src/main.c    **** 				accel_implausibility_check_count_flag = 2;
 466:Src/main.c    **** 				accel_implausibility_check_count = 0;
 467:Src/main.c    **** 				// TODO: add error messages
 468:Src/main.c    **** 			}
 469:Src/main.c    **** 		}
 470:Src/main.c    **** 		if (count_ms == 100) {
 471:Src/main.c    **** 			count_ms = 0;
 472:Src/main.c    **** 			count_dec++;
 473:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 474:Src/main.c    **** 			count_inverter++;
 475:Src/main.c    **** 			count_imu++;
 476:Src/main.c    **** 			count_atc++;
 477:Src/main.c    **** 			if (count_inverter == 10) {  //--- check if inverter is connected ---//
 478:Src/main.c    **** 					   // TODO: to implement error functions
 479:Src/main.c    **** 			} else if (count_inverter == 11) {
 480:Src/main.c    **** 				count_inverter = 10;
 481:Src/main.c    **** 			}
 482:Src/main.c    **** 			if (count_atc == 10) {  //--- check if Analog To Can is connected ---//
 483:Src/main.c    **** 				// TODO: to implement error functions
 484:Src/main.c    **** 				atc_connected = 0;
 485:Src/main.c    **** 			} else if (count_atc == 11) {
 486:Src/main.c    **** 				count_atc = 10;
 487:Src/main.c    **** 			}
 488:Src/main.c    **** 			if (count_imu == 10) {  //--- check if imu is connected ---//
ARM GAS  /tmp/cchXJTuc.s 			page 16


 489:Src/main.c    **** 				// imu non presente //
 490:Src/main.c    **** 				imu_connected = 0;  // imu not connected
 491:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 1
 492:Src/main.c    **** 			} else if (count_imu == 11) {
 493:Src/main.c    **** 				count_imu = 10;
 494:Src/main.c    **** 			}
 495:Src/main.c    **** 			if (count_dec == 10) {
 496:Src/main.c    **** 				count_dec = 0;
 497:Src/main.c    **** 				count_sec++;
 498:Src/main.c    **** 				if (count_sec == 60) {
 499:Src/main.c    **** 					count_sec = 0;
 500:Src/main.c    **** 					count_min++;
 501:Src/main.c    **** 					if (count_min == 60) {
 502:Src/main.c    **** 						count_min = 0;
 503:Src/main.c    **** 						count_hour++;
 504:Src/main.c    **** 					}
 505:Src/main.c    **** 				}
 506:Src/main.c    **** 			}
 507:Src/main.c    **** 		}
 508:Src/main.c    **** 	}
 509:Src/main.c    **** }
 355              		.loc 1 509 1 view .LVU88
 356 0008 08BD     		pop	{r3, pc}
 357              	.LVL20:
 358              	.L19:
 460:Src/main.c    **** 		count_ms += 1;
 359              		.loc 1 460 3 is_stmt 1 view .LVU89
 460:Src/main.c    **** 		count_ms += 1;
 360              		.loc 1 460 12 is_stmt 0 view .LVU90
 361 000a 424A     		ldr	r2, .L26+4
 362 000c 1388     		ldrh	r3, [r2]
 363 000e 0133     		adds	r3, r3, #1
 364 0010 9BB2     		uxth	r3, r3
 365 0012 1380     		strh	r3, [r2]	@ movhi
 461:Src/main.c    **** 		if (accel_implausibility_check_count_flag == 1) {
 366              		.loc 1 461 3 is_stmt 1 view .LVU91
 461:Src/main.c    **** 		if (accel_implausibility_check_count_flag == 1) {
 367              		.loc 1 461 15 is_stmt 0 view .LVU92
 368 0014 404A     		ldr	r2, .L26+8
 369 0016 1368     		ldr	r3, [r2]
 370 0018 0133     		adds	r3, r3, #1
 371 001a 1360     		str	r3, [r2]
 462:Src/main.c    **** 			accel_implausibility_check_count++;
 372              		.loc 1 462 3 is_stmt 1 view .LVU93
 462:Src/main.c    **** 			accel_implausibility_check_count++;
 373              		.loc 1 462 45 is_stmt 0 view .LVU94
 374 001c 3F4B     		ldr	r3, .L26+12
 375 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 462:Src/main.c    **** 			accel_implausibility_check_count++;
 376              		.loc 1 462 6 view .LVU95
 377 0020 012B     		cmp	r3, #1
 378 0022 4DD0     		beq	.L20
 379              	.L12:
 470:Src/main.c    **** 			count_ms = 0;
 380              		.loc 1 470 3 is_stmt 1 view .LVU96
 470:Src/main.c    **** 			count_ms = 0;
 381              		.loc 1 470 16 is_stmt 0 view .LVU97
ARM GAS  /tmp/cchXJTuc.s 			page 17


 382 0024 3B4B     		ldr	r3, .L26+4
 383 0026 1B88     		ldrh	r3, [r3]
 384 0028 9BB2     		uxth	r3, r3
 470:Src/main.c    **** 			count_ms = 0;
 385              		.loc 1 470 6 view .LVU98
 386 002a 642B     		cmp	r3, #100
 387 002c ECD1     		bne	.L10
 471:Src/main.c    **** 			count_dec++;
 388              		.loc 1 471 4 is_stmt 1 view .LVU99
 471:Src/main.c    **** 			count_dec++;
 389              		.loc 1 471 13 is_stmt 0 view .LVU100
 390 002e 394B     		ldr	r3, .L26+4
 391 0030 0022     		movs	r2, #0
 392 0032 1A80     		strh	r2, [r3]	@ movhi
 472:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 393              		.loc 1 472 4 is_stmt 1 view .LVU101
 472:Src/main.c    **** 			//--- put your counter here (count each 0,1 sec) ---//
 394              		.loc 1 472 13 is_stmt 0 view .LVU102
 395 0034 3A4A     		ldr	r2, .L26+16
 396 0036 1388     		ldrh	r3, [r2]
 397 0038 0133     		adds	r3, r3, #1
 398 003a 9BB2     		uxth	r3, r3
 399 003c 1380     		strh	r3, [r2]	@ movhi
 474:Src/main.c    **** 			count_imu++;
 400              		.loc 1 474 4 is_stmt 1 view .LVU103
 474:Src/main.c    **** 			count_imu++;
 401              		.loc 1 474 18 is_stmt 0 view .LVU104
 402 003e 394B     		ldr	r3, .L26+20
 403 0040 1988     		ldrh	r1, [r3]
 404 0042 0131     		adds	r1, r1, #1
 405 0044 89B2     		uxth	r1, r1
 406 0046 1980     		strh	r1, [r3]	@ movhi
 475:Src/main.c    **** 			count_atc++;
 407              		.loc 1 475 4 is_stmt 1 view .LVU105
 475:Src/main.c    **** 			count_atc++;
 408              		.loc 1 475 13 is_stmt 0 view .LVU106
 409 0048 374A     		ldr	r2, .L26+24
 410 004a 1388     		ldrh	r3, [r2]
 411 004c 0133     		adds	r3, r3, #1
 412 004e 9BB2     		uxth	r3, r3
 413 0050 1380     		strh	r3, [r2]	@ movhi
 476:Src/main.c    **** 			if (count_inverter == 10) {  //--- check if inverter is connected ---//
 414              		.loc 1 476 4 is_stmt 1 view .LVU107
 476:Src/main.c    **** 			if (count_inverter == 10) {  //--- check if inverter is connected ---//
 415              		.loc 1 476 13 is_stmt 0 view .LVU108
 416 0052 3648     		ldr	r0, .L26+28
 417              	.LVL21:
 476:Src/main.c    **** 			if (count_inverter == 10) {  //--- check if inverter is connected ---//
 418              		.loc 1 476 13 view .LVU109
 419 0054 0288     		ldrh	r2, [r0]
 420 0056 0132     		adds	r2, r2, #1
 421 0058 92B2     		uxth	r2, r2
 422 005a 0280     		strh	r2, [r0]	@ movhi
 477:Src/main.c    **** 					   // TODO: to implement error functions
 423              		.loc 1 477 4 is_stmt 1 view .LVU110
 477:Src/main.c    **** 					   // TODO: to implement error functions
 424              		.loc 1 477 7 is_stmt 0 view .LVU111
ARM GAS  /tmp/cchXJTuc.s 			page 18


 425 005c 0A29     		cmp	r1, #10
 426 005e 01D0     		beq	.L13
 479:Src/main.c    **** 				count_inverter = 10;
 427              		.loc 1 479 11 is_stmt 1 view .LVU112
 479:Src/main.c    **** 				count_inverter = 10;
 428              		.loc 1 479 14 is_stmt 0 view .LVU113
 429 0060 0B29     		cmp	r1, #11
 430 0062 3BD0     		beq	.L21
 431              	.L13:
 482:Src/main.c    **** 				// TODO: to implement error functions
 432              		.loc 1 482 4 is_stmt 1 view .LVU114
 482:Src/main.c    **** 				// TODO: to implement error functions
 433              		.loc 1 482 7 is_stmt 0 view .LVU115
 434 0064 0A2A     		cmp	r2, #10
 435 0066 3DD0     		beq	.L22
 485:Src/main.c    **** 				count_atc = 10;
 436              		.loc 1 485 11 is_stmt 1 view .LVU116
 485:Src/main.c    **** 				count_atc = 10;
 437              		.loc 1 485 14 is_stmt 0 view .LVU117
 438 0068 0B2A     		cmp	r2, #11
 439 006a 3FD0     		beq	.L23
 440              	.L15:
 488:Src/main.c    **** 				// imu non presente //
 441              		.loc 1 488 4 is_stmt 1 view .LVU118
 488:Src/main.c    **** 				// imu non presente //
 442              		.loc 1 488 7 is_stmt 0 view .LVU119
 443 006c 0A2B     		cmp	r3, #10
 444 006e 41D0     		beq	.L24
 492:Src/main.c    **** 				count_imu = 10;
 445              		.loc 1 492 11 is_stmt 1 view .LVU120
 492:Src/main.c    **** 				count_imu = 10;
 446              		.loc 1 492 14 is_stmt 0 view .LVU121
 447 0070 0B2B     		cmp	r3, #11
 448 0072 49D0     		beq	.L25
 449              	.L17:
 495:Src/main.c    **** 				count_dec = 0;
 450              		.loc 1 495 4 is_stmt 1 view .LVU122
 495:Src/main.c    **** 				count_dec = 0;
 451              		.loc 1 495 18 is_stmt 0 view .LVU123
 452 0074 2A4B     		ldr	r3, .L26+16
 453 0076 1B88     		ldrh	r3, [r3]
 454 0078 9BB2     		uxth	r3, r3
 495:Src/main.c    **** 				count_dec = 0;
 455              		.loc 1 495 7 view .LVU124
 456 007a 0A2B     		cmp	r3, #10
 457 007c C4D1     		bne	.L10
 496:Src/main.c    **** 				count_sec++;
 458              		.loc 1 496 5 is_stmt 1 view .LVU125
 496:Src/main.c    **** 				count_sec++;
 459              		.loc 1 496 15 is_stmt 0 view .LVU126
 460 007e 284B     		ldr	r3, .L26+16
 461 0080 0022     		movs	r2, #0
 462 0082 1A80     		strh	r2, [r3]	@ movhi
 497:Src/main.c    **** 				if (count_sec == 60) {
 463              		.loc 1 497 5 is_stmt 1 view .LVU127
 497:Src/main.c    **** 				if (count_sec == 60) {
 464              		.loc 1 497 14 is_stmt 0 view .LVU128
ARM GAS  /tmp/cchXJTuc.s 			page 19


 465 0084 2A4A     		ldr	r2, .L26+32
 466 0086 1388     		ldrh	r3, [r2]
 467 0088 0133     		adds	r3, r3, #1
 468 008a 9BB2     		uxth	r3, r3
 469 008c 1380     		strh	r3, [r2]	@ movhi
 498:Src/main.c    **** 					count_sec = 0;
 470              		.loc 1 498 5 is_stmt 1 view .LVU129
 498:Src/main.c    **** 					count_sec = 0;
 471              		.loc 1 498 19 is_stmt 0 view .LVU130
 472 008e 1388     		ldrh	r3, [r2]
 473 0090 9BB2     		uxth	r3, r3
 498:Src/main.c    **** 					count_sec = 0;
 474              		.loc 1 498 8 view .LVU131
 475 0092 3C2B     		cmp	r3, #60
 476 0094 B8D1     		bne	.L10
 499:Src/main.c    **** 					count_min++;
 477              		.loc 1 499 6 is_stmt 1 view .LVU132
 499:Src/main.c    **** 					count_min++;
 478              		.loc 1 499 16 is_stmt 0 view .LVU133
 479 0096 1346     		mov	r3, r2
 480 0098 0022     		movs	r2, #0
 481 009a 1A80     		strh	r2, [r3]	@ movhi
 500:Src/main.c    **** 					if (count_min == 60) {
 482              		.loc 1 500 6 is_stmt 1 view .LVU134
 500:Src/main.c    **** 					if (count_min == 60) {
 483              		.loc 1 500 15 is_stmt 0 view .LVU135
 484 009c 254A     		ldr	r2, .L26+36
 485 009e 1388     		ldrh	r3, [r2]
 486 00a0 0133     		adds	r3, r3, #1
 487 00a2 9BB2     		uxth	r3, r3
 488 00a4 1380     		strh	r3, [r2]	@ movhi
 501:Src/main.c    **** 						count_min = 0;
 489              		.loc 1 501 6 is_stmt 1 view .LVU136
 501:Src/main.c    **** 						count_min = 0;
 490              		.loc 1 501 20 is_stmt 0 view .LVU137
 491 00a6 1388     		ldrh	r3, [r2]
 492 00a8 9BB2     		uxth	r3, r3
 501:Src/main.c    **** 						count_min = 0;
 493              		.loc 1 501 9 view .LVU138
 494 00aa 3C2B     		cmp	r3, #60
 495 00ac ACD1     		bne	.L10
 502:Src/main.c    **** 						count_hour++;
 496              		.loc 1 502 7 is_stmt 1 view .LVU139
 502:Src/main.c    **** 						count_hour++;
 497              		.loc 1 502 17 is_stmt 0 view .LVU140
 498 00ae 1346     		mov	r3, r2
 499 00b0 0022     		movs	r2, #0
 500 00b2 1A80     		strh	r2, [r3]	@ movhi
 503:Src/main.c    **** 					}
 501              		.loc 1 503 7 is_stmt 1 view .LVU141
 503:Src/main.c    **** 					}
 502              		.loc 1 503 17 is_stmt 0 view .LVU142
 503 00b4 204A     		ldr	r2, .L26+40
 504 00b6 1388     		ldrh	r3, [r2]
 505 00b8 0133     		adds	r3, r3, #1
 506 00ba 9BB2     		uxth	r3, r3
 507 00bc 1380     		strh	r3, [r2]	@ movhi
ARM GAS  /tmp/cchXJTuc.s 			page 20


 508              		.loc 1 509 1 view .LVU143
 509 00be A3E7     		b	.L10
 510              	.LVL22:
 511              	.L20:
 463:Src/main.c    **** 			if (accel_implausibility_check_count == 50) {
 512              		.loc 1 463 4 is_stmt 1 view .LVU144
 463:Src/main.c    **** 			if (accel_implausibility_check_count == 50) {
 513              		.loc 1 463 36 is_stmt 0 view .LVU145
 514 00c0 1E4A     		ldr	r2, .L26+44
 515 00c2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 516 00c4 0133     		adds	r3, r3, #1
 517 00c6 DBB2     		uxtb	r3, r3
 518 00c8 1370     		strb	r3, [r2]
 464:Src/main.c    **** 				accel_implausibility_check_count_flag = 2;
 519              		.loc 1 464 4 is_stmt 1 view .LVU146
 464:Src/main.c    **** 				accel_implausibility_check_count_flag = 2;
 520              		.loc 1 464 7 is_stmt 0 view .LVU147
 521 00ca 322B     		cmp	r3, #50
 522 00cc AAD1     		bne	.L12
 465:Src/main.c    **** 				accel_implausibility_check_count = 0;
 523              		.loc 1 465 5 is_stmt 1 view .LVU148
 465:Src/main.c    **** 				accel_implausibility_check_count = 0;
 524              		.loc 1 465 43 is_stmt 0 view .LVU149
 525 00ce 134B     		ldr	r3, .L26+12
 526 00d0 0222     		movs	r2, #2
 527 00d2 1A70     		strb	r2, [r3]
 466:Src/main.c    **** 				// TODO: add error messages
 528              		.loc 1 466 5 is_stmt 1 view .LVU150
 466:Src/main.c    **** 				// TODO: add error messages
 529              		.loc 1 466 38 is_stmt 0 view .LVU151
 530 00d4 194B     		ldr	r3, .L26+44
 531 00d6 0022     		movs	r2, #0
 532 00d8 1A70     		strb	r2, [r3]
 533 00da A3E7     		b	.L12
 534              	.LVL23:
 535              	.L21:
 480:Src/main.c    **** 			}
 536              		.loc 1 480 5 is_stmt 1 view .LVU152
 480:Src/main.c    **** 			}
 537              		.loc 1 480 20 is_stmt 0 view .LVU153
 538 00dc 1149     		ldr	r1, .L26+20
 539 00de 0A20     		movs	r0, #10
 540 00e0 0880     		strh	r0, [r1]	@ movhi
 541 00e2 BFE7     		b	.L13
 542              	.L22:
 484:Src/main.c    **** 			} else if (count_atc == 11) {
 543              		.loc 1 484 5 is_stmt 1 view .LVU154
 484:Src/main.c    **** 			} else if (count_atc == 11) {
 544              		.loc 1 484 19 is_stmt 0 view .LVU155
 545 00e4 164A     		ldr	r2, .L26+48
 546 00e6 0021     		movs	r1, #0
 547 00e8 1170     		strb	r1, [r2]
 548 00ea BFE7     		b	.L15
 549              	.L23:
 486:Src/main.c    **** 			}
 550              		.loc 1 486 5 is_stmt 1 view .LVU156
 486:Src/main.c    **** 			}
ARM GAS  /tmp/cchXJTuc.s 			page 21


 551              		.loc 1 486 15 is_stmt 0 view .LVU157
 552 00ec 0F4A     		ldr	r2, .L26+28
 553 00ee 0A21     		movs	r1, #10
 554 00f0 1180     		strh	r1, [r2]	@ movhi
 555 00f2 BBE7     		b	.L15
 556              	.L24:
 490:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 1
 557              		.loc 1 490 5 is_stmt 1 view .LVU158
 490:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)"IMU non presente\r\n", strlen("IMU non presente\r\n"), 1
 558              		.loc 1 490 19 is_stmt 0 view .LVU159
 559 00f4 134B     		ldr	r3, .L26+52
 560 00f6 0022     		movs	r2, #0
 561 00f8 1A70     		strb	r2, [r3]
 491:Src/main.c    **** 			} else if (count_imu == 11) {
 562              		.loc 1 491 5 is_stmt 1 view .LVU160
 563 00fa 0A23     		movs	r3, #10
 564 00fc 1222     		movs	r2, #18
 565 00fe 1249     		ldr	r1, .L26+56
 566 0100 1248     		ldr	r0, .L26+60
 567 0102 FFF7FEFF 		bl	HAL_UART_Transmit
 568              	.LVL24:
 569 0106 B5E7     		b	.L17
 570              	.L25:
 493:Src/main.c    **** 			}
 571              		.loc 1 493 5 view .LVU161
 493:Src/main.c    **** 			}
 572              		.loc 1 493 15 is_stmt 0 view .LVU162
 573 0108 074B     		ldr	r3, .L26+24
 574 010a 0A22     		movs	r2, #10
 575 010c 1A80     		strh	r2, [r3]	@ movhi
 576 010e B1E7     		b	.L17
 577              	.L27:
 578              		.align	2
 579              	.L26:
 580 0110 00000000 		.word	htim2
 581 0114 00000000 		.word	count_ms
 582 0118 00000000 		.word	count_ms_abs
 583 011c 00000000 		.word	accel_implausibility_check_count_flag
 584 0120 00000000 		.word	count_dec
 585 0124 00000000 		.word	count_inverter
 586 0128 00000000 		.word	count_imu
 587 012c 00000000 		.word	count_atc
 588 0130 00000000 		.word	count_sec
 589 0134 00000000 		.word	count_min
 590 0138 00000000 		.word	count_hour
 591 013c 00000000 		.word	accel_implausibility_check_count
 592 0140 00000000 		.word	atc_connected
 593 0144 00000000 		.word	imu_connected
 594 0148 00000000 		.word	.LC0
 595 014c 00000000 		.word	huart3
 596              		.cfi_endproc
 597              	.LFE152:
 599              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 600              		.align	1
 601              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 602              		.syntax unified
 603              		.thumb
ARM GAS  /tmp/cchXJTuc.s 			page 22


 604              		.thumb_func
 605              		.fpu fpv5-d16
 607              	HAL_CAN_RxFifo0MsgPendingCallback:
 608              	.LVL25:
 609              	.LFB153:
 510:Src/main.c    **** 
 511:Src/main.c    **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 610              		.loc 1 511 65 is_stmt 1 view -0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 32
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614              		.loc 1 511 65 is_stmt 0 view .LVU164
 615 0000 10B5     		push	{r4, lr}
 616              	.LCFI5:
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 4, -8
 619              		.cfi_offset 14, -4
 620 0002 88B0     		sub	sp, sp, #32
 621              	.LCFI6:
 622              		.cfi_def_cfa_offset 40
 623 0004 0446     		mov	r4, r0
 512:Src/main.c    **** 	/*sprintf(txt, "%d\r\n", HAL_CAN_GetRxFifoFillLevel(&hcan1, CAN_RX_FIFO0));
 513:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 10);*/
 514:Src/main.c    **** 
 515:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_blue_GPIO_Port, LED_blue_Pin);
 624              		.loc 1 515 2 is_stmt 1 view .LVU165
 625 0006 8021     		movs	r1, #128
 626 0008 0E48     		ldr	r0, .L32
 627              	.LVL26:
 628              		.loc 1 515 2 is_stmt 0 view .LVU166
 629 000a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 630              	.LVL27:
 516:Src/main.c    **** 	if (hcan == &hcan1) {
 631              		.loc 1 516 2 is_stmt 1 view .LVU167
 632              		.loc 1 516 5 is_stmt 0 view .LVU168
 633 000e 0E4B     		ldr	r3, .L32+4
 634 0010 9C42     		cmp	r4, r3
 635 0012 01D0     		beq	.L31
 636              	.LVL28:
 637              	.L28:
 517:Src/main.c    **** 		// HAL_UART_Transmit(&huart3, (uint8_t*)"rx on FIFO0\r\n", strlen("rx on
 518:Src/main.c    **** 		// FIFO0\r\n"), 10);
 519:Src/main.c    **** 		if (HAL_CAN_GetRxFifoFillLevel(&hcan1, CAN_RX_FIFO0) != 0) {
 520:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 521:Src/main.c    **** 			HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &header,
 522:Src/main.c    **** 								 can1.dataRX_int);
 523:Src/main.c    **** 			can1.rx_id_int = header.StdId;
 524:Src/main.c    **** 			can1.rx_size_int = header.DLC;
 525:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 526:Src/main.c    **** 			/*sprintf(txt, "DATA: %d %d %d %d %d %d %d %d\r\n", can1.dataRx[0],
 527:Src/main.c    **** 					can1.dataRx[1], can1.dataRx[2], can1.dataRx[3],
 528:Src/main.c    **** 					can1.dataRx[4], can1.dataRx[5], can1.dataRx[6],
 529:Src/main.c    **** 					can1.dataRx[7]);*/
 530:Src/main.c    **** 			// HAL_UART_Transmit(&huart3, (uint8_t *)txt, strlen(txt), 100);
 531:Src/main.c    **** 			// HAL_UART_Transmit(&huart3, (uint8_t*)"ciao2\r\n",
 532:Src/main.c    **** 			// strlen("ciao2\r\n"), 10);
 533:Src/main.c    **** 		}
ARM GAS  /tmp/cchXJTuc.s 			page 23


 534:Src/main.c    **** 	}
 535:Src/main.c    **** }
 638              		.loc 1 535 1 view .LVU169
 639 0014 08B0     		add	sp, sp, #32
 640              	.LCFI7:
 641              		.cfi_remember_state
 642              		.cfi_def_cfa_offset 8
 643              		@ sp needed
 644 0016 10BD     		pop	{r4, pc}
 645              	.LVL29:
 646              	.L31:
 647              	.LCFI8:
 648              		.cfi_restore_state
 519:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 649              		.loc 1 519 3 is_stmt 1 view .LVU170
 519:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 650              		.loc 1 519 7 is_stmt 0 view .LVU171
 651 0018 0021     		movs	r1, #0
 652 001a 1846     		mov	r0, r3
 653 001c FFF7FEFF 		bl	HAL_CAN_GetRxFifoFillLevel
 654              	.LVL30:
 519:Src/main.c    **** 			CAN_RxHeaderTypeDef header;
 655              		.loc 1 519 6 view .LVU172
 656 0020 0028     		cmp	r0, #0
 657 0022 F7D0     		beq	.L28
 658              	.LBB6:
 520:Src/main.c    **** 			HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &header,
 659              		.loc 1 520 4 is_stmt 1 view .LVU173
 521:Src/main.c    **** 								 can1.dataRX_int);
 660              		.loc 1 521 4 view .LVU174
 661 0024 094C     		ldr	r4, .L32+8
 662              	.LVL31:
 521:Src/main.c    **** 								 can1.dataRX_int);
 663              		.loc 1 521 4 is_stmt 0 view .LVU175
 664 0026 2346     		mov	r3, r4
 665 0028 01AA     		add	r2, sp, #4
 666 002a 0021     		movs	r1, #0
 667 002c 0648     		ldr	r0, .L32+4
 668 002e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 669              	.LVL32:
 523:Src/main.c    **** 			can1.rx_size_int = header.DLC;
 670              		.loc 1 523 4 is_stmt 1 view .LVU176
 523:Src/main.c    **** 			can1.rx_size_int = header.DLC;
 671              		.loc 1 523 19 is_stmt 0 view .LVU177
 672 0032 A4F11C00 		sub	r0, r4, #28
 673 0036 019B     		ldr	r3, [sp, #4]
 674 0038 4363     		str	r3, [r0, #52]
 524:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 675              		.loc 1 524 4 is_stmt 1 view .LVU178
 524:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 676              		.loc 1 524 29 is_stmt 0 view .LVU179
 677 003a 059B     		ldr	r3, [sp, #20]
 524:Src/main.c    **** 			fifoRxDataCAN_push(&can1);
 678              		.loc 1 524 21 view .LVU180
 679 003c 8360     		str	r3, [r0, #8]
 525:Src/main.c    **** 			/*sprintf(txt, "DATA: %d %d %d %d %d %d %d %d\r\n", can1.dataRx[0],
 680              		.loc 1 525 4 is_stmt 1 view .LVU181
ARM GAS  /tmp/cchXJTuc.s 			page 24


 681 003e FFF7FEFF 		bl	fifoRxDataCAN_push
 682              	.LVL33:
 683              	.LBE6:
 684              		.loc 1 535 1 is_stmt 0 view .LVU182
 685 0042 E7E7     		b	.L28
 686              	.L33:
 687              		.align	2
 688              	.L32:
 689 0044 00040240 		.word	1073873920
 690 0048 00000000 		.word	hcan1
 691 004c 1C000000 		.word	can1+28
 692              		.cfi_endproc
 693              	.LFE153:
 695              		.section	.rodata.HAL_CAN_RxFifo1MsgPendingCallback.str1.4,"aMS",%progbits,1
 696              		.align	2
 697              	.LC1:
 698 0000 7278206F 		.ascii	"rx on FIFO1\015\012\000"
 698      6E204649 
 698      464F310D 
 698      0A00
 699              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 700              		.align	1
 701              		.global	HAL_CAN_RxFifo1MsgPendingCallback
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 705              		.fpu fpv5-d16
 707              	HAL_CAN_RxFifo1MsgPendingCallback:
 708              	.LVL34:
 709              	.LFB154:
 536:Src/main.c    **** void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 710              		.loc 1 536 65 is_stmt 1 view -0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              		.loc 1 536 65 is_stmt 0 view .LVU184
 715 0000 08B5     		push	{r3, lr}
 716              	.LCFI9:
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 3, -8
 719              		.cfi_offset 14, -4
 537:Src/main.c    **** 	if (hcan == &hcan1) {
 720              		.loc 1 537 2 is_stmt 1 view .LVU185
 721              		.loc 1 537 5 is_stmt 0 view .LVU186
 722 0002 054B     		ldr	r3, .L38
 723 0004 8342     		cmp	r3, r0
 724 0006 00D0     		beq	.L37
 725              	.LVL35:
 726              	.L34:
 538:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"rx on FIFO1\r\n",
 539:Src/main.c    **** 						  strlen("rx on FIFO1\r\n"), 10);
 540:Src/main.c    **** 	}
 541:Src/main.c    **** }
 727              		.loc 1 541 1 view .LVU187
 728 0008 08BD     		pop	{r3, pc}
 729              	.LVL36:
 730              	.L37:
ARM GAS  /tmp/cchXJTuc.s 			page 25


 538:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"rx on FIFO1\r\n",
 731              		.loc 1 538 3 is_stmt 1 view .LVU188
 732 000a 0A23     		movs	r3, #10
 733 000c 0D22     		movs	r2, #13
 734 000e 0349     		ldr	r1, .L38+4
 735 0010 0348     		ldr	r0, .L38+8
 736              	.LVL37:
 538:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"rx on FIFO1\r\n",
 737              		.loc 1 538 3 is_stmt 0 view .LVU189
 738 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 739              	.LVL38:
 740              		.loc 1 541 1 view .LVU190
 741 0016 F7E7     		b	.L34
 742              	.L39:
 743              		.align	2
 744              	.L38:
 745 0018 00000000 		.word	hcan1
 746 001c 00000000 		.word	.LC1
 747 0020 00000000 		.word	huart3
 748              		.cfi_endproc
 749              	.LFE154:
 751              		.section	.rodata.HAL_CAN_RxFifo0FullCallback.str1.4,"aMS",%progbits,1
 752              		.align	2
 753              	.LC2:
 754 0000 4649464F 		.ascii	"FIFO0 FULL\015\012\000"
 754      30204655 
 754      4C4C0D0A 
 754      00
 755              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 756              		.align	1
 757              		.global	HAL_CAN_RxFifo0FullCallback
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 761              		.fpu fpv5-d16
 763              	HAL_CAN_RxFifo0FullCallback:
 764              	.LVL39:
 765              	.LFB155:
 542:Src/main.c    **** 
 543:Src/main.c    **** void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan) {
 766              		.loc 1 543 59 is_stmt 1 view -0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		.loc 1 543 59 is_stmt 0 view .LVU192
 771 0000 08B5     		push	{r3, lr}
 772              	.LCFI10:
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 3, -8
 775              		.cfi_offset 14, -4
 544:Src/main.c    **** 	if (hcan == &hcan1) {
 776              		.loc 1 544 2 is_stmt 1 view .LVU193
 777              		.loc 1 544 5 is_stmt 0 view .LVU194
 778 0002 054B     		ldr	r3, .L44
 779 0004 8342     		cmp	r3, r0
 780 0006 00D0     		beq	.L43
 781              	.LVL40:
ARM GAS  /tmp/cchXJTuc.s 			page 26


 782              	.L40:
 545:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO0 FULL\r\n",
 546:Src/main.c    **** 						  strlen("FIFO0 FULL\r\n"), 10);
 547:Src/main.c    **** 	}
 548:Src/main.c    **** }
 783              		.loc 1 548 1 view .LVU195
 784 0008 08BD     		pop	{r3, pc}
 785              	.LVL41:
 786              	.L43:
 545:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO0 FULL\r\n",
 787              		.loc 1 545 3 is_stmt 1 view .LVU196
 788 000a 0A23     		movs	r3, #10
 789 000c 0C22     		movs	r2, #12
 790 000e 0349     		ldr	r1, .L44+4
 791 0010 0348     		ldr	r0, .L44+8
 792              	.LVL42:
 545:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO0 FULL\r\n",
 793              		.loc 1 545 3 is_stmt 0 view .LVU197
 794 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 795              	.LVL43:
 796              		.loc 1 548 1 view .LVU198
 797 0016 F7E7     		b	.L40
 798              	.L45:
 799              		.align	2
 800              	.L44:
 801 0018 00000000 		.word	hcan1
 802 001c 00000000 		.word	.LC2
 803 0020 00000000 		.word	huart3
 804              		.cfi_endproc
 805              	.LFE155:
 807              		.section	.rodata.HAL_CAN_RxFifo1FullCallback.str1.4,"aMS",%progbits,1
 808              		.align	2
 809              	.LC3:
 810 0000 4649464F 		.ascii	"FIFO1 FULL\015\012\000"
 810      31204655 
 810      4C4C0D0A 
 810      00
 811              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 812              		.align	1
 813              		.global	HAL_CAN_RxFifo1FullCallback
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 817              		.fpu fpv5-d16
 819              	HAL_CAN_RxFifo1FullCallback:
 820              	.LVL44:
 821              	.LFB156:
 549:Src/main.c    **** void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan) {
 822              		.loc 1 549 59 is_stmt 1 view -0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 0
 825              		@ frame_needed = 0, uses_anonymous_args = 0
 826              		.loc 1 549 59 is_stmt 0 view .LVU200
 827 0000 08B5     		push	{r3, lr}
 828              	.LCFI11:
 829              		.cfi_def_cfa_offset 8
 830              		.cfi_offset 3, -8
ARM GAS  /tmp/cchXJTuc.s 			page 27


 831              		.cfi_offset 14, -4
 550:Src/main.c    **** 	if (hcan == &hcan1) {
 832              		.loc 1 550 2 is_stmt 1 view .LVU201
 833              		.loc 1 550 5 is_stmt 0 view .LVU202
 834 0002 054B     		ldr	r3, .L50
 835 0004 8342     		cmp	r3, r0
 836 0006 00D0     		beq	.L49
 837              	.LVL45:
 838              	.L46:
 551:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO1 FULL\r\n",
 552:Src/main.c    **** 						  strlen("FIFO1 FULL\r\n"), 10);
 553:Src/main.c    **** 	}
 554:Src/main.c    **** }
 839              		.loc 1 554 1 view .LVU203
 840 0008 08BD     		pop	{r3, pc}
 841              	.LVL46:
 842              	.L49:
 551:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO1 FULL\r\n",
 843              		.loc 1 551 3 is_stmt 1 view .LVU204
 844 000a 0A23     		movs	r3, #10
 845 000c 0C22     		movs	r2, #12
 846 000e 0349     		ldr	r1, .L50+4
 847 0010 0348     		ldr	r0, .L50+8
 848              	.LVL47:
 551:Src/main.c    **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"FIFO1 FULL\r\n",
 849              		.loc 1 551 3 is_stmt 0 view .LVU205
 850 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 851              	.LVL48:
 852              		.loc 1 554 1 view .LVU206
 853 0016 F7E7     		b	.L46
 854              	.L51:
 855              		.align	2
 856              	.L50:
 857 0018 00000000 		.word	hcan1
 858 001c 00000000 		.word	.LC3
 859 0020 00000000 		.word	huart3
 860              		.cfi_endproc
 861              	.LFE156:
 863              		.section	.rodata.HAL_CAN_TxMailbox0CompleteCallback.str1.4,"aMS",%progbits,1
 864              		.align	2
 865              	.LC4:
 866 0000 6D62303A 		.ascii	"mb0: %d\015\012\000"
 866      2025640D 
 866      0A00
 867 000a 0000     		.align	2
 868              	.LC5:
 869 000c 68696768 		.ascii	"high\015\012\000"
 869      0D0A00
 870              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 871              		.align	1
 872              		.global	HAL_CAN_TxMailbox0CompleteCallback
 873              		.syntax unified
 874              		.thumb
 875              		.thumb_func
 876              		.fpu fpv5-d16
 878              	HAL_CAN_TxMailbox0CompleteCallback:
 879              	.LVL49:
ARM GAS  /tmp/cchXJTuc.s 			page 28


 880              	.LFB157:
 555:Src/main.c    **** 
 556:Src/main.c    **** void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan) {
 881              		.loc 1 556 66 is_stmt 1 view -0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              		.loc 1 556 66 is_stmt 0 view .LVU208
 886 0000 38B5     		push	{r3, r4, r5, lr}
 887              	.LCFI12:
 888              		.cfi_def_cfa_offset 16
 889              		.cfi_offset 3, -16
 890              		.cfi_offset 4, -12
 891              		.cfi_offset 5, -8
 892              		.cfi_offset 14, -4
 893 0002 0446     		mov	r4, r0
 557:Src/main.c    **** 	sprintf(txt, "mb0: %d\r\n", (int)can1.idBck);
 894              		.loc 1 557 2 is_stmt 1 view .LVU209
 895 0004 184D     		ldr	r5, .L57
 896 0006 194B     		ldr	r3, .L57+4
 897 0008 9A6B     		ldr	r2, [r3, #56]
 898 000a 1949     		ldr	r1, .L57+8
 899 000c 2846     		mov	r0, r5
 900              	.LVL50:
 901              		.loc 1 557 2 is_stmt 0 view .LVU210
 902 000e FFF7FEFF 		bl	sprintf
 903              	.LVL51:
 558:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t *)(txt), strlen(txt), 10);
 904              		.loc 1 558 2 is_stmt 1 view .LVU211
 905              		.loc 1 558 47 is_stmt 0 view .LVU212
 906 0012 2846     		mov	r0, r5
 907 0014 FFF7FEFF 		bl	strlen
 908              	.LVL52:
 909              		.loc 1 558 2 view .LVU213
 910 0018 0A23     		movs	r3, #10
 911 001a 82B2     		uxth	r2, r0
 912 001c 2946     		mov	r1, r5
 913 001e 1548     		ldr	r0, .L57+12
 914 0020 FFF7FEFF 		bl	HAL_UART_Transmit
 915              	.LVL53:
 559:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 916              		.loc 1 559 2 is_stmt 1 view .LVU214
 917 0024 0121     		movs	r1, #1
 918 0026 1448     		ldr	r0, .L57+16
 919 0028 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 920              	.LVL54:
 560:Src/main.c    **** 	if (hcan == &hcan1) {
 921              		.loc 1 560 2 view .LVU215
 922              		.loc 1 560 5 is_stmt 0 view .LVU216
 923 002c 134B     		ldr	r3, .L57+20
 924 002e 9C42     		cmp	r4, r3
 925 0030 00D0     		beq	.L56
 926              	.L52:
 561:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 562:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 563:Src/main.c    **** 				// TODO: implementare errore
 564:Src/main.c    **** 			} else {
ARM GAS  /tmp/cchXJTuc.s 			page 29


 565:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)("high\r\n"),
 566:Src/main.c    **** 								  strlen("high\r\n"), 10);
 567:Src/main.c    **** 			}
 568:Src/main.c    **** 		} else if (fifoTxDataCAN_normal_pop(&can1)) {
 569:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 570:Src/main.c    **** 			// strlen("Prendo dalla fifo\r\n"), 10);
 571:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 572:Src/main.c    **** 				// TODO: implementare errore
 573:Src/main.c    **** 			}
 574:Src/main.c    **** 		} else {
 575:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"),
 576:Src/main.c    **** 			// strlen("Fifo vuota\r\n"), 10);
 577:Src/main.c    **** 		}
 578:Src/main.c    **** 	} /*else{
 579:Src/main.c    **** 	 HAL_UART_Transmit(&huart3,(uint8_t*)("Messaggio trasmesso\r\n"),
 580:Src/main.c    **** 	 strlen("Messaggio trasmesso\r\n"), 10);
 581:Src/main.c    **** 		 //HAL_GPIO_TogglePin(USER_LED_4_GPIO_Port, USER_LED_4_Pin);
 582:Src/main.c    **** 		 fifoDataType fifodata;
 583:Src/main.c    **** 		 if(fifoTxDataCAN3_high_pop(&fifoCAN3, &fifodata)){
 584:Src/main.c    **** 			 for(int i = 0; i < 8; i++){
 585:Src/main.c    **** 				 can3.dataTx[i] = fifodata.data[i];
 586:Src/main.c    **** 			 }
 587:Src/main.c    **** 			 if(CAN_Send_IT(&can3, fifodata.id) == 0){
 588:Src/main.c    **** 				 //TODO: implementare errore
 589:Src/main.c    **** 			 }
 590:Src/main.c    **** 		 }else if(fifoTxDataCAN3_normal_pop(&fifoCAN3, &fifodata)){
 591:Src/main.c    **** 			 HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 592:Src/main.c    **** 	 strlen("Prendo dalla fifo\r\n"), 10); for(int i = 0; i < 8; i++){
 593:Src/main.c    **** 				 can3.dataTx[i] = fifodata.data[i];
 594:Src/main.c    **** 			 }
 595:Src/main.c    **** 			 if(CAN_Send_IT(&can3, fifodata.id) == 0){
 596:Src/main.c    **** 				 //TODO: implementare errore
 597:Src/main.c    **** 			 }
 598:Src/main.c    **** 		 }else{
 599:Src/main.c    **** 			 //TODO: riattivare interrupt
 600:Src/main.c    **** 			 HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"),
 601:Src/main.c    **** 	 strlen("Fifo vuota\r\n"), 10);
 602:Src/main.c    **** 		 }*/
 603:Src/main.c    **** 	  //}
 604:Src/main.c    **** }
 927              		.loc 1 604 1 view .LVU217
 928 0032 38BD     		pop	{r3, r4, r5, pc}
 929              	.LVL55:
 930              	.L56:
 561:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 931              		.loc 1 561 3 is_stmt 1 view .LVU218
 561:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 932              		.loc 1 561 7 is_stmt 0 view .LVU219
 933 0034 0D48     		ldr	r0, .L57+4
 934 0036 FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 935              	.LVL56:
 561:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 936              		.loc 1 561 6 view .LVU220
 937 003a 58B1     		cbz	r0, .L54
 562:Src/main.c    **** 				// TODO: implementare errore
 938              		.loc 1 562 4 is_stmt 1 view .LVU221
 562:Src/main.c    **** 				// TODO: implementare errore
ARM GAS  /tmp/cchXJTuc.s 			page 30


 939              		.loc 1 562 8 is_stmt 0 view .LVU222
 940 003c 0B48     		ldr	r0, .L57+4
 941 003e FFF7FEFF 		bl	CAN_Send_IT
 942              	.LVL57:
 562:Src/main.c    **** 				// TODO: implementare errore
 943              		.loc 1 562 7 view .LVU223
 944 0042 0028     		cmp	r0, #0
 945 0044 F5D0     		beq	.L52
 565:Src/main.c    **** 								  strlen("high\r\n"), 10);
 946              		.loc 1 565 5 is_stmt 1 view .LVU224
 947 0046 0A23     		movs	r3, #10
 948 0048 0622     		movs	r2, #6
 949 004a 0D49     		ldr	r1, .L57+24
 950 004c 0948     		ldr	r0, .L57+12
 951 004e FFF7FEFF 		bl	HAL_UART_Transmit
 952              	.LVL58:
 953 0052 EEE7     		b	.L52
 954              	.L54:
 568:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 955              		.loc 1 568 10 view .LVU225
 568:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 956              		.loc 1 568 14 is_stmt 0 view .LVU226
 957 0054 0548     		ldr	r0, .L57+4
 958 0056 FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 959              	.LVL59:
 568:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 960              		.loc 1 568 13 view .LVU227
 961 005a 0028     		cmp	r0, #0
 962 005c E9D0     		beq	.L52
 571:Src/main.c    **** 				// TODO: implementare errore
 963              		.loc 1 571 4 is_stmt 1 view .LVU228
 571:Src/main.c    **** 				// TODO: implementare errore
 964              		.loc 1 571 8 is_stmt 0 view .LVU229
 965 005e 0348     		ldr	r0, .L57+4
 966 0060 FFF7FEFF 		bl	CAN_Send_IT
 967              	.LVL60:
 573:Src/main.c    **** 		} else {
 968              		.loc 1 573 4 is_stmt 1 view .LVU230
 577:Src/main.c    **** 	} /*else{
 969              		.loc 1 577 3 view .LVU231
 970              		.loc 1 604 1 is_stmt 0 view .LVU232
 971 0064 E5E7     		b	.L52
 972              	.L58:
 973 0066 00BF     		.align	2
 974              	.L57:
 975 0068 00000000 		.word	txt
 976 006c 00000000 		.word	can1
 977 0070 00000000 		.word	.LC4
 978 0074 00000000 		.word	huart3
 979 0078 00040240 		.word	1073873920
 980 007c 00000000 		.word	hcan1
 981 0080 0C000000 		.word	.LC5
 982              		.cfi_endproc
 983              	.LFE157:
 985              		.section	.rodata.HAL_CAN_TxMailbox1CompleteCallback.str1.4,"aMS",%progbits,1
 986              		.align	2
 987              	.LC6:
ARM GAS  /tmp/cchXJTuc.s 			page 31


 988 0000 6D62313A 		.ascii	"mb1: %d %d\015\012\000"
 988      20256420 
 988      25640D0A 
 988      00
 989              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 990              		.align	1
 991              		.global	HAL_CAN_TxMailbox1CompleteCallback
 992              		.syntax unified
 993              		.thumb
 994              		.thumb_func
 995              		.fpu fpv5-d16
 997              	HAL_CAN_TxMailbox1CompleteCallback:
 998              	.LVL61:
 999              	.LFB158:
 605:Src/main.c    **** void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan) {
 1000              		.loc 1 605 66 is_stmt 1 view -0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 0, uses_anonymous_args = 0
 1004              		.loc 1 605 66 is_stmt 0 view .LVU234
 1005 0000 38B5     		push	{r3, r4, r5, lr}
 1006              	.LCFI13:
 1007              		.cfi_def_cfa_offset 16
 1008              		.cfi_offset 3, -16
 1009              		.cfi_offset 4, -12
 1010              		.cfi_offset 5, -8
 1011              		.cfi_offset 14, -4
 1012 0002 0446     		mov	r4, r0
 606:Src/main.c    **** 	sprintf(txt, "mb1: %d %d\r\n", can1.fifo.txTailNormal,
 1013              		.loc 1 606 2 is_stmt 1 view .LVU235
 1014              		.loc 1 606 42 is_stmt 0 view .LVU236
 1015 0004 194A     		ldr	r2, .L64
 1016              		.loc 1 606 2 view .LVU237
 1017 0006 1A4D     		ldr	r5, .L64+4
 1018 0008 92F87230 		ldrb	r3, [r2, #114]	@ zero_extendqisi2
 1019 000c 92F87320 		ldrb	r2, [r2, #115]	@ zero_extendqisi2
 1020 0010 1849     		ldr	r1, .L64+8
 1021 0012 2846     		mov	r0, r5
 1022              	.LVL62:
 1023              		.loc 1 606 2 view .LVU238
 1024 0014 FFF7FEFF 		bl	sprintf
 1025              	.LVL63:
 607:Src/main.c    **** 			can1.fifo.txHeadNormal);
 608:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t *)(txt), strlen(txt), 10);
 1026              		.loc 1 608 2 is_stmt 1 view .LVU239
 1027              		.loc 1 608 47 is_stmt 0 view .LVU240
 1028 0018 2846     		mov	r0, r5
 1029 001a FFF7FEFF 		bl	strlen
 1030              	.LVL64:
 1031              		.loc 1 608 2 view .LVU241
 1032 001e 0A23     		movs	r3, #10
 1033 0020 82B2     		uxth	r2, r0
 1034 0022 2946     		mov	r1, r5
 1035 0024 1448     		ldr	r0, .L64+12
 1036 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 1037              	.LVL65:
 609:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
ARM GAS  /tmp/cchXJTuc.s 			page 32


 1038              		.loc 1 609 2 is_stmt 1 view .LVU242
 1039 002a 0121     		movs	r1, #1
 1040 002c 1348     		ldr	r0, .L64+16
 1041 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1042              	.LVL66:
 610:Src/main.c    **** 	if (hcan == &hcan1) {
 1043              		.loc 1 610 2 view .LVU243
 1044              		.loc 1 610 5 is_stmt 0 view .LVU244
 1045 0032 134B     		ldr	r3, .L64+20
 1046 0034 9C42     		cmp	r4, r3
 1047 0036 00D0     		beq	.L63
 1048              	.L59:
 611:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 612:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 613:Src/main.c    **** 				// TODO: implementare errore
 614:Src/main.c    **** 			} else {
 615:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)("high\r\n"),
 616:Src/main.c    **** 								  strlen("high\r\n"), 10);
 617:Src/main.c    **** 			}
 618:Src/main.c    **** 		} else if (fifoTxDataCAN_normal_pop(&can1)) {
 619:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 620:Src/main.c    **** 			// strlen("Prendo dalla fifo\r\n"), 10);
 621:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 622:Src/main.c    **** 				// TODO: implementare errore
 623:Src/main.c    **** 			}
 624:Src/main.c    **** 		} else {
 625:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"),
 626:Src/main.c    **** 			// strlen("Fifo vuota\r\n"), 10);
 627:Src/main.c    **** 		}
 628:Src/main.c    **** 	}
 629:Src/main.c    **** }
 1049              		.loc 1 629 1 view .LVU245
 1050 0038 38BD     		pop	{r3, r4, r5, pc}
 1051              	.LVL67:
 1052              	.L63:
 611:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1053              		.loc 1 611 3 is_stmt 1 view .LVU246
 611:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1054              		.loc 1 611 7 is_stmt 0 view .LVU247
 1055 003a 0C48     		ldr	r0, .L64
 1056 003c FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 1057              	.LVL68:
 611:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1058              		.loc 1 611 6 view .LVU248
 1059 0040 58B1     		cbz	r0, .L61
 612:Src/main.c    **** 				// TODO: implementare errore
 1060              		.loc 1 612 4 is_stmt 1 view .LVU249
 612:Src/main.c    **** 				// TODO: implementare errore
 1061              		.loc 1 612 8 is_stmt 0 view .LVU250
 1062 0042 0A48     		ldr	r0, .L64
 1063 0044 FFF7FEFF 		bl	CAN_Send_IT
 1064              	.LVL69:
 612:Src/main.c    **** 				// TODO: implementare errore
 1065              		.loc 1 612 7 view .LVU251
 1066 0048 0028     		cmp	r0, #0
 1067 004a F5D0     		beq	.L59
 615:Src/main.c    **** 								  strlen("high\r\n"), 10);
ARM GAS  /tmp/cchXJTuc.s 			page 33


 1068              		.loc 1 615 5 is_stmt 1 view .LVU252
 1069 004c 0A23     		movs	r3, #10
 1070 004e 0622     		movs	r2, #6
 1071 0050 0C49     		ldr	r1, .L64+24
 1072 0052 0948     		ldr	r0, .L64+12
 1073 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 1074              	.LVL70:
 1075 0058 EEE7     		b	.L59
 1076              	.L61:
 618:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1077              		.loc 1 618 10 view .LVU253
 618:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1078              		.loc 1 618 14 is_stmt 0 view .LVU254
 1079 005a 0448     		ldr	r0, .L64
 1080 005c FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 1081              	.LVL71:
 618:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1082              		.loc 1 618 13 view .LVU255
 1083 0060 0028     		cmp	r0, #0
 1084 0062 E9D0     		beq	.L59
 621:Src/main.c    **** 				// TODO: implementare errore
 1085              		.loc 1 621 4 is_stmt 1 view .LVU256
 621:Src/main.c    **** 				// TODO: implementare errore
 1086              		.loc 1 621 8 is_stmt 0 view .LVU257
 1087 0064 0148     		ldr	r0, .L64
 1088 0066 FFF7FEFF 		bl	CAN_Send_IT
 1089              	.LVL72:
 623:Src/main.c    **** 		} else {
 1090              		.loc 1 623 4 is_stmt 1 view .LVU258
 627:Src/main.c    **** 	}
 1091              		.loc 1 627 3 view .LVU259
 1092              		.loc 1 629 1 is_stmt 0 view .LVU260
 1093 006a E5E7     		b	.L59
 1094              	.L65:
 1095              		.align	2
 1096              	.L64:
 1097 006c 00000000 		.word	can1
 1098 0070 00000000 		.word	txt
 1099 0074 00000000 		.word	.LC6
 1100 0078 00000000 		.word	huart3
 1101 007c 00040240 		.word	1073873920
 1102 0080 00000000 		.word	hcan1
 1103 0084 0C000000 		.word	.LC5
 1104              		.cfi_endproc
 1105              	.LFE158:
 1107              		.section	.rodata.HAL_CAN_TxMailbox2CompleteCallback.str1.4,"aMS",%progbits,1
 1108              		.align	2
 1109              	.LC7:
 1110 0000 6D62323A 		.ascii	"mb2: %d %d\015\012\000"
 1110      20256420 
 1110      25640D0A 
 1110      00
 1111              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 1112              		.align	1
 1113              		.global	HAL_CAN_TxMailbox2CompleteCallback
 1114              		.syntax unified
 1115              		.thumb
ARM GAS  /tmp/cchXJTuc.s 			page 34


 1116              		.thumb_func
 1117              		.fpu fpv5-d16
 1119              	HAL_CAN_TxMailbox2CompleteCallback:
 1120              	.LVL73:
 1121              	.LFB159:
 630:Src/main.c    **** void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan) {
 1122              		.loc 1 630 66 is_stmt 1 view -0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
 1126              		.loc 1 630 66 is_stmt 0 view .LVU262
 1127 0000 38B5     		push	{r3, r4, r5, lr}
 1128              	.LCFI14:
 1129              		.cfi_def_cfa_offset 16
 1130              		.cfi_offset 3, -16
 1131              		.cfi_offset 4, -12
 1132              		.cfi_offset 5, -8
 1133              		.cfi_offset 14, -4
 1134 0002 0446     		mov	r4, r0
 631:Src/main.c    **** 	sprintf(txt, "mb2: %d %d\r\n", can1.fifo.txTailNormal,
 1135              		.loc 1 631 2 is_stmt 1 view .LVU263
 1136              		.loc 1 631 42 is_stmt 0 view .LVU264
 1137 0004 194A     		ldr	r2, .L71
 1138              		.loc 1 631 2 view .LVU265
 1139 0006 1A4D     		ldr	r5, .L71+4
 1140 0008 92F87230 		ldrb	r3, [r2, #114]	@ zero_extendqisi2
 1141 000c 92F87320 		ldrb	r2, [r2, #115]	@ zero_extendqisi2
 1142 0010 1849     		ldr	r1, .L71+8
 1143 0012 2846     		mov	r0, r5
 1144              	.LVL74:
 1145              		.loc 1 631 2 view .LVU266
 1146 0014 FFF7FEFF 		bl	sprintf
 1147              	.LVL75:
 632:Src/main.c    **** 			can1.fifo.txHeadNormal);
 633:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t *)(txt), strlen(txt), 10);
 1148              		.loc 1 633 2 is_stmt 1 view .LVU267
 1149              		.loc 1 633 47 is_stmt 0 view .LVU268
 1150 0018 2846     		mov	r0, r5
 1151 001a FFF7FEFF 		bl	strlen
 1152              	.LVL76:
 1153              		.loc 1 633 2 view .LVU269
 1154 001e 0A23     		movs	r3, #10
 1155 0020 82B2     		uxth	r2, r0
 1156 0022 2946     		mov	r1, r5
 1157 0024 1448     		ldr	r0, .L71+12
 1158 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 1159              	.LVL77:
 634:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 1160              		.loc 1 634 2 is_stmt 1 view .LVU270
 1161 002a 0121     		movs	r1, #1
 1162 002c 1348     		ldr	r0, .L71+16
 1163 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1164              	.LVL78:
 635:Src/main.c    **** 	if (hcan == &hcan1) {
 1165              		.loc 1 635 2 view .LVU271
 1166              		.loc 1 635 5 is_stmt 0 view .LVU272
 1167 0032 134B     		ldr	r3, .L71+20
ARM GAS  /tmp/cchXJTuc.s 			page 35


 1168 0034 9C42     		cmp	r4, r3
 1169 0036 00D0     		beq	.L70
 1170              	.L66:
 636:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 637:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 638:Src/main.c    **** 				// TODO: implementare errore
 639:Src/main.c    **** 			} else {
 640:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)("high\r\n"),
 641:Src/main.c    **** 								  strlen("high\r\n"), 10);
 642:Src/main.c    **** 			}
 643:Src/main.c    **** 		} else if (fifoTxDataCAN_normal_pop(&can1)) {
 644:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 645:Src/main.c    **** 			// strlen("Prendo dalla fifo\r\n"), 10);
 646:Src/main.c    **** 			if (CAN_Send_IT(&can1) == 0) {
 647:Src/main.c    **** 				// TODO: implementare errore
 648:Src/main.c    **** 			}
 649:Src/main.c    **** 		} else {
 650:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Fifo vuota\r\n"),
 651:Src/main.c    **** 			// strlen("Fifo vuota\r\n"), 10);
 652:Src/main.c    **** 		}
 653:Src/main.c    **** 	}
 654:Src/main.c    **** }
 1171              		.loc 1 654 1 view .LVU273
 1172 0038 38BD     		pop	{r3, r4, r5, pc}
 1173              	.LVL79:
 1174              	.L70:
 636:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1175              		.loc 1 636 3 is_stmt 1 view .LVU274
 636:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1176              		.loc 1 636 7 is_stmt 0 view .LVU275
 1177 003a 0C48     		ldr	r0, .L71
 1178 003c FFF7FEFF 		bl	fifoTxDataCAN_high_pop
 1179              	.LVL80:
 636:Src/main.c    **** 		if (fifoTxDataCAN_high_pop(&can1)) {
 1180              		.loc 1 636 6 view .LVU276
 1181 0040 58B1     		cbz	r0, .L68
 637:Src/main.c    **** 				// TODO: implementare errore
 1182              		.loc 1 637 4 is_stmt 1 view .LVU277
 637:Src/main.c    **** 				// TODO: implementare errore
 1183              		.loc 1 637 8 is_stmt 0 view .LVU278
 1184 0042 0A48     		ldr	r0, .L71
 1185 0044 FFF7FEFF 		bl	CAN_Send_IT
 1186              	.LVL81:
 637:Src/main.c    **** 				// TODO: implementare errore
 1187              		.loc 1 637 7 view .LVU279
 1188 0048 0028     		cmp	r0, #0
 1189 004a F5D0     		beq	.L66
 640:Src/main.c    **** 								  strlen("high\r\n"), 10);
 1190              		.loc 1 640 5 is_stmt 1 view .LVU280
 1191 004c 0A23     		movs	r3, #10
 1192 004e 0622     		movs	r2, #6
 1193 0050 0C49     		ldr	r1, .L71+24
 1194 0052 0948     		ldr	r0, .L71+12
 1195 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 1196              	.LVL82:
 1197 0058 EEE7     		b	.L66
 1198              	.L68:
ARM GAS  /tmp/cchXJTuc.s 			page 36


 643:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1199              		.loc 1 643 10 view .LVU281
 643:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1200              		.loc 1 643 14 is_stmt 0 view .LVU282
 1201 005a 0448     		ldr	r0, .L71
 1202 005c FFF7FEFF 		bl	fifoTxDataCAN_normal_pop
 1203              	.LVL83:
 643:Src/main.c    **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Prendo dalla fifo\r\n"),
 1204              		.loc 1 643 13 view .LVU283
 1205 0060 0028     		cmp	r0, #0
 1206 0062 E9D0     		beq	.L66
 646:Src/main.c    **** 				// TODO: implementare errore
 1207              		.loc 1 646 4 is_stmt 1 view .LVU284
 646:Src/main.c    **** 				// TODO: implementare errore
 1208              		.loc 1 646 8 is_stmt 0 view .LVU285
 1209 0064 0148     		ldr	r0, .L71
 1210 0066 FFF7FEFF 		bl	CAN_Send_IT
 1211              	.LVL84:
 648:Src/main.c    **** 		} else {
 1212              		.loc 1 648 4 is_stmt 1 view .LVU286
 652:Src/main.c    **** 	}
 1213              		.loc 1 652 3 view .LVU287
 1214              		.loc 1 654 1 is_stmt 0 view .LVU288
 1215 006a E5E7     		b	.L66
 1216              	.L72:
 1217              		.align	2
 1218              	.L71:
 1219 006c 00000000 		.word	can1
 1220 0070 00000000 		.word	txt
 1221 0074 00000000 		.word	.LC7
 1222 0078 00000000 		.word	huart3
 1223 007c 00040240 		.word	1073873920
 1224 0080 00000000 		.word	hcan1
 1225 0084 0C000000 		.word	.LC5
 1226              		.cfi_endproc
 1227              	.LFE159:
 1229              		.section	.rodata.HAL_CAN_ErrorCallback.str1.4,"aMS",%progbits,1
 1230              		.align	2
 1231              	.LC8:
 1232 0000 2D2D2D20 		.ascii	"--- Errore ---: %d\015\012\000"
 1232      4572726F 
 1232      7265202D 
 1232      2D2D3A20 
 1232      25640D0A 
 1233              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 1234              		.align	1
 1235              		.global	HAL_CAN_ErrorCallback
 1236              		.syntax unified
 1237              		.thumb
 1238              		.thumb_func
 1239              		.fpu fpv5-d16
 1241              	HAL_CAN_ErrorCallback:
 1242              	.LVL85:
 1243              	.LFB160:
 655:Src/main.c    **** void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan) {
 1244              		.loc 1 655 53 is_stmt 1 view -0
 1245              		.cfi_startproc
ARM GAS  /tmp/cchXJTuc.s 			page 37


 1246              		@ args = 0, pretend = 0, frame = 0
 1247              		@ frame_needed = 0, uses_anonymous_args = 0
 1248              		.loc 1 655 53 is_stmt 0 view .LVU290
 1249 0000 38B5     		push	{r3, r4, r5, lr}
 1250              	.LCFI15:
 1251              		.cfi_def_cfa_offset 16
 1252              		.cfi_offset 3, -16
 1253              		.cfi_offset 4, -12
 1254              		.cfi_offset 5, -8
 1255              		.cfi_offset 14, -4
 1256 0002 0446     		mov	r4, r0
 656:Src/main.c    **** 	sprintf(txt, "--- Errore ---: %d\r\n", (int)hcan->ErrorCode);
 1257              		.loc 1 656 2 is_stmt 1 view .LVU291
 1258              		.loc 1 656 50 is_stmt 0 view .LVU292
 1259 0004 426A     		ldr	r2, [r0, #36]
 1260              		.loc 1 656 2 view .LVU293
 1261 0006 0B4D     		ldr	r5, .L77
 1262 0008 0B49     		ldr	r1, .L77+4
 1263 000a 2846     		mov	r0, r5
 1264              	.LVL86:
 1265              		.loc 1 656 2 view .LVU294
 1266 000c FFF7FEFF 		bl	sprintf
 1267              	.LVL87:
 657:Src/main.c    **** 	HAL_UART_Transmit(&huart3, (uint8_t *)(txt), strlen(txt), 10);
 1268              		.loc 1 657 2 is_stmt 1 view .LVU295
 1269              		.loc 1 657 47 is_stmt 0 view .LVU296
 1270 0010 2846     		mov	r0, r5
 1271 0012 FFF7FEFF 		bl	strlen
 1272              	.LVL88:
 1273              		.loc 1 657 2 view .LVU297
 1274 0016 0A23     		movs	r3, #10
 1275 0018 82B2     		uxth	r2, r0
 1276 001a 2946     		mov	r1, r5
 1277 001c 0748     		ldr	r0, .L77+8
 1278 001e FFF7FEFF 		bl	HAL_UART_Transmit
 1279              	.LVL89:
 658:Src/main.c    **** 	if (hcan == &hcan1) {
 1280              		.loc 1 658 2 is_stmt 1 view .LVU298
 1281              		.loc 1 658 5 is_stmt 0 view .LVU299
 1282 0022 074B     		ldr	r3, .L77+12
 1283 0024 9C42     		cmp	r4, r3
 1284 0026 00D0     		beq	.L76
 1285              	.L73:
 659:Src/main.c    **** 		CAN_Send_Bck(&can1);
 660:Src/main.c    **** 	}
 661:Src/main.c    **** }
 1286              		.loc 1 661 1 view .LVU300
 1287 0028 38BD     		pop	{r3, r4, r5, pc}
 1288              	.LVL90:
 1289              	.L76:
 659:Src/main.c    **** 		CAN_Send_Bck(&can1);
 1290              		.loc 1 659 3 is_stmt 1 view .LVU301
 1291 002a 0648     		ldr	r0, .L77+16
 1292 002c FFF7FEFF 		bl	CAN_Send_Bck
 1293              	.LVL91:
 1294              		.loc 1 661 1 is_stmt 0 view .LVU302
 1295 0030 FAE7     		b	.L73
ARM GAS  /tmp/cchXJTuc.s 			page 38


 1296              	.L78:
 1297 0032 00BF     		.align	2
 1298              	.L77:
 1299 0034 00000000 		.word	txt
 1300 0038 00000000 		.word	.LC8
 1301 003c 00000000 		.word	huart3
 1302 0040 00000000 		.word	hcan1
 1303 0044 00000000 		.word	can1
 1304              		.cfi_endproc
 1305              	.LFE160:
 1307              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1308              		.align	1
 1309              		.global	HAL_UART_RxCpltCallback
 1310              		.syntax unified
 1311              		.thumb
 1312              		.thumb_func
 1313              		.fpu fpv5-d16
 1315              	HAL_UART_RxCpltCallback:
 1316              	.LVL92:
 1317              	.LFB161:
 662:Src/main.c    **** 
 663:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 1318              		.loc 1 663 57 is_stmt 1 view -0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 0
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 1322              		.loc 1 663 57 is_stmt 0 view .LVU304
 1323 0000 08B5     		push	{r3, lr}
 1324              	.LCFI16:
 1325              		.cfi_def_cfa_offset 8
 1326              		.cfi_offset 3, -8
 1327              		.cfi_offset 14, -4
 664:Src/main.c    **** 	if (huart == &huart3) {
 1328              		.loc 1 664 2 is_stmt 1 view .LVU305
 1329              		.loc 1 664 5 is_stmt 0 view .LVU306
 1330 0002 174B     		ldr	r3, .L86
 1331 0004 8342     		cmp	r3, r0
 1332 0006 00D0     		beq	.L85
 1333              	.LVL93:
 1334              	.L79:
 665:Src/main.c    **** 		if ((debug_rx[debug_rx_count] == '\r') |
 666:Src/main.c    **** 			(debug_rx[debug_rx_count] == '\n')) {
 667:Src/main.c    **** 			debug_msg_arrived = 1;		   // set flag
 668:Src/main.c    **** 			debug_rx[debug_rx_count] = 0;  // set end of the string
 669:Src/main.c    **** 			debug_rx_count = 0;			   // reset counter
 670:Src/main.c    **** 		} else {
 671:Src/main.c    **** 			if (debug_rx_count == MAX_DEBUG_RX_L) {
 672:Src/main.c    **** 				// overflow
 673:Src/main.c    **** 				debug_rx_count = 0;  // reset counter for overflow
 674:Src/main.c    **** 			} else {
 675:Src/main.c    **** 				HAL_UART_Transmit(&huart3, (uint8_t *)&debug_rx[debug_rx_count],1, 10);  // retransmit char
 676:Src/main.c    **** 				debug_rx_count++;
 677:Src/main.c    **** 			}
 678:Src/main.c    **** 		}
 679:Src/main.c    **** 		HAL_UART_Receive_IT(&huart3, (uint8_t *)&debug_rx[debug_rx_count], 1);  // activate rx interrupt 
 680:Src/main.c    **** 	}
 681:Src/main.c    **** }
ARM GAS  /tmp/cchXJTuc.s 			page 39


 1335              		.loc 1 681 1 view .LVU307
 1336 0008 08BD     		pop	{r3, pc}
 1337              	.LVL94:
 1338              	.L85:
 665:Src/main.c    **** 		if ((debug_rx[debug_rx_count] == '\r') |
 1339              		.loc 1 665 3 is_stmt 1 view .LVU308
 665:Src/main.c    **** 		if ((debug_rx[debug_rx_count] == '\r') |
 1340              		.loc 1 665 16 is_stmt 0 view .LVU309
 1341 000a 164B     		ldr	r3, .L86+4
 1342 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1343 000e 164B     		ldr	r3, .L86+8
 1344 0010 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 665:Src/main.c    **** 		if ((debug_rx[debug_rx_count] == '\r') |
 1345              		.loc 1 665 6 view .LVU310
 1346 0012 0A2B     		cmp	r3, #10
 1347 0014 18BF     		it	ne
 1348 0016 0D2B     		cmpne	r3, #13
 1349 0018 10D1     		bne	.L81
 667:Src/main.c    **** 			debug_rx[debug_rx_count] = 0;  // set end of the string
 1350              		.loc 1 667 4 is_stmt 1 view .LVU311
 667:Src/main.c    **** 			debug_rx[debug_rx_count] = 0;  // set end of the string
 1351              		.loc 1 667 22 is_stmt 0 view .LVU312
 1352 001a 144B     		ldr	r3, .L86+12
 1353 001c 0122     		movs	r2, #1
 1354 001e 1A70     		strb	r2, [r3]
 668:Src/main.c    **** 			debug_rx_count = 0;			   // reset counter
 1355              		.loc 1 668 4 is_stmt 1 view .LVU313
 668:Src/main.c    **** 			debug_rx_count = 0;			   // reset counter
 1356              		.loc 1 668 29 is_stmt 0 view .LVU314
 1357 0020 0023     		movs	r3, #0
 1358 0022 114A     		ldr	r2, .L86+8
 1359 0024 5354     		strb	r3, [r2, r1]
 669:Src/main.c    **** 		} else {
 1360              		.loc 1 669 4 is_stmt 1 view .LVU315
 669:Src/main.c    **** 		} else {
 1361              		.loc 1 669 19 is_stmt 0 view .LVU316
 1362 0026 0F4A     		ldr	r2, .L86+4
 1363 0028 1370     		strb	r3, [r2]
 1364              	.LVL95:
 1365              	.L82:
 679:Src/main.c    **** 	}
 1366              		.loc 1 679 3 is_stmt 1 view .LVU317
 679:Src/main.c    **** 	}
 1367              		.loc 1 679 52 is_stmt 0 view .LVU318
 1368 002a 0E4B     		ldr	r3, .L86+4
 1369 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 679:Src/main.c    **** 	}
 1370              		.loc 1 679 3 view .LVU319
 1371 002e 0122     		movs	r2, #1
 1372 0030 0D49     		ldr	r1, .L86+8
 1373 0032 1944     		add	r1, r1, r3
 1374 0034 0A48     		ldr	r0, .L86
 1375 0036 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1376              	.LVL96:
 1377              		.loc 1 681 1 view .LVU320
 1378 003a E5E7     		b	.L79
 1379              	.LVL97:
ARM GAS  /tmp/cchXJTuc.s 			page 40


 1380              	.L81:
 671:Src/main.c    **** 				// overflow
 1381              		.loc 1 671 4 is_stmt 1 view .LVU321
 671:Src/main.c    **** 				// overflow
 1382              		.loc 1 671 7 is_stmt 0 view .LVU322
 1383 003c 1429     		cmp	r1, #20
 1384 003e 03D1     		bne	.L83
 673:Src/main.c    **** 			} else {
 1385              		.loc 1 673 5 is_stmt 1 view .LVU323
 673:Src/main.c    **** 			} else {
 1386              		.loc 1 673 20 is_stmt 0 view .LVU324
 1387 0040 084B     		ldr	r3, .L86+4
 1388 0042 0022     		movs	r2, #0
 1389 0044 1A70     		strb	r2, [r3]
 1390 0046 F0E7     		b	.L82
 1391              	.L83:
 675:Src/main.c    **** 				debug_rx_count++;
 1392              		.loc 1 675 5 is_stmt 1 view .LVU325
 1393 0048 0A23     		movs	r3, #10
 1394 004a 0122     		movs	r2, #1
 1395 004c 0648     		ldr	r0, .L86+8
 1396              	.LVL98:
 675:Src/main.c    **** 				debug_rx_count++;
 1397              		.loc 1 675 5 is_stmt 0 view .LVU326
 1398 004e 0144     		add	r1, r1, r0
 1399 0050 0348     		ldr	r0, .L86
 1400 0052 FFF7FEFF 		bl	HAL_UART_Transmit
 1401              	.LVL99:
 676:Src/main.c    **** 			}
 1402              		.loc 1 676 5 is_stmt 1 view .LVU327
 676:Src/main.c    **** 			}
 1403              		.loc 1 676 19 is_stmt 0 view .LVU328
 1404 0056 034A     		ldr	r2, .L86+4
 1405 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1406 005a 0133     		adds	r3, r3, #1
 1407 005c 1370     		strb	r3, [r2]
 1408 005e E4E7     		b	.L82
 1409              	.L87:
 1410              		.align	2
 1411              	.L86:
 1412 0060 00000000 		.word	huart3
 1413 0064 00000000 		.word	debug_rx_count
 1414 0068 00000000 		.word	debug_rx
 1415 006c 00000000 		.word	debug_msg_arrived
 1416              		.cfi_endproc
 1417              	.LFE161:
 1419              		.section	.text.Error_Handler,"ax",%progbits
 1420              		.align	1
 1421              		.global	Error_Handler
 1422              		.syntax unified
 1423              		.thumb
 1424              		.thumb_func
 1425              		.fpu fpv5-d16
 1427              	Error_Handler:
 1428              	.LFB162:
 682:Src/main.c    **** /* USER CODE END 4 */
 683:Src/main.c    **** 
ARM GAS  /tmp/cchXJTuc.s 			page 41


 684:Src/main.c    **** /**
 685:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 686:Src/main.c    ****   * @retval None
 687:Src/main.c    ****   */
 688:Src/main.c    **** void Error_Handler(void)
 689:Src/main.c    **** {
 1429              		.loc 1 689 1 is_stmt 1 view -0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433 0000 10B5     		push	{r4, lr}
 1434              	.LCFI17:
 1435              		.cfi_def_cfa_offset 8
 1436              		.cfi_offset 4, -8
 1437              		.cfi_offset 14, -4
 690:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 691:Src/main.c    **** 	/* User can add his own implementation to report the HAL error return state
 692:Src/main.c    **** 	 */
 693:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_blue_GPIO_Port, LED_blue_Pin);
 1438              		.loc 1 693 2 view .LVU330
 1439 0002 094C     		ldr	r4, .L90
 1440 0004 8021     		movs	r1, #128
 1441 0006 2046     		mov	r0, r4
 1442 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1443              	.LVL100:
 694:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_green_GPIO_Port, LED_green_Pin);
 1444              		.loc 1 694 2 view .LVU331
 1445 000c 0121     		movs	r1, #1
 1446 000e 2046     		mov	r0, r4
 1447 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1448              	.LVL101:
 695:Src/main.c    **** 	HAL_GPIO_TogglePin(LED_red_GPIO_Port, LED_red_Pin);
 1449              		.loc 1 695 2 view .LVU332
 1450 0014 4FF48041 		mov	r1, #16384
 1451 0018 2046     		mov	r0, r4
 1452 001a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1453              	.LVL102:
 696:Src/main.c    **** 
 697:Src/main.c    **** 	HAL_Delay(100);
 1454              		.loc 1 697 2 view .LVU333
 1455 001e 6420     		movs	r0, #100
 1456 0020 FFF7FEFF 		bl	HAL_Delay
 1457              	.LVL103:
 698:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 699:Src/main.c    **** }
 1458              		.loc 1 699 1 is_stmt 0 view .LVU334
 1459 0024 10BD     		pop	{r4, pc}
 1460              	.L91:
 1461 0026 00BF     		.align	2
 1462              	.L90:
 1463 0028 00040240 		.word	1073873920
 1464              		.cfi_endproc
 1465              	.LFE162:
 1467              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 1468              		.align	1
 1469              		.syntax unified
 1470              		.thumb
ARM GAS  /tmp/cchXJTuc.s 			page 42


 1471              		.thumb_func
 1472              		.fpu fpv5-d16
 1474              	MX_USART3_UART_Init:
 1475              	.LFB150:
 389:Src/main.c    **** 
 1476              		.loc 1 389 1 is_stmt 1 view -0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 0
 1479              		@ frame_needed = 0, uses_anonymous_args = 0
 1480 0000 08B5     		push	{r3, lr}
 1481              	.LCFI18:
 1482              		.cfi_def_cfa_offset 8
 1483              		.cfi_offset 3, -8
 1484              		.cfi_offset 14, -4
 398:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 1485              		.loc 1 398 3 view .LVU336
 398:Src/main.c    ****   huart3.Init.BaudRate = 2000000;
 1486              		.loc 1 398 19 is_stmt 0 view .LVU337
 1487 0002 0B48     		ldr	r0, .L96
 1488 0004 0B4B     		ldr	r3, .L96+4
 1489 0006 0360     		str	r3, [r0]
 399:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1490              		.loc 1 399 3 is_stmt 1 view .LVU338
 399:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1491              		.loc 1 399 24 is_stmt 0 view .LVU339
 1492 0008 0B4B     		ldr	r3, .L96+8
 1493 000a 4360     		str	r3, [r0, #4]
 400:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1494              		.loc 1 400 3 is_stmt 1 view .LVU340
 400:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1495              		.loc 1 400 26 is_stmt 0 view .LVU341
 1496 000c 0023     		movs	r3, #0
 1497 000e 8360     		str	r3, [r0, #8]
 401:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 1498              		.loc 1 401 3 is_stmt 1 view .LVU342
 401:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 1499              		.loc 1 401 24 is_stmt 0 view .LVU343
 1500 0010 C360     		str	r3, [r0, #12]
 402:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1501              		.loc 1 402 3 is_stmt 1 view .LVU344
 402:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1502              		.loc 1 402 22 is_stmt 0 view .LVU345
 1503 0012 0361     		str	r3, [r0, #16]
 403:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1504              		.loc 1 403 3 is_stmt 1 view .LVU346
 403:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1505              		.loc 1 403 20 is_stmt 0 view .LVU347
 1506 0014 0C22     		movs	r2, #12
 1507 0016 4261     		str	r2, [r0, #20]
 404:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1508              		.loc 1 404 3 is_stmt 1 view .LVU348
 404:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1509              		.loc 1 404 25 is_stmt 0 view .LVU349
 1510 0018 8361     		str	r3, [r0, #24]
 405:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1511              		.loc 1 405 3 is_stmt 1 view .LVU350
 405:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
ARM GAS  /tmp/cchXJTuc.s 			page 43


 1512              		.loc 1 405 28 is_stmt 0 view .LVU351
 1513 001a C361     		str	r3, [r0, #28]
 406:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1514              		.loc 1 406 3 is_stmt 1 view .LVU352
 406:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1515              		.loc 1 406 30 is_stmt 0 view .LVU353
 1516 001c 0362     		str	r3, [r0, #32]
 407:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1517              		.loc 1 407 3 is_stmt 1 view .LVU354
 407:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1518              		.loc 1 407 38 is_stmt 0 view .LVU355
 1519 001e 4362     		str	r3, [r0, #36]
 408:Src/main.c    ****   {
 1520              		.loc 1 408 3 is_stmt 1 view .LVU356
 408:Src/main.c    ****   {
 1521              		.loc 1 408 7 is_stmt 0 view .LVU357
 1522 0020 FFF7FEFF 		bl	HAL_UART_Init
 1523              	.LVL104:
 408:Src/main.c    ****   {
 1524              		.loc 1 408 6 view .LVU358
 1525 0024 00B9     		cbnz	r0, .L95
 1526              	.L92:
 416:Src/main.c    **** 
 1527              		.loc 1 416 1 view .LVU359
 1528 0026 08BD     		pop	{r3, pc}
 1529              	.L95:
 410:Src/main.c    ****   }
 1530              		.loc 1 410 5 is_stmt 1 view .LVU360
 1531 0028 FFF7FEFF 		bl	Error_Handler
 1532              	.LVL105:
 416:Src/main.c    **** 
 1533              		.loc 1 416 1 is_stmt 0 view .LVU361
 1534 002c FBE7     		b	.L92
 1535              	.L97:
 1536 002e 00BF     		.align	2
 1537              	.L96:
 1538 0030 00000000 		.word	huart3
 1539 0034 00480040 		.word	1073760256
 1540 0038 80841E00 		.word	2000000
 1541              		.cfi_endproc
 1542              	.LFE150:
 1544              		.section	.text.MX_CAN1_Init,"ax",%progbits
 1545              		.align	1
 1546              		.syntax unified
 1547              		.thumb
 1548              		.thumb_func
 1549              		.fpu fpv5-d16
 1551              	MX_CAN1_Init:
 1552              	.LFB147:
 279:Src/main.c    **** 
 1553              		.loc 1 279 1 is_stmt 1 view -0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 0
 1556              		@ frame_needed = 0, uses_anonymous_args = 0
 1557 0000 08B5     		push	{r3, lr}
 1558              	.LCFI19:
 1559              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cchXJTuc.s 			page 44


 1560              		.cfi_offset 3, -8
 1561              		.cfi_offset 14, -4
 288:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 1562              		.loc 1 288 3 view .LVU363
 288:Src/main.c    ****   hcan1.Init.Prescaler = 3;
 1563              		.loc 1 288 18 is_stmt 0 view .LVU364
 1564 0002 0E48     		ldr	r0, .L102
 1565 0004 0E4B     		ldr	r3, .L102+4
 1566 0006 0360     		str	r3, [r0]
 289:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1567              		.loc 1 289 3 is_stmt 1 view .LVU365
 289:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1568              		.loc 1 289 24 is_stmt 0 view .LVU366
 1569 0008 0323     		movs	r3, #3
 1570 000a 4360     		str	r3, [r0, #4]
 290:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1571              		.loc 1 290 3 is_stmt 1 view .LVU367
 290:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1572              		.loc 1 290 19 is_stmt 0 view .LVU368
 1573 000c 0023     		movs	r3, #0
 1574 000e 8360     		str	r3, [r0, #8]
 291:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 1575              		.loc 1 291 3 is_stmt 1 view .LVU369
 291:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 1576              		.loc 1 291 28 is_stmt 0 view .LVU370
 1577 0010 C360     		str	r3, [r0, #12]
 292:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1578              		.loc 1 292 3 is_stmt 1 view .LVU371
 292:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1579              		.loc 1 292 23 is_stmt 0 view .LVU372
 1580 0012 4FF46022 		mov	r2, #917504
 1581 0016 0261     		str	r2, [r0, #16]
 293:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1582              		.loc 1 293 3 is_stmt 1 view .LVU373
 293:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1583              		.loc 1 293 23 is_stmt 0 view .LVU374
 1584 0018 4FF48012 		mov	r2, #1048576
 1585 001c 4261     		str	r2, [r0, #20]
 294:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 1586              		.loc 1 294 3 is_stmt 1 view .LVU375
 294:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 1587              		.loc 1 294 32 is_stmt 0 view .LVU376
 1588 001e 0376     		strb	r3, [r0, #24]
 295:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 1589              		.loc 1 295 3 is_stmt 1 view .LVU377
 295:Src/main.c    ****   hcan1.Init.AutoWakeUp = ENABLE;
 1590              		.loc 1 295 25 is_stmt 0 view .LVU378
 1591 0020 4376     		strb	r3, [r0, #25]
 296:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 1592              		.loc 1 296 3 is_stmt 1 view .LVU379
 296:Src/main.c    ****   hcan1.Init.AutoRetransmission = ENABLE;
 1593              		.loc 1 296 25 is_stmt 0 view .LVU380
 1594 0022 0122     		movs	r2, #1
 1595 0024 8276     		strb	r2, [r0, #26]
 297:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1596              		.loc 1 297 3 is_stmt 1 view .LVU381
 297:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
ARM GAS  /tmp/cchXJTuc.s 			page 45


 1597              		.loc 1 297 33 is_stmt 0 view .LVU382
 1598 0026 C276     		strb	r2, [r0, #27]
 298:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1599              		.loc 1 298 3 is_stmt 1 view .LVU383
 298:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1600              		.loc 1 298 32 is_stmt 0 view .LVU384
 1601 0028 0377     		strb	r3, [r0, #28]
 299:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1602              		.loc 1 299 3 is_stmt 1 view .LVU385
 299:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1603              		.loc 1 299 35 is_stmt 0 view .LVU386
 1604 002a 4377     		strb	r3, [r0, #29]
 300:Src/main.c    ****   {
 1605              		.loc 1 300 3 is_stmt 1 view .LVU387
 300:Src/main.c    ****   {
 1606              		.loc 1 300 7 is_stmt 0 view .LVU388
 1607 002c FFF7FEFF 		bl	HAL_CAN_Init
 1608              	.LVL106:
 300:Src/main.c    ****   {
 1609              		.loc 1 300 6 view .LVU389
 1610 0030 00B9     		cbnz	r0, .L101
 1611              	.L98:
 308:Src/main.c    **** 
 1612              		.loc 1 308 1 view .LVU390
 1613 0032 08BD     		pop	{r3, pc}
 1614              	.L101:
 302:Src/main.c    ****   }
 1615              		.loc 1 302 5 is_stmt 1 view .LVU391
 1616 0034 FFF7FEFF 		bl	Error_Handler
 1617              	.LVL107:
 308:Src/main.c    **** 
 1618              		.loc 1 308 1 is_stmt 0 view .LVU392
 1619 0038 FBE7     		b	.L98
 1620              	.L103:
 1621 003a 00BF     		.align	2
 1622              	.L102:
 1623 003c 00000000 		.word	hcan1
 1624 0040 00640040 		.word	1073767424
 1625              		.cfi_endproc
 1626              	.LFE147:
 1628              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1629              		.align	1
 1630              		.syntax unified
 1631              		.thumb
 1632              		.thumb_func
 1633              		.fpu fpv5-d16
 1635              	MX_TIM2_Init:
 1636              	.LFB149:
 344:Src/main.c    **** 
 1637              		.loc 1 344 1 is_stmt 1 view -0
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 32
 1640              		@ frame_needed = 0, uses_anonymous_args = 0
 1641 0000 00B5     		push	{lr}
 1642              	.LCFI20:
 1643              		.cfi_def_cfa_offset 4
 1644              		.cfi_offset 14, -4
ARM GAS  /tmp/cchXJTuc.s 			page 46


 1645 0002 89B0     		sub	sp, sp, #36
 1646              	.LCFI21:
 1647              		.cfi_def_cfa_offset 40
 350:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1648              		.loc 1 350 3 view .LVU394
 350:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1649              		.loc 1 350 26 is_stmt 0 view .LVU395
 1650 0004 0023     		movs	r3, #0
 1651 0006 0493     		str	r3, [sp, #16]
 1652 0008 0593     		str	r3, [sp, #20]
 1653 000a 0693     		str	r3, [sp, #24]
 1654 000c 0793     		str	r3, [sp, #28]
 351:Src/main.c    **** 
 1655              		.loc 1 351 3 is_stmt 1 view .LVU396
 351:Src/main.c    **** 
 1656              		.loc 1 351 27 is_stmt 0 view .LVU397
 1657 000e 0193     		str	r3, [sp, #4]
 1658 0010 0293     		str	r3, [sp, #8]
 1659 0012 0393     		str	r3, [sp, #12]
 356:Src/main.c    ****   htim2.Init.Prescaler = 108;
 1660              		.loc 1 356 3 is_stmt 1 view .LVU398
 356:Src/main.c    ****   htim2.Init.Prescaler = 108;
 1661              		.loc 1 356 18 is_stmt 0 view .LVU399
 1662 0014 1548     		ldr	r0, .L112
 1663 0016 4FF08042 		mov	r2, #1073741824
 1664 001a 0260     		str	r2, [r0]
 357:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1665              		.loc 1 357 3 is_stmt 1 view .LVU400
 357:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1666              		.loc 1 357 24 is_stmt 0 view .LVU401
 1667 001c 6C22     		movs	r2, #108
 1668 001e 4260     		str	r2, [r0, #4]
 358:Src/main.c    ****   htim2.Init.Period = 1000;
 1669              		.loc 1 358 3 is_stmt 1 view .LVU402
 358:Src/main.c    ****   htim2.Init.Period = 1000;
 1670              		.loc 1 358 26 is_stmt 0 view .LVU403
 1671 0020 8360     		str	r3, [r0, #8]
 359:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1672              		.loc 1 359 3 is_stmt 1 view .LVU404
 359:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1673              		.loc 1 359 21 is_stmt 0 view .LVU405
 1674 0022 4FF47A72 		mov	r2, #1000
 1675 0026 C260     		str	r2, [r0, #12]
 360:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1676              		.loc 1 360 3 is_stmt 1 view .LVU406
 360:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1677              		.loc 1 360 28 is_stmt 0 view .LVU407
 1678 0028 0361     		str	r3, [r0, #16]
 361:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1679              		.loc 1 361 3 is_stmt 1 view .LVU408
 361:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1680              		.loc 1 361 32 is_stmt 0 view .LVU409
 1681 002a 8361     		str	r3, [r0, #24]
 362:Src/main.c    ****   {
 1682              		.loc 1 362 3 is_stmt 1 view .LVU410
 362:Src/main.c    ****   {
 1683              		.loc 1 362 7 is_stmt 0 view .LVU411
ARM GAS  /tmp/cchXJTuc.s 			page 47


 1684 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1685              	.LVL108:
 362:Src/main.c    ****   {
 1686              		.loc 1 362 6 view .LVU412
 1687 0030 90B9     		cbnz	r0, .L109
 1688              	.L105:
 366:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1689              		.loc 1 366 3 is_stmt 1 view .LVU413
 366:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1690              		.loc 1 366 34 is_stmt 0 view .LVU414
 1691 0032 4FF48053 		mov	r3, #4096
 1692 0036 0493     		str	r3, [sp, #16]
 367:Src/main.c    ****   {
 1693              		.loc 1 367 3 is_stmt 1 view .LVU415
 367:Src/main.c    ****   {
 1694              		.loc 1 367 7 is_stmt 0 view .LVU416
 1695 0038 04A9     		add	r1, sp, #16
 1696 003a 0C48     		ldr	r0, .L112
 1697 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1698              	.LVL109:
 367:Src/main.c    ****   {
 1699              		.loc 1 367 6 view .LVU417
 1700 0040 68B9     		cbnz	r0, .L110
 1701              	.L106:
 371:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1702              		.loc 1 371 3 is_stmt 1 view .LVU418
 371:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1703              		.loc 1 371 37 is_stmt 0 view .LVU419
 1704 0042 0023     		movs	r3, #0
 1705 0044 0193     		str	r3, [sp, #4]
 372:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1706              		.loc 1 372 3 is_stmt 1 view .LVU420
 372:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1707              		.loc 1 372 33 is_stmt 0 view .LVU421
 1708 0046 0393     		str	r3, [sp, #12]
 373:Src/main.c    ****   {
 1709              		.loc 1 373 3 is_stmt 1 view .LVU422
 373:Src/main.c    ****   {
 1710              		.loc 1 373 7 is_stmt 0 view .LVU423
 1711 0048 01A9     		add	r1, sp, #4
 1712 004a 0848     		ldr	r0, .L112
 1713 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1714              	.LVL110:
 373:Src/main.c    ****   {
 1715              		.loc 1 373 6 view .LVU424
 1716 0050 40B9     		cbnz	r0, .L111
 1717              	.L104:
 381:Src/main.c    **** 
 1718              		.loc 1 381 1 view .LVU425
 1719 0052 09B0     		add	sp, sp, #36
 1720              	.LCFI22:
 1721              		.cfi_remember_state
 1722              		.cfi_def_cfa_offset 4
 1723              		@ sp needed
 1724 0054 5DF804FB 		ldr	pc, [sp], #4
 1725              	.L109:
 1726              	.LCFI23:
ARM GAS  /tmp/cchXJTuc.s 			page 48


 1727              		.cfi_restore_state
 364:Src/main.c    ****   }
 1728              		.loc 1 364 5 is_stmt 1 view .LVU426
 1729 0058 FFF7FEFF 		bl	Error_Handler
 1730              	.LVL111:
 1731 005c E9E7     		b	.L105
 1732              	.L110:
 369:Src/main.c    ****   }
 1733              		.loc 1 369 5 view .LVU427
 1734 005e FFF7FEFF 		bl	Error_Handler
 1735              	.LVL112:
 1736 0062 EEE7     		b	.L106
 1737              	.L111:
 375:Src/main.c    ****   }
 1738              		.loc 1 375 5 view .LVU428
 1739 0064 FFF7FEFF 		bl	Error_Handler
 1740              	.LVL113:
 381:Src/main.c    **** 
 1741              		.loc 1 381 1 is_stmt 0 view .LVU429
 1742 0068 F3E7     		b	.L104
 1743              	.L113:
 1744 006a 00BF     		.align	2
 1745              	.L112:
 1746 006c 00000000 		.word	htim2
 1747              		.cfi_endproc
 1748              	.LFE149:
 1750              		.section	.text.SystemClock_Config,"ax",%progbits
 1751              		.align	1
 1752              		.global	SystemClock_Config
 1753              		.syntax unified
 1754              		.thumb
 1755              		.thumb_func
 1756              		.fpu fpv5-d16
 1758              	SystemClock_Config:
 1759              	.LFB145:
 190:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1760              		.loc 1 190 1 is_stmt 1 view -0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 224
 1763              		@ frame_needed = 0, uses_anonymous_args = 0
 1764 0000 10B5     		push	{r4, lr}
 1765              	.LCFI24:
 1766              		.cfi_def_cfa_offset 8
 1767              		.cfi_offset 4, -8
 1768              		.cfi_offset 14, -4
 1769 0002 B8B0     		sub	sp, sp, #224
 1770              	.LCFI25:
 1771              		.cfi_def_cfa_offset 232
 191:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1772              		.loc 1 191 3 view .LVU431
 191:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1773              		.loc 1 191 22 is_stmt 0 view .LVU432
 1774 0004 3422     		movs	r2, #52
 1775 0006 0021     		movs	r1, #0
 1776 0008 2BA8     		add	r0, sp, #172
 1777 000a FFF7FEFF 		bl	memset
 1778              	.LVL114:
ARM GAS  /tmp/cchXJTuc.s 			page 49


 192:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 1779              		.loc 1 192 3 is_stmt 1 view .LVU433
 192:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 1780              		.loc 1 192 22 is_stmt 0 view .LVU434
 1781 000e 0024     		movs	r4, #0
 1782 0010 2694     		str	r4, [sp, #152]
 1783 0012 2794     		str	r4, [sp, #156]
 1784 0014 2894     		str	r4, [sp, #160]
 1785 0016 2994     		str	r4, [sp, #164]
 1786 0018 2A94     		str	r4, [sp, #168]
 193:Src/main.c    **** 
 1787              		.loc 1 193 3 is_stmt 1 view .LVU435
 193:Src/main.c    **** 
 1788              		.loc 1 193 28 is_stmt 0 view .LVU436
 1789 001a 9022     		movs	r2, #144
 1790 001c 2146     		mov	r1, r4
 1791 001e 02A8     		add	r0, sp, #8
 1792 0020 FFF7FEFF 		bl	memset
 1793              	.LVL115:
 197:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1794              		.loc 1 197 3 is_stmt 1 view .LVU437
 1795              	.LBB7:
 197:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1796              		.loc 1 197 3 view .LVU438
 197:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1797              		.loc 1 197 3 view .LVU439
 1798 0024 294B     		ldr	r3, .L124
 1799 0026 1A6C     		ldr	r2, [r3, #64]
 1800 0028 42F08052 		orr	r2, r2, #268435456
 1801 002c 1A64     		str	r2, [r3, #64]
 197:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1802              		.loc 1 197 3 view .LVU440
 1803 002e 1B6C     		ldr	r3, [r3, #64]
 1804 0030 03F08053 		and	r3, r3, #268435456
 1805 0034 0093     		str	r3, [sp]
 197:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1806              		.loc 1 197 3 view .LVU441
 1807 0036 009B     		ldr	r3, [sp]
 1808              	.LBE7:
 197:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1809              		.loc 1 197 3 view .LVU442
 198:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1810              		.loc 1 198 3 view .LVU443
 1811              	.LBB8:
 198:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1812              		.loc 1 198 3 view .LVU444
 198:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1813              		.loc 1 198 3 view .LVU445
 1814 0038 254B     		ldr	r3, .L124+4
 1815 003a 1A68     		ldr	r2, [r3]
 1816 003c 42F44042 		orr	r2, r2, #49152
 1817 0040 1A60     		str	r2, [r3]
 198:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1818              		.loc 1 198 3 view .LVU446
 1819 0042 1B68     		ldr	r3, [r3]
 1820 0044 03F44043 		and	r3, r3, #49152
 1821 0048 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cchXJTuc.s 			page 50


 198:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1822              		.loc 1 198 3 view .LVU447
 1823 004a 019B     		ldr	r3, [sp, #4]
 1824              	.LBE8:
 198:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 1825              		.loc 1 198 3 view .LVU448
 201:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1826              		.loc 1 201 3 view .LVU449
 201:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1827              		.loc 1 201 36 is_stmt 0 view .LVU450
 1828 004c 0223     		movs	r3, #2
 1829 004e 2B93     		str	r3, [sp, #172]
 202:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1830              		.loc 1 202 3 is_stmt 1 view .LVU451
 202:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1831              		.loc 1 202 30 is_stmt 0 view .LVU452
 1832 0050 0122     		movs	r2, #1
 1833 0052 2E92     		str	r2, [sp, #184]
 203:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1834              		.loc 1 203 3 is_stmt 1 view .LVU453
 203:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1835              		.loc 1 203 41 is_stmt 0 view .LVU454
 1836 0054 1022     		movs	r2, #16
 1837 0056 2F92     		str	r2, [sp, #188]
 204:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1838              		.loc 1 204 3 is_stmt 1 view .LVU455
 204:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1839              		.loc 1 204 34 is_stmt 0 view .LVU456
 1840 0058 3193     		str	r3, [sp, #196]
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1841              		.loc 1 205 3 is_stmt 1 view .LVU457
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1842              		.loc 1 205 35 is_stmt 0 view .LVU458
 1843 005a 3294     		str	r4, [sp, #200]
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 1844              		.loc 1 206 3 is_stmt 1 view .LVU459
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 1845              		.loc 1 206 30 is_stmt 0 view .LVU460
 1846 005c 0822     		movs	r2, #8
 1847 005e 3392     		str	r2, [sp, #204]
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1848              		.loc 1 207 3 is_stmt 1 view .LVU461
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1849              		.loc 1 207 30 is_stmt 0 view .LVU462
 1850 0060 D822     		movs	r2, #216
 1851 0062 3492     		str	r2, [sp, #208]
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 1852              		.loc 1 208 3 is_stmt 1 view .LVU463
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 1853              		.loc 1 208 30 is_stmt 0 view .LVU464
 1854 0064 3593     		str	r3, [sp, #212]
 209:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1855              		.loc 1 209 3 is_stmt 1 view .LVU465
 209:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1856              		.loc 1 209 30 is_stmt 0 view .LVU466
 1857 0066 0923     		movs	r3, #9
 1858 0068 3693     		str	r3, [sp, #216]
ARM GAS  /tmp/cchXJTuc.s 			page 51


 210:Src/main.c    ****   {
 1859              		.loc 1 210 3 is_stmt 1 view .LVU467
 210:Src/main.c    ****   {
 1860              		.loc 1 210 7 is_stmt 0 view .LVU468
 1861 006a 2BA8     		add	r0, sp, #172
 1862 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1863              	.LVL116:
 210:Src/main.c    ****   {
 1864              		.loc 1 210 6 view .LVU469
 1865 0070 F8B9     		cbnz	r0, .L120
 1866              	.L115:
 216:Src/main.c    ****   {
 1867              		.loc 1 216 3 is_stmt 1 view .LVU470
 216:Src/main.c    ****   {
 1868              		.loc 1 216 7 is_stmt 0 view .LVU471
 1869 0072 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 1870              	.LVL117:
 216:Src/main.c    ****   {
 1871              		.loc 1 216 6 view .LVU472
 1872 0076 F8B9     		cbnz	r0, .L121
 1873              	.L116:
 222:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1874              		.loc 1 222 3 is_stmt 1 view .LVU473
 222:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1875              		.loc 1 222 31 is_stmt 0 view .LVU474
 1876 0078 0F23     		movs	r3, #15
 1877 007a 2693     		str	r3, [sp, #152]
 224:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1878              		.loc 1 224 3 is_stmt 1 view .LVU475
 224:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1879              		.loc 1 224 34 is_stmt 0 view .LVU476
 1880 007c 0223     		movs	r3, #2
 1881 007e 2793     		str	r3, [sp, #156]
 225:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1882              		.loc 1 225 3 is_stmt 1 view .LVU477
 225:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1883              		.loc 1 225 35 is_stmt 0 view .LVU478
 1884 0080 0023     		movs	r3, #0
 1885 0082 2893     		str	r3, [sp, #160]
 226:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1886              		.loc 1 226 3 is_stmt 1 view .LVU479
 226:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1887              		.loc 1 226 36 is_stmt 0 view .LVU480
 1888 0084 4FF4A053 		mov	r3, #5120
 1889 0088 2993     		str	r3, [sp, #164]
 227:Src/main.c    **** 
 1890              		.loc 1 227 3 is_stmt 1 view .LVU481
 227:Src/main.c    **** 
 1891              		.loc 1 227 36 is_stmt 0 view .LVU482
 1892 008a 4FF48053 		mov	r3, #4096
 1893 008e 2A93     		str	r3, [sp, #168]
 229:Src/main.c    ****   {
 1894              		.loc 1 229 3 is_stmt 1 view .LVU483
 229:Src/main.c    ****   {
 1895              		.loc 1 229 7 is_stmt 0 view .LVU484
 1896 0090 0721     		movs	r1, #7
 1897 0092 26A8     		add	r0, sp, #152
ARM GAS  /tmp/cchXJTuc.s 			page 52


 1898 0094 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1899              	.LVL118:
 229:Src/main.c    ****   {
 1900              		.loc 1 229 6 view .LVU485
 1901 0098 88B9     		cbnz	r0, .L122
 1902              	.L117:
 233:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 1903              		.loc 1 233 3 is_stmt 1 view .LVU486
 233:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 1904              		.loc 1 233 44 is_stmt 0 view .LVU487
 1905 009a 0E4B     		ldr	r3, .L124+8
 1906 009c 0293     		str	r3, [sp, #8]
 235:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 1907              		.loc 1 235 3 is_stmt 1 view .LVU488
 235:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 1908              		.loc 1 235 44 is_stmt 0 view .LVU489
 1909 009e 0023     		movs	r3, #0
 1910 00a0 1593     		str	r3, [sp, #84]
 236:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 1911              		.loc 1 236 3 is_stmt 1 view .LVU490
 236:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 1912              		.loc 1 236 43 is_stmt 0 view .LVU491
 1913 00a2 2193     		str	r3, [sp, #132]
 237:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1914              		.loc 1 237 3 is_stmt 1 view .LVU492
 237:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1915              		.loc 1 237 44 is_stmt 0 view .LVU493
 1916 00a4 2293     		str	r3, [sp, #136]
 238:Src/main.c    ****   {
 1917              		.loc 1 238 3 is_stmt 1 view .LVU494
 238:Src/main.c    ****   {
 1918              		.loc 1 238 7 is_stmt 0 view .LVU495
 1919 00a6 02A8     		add	r0, sp, #8
 1920 00a8 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1921              	.LVL119:
 238:Src/main.c    ****   {
 1922              		.loc 1 238 6 view .LVU496
 1923 00ac 50B9     		cbnz	r0, .L123
 1924              	.L114:
 242:Src/main.c    **** 
 1925              		.loc 1 242 1 view .LVU497
 1926 00ae 38B0     		add	sp, sp, #224
 1927              	.LCFI26:
 1928              		.cfi_remember_state
 1929              		.cfi_def_cfa_offset 8
 1930              		@ sp needed
 1931 00b0 10BD     		pop	{r4, pc}
 1932              	.L120:
 1933              	.LCFI27:
 1934              		.cfi_restore_state
 212:Src/main.c    ****   }
 1935              		.loc 1 212 5 is_stmt 1 view .LVU498
 1936 00b2 FFF7FEFF 		bl	Error_Handler
 1937              	.LVL120:
 1938 00b6 DCE7     		b	.L115
 1939              	.L121:
 218:Src/main.c    ****   }
ARM GAS  /tmp/cchXJTuc.s 			page 53


 1940              		.loc 1 218 5 view .LVU499
 1941 00b8 FFF7FEFF 		bl	Error_Handler
 1942              	.LVL121:
 1943 00bc DCE7     		b	.L116
 1944              	.L122:
 231:Src/main.c    ****   }
 1945              		.loc 1 231 5 view .LVU500
 1946 00be FFF7FEFF 		bl	Error_Handler
 1947              	.LVL122:
 1948 00c2 EAE7     		b	.L117
 1949              	.L123:
 240:Src/main.c    ****   }
 1950              		.loc 1 240 5 view .LVU501
 1951 00c4 FFF7FEFF 		bl	Error_Handler
 1952              	.LVL123:
 242:Src/main.c    **** 
 1953              		.loc 1 242 1 is_stmt 0 view .LVU502
 1954 00c8 F1E7     		b	.L114
 1955              	.L125:
 1956 00ca 00BF     		.align	2
 1957              	.L124:
 1958 00cc 00380240 		.word	1073887232
 1959 00d0 00700040 		.word	1073770496
 1960 00d4 0001A000 		.word	10486016
 1961              		.cfi_endproc
 1962              	.LFE145:
 1964              		.section	.text.main,"ax",%progbits
 1965              		.align	1
 1966              		.global	main
 1967              		.syntax unified
 1968              		.thumb
 1969              		.thumb_func
 1970              		.fpu fpv5-d16
 1972              	main:
 1973              	.LFB144:
  91:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1974              		.loc 1 91 1 is_stmt 1 view -0
 1975              		.cfi_startproc
 1976              		@ Volatile: function does not return.
 1977              		@ args = 0, pretend = 0, frame = 0
 1978              		@ frame_needed = 0, uses_anonymous_args = 0
 1979 0000 08B5     		push	{r3, lr}
 1980              	.LCFI28:
 1981              		.cfi_def_cfa_offset 8
 1982              		.cfi_offset 3, -8
 1983              		.cfi_offset 14, -4
 100:Src/main.c    **** 
 1984              		.loc 1 100 3 view .LVU504
 1985 0002 FFF7FEFF 		bl	HAL_Init
 1986              	.LVL124:
 107:Src/main.c    **** 
 1987              		.loc 1 107 3 view .LVU505
 1988 0006 FFF7FEFF 		bl	SystemClock_Config
 1989              	.LVL125:
 114:Src/main.c    ****   MX_SDMMC1_SD_Init();
 1990              		.loc 1 114 3 view .LVU506
 1991 000a FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  /tmp/cchXJTuc.s 			page 54


 1992              	.LVL126:
 115:Src/main.c    ****   MX_USART3_UART_Init();
 1993              		.loc 1 115 3 view .LVU507
 1994 000e FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 1995              	.LVL127:
 116:Src/main.c    ****   MX_FATFS_Init();
 1996              		.loc 1 116 3 view .LVU508
 1997 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 1998              	.LVL128:
 117:Src/main.c    ****   MX_CAN1_Init();
 1999              		.loc 1 117 3 view .LVU509
 2000 0016 FFF7FEFF 		bl	MX_FATFS_Init
 2001              	.LVL129:
 118:Src/main.c    ****   MX_TIM2_Init();
 2002              		.loc 1 118 3 view .LVU510
 2003 001a FFF7FEFF 		bl	MX_CAN1_Init
 2004              	.LVL130:
 119:Src/main.c    **** 
 2005              		.loc 1 119 3 view .LVU511
 2006 001e FFF7FEFF 		bl	MX_TIM2_Init
 2007              	.LVL131:
 122:Src/main.c    ****   /* USER CODE BEGIN 2 */
 2008              		.loc 1 122 3 view .LVU512
 2009 0022 FFF7FEFF 		bl	MX_NVIC_Init
 2010              	.LVL132:
 124:Src/main.c    **** 
 2011              		.loc 1 124 2 view .LVU513
 2012 0026 2848     		ldr	r0, .L136
 2013 0028 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2014              	.LVL133:
 126:Src/main.c    **** 	can1.tx_interrupt = CAN1_TX_IRQn;
 2015              		.loc 1 126 2 view .LVU514
 126:Src/main.c    **** 	can1.tx_interrupt = CAN1_TX_IRQn;
 2016              		.loc 1 126 21 is_stmt 0 view .LVU515
 2017 002c 274B     		ldr	r3, .L136+4
 2018 002e 1422     		movs	r2, #20
 2019 0030 83F8982D 		strb	r2, [r3, #3480]
 127:Src/main.c    **** 	can1.hcan = &hcan1;
 2020              		.loc 1 127 2 is_stmt 1 view .LVU516
 127:Src/main.c    **** 	can1.hcan = &hcan1;
 2021              		.loc 1 127 20 is_stmt 0 view .LVU517
 2022 0034 1322     		movs	r2, #19
 2023 0036 83F8992D 		strb	r2, [r3, #3481]
 128:Src/main.c    **** 
 2024              		.loc 1 128 2 is_stmt 1 view .LVU518
 128:Src/main.c    **** 
 2025              		.loc 1 128 12 is_stmt 0 view .LVU519
 2026 003a 254A     		ldr	r2, .L136+8
 2027 003c 1A64     		str	r2, [r3, #64]
 130:Src/main.c    **** 
 2028              		.loc 1 130 2 is_stmt 1 view .LVU520
 2029 003e FFF7FEFF 		bl	can_init
 2030              	.LVL134:
 132:Src/main.c    **** 						1);  // activate rx interrupt for debug
 2031              		.loc 1 132 2 view .LVU521
 132:Src/main.c    **** 						1);  // activate rx interrupt for debug
 2032              		.loc 1 132 51 is_stmt 0 view .LVU522
ARM GAS  /tmp/cchXJTuc.s 			page 55


 2033 0042 244B     		ldr	r3, .L136+12
 2034 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132:Src/main.c    **** 						1);  // activate rx interrupt for debug
 2035              		.loc 1 132 2 view .LVU523
 2036 0046 0122     		movs	r2, #1
 2037 0048 2349     		ldr	r1, .L136+16
 2038 004a 1944     		add	r1, r1, r3
 2039 004c 2348     		ldr	r0, .L136+20
 2040 004e FFF7FEFF 		bl	HAL_UART_Receive_IT
 2041              	.LVL135:
 135:Src/main.c    **** 
 2042              		.loc 1 135 2 is_stmt 1 view .LVU524
 135:Src/main.c    **** 
 2043              		.loc 1 135 16 is_stmt 0 view .LVU525
 2044 0052 0021     		movs	r1, #0
 2045 0054 224B     		ldr	r3, .L136+24
 2046 0056 1970     		strb	r1, [r3]
 137:Src/main.c    **** 	accel.pot1_min_val = 0;
 2047              		.loc 1 137 2 is_stmt 1 view .LVU526
 137:Src/main.c    **** 	accel.pot1_min_val = 0;
 2048              		.loc 1 137 21 is_stmt 0 view .LVU527
 2049 0058 224B     		ldr	r3, .L136+28
 2050 005a 4FF48052 		mov	r2, #4096
 2051 005e 1A81     		strh	r2, [r3, #8]	@ movhi
 138:Src/main.c    **** 	accel.pot1_range = accel.pot1_max_val - accel.pot1_min_val;
 2052              		.loc 1 138 2 is_stmt 1 view .LVU528
 138:Src/main.c    **** 	accel.pot1_range = accel.pot1_max_val - accel.pot1_min_val;
 2053              		.loc 1 138 21 is_stmt 0 view .LVU529
 2054 0060 D981     		strh	r1, [r3, #14]	@ movhi
 139:Src/main.c    **** 	accel.pot2_max_val = 4096;
 2055              		.loc 1 139 2 is_stmt 1 view .LVU530
 139:Src/main.c    **** 	accel.pot2_max_val = 4096;
 2056              		.loc 1 139 19 is_stmt 0 view .LVU531
 2057 0062 9A81     		strh	r2, [r3, #12]	@ movhi
 140:Src/main.c    **** 	accel.pot2_min_val = 0;
 2058              		.loc 1 140 2 is_stmt 1 view .LVU532
 140:Src/main.c    **** 	accel.pot2_min_val = 0;
 2059              		.loc 1 140 21 is_stmt 0 view .LVU533
 2060 0064 5A81     		strh	r2, [r3, #10]	@ movhi
 141:Src/main.c    **** 	accel.pot2_range = accel.pot2_max_val - accel.pot2_min_val;
 2061              		.loc 1 141 2 is_stmt 1 view .LVU534
 141:Src/main.c    **** 	accel.pot2_range = accel.pot2_max_val - accel.pot2_min_val;
 2062              		.loc 1 141 21 is_stmt 0 view .LVU535
 2063 0066 1982     		strh	r1, [r3, #16]	@ movhi
 142:Src/main.c    **** 
 2064              		.loc 1 142 2 is_stmt 1 view .LVU536
 142:Src/main.c    **** 
 2065              		.loc 1 142 19 is_stmt 0 view .LVU537
 2066 0068 5A82     		strh	r2, [r3, #18]	@ movhi
 144:Src/main.c    **** 
 2067              		.loc 1 144 2 is_stmt 1 view .LVU538
 2068 006a FFF7FEFF 		bl	init_sd
 2069              	.LVL136:
 2070 006e 05E0     		b	.L127
 2071              	.L128:
 171:Src/main.c    **** 			idle();
 2072              		.loc 1 171 10 view .LVU539
ARM GAS  /tmp/cchXJTuc.s 			page 56


 171:Src/main.c    **** 			idle();
 2073              		.loc 1 171 13 is_stmt 0 view .LVU540
 2074 0070 012B     		cmp	r3, #1
 2075 0072 20D0     		beq	.L133
 173:Src/main.c    **** 			setup();
 2076              		.loc 1 173 10 is_stmt 1 view .LVU541
 173:Src/main.c    **** 			setup();
 2077              		.loc 1 173 13 is_stmt 0 view .LVU542
 2078 0074 022B     		cmp	r3, #2
 2079 0076 21D0     		beq	.L134
 175:Src/main.c    **** 			run();
 2080              		.loc 1 175 10 is_stmt 1 view .LVU543
 175:Src/main.c    **** 			run();
 2081              		.loc 1 175 13 is_stmt 0 view .LVU544
 2082 0078 032B     		cmp	r3, #3
 2083 007a 22D0     		beq	.L135
 2084              	.L127:
 152:Src/main.c    **** 		can1.dataTx[0] = 0;
 2085              		.loc 1 152 2 is_stmt 1 view .LVU545
 153:Src/main.c    **** 		can1.dataTx[1] = 0;
 2086              		.loc 1 153 3 view .LVU546
 153:Src/main.c    **** 		can1.dataTx[1] = 0;
 2087              		.loc 1 153 18 is_stmt 0 view .LVU547
 2088 007c 134A     		ldr	r2, .L136+4
 2089 007e 0023     		movs	r3, #0
 2090 0080 1373     		strb	r3, [r2, #12]
 154:Src/main.c    **** 		can1.dataTx[2] = 0;
 2091              		.loc 1 154 3 is_stmt 1 view .LVU548
 154:Src/main.c    **** 		can1.dataTx[2] = 0;
 2092              		.loc 1 154 18 is_stmt 0 view .LVU549
 2093 0082 5373     		strb	r3, [r2, #13]
 155:Src/main.c    **** 		can1.dataTx[3] = 0;
 2094              		.loc 1 155 3 is_stmt 1 view .LVU550
 155:Src/main.c    **** 		can1.dataTx[3] = 0;
 2095              		.loc 1 155 18 is_stmt 0 view .LVU551
 2096 0084 9373     		strb	r3, [r2, #14]
 156:Src/main.c    **** 		can1.dataTx[4] = counter >> 24;
 2097              		.loc 1 156 3 is_stmt 1 view .LVU552
 156:Src/main.c    **** 		can1.dataTx[4] = counter >> 24;
 2098              		.loc 1 156 18 is_stmt 0 view .LVU553
 2099 0086 D373     		strb	r3, [r2, #15]
 157:Src/main.c    **** 		can1.dataTx[5] = counter >> 16;
 2100              		.loc 1 157 3 is_stmt 1 view .LVU554
 157:Src/main.c    **** 		can1.dataTx[5] = counter >> 16;
 2101              		.loc 1 157 28 is_stmt 0 view .LVU555
 2102 0088 174B     		ldr	r3, .L136+32
 2103 008a 1B68     		ldr	r3, [r3]
 2104 008c 1916     		asrs	r1, r3, #24
 157:Src/main.c    **** 		can1.dataTx[5] = counter >> 16;
 2105              		.loc 1 157 18 view .LVU556
 2106 008e 1174     		strb	r1, [r2, #16]
 158:Src/main.c    **** 		can1.dataTx[6] = counter >> 8;
 2107              		.loc 1 158 3 is_stmt 1 view .LVU557
 158:Src/main.c    **** 		can1.dataTx[6] = counter >> 8;
 2108              		.loc 1 158 28 is_stmt 0 view .LVU558
 2109 0090 1914     		asrs	r1, r3, #16
 158:Src/main.c    **** 		can1.dataTx[6] = counter >> 8;
ARM GAS  /tmp/cchXJTuc.s 			page 57


 2110              		.loc 1 158 18 view .LVU559
 2111 0092 5174     		strb	r1, [r2, #17]
 159:Src/main.c    **** 		can1.dataTx[7] = counter % 256;
 2112              		.loc 1 159 3 is_stmt 1 view .LVU560
 159:Src/main.c    **** 		can1.dataTx[7] = counter % 256;
 2113              		.loc 1 159 28 is_stmt 0 view .LVU561
 2114 0094 1912     		asrs	r1, r3, #8
 159:Src/main.c    **** 		can1.dataTx[7] = counter % 256;
 2115              		.loc 1 159 18 view .LVU562
 2116 0096 9174     		strb	r1, [r2, #18]
 160:Src/main.c    **** 
 2117              		.loc 1 160 3 is_stmt 1 view .LVU563
 160:Src/main.c    **** 
 2118              		.loc 1 160 28 is_stmt 0 view .LVU564
 2119 0098 5942     		rsbs	r1, r3, #0
 2120 009a DBB2     		uxtb	r3, r3
 2121 009c C9B2     		uxtb	r1, r1
 2122 009e 58BF     		it	pl
 2123 00a0 4B42     		rsbpl	r3, r1, #0
 160:Src/main.c    **** 
 2124              		.loc 1 160 18 view .LVU565
 2125 00a2 D374     		strb	r3, [r2, #19]
 162:Src/main.c    **** 
 2126              		.loc 1 162 3 is_stmt 1 view .LVU566
 162:Src/main.c    **** 
 2127              		.loc 1 162 14 is_stmt 0 view .LVU567
 2128 00a4 A023     		movs	r3, #160
 2129 00a6 D362     		str	r3, [r2, #44]
 169:Src/main.c    **** 			init();
 2130              		.loc 1 169 3 is_stmt 1 view .LVU568
 169:Src/main.c    **** 			init();
 2131              		.loc 1 169 21 is_stmt 0 view .LVU569
 2132 00a8 0D4B     		ldr	r3, .L136+24
 2133 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 169:Src/main.c    **** 			init();
 2134              		.loc 1 169 6 view .LVU570
 2135 00ac 002B     		cmp	r3, #0
 2136 00ae DFD1     		bne	.L128
 170:Src/main.c    **** 		} else if (current_state == STATE_IDLE) {
 2137              		.loc 1 170 4 is_stmt 1 view .LVU571
 2138 00b0 FFF7FEFF 		bl	init
 2139              	.LVL137:
 2140 00b4 E2E7     		b	.L127
 2141              	.L133:
 172:Src/main.c    **** 		} else if (current_state == STATE_SETUP) {
 2142              		.loc 1 172 4 view .LVU572
 2143 00b6 FFF7FEFF 		bl	idle
 2144              	.LVL138:
 2145 00ba DFE7     		b	.L127
 2146              	.L134:
 174:Src/main.c    **** 		} else if (current_state == STATE_RUN) {
 2147              		.loc 1 174 4 view .LVU573
 2148 00bc FFF7FEFF 		bl	setup
 2149              	.LVL139:
 2150 00c0 DCE7     		b	.L127
 2151              	.L135:
 176:Src/main.c    **** 		}
ARM GAS  /tmp/cchXJTuc.s 			page 58


 2152              		.loc 1 176 4 view .LVU574
 2153 00c2 FFF7FEFF 		bl	run
 2154              	.LVL140:
 2155 00c6 D9E7     		b	.L127
 2156              	.L137:
 2157              		.align	2
 2158              	.L136:
 2159 00c8 00000000 		.word	htim2
 2160 00cc 00000000 		.word	can1
 2161 00d0 00000000 		.word	hcan1
 2162 00d4 00000000 		.word	debug_rx_count
 2163 00d8 00000000 		.word	debug_rx
 2164 00dc 00000000 		.word	huart3
 2165 00e0 00000000 		.word	current_state
 2166 00e4 00000000 		.word	accel
 2167 00e8 00000000 		.word	.LANCHOR0
 2168              		.cfi_endproc
 2169              	.LFE144:
 2171              		.global	counter
 2172              		.comm	sFilter,40,4
 2173              		.comm	i_debug,1,1
 2174              		.comm	huart3,128,4
 2175              		.comm	htim2,64,4
 2176              		.comm	hsd1,132,4
 2177              		.comm	hcan1,40,4
 2178              		.comm	current_state,1,1
 2179              		.section	.bss.counter,"aw",%nobits
 2180              		.align	2
 2181              		.set	.LANCHOR0,. + 0
 2184              	counter:
 2185 0000 00000000 		.space	4
 2186              		.text
 2187              	.Letext0:
 2188              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 2189              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2190              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2191              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 2192              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 2193              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2194              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2195              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 2196              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 2197              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 2198              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 2199              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 2200              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 2201              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 2202              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 2203              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 2204              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 2205              		.file 19 "Middlewares/Third_Party/FatFs/src/integer.h"
 2206              		.file 20 "/usr/arm-none-eabi/include/sys/lock.h"
 2207              		.file 21 "/usr/arm-none-eabi/include/sys/_types.h"
 2208              		.file 22 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 2209              		.file 23 "/usr/arm-none-eabi/include/sys/reent.h"
 2210              		.file 24 "/usr/arm-none-eabi/include/stdlib.h"
 2211              		.file 25 "Middlewares/Third_Party/FatFs/src/ff.h"
ARM GAS  /tmp/cchXJTuc.s 			page 59


 2212              		.file 26 "Middlewares/Third_Party/FatFs/src/diskio.h"
 2213              		.file 27 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 2214              		.file 28 "Inc/sd_diskio.h"
 2215              		.file 29 "Inc/fatfs.h"
 2216              		.file 30 "Inc/can.h"
 2217              		.file 31 "Inc/pedals.h"
 2218              		.file 32 "Inc/global_variables.h"
 2219              		.file 33 "Inc/state.h"
 2220              		.file 34 "/usr/arm-none-eabi/include/stdio.h"
 2221              		.file 35 "/usr/arm-none-eabi/include/string.h"
 2222              		.file 36 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 2223              		.file 37 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 2224              		.file 38 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 2225              		.file 39 "Inc/sd.h"
 2226              		.file 40 "<built-in>"
ARM GAS  /tmp/cchXJTuc.s 			page 60


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cchXJTuc.s:17     .text.MX_SDMMC1_SD_Init:0000000000000000 $t
     /tmp/cchXJTuc.s:24     .text.MX_SDMMC1_SD_Init:0000000000000000 MX_SDMMC1_SD_Init
     /tmp/cchXJTuc.s:62     .text.MX_SDMMC1_SD_Init:0000000000000018 $d
                            *COM*:0000000000000084 hsd1
     /tmp/cchXJTuc.s:68     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cchXJTuc.s:74     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cchXJTuc.s:223    .text.MX_GPIO_Init:00000000000000a4 $d
     /tmp/cchXJTuc.s:231    .text.MX_NVIC_Init:0000000000000000 $t
     /tmp/cchXJTuc.s:237    .text.MX_NVIC_Init:0000000000000000 MX_NVIC_Init
     /tmp/cchXJTuc.s:324    .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:0000000000000000 $d
     /tmp/cchXJTuc.s:328    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cchXJTuc.s:335    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cchXJTuc.s:580    .text.HAL_TIM_PeriodElapsedCallback:0000000000000110 $d
                            *COM*:0000000000000040 htim2
                            *COM*:0000000000000080 huart3
     /tmp/cchXJTuc.s:600    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/cchXJTuc.s:607    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/cchXJTuc.s:689    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000044 $d
                            *COM*:0000000000000028 hcan1
     /tmp/cchXJTuc.s:696    .rodata.HAL_CAN_RxFifo1MsgPendingCallback.str1.4:0000000000000000 $d
     /tmp/cchXJTuc.s:700    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/cchXJTuc.s:707    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/cchXJTuc.s:745    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000018 $d
     /tmp/cchXJTuc.s:752    .rodata.HAL_CAN_RxFifo0FullCallback.str1.4:0000000000000000 $d
     /tmp/cchXJTuc.s:756    .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 $t
     /tmp/cchXJTuc.s:763    .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 HAL_CAN_RxFifo0FullCallback
     /tmp/cchXJTuc.s:801    .text.HAL_CAN_RxFifo0FullCallback:0000000000000018 $d
     /tmp/cchXJTuc.s:808    .rodata.HAL_CAN_RxFifo1FullCallback.str1.4:0000000000000000 $d
     /tmp/cchXJTuc.s:812    .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 $t
     /tmp/cchXJTuc.s:819    .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 HAL_CAN_RxFifo1FullCallback
     /tmp/cchXJTuc.s:857    .text.HAL_CAN_RxFifo1FullCallback:0000000000000018 $d
     /tmp/cchXJTuc.s:864    .rodata.HAL_CAN_TxMailbox0CompleteCallback.str1.4:0000000000000000 $d
     /tmp/cchXJTuc.s:871    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 $t
     /tmp/cchXJTuc.s:878    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 HAL_CAN_TxMailbox0CompleteCallback
     /tmp/cchXJTuc.s:975    .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000068 $d
     /tmp/cchXJTuc.s:986    .rodata.HAL_CAN_TxMailbox1CompleteCallback.str1.4:0000000000000000 $d
     /tmp/cchXJTuc.s:990    .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 $t
     /tmp/cchXJTuc.s:997    .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 HAL_CAN_TxMailbox1CompleteCallback
     /tmp/cchXJTuc.s:1097   .text.HAL_CAN_TxMailbox1CompleteCallback:000000000000006c $d
     /tmp/cchXJTuc.s:1108   .rodata.HAL_CAN_TxMailbox2CompleteCallback.str1.4:0000000000000000 $d
     /tmp/cchXJTuc.s:1112   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 $t
     /tmp/cchXJTuc.s:1119   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 HAL_CAN_TxMailbox2CompleteCallback
     /tmp/cchXJTuc.s:1219   .text.HAL_CAN_TxMailbox2CompleteCallback:000000000000006c $d
     /tmp/cchXJTuc.s:1230   .rodata.HAL_CAN_ErrorCallback.str1.4:0000000000000000 $d
     /tmp/cchXJTuc.s:1234   .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/cchXJTuc.s:1241   .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/cchXJTuc.s:1299   .text.HAL_CAN_ErrorCallback:0000000000000034 $d
     /tmp/cchXJTuc.s:1308   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cchXJTuc.s:1315   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cchXJTuc.s:1412   .text.HAL_UART_RxCpltCallback:0000000000000060 $d
     /tmp/cchXJTuc.s:1420   .text.Error_Handler:0000000000000000 $t
     /tmp/cchXJTuc.s:1427   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cchXJTuc.s:1463   .text.Error_Handler:0000000000000028 $d
     /tmp/cchXJTuc.s:1468   .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/cchXJTuc.s:1474   .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
ARM GAS  /tmp/cchXJTuc.s 			page 61


     /tmp/cchXJTuc.s:1538   .text.MX_USART3_UART_Init:0000000000000030 $d
     /tmp/cchXJTuc.s:1545   .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/cchXJTuc.s:1551   .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/cchXJTuc.s:1623   .text.MX_CAN1_Init:000000000000003c $d
     /tmp/cchXJTuc.s:1629   .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/cchXJTuc.s:1635   .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/cchXJTuc.s:1746   .text.MX_TIM2_Init:000000000000006c $d
     /tmp/cchXJTuc.s:1751   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cchXJTuc.s:1758   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cchXJTuc.s:1958   .text.SystemClock_Config:00000000000000cc $d
     /tmp/cchXJTuc.s:1965   .text.main:0000000000000000 $t
     /tmp/cchXJTuc.s:1972   .text.main:0000000000000000 main
     /tmp/cchXJTuc.s:2159   .text.main:00000000000000c8 $d
                            *COM*:0000000000000001 current_state
     /tmp/cchXJTuc.s:2184   .bss.counter:0000000000000000 counter
                            *COM*:0000000000000028 sFilter
                            *COM*:0000000000000001 i_debug
     /tmp/cchXJTuc.s:2180   .bss.counter:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Transmit
count_ms
count_ms_abs
accel_implausibility_check_count_flag
count_dec
count_inverter
count_imu
count_atc
count_sec
count_min
count_hour
accel_implausibility_check_count
atc_connected
imu_connected
HAL_GPIO_TogglePin
HAL_CAN_GetRxFifoFillLevel
HAL_CAN_GetRxMessage
fifoRxDataCAN_push
can1
sprintf
strlen
fifoTxDataCAN_high_pop
CAN_Send_IT
fifoTxDataCAN_normal_pop
txt
CAN_Send_Bck
HAL_UART_Receive_IT
debug_rx_count
debug_rx
debug_msg_arrived
HAL_Delay
HAL_UART_Init
HAL_CAN_Init
ARM GAS  /tmp/cchXJTuc.s 			page 62


HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_FATFS_Init
HAL_TIM_Base_Start_IT
can_init
init_sd
init
idle
setup
run
accel
