ARM GAS  /tmp/ccEvYcEU.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"state.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.set_bit_uint8,"ax",%progbits
  17              		.align	1
  18              		.global	set_bit_uint8
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	set_bit_uint8:
  26              	.LVL0:
  27              	.LFB144:
  28              		.file 1 "Src/state.c"
   1:Src/state.c   **** #include "state.h"
   2:Src/state.c   **** #include "can.h"
   3:Src/state.c   **** #include "global_variables.h"
   4:Src/state.c   **** #include "stdio.h"
   5:Src/state.c   **** #include "stm32f7xx_hal.h"
   6:Src/state.c   **** #include "string.h"
   7:Src/state.c   **** /*******************************************************************
   8:Src/state.c   ****  *                         USER FUNCTIONS
   9:Src/state.c   ****  *******************************************************************/ 
  10:Src/state.c   **** void set_bit_uint8(uint8_t* _var, uint8_t _nBit, uint8_t _bool){
  29              		.loc 1 10 64 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  11:Src/state.c   **** 	if(_bool == 0 || _bool == 1){
  34              		.loc 1 11 2 view .LVU1
  35              		.loc 1 11 4 is_stmt 0 view .LVU2
  36 0000 012A     		cmp	r2, #1
  37 0002 00D9     		bls	.L7
  38 0004 7047     		bx	lr
  39              	.L7:
  10:Src/state.c   **** 	if(_bool == 0 || _bool == 1){
  40              		.loc 1 10 64 view .LVU3
  41 0006 10B4     		push	{r4}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 4
  44              		.cfi_offset 4, -4
  12:Src/state.c   **** 		(*_var) = ((*_var) & ( 0b11111111 ^ (0b00000001 << _nBit))) | (0b00000000 | (_bool << _nBit));
  45              		.loc 1 12 3 is_stmt 1 view .LVU4
ARM GAS  /tmp/ccEvYcEU.s 			page 2


  46              		.loc 1 12 15 is_stmt 0 view .LVU5
  47 0008 90F90040 		ldrsb	r4, [r0]
  48              		.loc 1 12 51 view .LVU6
  49 000c 0123     		movs	r3, #1
  50 000e 8B40     		lsls	r3, r3, r1
  51              		.loc 1 12 37 view .LVU7
  52 0010 DB43     		mvns	r3, r3
  53 0012 5BB2     		sxtb	r3, r3
  54              		.loc 1 12 22 view .LVU8
  55 0014 2340     		ands	r3, r3, r4
  56              		.loc 1 12 77 view .LVU9
  57 0016 8A40     		lsls	r2, r2, r1
  58              	.LVL1:
  59              		.loc 1 12 63 view .LVU10
  60 0018 1A43     		orrs	r2, r2, r3
  61              		.loc 1 12 11 view .LVU11
  62 001a 0270     		strb	r2, [r0]
  13:Src/state.c   **** 	}
  14:Src/state.c   **** }
  63              		.loc 1 14 1 view .LVU12
  64 001c 5DF8044B 		ldr	r4, [sp], #4
  65              	.LCFI1:
  66              		.cfi_restore 4
  67              		.cfi_def_cfa_offset 0
  68 0020 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE144:
  72              		.section	.text.init,"ax",%progbits
  73              		.align	1
  74              		.global	init
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv5-d16
  80              	init:
  81              	.LFB145:
  15:Src/state.c   **** /*******************************************************************
  16:Src/state.c   ****  *                         STATE VARIABLES
  17:Src/state.c   ****  *******************************************************************/ 
  18:Src/state.c   **** /*** GLOBAL ***/
  19:Src/state.c   **** int setup_init = 0;
  20:Src/state.c   **** int critical_errors = 0;
  21:Src/state.c   **** 
  22:Src/state.c   **** /*** FOR INIT STATE ***/
  23:Src/state.c   **** int init_step = 0;
  24:Src/state.c   **** uint32_t init_step_start_time = 0;
  25:Src/state.c   **** uint32_t init_precharge_start_time = 0;
  26:Src/state.c   **** 
  27:Src/state.c   **** uint8_t inv_init_response = 0; // bit 0 = inv R -> 0 = no / 1 = YES ---- bit 1 = inv L -> 0 = no / 
  28:Src/state.c   **** // Default state
  29:Src/state.c   **** // Init variables
  30:Src/state.c   **** /*******************************************************************
  31:Src/state.c   ****  *                         START INIT STATE
  32:Src/state.c   ****  *******************************************************************/
  33:Src/state.c   **** void init()
  34:Src/state.c   **** {
  82              		.loc 1 34 1 is_stmt 1 view -0
ARM GAS  /tmp/ccEvYcEU.s 			page 3


  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  87              	.LCFI2:
  88              		.cfi_def_cfa_offset 40
  89              		.cfi_offset 3, -40
  90              		.cfi_offset 4, -36
  91              		.cfi_offset 5, -32
  92              		.cfi_offset 6, -28
  93              		.cfi_offset 7, -24
  94              		.cfi_offset 8, -20
  95              		.cfi_offset 9, -16
  96              		.cfi_offset 10, -12
  97              		.cfi_offset 11, -8
  98              		.cfi_offset 14, -4
  35:Src/state.c   **** 	if(init_step == 0){
  99              		.loc 1 35 2 view .LVU14
 100              		.loc 1 35 15 is_stmt 0 view .LVU15
 101 0004 574B     		ldr	r3, .L22
 102 0006 1B68     		ldr	r3, [r3]
 103              		.loc 1 35 4 view .LVU16
 104 0008 53B1     		cbz	r3, .L17
  36:Src/state.c   **** 		init_step = 1;
  37:Src/state.c   **** 		/* Send inverter L disable */
  38:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_SX;
  39:Src/state.c   **** 		can3.dataTx[0] = 0x51;
  40:Src/state.c   **** 		can3.dataTx[1] = 0x04;
  41:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  42:Src/state.c   **** 		can3.tx_size = 3;
  43:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  44:Src/state.c   **** 
  45:Src/state.c   **** 		/* Send inverter R disable */
  46:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_DX;
  47:Src/state.c   **** 		can3.dataTx[0] = 0x51;
  48:Src/state.c   **** 		can3.dataTx[1] = 0x04;
  49:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  50:Src/state.c   **** 		can3.tx_size = 3;
  51:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  52:Src/state.c   **** 
  53:Src/state.c   **** 		/* Send req to inverter L presence */
  54:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_SX;
  55:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
  56:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
  57:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  58:Src/state.c   **** 		can3.tx_size = 3;
  59:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  60:Src/state.c   **** 
  61:Src/state.c   **** 		/* Send req to inverter R presence */
  62:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_DX;
  63:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
  64:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
  65:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  66:Src/state.c   **** 		can3.tx_size = 3;
  67:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  68:Src/state.c   **** 
  69:Src/state.c   **** 		init_step_start_time = count_ms_abs; // save the curret time
ARM GAS  /tmp/ccEvYcEU.s 			page 4


  70:Src/state.c   **** 
  71:Src/state.c   **** 	}else if(init_step == 1){
 105              		.loc 1 71 8 is_stmt 1 view .LVU17
 106              		.loc 1 71 10 is_stmt 0 view .LVU18
 107 000a 012B     		cmp	r3, #1
 108 000c 51D0     		beq	.L18
  72:Src/state.c   **** 		if (fifoRxDataCAN_pop(&can1)){
  73:Src/state.c   **** 			switch (can1.rx_id)
  74:Src/state.c   **** 			{
  75:Src/state.c   **** 			case ID_ASK_INV_DX:
  76:Src/state.c   **** 				if(can1.dataRx[0] == 0xE2 && can1.dataRx[1] == 0x01 && can1.dataRx[2] == 0x00 && can1.dataRx[3]
  77:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
  78:Src/state.c   **** 				}
  79:Src/state.c   **** 				break;
  80:Src/state.c   **** 			case ID_ASK_INV_SX:
  81:Src/state.c   **** 				if(can1.dataRx[0] == 0xE2 && can1.dataRx[1] == 0x01 && can1.dataRx[2] == 0x00 && can1.dataRx[3]
  82:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
  83:Src/state.c   **** 				}
  84:Src/state.c   **** 			default:
  85:Src/state.c   **** 				break;
  86:Src/state.c   **** 			}
  87:Src/state.c   **** 		}
  88:Src/state.c   **** 		if(inv_init_response == 3){ // means that each inv has responded
  89:Src/state.c   **** 			init_step = 2;
  90:Src/state.c   **** 		}else{
  91:Src/state.c   **** 			if(count_ms_abs - init_step_start_time > 1000 ){ //if is passed more than 1 second -> go ahead
  92:Src/state.c   **** 				/* Send Error to steer */ 
  93:Src/state.c   **** 
  94:Src/state.c   **** 				//TODO: send errors
  95:Src/state.c   **** 
  96:Src/state.c   **** 				init_step = 3;
  97:Src/state.c   **** 			}
  98:Src/state.c   **** 		}
  99:Src/state.c   **** 	}else if(init_step == 2){
 109              		.loc 1 99 8 is_stmt 1 view .LVU19
 110              		.loc 1 99 10 is_stmt 0 view .LVU20
 111 000e 022B     		cmp	r3, #2
 112 0010 00F08780 		beq	.L19
 100:Src/state.c   **** 		/* Send periodical status inv L */
 101:Src/state.c   **** 		can1.tx_id = ID_ASK_INV_SX;
 102:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 103:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 104:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 105:Src/state.c   **** 		can1.tx_size = 3;
 106:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 107:Src/state.c   **** 
 108:Src/state.c   **** 		/* Send periodical status inv R */
 109:Src/state.c   **** 		can1.tx_id = ID_ASK_INV_DX;
 110:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 111:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 112:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 113:Src/state.c   **** 		can1.tx_size = 3;
 114:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 115:Src/state.c   **** 
 116:Src/state.c   **** 		init_step = 3;
 117:Src/state.c   **** 	}else if(init_step == 3){
 113              		.loc 1 117 8 is_stmt 1 view .LVU21
ARM GAS  /tmp/ccEvYcEU.s 			page 5


 114              		.loc 1 117 10 is_stmt 0 view .LVU22
 115 0014 032B     		cmp	r3, #3
 116 0016 4AD1     		bne	.L8
 118:Src/state.c   **** 		current_state = STATE_IDLE; // Change state to STATE_IDLE
 117              		.loc 1 118 3 is_stmt 1 view .LVU23
 118              		.loc 1 118 17 is_stmt 0 view .LVU24
 119 0018 534B     		ldr	r3, .L22+4
 120 001a 0122     		movs	r2, #1
 121 001c 1A70     		strb	r2, [r3]
 119:Src/state.c   **** 		/* Send msg to steer of changing state */
 120:Src/state.c   **** 	}
 121:Src/state.c   **** }
 122              		.loc 1 121 1 view .LVU25
 123 001e 46E0     		b	.L8
 124              	.L17:
  36:Src/state.c   **** 		/* Send inverter L disable */
 125              		.loc 1 36 3 is_stmt 1 view .LVU26
  36:Src/state.c   **** 		/* Send inverter L disable */
 126              		.loc 1 36 13 is_stmt 0 view .LVU27
 127 0020 504B     		ldr	r3, .L22
 128 0022 0122     		movs	r2, #1
 129 0024 1A60     		str	r2, [r3]
  38:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 130              		.loc 1 38 3 is_stmt 1 view .LVU28
  38:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 131              		.loc 1 38 14 is_stmt 0 view .LVU29
 132 0026 514C     		ldr	r4, .L22+8
 133 0028 40F20128 		movw	r8, #513
 134 002c C4F82C80 		str	r8, [r4, #44]
  39:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 135              		.loc 1 39 3 is_stmt 1 view .LVU30
  39:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 136              		.loc 1 39 18 is_stmt 0 view .LVU31
 137 0030 4FF0510B 		mov	fp, #81
 138 0034 84F80CB0 		strb	fp, [r4, #12]
  40:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 139              		.loc 1 40 3 is_stmt 1 view .LVU32
  40:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 140              		.loc 1 40 18 is_stmt 0 view .LVU33
 141 0038 4FF00409 		mov	r9, #4
 142 003c 84F80D90 		strb	r9, [r4, #13]
  41:Src/state.c   **** 		can3.tx_size = 3;
 143              		.loc 1 41 3 is_stmt 1 view .LVU34
  41:Src/state.c   **** 		can3.tx_size = 3;
 144              		.loc 1 41 18 is_stmt 0 view .LVU35
 145 0040 0025     		movs	r5, #0
 146 0042 A573     		strb	r5, [r4, #14]
  42:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 147              		.loc 1 42 3 is_stmt 1 view .LVU36
  42:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 148              		.loc 1 42 16 is_stmt 0 view .LVU37
 149 0044 0327     		movs	r7, #3
 150 0046 2760     		str	r7, [r4]
  43:Src/state.c   **** 
 151              		.loc 1 43 3 is_stmt 1 view .LVU38
 152 0048 494E     		ldr	r6, .L22+12
 153 004a 2946     		mov	r1, r5
ARM GAS  /tmp/ccEvYcEU.s 			page 6


 154 004c 3046     		mov	r0, r6
 155 004e FFF7FEFF 		bl	CAN_Send
 156              	.LVL2:
  46:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 157              		.loc 1 46 3 view .LVU39
  46:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 158              		.loc 1 46 14 is_stmt 0 view .LVU40
 159 0052 40F2022A 		movw	r10, #514
 160 0056 C4F82CA0 		str	r10, [r4, #44]
  47:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 161              		.loc 1 47 3 is_stmt 1 view .LVU41
  47:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 162              		.loc 1 47 18 is_stmt 0 view .LVU42
 163 005a 84F80CB0 		strb	fp, [r4, #12]
  48:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 164              		.loc 1 48 3 is_stmt 1 view .LVU43
  48:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 165              		.loc 1 48 18 is_stmt 0 view .LVU44
 166 005e 84F80D90 		strb	r9, [r4, #13]
  49:Src/state.c   **** 		can3.tx_size = 3;
 167              		.loc 1 49 3 is_stmt 1 view .LVU45
  49:Src/state.c   **** 		can3.tx_size = 3;
 168              		.loc 1 49 18 is_stmt 0 view .LVU46
 169 0062 A573     		strb	r5, [r4, #14]
  50:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 170              		.loc 1 50 3 is_stmt 1 view .LVU47
  50:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 171              		.loc 1 50 16 is_stmt 0 view .LVU48
 172 0064 2760     		str	r7, [r4]
  51:Src/state.c   **** 
 173              		.loc 1 51 3 is_stmt 1 view .LVU49
 174 0066 2946     		mov	r1, r5
 175 0068 3046     		mov	r0, r6
 176 006a FFF7FEFF 		bl	CAN_Send
 177              	.LVL3:
  54:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 178              		.loc 1 54 3 view .LVU50
  54:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 179              		.loc 1 54 14 is_stmt 0 view .LVU51
 180 006e C4F82C80 		str	r8, [r4, #44]
  55:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 181              		.loc 1 55 3 is_stmt 1 view .LVU52
  55:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 182              		.loc 1 55 18 is_stmt 0 view .LVU53
 183 0072 4FF03D09 		mov	r9, #61
 184 0076 84F80C90 		strb	r9, [r4, #12]
  56:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 185              		.loc 1 56 3 is_stmt 1 view .LVU54
  56:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 186              		.loc 1 56 18 is_stmt 0 view .LVU55
 187 007a 4FF0E208 		mov	r8, #226
 188 007e 84F80D80 		strb	r8, [r4, #13]
  57:Src/state.c   **** 		can3.tx_size = 3;
 189              		.loc 1 57 3 is_stmt 1 view .LVU56
  57:Src/state.c   **** 		can3.tx_size = 3;
 190              		.loc 1 57 18 is_stmt 0 view .LVU57
 191 0082 A573     		strb	r5, [r4, #14]
ARM GAS  /tmp/ccEvYcEU.s 			page 7


  58:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 192              		.loc 1 58 3 is_stmt 1 view .LVU58
  58:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 193              		.loc 1 58 16 is_stmt 0 view .LVU59
 194 0084 2760     		str	r7, [r4]
  59:Src/state.c   **** 
 195              		.loc 1 59 3 is_stmt 1 view .LVU60
 196 0086 2946     		mov	r1, r5
 197 0088 3046     		mov	r0, r6
 198 008a FFF7FEFF 		bl	CAN_Send
 199              	.LVL4:
  62:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 200              		.loc 1 62 3 view .LVU61
  62:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 201              		.loc 1 62 14 is_stmt 0 view .LVU62
 202 008e C4F82CA0 		str	r10, [r4, #44]
  63:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 203              		.loc 1 63 3 is_stmt 1 view .LVU63
  63:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 204              		.loc 1 63 18 is_stmt 0 view .LVU64
 205 0092 84F80C90 		strb	r9, [r4, #12]
  64:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 206              		.loc 1 64 3 is_stmt 1 view .LVU65
  64:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 207              		.loc 1 64 18 is_stmt 0 view .LVU66
 208 0096 84F80D80 		strb	r8, [r4, #13]
  65:Src/state.c   **** 		can3.tx_size = 3;
 209              		.loc 1 65 3 is_stmt 1 view .LVU67
  65:Src/state.c   **** 		can3.tx_size = 3;
 210              		.loc 1 65 18 is_stmt 0 view .LVU68
 211 009a A573     		strb	r5, [r4, #14]
  66:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 212              		.loc 1 66 3 is_stmt 1 view .LVU69
  66:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 213              		.loc 1 66 16 is_stmt 0 view .LVU70
 214 009c 2760     		str	r7, [r4]
  67:Src/state.c   **** 
 215              		.loc 1 67 3 is_stmt 1 view .LVU71
 216 009e 2946     		mov	r1, r5
 217 00a0 3046     		mov	r0, r6
 218 00a2 FFF7FEFF 		bl	CAN_Send
 219              	.LVL5:
  69:Src/state.c   **** 
 220              		.loc 1 69 3 view .LVU72
  69:Src/state.c   **** 
 221              		.loc 1 69 24 is_stmt 0 view .LVU73
 222 00a6 334B     		ldr	r3, .L22+16
 223 00a8 1A68     		ldr	r2, [r3]
 224 00aa 334B     		ldr	r3, .L22+20
 225 00ac 1A60     		str	r2, [r3]
 226              	.L8:
 227              		.loc 1 121 1 view .LVU74
 228 00ae BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 229              	.L18:
  72:Src/state.c   **** 			switch (can1.rx_id)
 230              		.loc 1 72 3 is_stmt 1 view .LVU75
  72:Src/state.c   **** 			switch (can1.rx_id)
ARM GAS  /tmp/ccEvYcEU.s 			page 8


 231              		.loc 1 72 7 is_stmt 0 view .LVU76
 232 00b2 2F48     		ldr	r0, .L22+12
 233 00b4 FFF7FEFF 		bl	fifoRxDataCAN_pop
 234              	.LVL6:
  72:Src/state.c   **** 			switch (can1.rx_id)
 235              		.loc 1 72 6 view .LVU77
 236 00b8 70B1     		cbz	r0, .L12
  73:Src/state.c   **** 			{
 237              		.loc 1 73 4 is_stmt 1 view .LVU78
  73:Src/state.c   **** 			{
 238              		.loc 1 73 16 is_stmt 0 view .LVU79
 239 00ba 2D4B     		ldr	r3, .L22+12
 240 00bc 1B6B     		ldr	r3, [r3, #48]
  73:Src/state.c   **** 			{
 241              		.loc 1 73 4 view .LVU80
 242 00be 40F20122 		movw	r2, #513
 243 00c2 9342     		cmp	r3, r2
 244 00c4 1ED0     		beq	.L13
 245 00c6 40F20222 		movw	r2, #514
 246 00ca 9342     		cmp	r3, r2
 247 00cc 04D1     		bne	.L12
  76:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
 248              		.loc 1 76 5 is_stmt 1 view .LVU81
  76:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
 249              		.loc 1 76 83 is_stmt 0 view .LVU82
 250 00ce 284B     		ldr	r3, .L22+12
 251 00d0 5B69     		ldr	r3, [r3, #20]
  76:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
 252              		.loc 1 76 7 view .LVU83
 253 00d2 B3F5F17F 		cmp	r3, #482
 254 00d6 0FD0     		beq	.L20
 255              	.L12:
  88:Src/state.c   **** 			init_step = 2;
 256              		.loc 1 88 3 is_stmt 1 view .LVU84
  88:Src/state.c   **** 			init_step = 2;
 257              		.loc 1 88 24 is_stmt 0 view .LVU85
 258 00d8 284B     		ldr	r3, .L22+24
 259 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88:Src/state.c   **** 			init_step = 2;
 260              		.loc 1 88 5 view .LVU86
 261 00dc 032B     		cmp	r3, #3
 262 00de 1CD0     		beq	.L21
  91:Src/state.c   **** 				/* Send Error to steer */ 
 263              		.loc 1 91 4 is_stmt 1 view .LVU87
  91:Src/state.c   **** 				/* Send Error to steer */ 
 264              		.loc 1 91 20 is_stmt 0 view .LVU88
 265 00e0 244B     		ldr	r3, .L22+16
 266 00e2 1B68     		ldr	r3, [r3]
 267 00e4 244A     		ldr	r2, .L22+20
 268 00e6 1268     		ldr	r2, [r2]
 269 00e8 9B1A     		subs	r3, r3, r2
  91:Src/state.c   **** 				/* Send Error to steer */ 
 270              		.loc 1 91 6 view .LVU89
 271 00ea B3F57A7F 		cmp	r3, #1000
 272 00ee DED9     		bls	.L8
  96:Src/state.c   **** 			}
 273              		.loc 1 96 5 is_stmt 1 view .LVU90
ARM GAS  /tmp/ccEvYcEU.s 			page 9


  96:Src/state.c   **** 			}
 274              		.loc 1 96 15 is_stmt 0 view .LVU91
 275 00f0 1C4B     		ldr	r3, .L22
 276 00f2 0322     		movs	r2, #3
 277 00f4 1A60     		str	r2, [r3]
 278 00f6 DAE7     		b	.L8
 279              	.L20:
  77:Src/state.c   **** 				}
 280              		.loc 1 77 6 is_stmt 1 view .LVU92
 281 00f8 0122     		movs	r2, #1
 282 00fa 0021     		movs	r1, #0
 283 00fc 1F48     		ldr	r0, .L22+24
 284 00fe FFF7FEFF 		bl	set_bit_uint8
 285              	.LVL7:
 286 0102 E9E7     		b	.L12
 287              	.L13:
  81:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
 288              		.loc 1 81 5 view .LVU93
  81:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
 289              		.loc 1 81 83 is_stmt 0 view .LVU94
 290 0104 1A4B     		ldr	r3, .L22+12
 291 0106 5B69     		ldr	r3, [r3, #20]
  81:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
 292              		.loc 1 81 7 view .LVU95
 293 0108 B3F5F17F 		cmp	r3, #482
 294 010c E4D1     		bne	.L12
  82:Src/state.c   **** 				}
 295              		.loc 1 82 6 is_stmt 1 view .LVU96
 296 010e 0122     		movs	r2, #1
 297 0110 1146     		mov	r1, r2
 298 0112 1A48     		ldr	r0, .L22+24
 299 0114 FFF7FEFF 		bl	set_bit_uint8
 300              	.LVL8:
 301 0118 DEE7     		b	.L12
 302              	.L21:
  89:Src/state.c   **** 		}else{
 303              		.loc 1 89 4 view .LVU97
  89:Src/state.c   **** 		}else{
 304              		.loc 1 89 14 is_stmt 0 view .LVU98
 305 011a 124B     		ldr	r3, .L22
 306 011c 0222     		movs	r2, #2
 307 011e 1A60     		str	r2, [r3]
 308 0120 C5E7     		b	.L8
 309              	.L19:
 101:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 310              		.loc 1 101 3 is_stmt 1 view .LVU99
 101:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 311              		.loc 1 101 14 is_stmt 0 view .LVU100
 312 0122 134C     		ldr	r4, .L22+12
 313 0124 40F20123 		movw	r3, #513
 314 0128 E362     		str	r3, [r4, #44]
 102:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 315              		.loc 1 102 3 is_stmt 1 view .LVU101
 102:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 316              		.loc 1 102 18 is_stmt 0 view .LVU102
 317 012a 4FF03D08 		mov	r8, #61
 318 012e 84F80C80 		strb	r8, [r4, #12]
ARM GAS  /tmp/ccEvYcEU.s 			page 10


 103:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 319              		.loc 1 103 3 is_stmt 1 view .LVU103
 103:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 320              		.loc 1 103 18 is_stmt 0 view .LVU104
 321 0132 4027     		movs	r7, #64
 322 0134 6773     		strb	r7, [r4, #13]
 104:Src/state.c   **** 		can1.tx_size = 3;
 323              		.loc 1 104 3 is_stmt 1 view .LVU105
 104:Src/state.c   **** 		can1.tx_size = 3;
 324              		.loc 1 104 18 is_stmt 0 view .LVU106
 325 0136 FA26     		movs	r6, #250
 326 0138 A673     		strb	r6, [r4, #14]
 105:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 327              		.loc 1 105 3 is_stmt 1 view .LVU107
 105:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 328              		.loc 1 105 16 is_stmt 0 view .LVU108
 329 013a 0325     		movs	r5, #3
 330 013c 2560     		str	r5, [r4]
 106:Src/state.c   **** 
 331              		.loc 1 106 3 is_stmt 1 view .LVU109
 332 013e 0021     		movs	r1, #0
 333 0140 2046     		mov	r0, r4
 334 0142 FFF7FEFF 		bl	CAN_Send
 335              	.LVL9:
 109:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 336              		.loc 1 109 3 view .LVU110
 109:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 337              		.loc 1 109 14 is_stmt 0 view .LVU111
 338 0146 40F20223 		movw	r3, #514
 339 014a E362     		str	r3, [r4, #44]
 110:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 340              		.loc 1 110 3 is_stmt 1 view .LVU112
 110:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 341              		.loc 1 110 18 is_stmt 0 view .LVU113
 342 014c 84F80C80 		strb	r8, [r4, #12]
 111:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 343              		.loc 1 111 3 is_stmt 1 view .LVU114
 111:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 344              		.loc 1 111 18 is_stmt 0 view .LVU115
 345 0150 6773     		strb	r7, [r4, #13]
 112:Src/state.c   **** 		can1.tx_size = 3;
 346              		.loc 1 112 3 is_stmt 1 view .LVU116
 112:Src/state.c   **** 		can1.tx_size = 3;
 347              		.loc 1 112 18 is_stmt 0 view .LVU117
 348 0152 A673     		strb	r6, [r4, #14]
 113:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 349              		.loc 1 113 3 is_stmt 1 view .LVU118
 113:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 350              		.loc 1 113 16 is_stmt 0 view .LVU119
 351 0154 2560     		str	r5, [r4]
 114:Src/state.c   **** 
 352              		.loc 1 114 3 is_stmt 1 view .LVU120
 353 0156 0021     		movs	r1, #0
 354 0158 2046     		mov	r0, r4
 355 015a FFF7FEFF 		bl	CAN_Send
 356              	.LVL10:
 116:Src/state.c   **** 	}else if(init_step == 3){
ARM GAS  /tmp/ccEvYcEU.s 			page 11


 357              		.loc 1 116 3 view .LVU121
 116:Src/state.c   **** 	}else if(init_step == 3){
 358              		.loc 1 116 13 is_stmt 0 view .LVU122
 359 015e 014B     		ldr	r3, .L22
 360 0160 1D60     		str	r5, [r3]
 361 0162 A4E7     		b	.L8
 362              	.L23:
 363              		.align	2
 364              	.L22:
 365 0164 00000000 		.word	.LANCHOR0
 366 0168 00000000 		.word	current_state
 367 016c 00000000 		.word	can3
 368 0170 00000000 		.word	can1
 369 0174 00000000 		.word	count_ms_abs
 370 0178 00000000 		.word	.LANCHOR1
 371 017c 00000000 		.word	.LANCHOR2
 372              		.cfi_endproc
 373              	.LFE145:
 375              		.section	.text.setup,"ax",%progbits
 376              		.align	1
 377              		.global	setup
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 381              		.fpu fpv5-d16
 383              	setup:
 384              	.LFB147:
 122:Src/state.c   **** /*******************************************************************
 123:Src/state.c   ****  *                         END INIT STATE
 124:Src/state.c   ****  *******************************************************************/
 125:Src/state.c   **** /*******************************************************************
 126:Src/state.c   ****  *                        START IDLE STATE
 127:Src/state.c   ****  *******************************************************************/
 128:Src/state.c   **** void idle()
 129:Src/state.c   **** {
 130:Src/state.c   **** 	/*if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port,USER_BUTTON_Pin) == GPIO_PIN_SET){
 131:Src/state.c   **** 		sprintf(txt,"%d\r\n%d\r\n%d\r\n%d\r\n",accel.pot1_val,accel.pot2_val,brake.pot1_val,brake.pot2_va
 132:Src/state.c   **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 133:Src/state.c   **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_ALWAYS | FA_WRITE );
 134:Src/state.c   **** 		f_write(&pot_values_f,(TCHAR const*)&txt,strlen(txt), &byteswritten);
 135:Src/state.c   **** 		f_close(&pot_values_f);
 136:Src/state.c   **** 		HAL_Delay(1000);
 137:Src/state.c   **** 	}*/
 138:Src/state.c   **** 	if (debug_msg_arrived == 1)
 139:Src/state.c   **** 	{
 140:Src/state.c   **** 		debug_msg_arrived = 0; // reset flag
 141:Src/state.c   **** 		debug_operations();
 142:Src/state.c   **** 	}
 143:Src/state.c   **** 	if (fifoRxDataCAN_pop(&can1)) // Check if there are messages on CAN1 fifo
 144:Src/state.c   **** 	{
 145:Src/state.c   **** 		switch (can1.rx_id)
 146:Src/state.c   **** 		{
 147:Src/state.c   **** 		case ID_ASK_STATE:
 148:Src/state.c   **** 			can1.dataTx[0] = (uint8_t)current_state;
 149:Src/state.c   **** 			can1.tx_size = 1;
 150:Src/state.c   **** 			can1.tx_id = ID_ACU_1;
 151:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
ARM GAS  /tmp/ccEvYcEU.s 			page 12


 152:Src/state.c   **** 			break;
 153:Src/state.c   **** 		case ID_ASK_INV_DX:
 154:Src/state.c   **** 			break;
 155:Src/state.c   **** 		case ID_ASK_INV_SX:
 156:Src/state.c   **** 			break;
 157:Src/state.c   **** 		case ID_BMS_HV:
 158:Src/state.c   **** 			if (can1.dataRx[0] == 0x03)
 159:Src/state.c   **** 			{
 160:Src/state.c   **** 				// Turn ON tractive system
 161:Src/state.c   **** 				if(critical_errors == 0){
 162:Src/state.c   **** 
 163:Src/state.c   **** 				}
 164:Src/state.c   **** 			}
 165:Src/state.c   **** 			else if (can1.dataRx[0] == 0x04)
 166:Src/state.c   **** 			{
 167:Src/state.c   **** 				// Turn OFF tractive system
 168:Src/state.c   **** 			}
 169:Src/state.c   **** 			break;
 170:Src/state.c   **** 		case ID_BMS_LV:
 171:Src/state.c   **** 			break;
 172:Src/state.c   **** 		case ID_STEERING_WEEL_1:
 173:Src/state.c   **** 			switch (can1.dataRx[0])
 174:Src/state.c   **** 			{
 175:Src/state.c   **** 			case REQUEST_TS_ON:
 176:Src/state.c   **** 				//If req Tractive System ON msg arrives -> go to setup state
 177:Src/state.c   **** 				current_state = STATE_SETUP;
 178:Src/state.c   **** 				break;
 179:Src/state.c   **** 			default:
 180:Src/state.c   **** 				break;
 181:Src/state.c   **** 			}
 182:Src/state.c   **** 			break;
 183:Src/state.c   **** 		case ID_ATC_POT:
 184:Src/state.c   **** 			atc_pot_operations();
 185:Src/state.c   **** 			break;
 186:Src/state.c   **** 		default:
 187:Src/state.c   **** 			break;
 188:Src/state.c   **** 		}
 189:Src/state.c   **** 	}
 190:Src/state.c   **** }
 191:Src/state.c   **** /*******************************************************************
 192:Src/state.c   ****  *                         END IDLE STATE
 193:Src/state.c   ****  *******************************************************************/
 194:Src/state.c   **** /*******************************************************************
 195:Src/state.c   ****  *                        START SETUP STATE
 196:Src/state.c   ****  *******************************************************************/
 197:Src/state.c   **** void setup()
 198:Src/state.c   **** {
 385              		.loc 1 198 1 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389 0000 08B5     		push	{r3, lr}
 390              	.LCFI3:
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 3, -8
 393              		.cfi_offset 14, -4
 199:Src/state.c   **** 	if(setup_init == 0){
ARM GAS  /tmp/ccEvYcEU.s 			page 13


 394              		.loc 1 199 2 view .LVU124
 395              		.loc 1 199 16 is_stmt 0 view .LVU125
 396 0002 164B     		ldr	r3, .L32
 397 0004 1B68     		ldr	r3, [r3]
 398              		.loc 1 199 4 view .LVU126
 399 0006 93B9     		cbnz	r3, .L25
 200:Src/state.c   **** 		setup_init = 1; //set that setup procedure is started
 400              		.loc 1 200 3 is_stmt 1 view .LVU127
 401              		.loc 1 200 14 is_stmt 0 view .LVU128
 402 0008 144B     		ldr	r3, .L32
 403 000a 0122     		movs	r2, #1
 404 000c 1A60     		str	r2, [r3]
 201:Src/state.c   **** 		if((atc_connected == 1) && (brake.pot_avr_100 > 50) && (critical_errors = 0)){
 405              		.loc 1 201 3 is_stmt 1 view .LVU129
 406              		.loc 1 201 21 is_stmt 0 view .LVU130
 407 000e 144B     		ldr	r3, .L32+4
 408 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 409              		.loc 1 201 5 view .LVU131
 410 0012 9342     		cmp	r3, r2
 411 0014 03D0     		beq	.L30
 412              	.L26:
 202:Src/state.c   **** 			//If Analog to CAN device is connected, brake is pressed and there aren't critical erros -> 
 203:Src/state.c   **** 				//-> send pre-charge request to HV
 204:Src/state.c   **** 			can1.tx_id = ID_REQ_PRCH;
 205:Src/state.c   **** 			can1.dataTx[0] = 1;
 206:Src/state.c   **** 			can1.tx_size = 1;
 207:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 208:Src/state.c   **** 			init_precharge_start_time = count_ms_abs; //take the time when the pre-charge is sent
 209:Src/state.c   **** 		}else{
 210:Src/state.c   **** 			//Can't turn on TS caused by some errors
 211:Src/state.c   **** 			current_state = STATE_IDLE; //return to idle state
 413              		.loc 1 211 4 is_stmt 1 view .LVU132
 414              		.loc 1 211 18 is_stmt 0 view .LVU133
 415 0016 134B     		ldr	r3, .L32+8
 416 0018 0122     		movs	r2, #1
 417 001a 1A70     		strb	r2, [r3]
 418              	.L24:
 212:Src/state.c   **** 			// TODO: report error to steer
 213:Src/state.c   **** 		}
 214:Src/state.c   **** 	}else if(setup_init == 1){
 215:Src/state.c   **** 		if (fifoRxDataCAN_pop(&can1)){
 216:Src/state.c   **** 			switch(can1.rx_id){
 217:Src/state.c   **** 				case ID_BMS_HV:
 218:Src/state.c   **** 					if(can1.dataRx[0] == 1){ //Pre-cherge ended sucessfully
 219:Src/state.c   **** 						setup_init = 2;
 220:Src/state.c   **** 					}else{ //Pre-charge failed
 221:Src/state.c   **** 						current_state = STATE_IDLE;
 222:Src/state.c   **** 						//TODO: send error to steer
 223:Src/state.c   **** 					}
 224:Src/state.c   **** 			}
 225:Src/state.c   **** 		}
 226:Src/state.c   **** 	}
 227:Src/state.c   **** 	/*if (fifoRxDataCAN_pop(&can1))
 228:Src/state.c   **** 	{
 229:Src/state.c   **** 		switch (can1.rx_id)
 230:Src/state.c   **** 		{
 231:Src/state.c   **** 		case ID_STEERING_WEEL_1:
ARM GAS  /tmp/ccEvYcEU.s 			page 14


 232:Src/state.c   **** 			switch (can1.dataRx[0])
 233:Src/state.c   **** 			{
 234:Src/state.c   **** 			//----- change state to run -----//
 235:Src/state.c   **** 			case 5:
 236:Src/state.c   **** 				// If inverter are ON and Brake is Pressed
 237:Src/state.c   **** 				current_state = STATE_RUN;
 238:Src/state.c   **** 				can1.tx_id = ID_ACU_2;
 239:Src/state.c   **** 				can1.dataRx[0] = 5;
 240:Src/state.c   **** 				can1.tx_size = 1;
 241:Src/state.c   **** 				CAN_Send(&can1, normalPriority);
 242:Src/state.c   **** 				break;
 243:Src/state.c   **** 			// Turn On inverter Dx
 244:Src/state.c   **** 			case 8:
 245:Src/state.c   **** 				// If Inverter Temp < 80
 246:Src/state.c   **** 				break;
 247:Src/state.c   **** 			// Turn On inverter Sx
 248:Src/state.c   **** 			case 9:
 249:Src/state.c   **** 				// if Iverter Temp < 80
 250:Src/state.c   **** 				break;
 251:Src/state.c   **** 			default:
 252:Src/state.c   **** 				break;
 253:Src/state.c   **** 			}
 254:Src/state.c   **** 			break;
 255:Src/state.c   **** 		case ID_BMS_HV:
 256:Src/state.c   **** 			switch (can1.dataRx[0])
 257:Src/state.c   **** 			{
 258:Src/state.c   **** 			case 4:
 259:Src/state.c   **** 				// Shutdown Confirmed
 260:Src/state.c   **** 				break;
 261:Src/state.c   **** 			case 8:
 262:Src/state.c   **** 				// Shutdown from Error
 263:Src/state.c   **** 				break;
 264:Src/state.c   **** 			}
 265:Src/state.c   **** 			break;
 266:Src/state.c   **** 		case ID_ATC_POT:
 267:Src/state.c   **** 			atc_pot_operations();
 268:Src/state.c   **** 			break;
 269:Src/state.c   **** 		case ID_REQ_INV_DX:
 270:Src/state.c   **** 			switch (can1.dataRx[0])
 271:Src/state.c   **** 			{
 272:Src/state.c   **** 			case 0x4A:
 273:Src/state.c   **** 				// Update Inverter Dx Temp = (can1.RxData[2] * 256 + can1.RxData[1] - 15797) / 112.1182
 274:Src/state.c   **** 				break;
 275:Src/state.c   **** 			case 0xD8:
 276:Src/state.c   **** 				if (can1.dataRx[2] == 0x0C  && request of shutdown == false)
 277:Src/state.c   **** 				{
 278:Src/state.c   **** 					can1.dataTx[0] = 0x09;
 279:Src/state.c   **** 					can1.dataTx[1] = 0;
 280:Src/state.c   **** 					can1.dataTx[2] = 0;
 281:Src/state.c   **** 					can1.dataTx[3] = 0;
 282:Src/state.c   **** 					can1.dataTx[4] = 0;
 283:Src/state.c   **** 					can1.dataTx[5] = 0;
 284:Src/state.c   **** 					can1.dataTx[6] = 0;
 285:Src/state.c   **** 					can1.dataTx[7] = 0;
 286:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 287:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 288:Src/state.c   **** 					// Inverter Dx true
ARM GAS  /tmp/ccEvYcEU.s 			page 15


 289:Src/state.c   **** 				}
 290:Src/state.c   **** 				else
 291:Src/state.c   **** 				{
 292:Src/state.c   **** 					can1.dataTx[0] = 0xD0;
 293:Src/state.c   **** 					can1.dataTx[1] = 0;
 294:Src/state.c   **** 					can1.dataTx[2] = 0;
 295:Src/state.c   **** 					can1.dataTx[3] = 0;
 296:Src/state.c   **** 					can1.dataTx[4] = 0;
 297:Src/state.c   **** 					can1.dataTx[5] = 0;
 298:Src/state.c   **** 					can1.dataTx[6] = 0;
 299:Src/state.c   **** 					can1.dataTx[7] = 0;
 300:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 301:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 302:Src/state.c   **** 					// Inverter Dx false
 303:Src/state.c   **** 				}
 304:Src/state.c   **** 				break;
 305:Src/state.c   **** 			}
 306:Src/state.c   **** 			break;
 307:Src/state.c   **** 		case ID_REQ_INV_SX:
 308:Src/state.c   **** 			switch (can1.dataRx[0])
 309:Src/state.c   **** 			{
 310:Src/state.c   **** 			case 0x4A:
 311:Src/state.c   **** 				// Update Inverter Sx Temp = (can1.RxData[2] * 256 + can1.RxData[1] - 15797) / 112.1182
 312:Src/state.c   **** 				break;
 313:Src/state.c   **** 			case 0xD8:
 314:Src/state.c   **** 				if (can1.dataRx[2] == 0x0C  && request of shutdown == false)
 315:Src/state.c   **** 				{
 316:Src/state.c   **** 					can1.dataTx[0] = 0x08;
 317:Src/state.c   **** 					can1.dataTx[1] = 0;
 318:Src/state.c   **** 					can1.dataTx[2] = 0;
 319:Src/state.c   **** 					can1.dataTx[3] = 0;
 320:Src/state.c   **** 					can1.dataTx[4] = 0;
 321:Src/state.c   **** 					can1.dataTx[5] = 0;
 322:Src/state.c   **** 					can1.dataTx[6] = 0;
 323:Src/state.c   **** 					can1.dataTx[7] = 0;
 324:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 325:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 326:Src/state.c   **** 					// Inverter Sx true
 327:Src/state.c   **** 				}
 328:Src/state.c   **** 				else
 329:Src/state.c   **** 				{
 330:Src/state.c   **** 					can1.dataTx[0] = 0x0C;
 331:Src/state.c   **** 					can1.dataTx[1] = 0;
 332:Src/state.c   **** 					can1.dataTx[2] = 0;
 333:Src/state.c   **** 					can1.dataTx[3] = 0;
 334:Src/state.c   **** 					can1.dataTx[4] = 0;
 335:Src/state.c   **** 					can1.dataTx[5] = 0;
 336:Src/state.c   **** 					can1.dataTx[6] = 0;
 337:Src/state.c   **** 					can1.dataTx[7] = 0;
 338:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 339:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 340:Src/state.c   **** 					// Inverter Sx false
 341:Src/state.c   **** 				}
 342:Src/state.c   **** 				break;
 343:Src/state.c   **** 			}
 344:Src/state.c   **** 			break;
 345:Src/state.c   **** 		default:
ARM GAS  /tmp/ccEvYcEU.s 			page 16


 346:Src/state.c   **** 			break;
 347:Src/state.c   **** 		}
 348:Src/state.c   **** 	}*/
 349:Src/state.c   **** }
 419              		.loc 1 349 1 view .LVU134
 420 001c 08BD     		pop	{r3, pc}
 421              	.L30:
 201:Src/state.c   **** 			//If Analog to CAN device is connected, brake is pressed and there aren't critical erros -> 
 422              		.loc 1 201 36 discriminator 1 view .LVU135
 423 001e 124B     		ldr	r3, .L32+12
 424 0020 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 201:Src/state.c   **** 			//If Analog to CAN device is connected, brake is pressed and there aren't critical erros -> 
 425              		.loc 1 201 27 discriminator 1 view .LVU136
 426 0022 322B     		cmp	r3, #50
 427 0024 F7D9     		bls	.L26
 201:Src/state.c   **** 			//If Analog to CAN device is connected, brake is pressed and there aren't critical erros -> 
 428              		.loc 1 201 75 discriminator 2 view .LVU137
 429 0026 114B     		ldr	r3, .L32+16
 430 0028 0022     		movs	r2, #0
 431 002a 1A60     		str	r2, [r3]
 432 002c F3E7     		b	.L26
 433              	.L25:
 214:Src/state.c   **** 		if (fifoRxDataCAN_pop(&can1)){
 434              		.loc 1 214 8 is_stmt 1 view .LVU138
 214:Src/state.c   **** 		if (fifoRxDataCAN_pop(&can1)){
 435              		.loc 1 214 10 is_stmt 0 view .LVU139
 436 002e 012B     		cmp	r3, #1
 437 0030 F4D1     		bne	.L24
 215:Src/state.c   **** 			switch(can1.rx_id){
 438              		.loc 1 215 3 is_stmt 1 view .LVU140
 215:Src/state.c   **** 			switch(can1.rx_id){
 439              		.loc 1 215 7 is_stmt 0 view .LVU141
 440 0032 0F48     		ldr	r0, .L32+20
 441 0034 FFF7FEFF 		bl	fifoRxDataCAN_pop
 442              	.LVL11:
 215:Src/state.c   **** 			switch(can1.rx_id){
 443              		.loc 1 215 6 view .LVU142
 444 0038 0028     		cmp	r0, #0
 445 003a EFD0     		beq	.L24
 216:Src/state.c   **** 				case ID_BMS_HV:
 446              		.loc 1 216 4 is_stmt 1 view .LVU143
 216:Src/state.c   **** 				case ID_BMS_HV:
 447              		.loc 1 216 15 is_stmt 0 view .LVU144
 448 003c 0C4B     		ldr	r3, .L32+20
 449 003e 1B6B     		ldr	r3, [r3, #48]
 216:Src/state.c   **** 				case ID_BMS_HV:
 450              		.loc 1 216 4 view .LVU145
 451 0040 AA2B     		cmp	r3, #170
 452 0042 EBD1     		bne	.L24
 218:Src/state.c   **** 						setup_init = 2;
 453              		.loc 1 218 6 is_stmt 1 view .LVU146
 218:Src/state.c   **** 						setup_init = 2;
 454              		.loc 1 218 20 is_stmt 0 view .LVU147
 455 0044 0A4B     		ldr	r3, .L32+20
 456 0046 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 218:Src/state.c   **** 						setup_init = 2;
 457              		.loc 1 218 8 view .LVU148
ARM GAS  /tmp/ccEvYcEU.s 			page 17


 458 0048 012B     		cmp	r3, #1
 459 004a 03D0     		beq	.L31
 221:Src/state.c   **** 						//TODO: send error to steer
 460              		.loc 1 221 7 is_stmt 1 view .LVU149
 221:Src/state.c   **** 						//TODO: send error to steer
 461              		.loc 1 221 21 is_stmt 0 view .LVU150
 462 004c 054B     		ldr	r3, .L32+8
 463 004e 0122     		movs	r2, #1
 464 0050 1A70     		strb	r2, [r3]
 465              		.loc 1 349 1 view .LVU151
 466 0052 E3E7     		b	.L24
 467              	.L31:
 219:Src/state.c   **** 					}else{ //Pre-charge failed
 468              		.loc 1 219 7 is_stmt 1 view .LVU152
 219:Src/state.c   **** 					}else{ //Pre-charge failed
 469              		.loc 1 219 18 is_stmt 0 view .LVU153
 470 0054 014B     		ldr	r3, .L32
 471 0056 0222     		movs	r2, #2
 472 0058 1A60     		str	r2, [r3]
 473 005a DFE7     		b	.L24
 474              	.L33:
 475              		.align	2
 476              	.L32:
 477 005c 00000000 		.word	.LANCHOR3
 478 0060 00000000 		.word	atc_connected
 479 0064 00000000 		.word	current_state
 480 0068 00000000 		.word	brake
 481 006c 00000000 		.word	.LANCHOR4
 482 0070 00000000 		.word	can1
 483              		.cfi_endproc
 484              	.LFE147:
 486              		.section	.rodata.debug_operations.str1.4,"aMS",%progbits,1
 487              		.align	2
 488              	.LC0:
 489 0000 68656C70 		.ascii	"help\000"
 489      00
 490 0005 000000   		.align	2
 491              	.LC1:
 492 0008 0D0A2A2A 		.ascii	"\015\012***********ECU HELP***********\015\012Avaia"
 492      2A2A2A2A 
 492      2A2A2A2A 
 492      2A454355 
 492      2048454C 
 493 002f 626C6520 		.ascii	"ble msg are:\015\012\011-- status -> print ECU stat"
 493      6D736720 
 493      6172653A 
 493      0D0A092D 
 493      2D207374 
 494 0059 75730D0A 		.ascii	"us\015\012\011-- sd status -> print SD status and t"
 494      092D2D20 
 494      73642073 
 494      74617475 
 494      73202D3E 
 495 0083 6865206E 		.ascii	"he name of file inside\015\012\011-- sd file -> pri"
 495      616D6520 
 495      6F662066 
 495      696C6520 
ARM GAS  /tmp/ccEvYcEU.s 			page 18


 495      696E7369 
 496 00ad 6E742066 		.ascii	"nt files inside the SD\015\012\011-- time -> print "
 496      696C6573 
 496      20696E73 
 496      69646520 
 496      74686520 
 497 00d7 61637469 		.ascii	"activity time\015\012\011-- codev  -> print code ve"
 497      76697479 
 497      2074696D 
 497      650D0A09 
 497      2D2D2063 
 498 0101 7273696F 		.ascii	"rsion\015\012\000"
 498      6E0D0A00 
 499 0109 000000   		.align	2
 500              	.LC2:
 501 010c 636F6465 		.ascii	"codev\000"
 501      7600
 502 0112 0000     		.align	2
 503              	.LC3:
 504 0114 74696D65 		.ascii	"time\000"
 504      00
 505 0119 000000   		.align	2
 506              	.LC4:
 507 011c 0D0A5469 		.ascii	"\015\012Time: %d hours : %d min : %d sec : %d dec\015"
 507      6D653A20 
 507      25642068 
 507      6F757273 
 507      203A2025 
 508 0148 0A00     		.ascii	"\012\000"
 509 014a 0000     		.align	2
 510              	.LC5:
 511 014c 73746174 		.ascii	"status\000"
 511      757300
 512 0153 00       		.align	2
 513              	.LC6:
 514 0154 0D0A0A74 		.ascii	"\015\012\012type of status:\015\012\011 0 = OK\015\012"
 514      79706520 
 514      6F662073 
 514      74617475 
 514      733A0D0A 
 515 0172 09203120 		.ascii	"\011 1 = ERROR\015\012\011 2 = BUSY\015\012\011 3 ="
 515      3D204552 
 515      524F520D 
 515      0A092032 
 515      203D2042 
 516 0190 2054494D 		.ascii	" TIMEOUT\015\012\012CAN1 status:\015\012\011CAN1 co"
 516      454F5554 
 516      0D0A0A43 
 516      414E3120 
 516      73746174 
 517 01b1 6E666967 		.ascii	"nfig status: %d \015\012\011CAN1 notification statu"
 517      20737461 
 517      7475733A 
 517      20256420 
 517      0D0A0943 
 518 01db 733A2025 		.ascii	"s: %d\015\012\011CAN1 start status: %d\015\012\000"
 518      640D0A09 
ARM GAS  /tmp/ccEvYcEU.s 			page 19


 518      43414E31 
 518      20737461 
 518      72742073 
 519 01fb 00       		.align	2
 520              	.LC7:
 521 01fc 43414E33 		.ascii	"CAN3 status:\015\012\011CAN3 config status: %d \015"
 521      20737461 
 521      7475733A 
 521      0D0A0943 
 521      414E3320 
 522 0223 0A094341 		.ascii	"\012\011CAN3 notification status: %d\015\012\011CAN"
 522      4E33206E 
 522      6F746966 
 522      69636174 
 522      696F6E20 
 523 0247 33207374 		.ascii	"3 start status: %d\015\012\000"
 523      61727420 
 523      73746174 
 523      75733A20 
 523      25640D0A 
 524              		.align	2
 525              	.LC8:
 526 025c 0D0A4375 		.ascii	"\015\012Current state: STATE_INIT\015\012\000"
 526      7272656E 
 526      74207374 
 526      6174653A 
 526      20535441 
 527 027a 0000     		.align	2
 528              	.LC9:
 529 027c 0D0A4375 		.ascii	"\015\012Current state: STATE_IDLE\015\012\000"
 529      7272656E 
 529      74207374 
 529      6174653A 
 529      20535441 
 530 029a 0000     		.align	2
 531              	.LC10:
 532 029c 0D0A4375 		.ascii	"\015\012Current state: STATE_SETUP\015\012\000"
 532      7272656E 
 532      74207374 
 532      6174653A 
 532      20535441 
 533 02bb 00       		.align	2
 534              	.LC11:
 535 02bc 0D0A4375 		.ascii	"\015\012Current state: STATE_RUN\015\012\000"
 535      7272656E 
 535      74207374 
 535      6174653A 
 535      20535441 
 536 02d9 000000   		.align	2
 537              	.LC12:
 538 02dc 0D0A4465 		.ascii	"\015\012Device connected : (0 = no, 1 = yes (for ea"
 538      76696365 
 538      20636F6E 
 538      6E656374 
 538      6564203A 
 539 0309 63682062 		.ascii	"ch bit))\015\012\011 IMU -> %d\015\012\011 ITS -> %"
 539      69742929 
ARM GAS  /tmp/ccEvYcEU.s 			page 20


 539      0D0A0920 
 539      494D5520 
 539      2D3E2025 
 540 032a 640D0A00 		.ascii	"d\015\012\000"
 541 032e 0000     		.align	2
 542              	.LC13:
 543 0330 73642073 		.ascii	"sd status\000"
 543      74617475 
 543      7300
 544 033a 0000     		.align	2
 545              	.LC14:
 546 033c 0D0A5364 		.ascii	"\015\012Sd mounted \000"
 546      206D6F75 
 546      6E746564 
 546      2000
 547 034a 0000     		.align	2
 548              	.LC15:
 549 034c 53642073 		.ascii	"Sd successfully opened and created file: %s\015\012"
 549      75636365 
 549      73736675 
 549      6C6C7920 
 549      6F70656E 
 550 0379 00       		.ascii	"\000"
 551 037a 0000     		.align	2
 552              	.LC16:
 553 037c 5364206F 		.ascii	"Sd open FAILED\015\012\000"
 553      70656E20 
 553      4641494C 
 553      45440D0A 
 553      00
 554 038d 000000   		.align	2
 555              	.LC17:
 556 0390 0D0A5364 		.ascii	"\015\012Sd NOT mounted \000"
 556      204E4F54 
 556      206D6F75 
 556      6E746564 
 556      2000
 557 03a2 0000     		.align	2
 558              	.LC18:
 559 03a4 73642066 		.ascii	"sd file\000"
 559      696C6500 
 560              		.align	2
 561              	.LC19:
 562 03ac 0D0A4669 		.ascii	"\015\012Files inside sd are:\015\012%s\000"
 562      6C657320 
 562      696E7369 
 562      64652073 
 562      64206172 
 563 03c7 00       		.align	2
 564              	.LC20:
 565 03c8 67617900 		.ascii	"gay\000"
 566              		.align	2
 567              	.LC21:
 568 03cc 0D0A2020 		.ascii	"\015\012          $\015\012        $   $\015\012   "
 568      20202020 
 568      20202020 
 568      240D0A20 
ARM GAS  /tmp/ccEvYcEU.s 			page 21


 568      20202020 
 569 03ed 20202020 		.ascii	"    $     $\015\012       $$$$$$$\015\012       $$$"
 569      24202020 
 569      2020240D 
 569      0A202020 
 569      20202020 
 570 0414 24242424 		.ascii	"$$$$\015\012       $$$$$$$\015\012       $$$$$$$\015"
 570      0D0A2020 
 570      20202020 
 570      20242424 
 570      24242424 
 571 0439 0A202024 		.ascii	"\012  $$$$$$     $$$$$$\015\012 $$$$$$$$   $$$$$$$$"
 571      24242424 
 571      24202020 
 571      20202424 
 571      24242424 
 572 0463 0D0A2424 		.ascii	"\015\012$$$$$$$$$$$$$$$$$$$$\015\012 $$$$$$$$   $$$"
 572      24242424 
 572      24242424 
 572      24242424 
 572      24242424 
 573 048a 24242424 		.ascii	"$$$$$\015\012  $$$$$$     $$$$$$\015\012\000"
 573      240D0A20 
 573      20242424 
 573      24242420 
 573      20202020 
 574 04a7 00       		.align	2
 575              	.LC22:
 576 04a8 0D0A4552 		.ascii	"\015\012ERROR : msg %s doesn't exist\015\012\000"
 576      524F5220 
 576      3A206D73 
 576      67202573 
 576      20646F65 
 577              		.section	.text.debug_operations,"ax",%progbits
 578              		.align	1
 579              		.global	debug_operations
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 583              		.fpu fpv5-d16
 585              	debug_operations:
 586              	.LFB149:
 350:Src/state.c   **** /*******************************************************************
 351:Src/state.c   ****  *                         END SETUP STATE
 352:Src/state.c   ****  *******************************************************************/
 353:Src/state.c   **** /*******************************************************************
 354:Src/state.c   ****  *                         START RUN STATE
 355:Src/state.c   ****  *******************************************************************/
 356:Src/state.c   **** void run()
 357:Src/state.c   **** {
 358:Src/state.c   **** 	if (fifoRxDataCAN_pop(&can1))
 359:Src/state.c   **** 	{
 360:Src/state.c   **** 		switch (can1.rx_id)
 361:Src/state.c   **** 		{
 362:Src/state.c   **** 		case ID_STEERING_WEEL_1:
 363:Src/state.c   **** 			if (can1.dataRx[0] ==
 364:Src/state.c   **** 				6)
ARM GAS  /tmp/ccEvYcEU.s 			page 22


 365:Src/state.c   **** 			{ //----- change state to setup -----//
 366:Src/state.c   **** 				current_state = STATE_SETUP;
 367:Src/state.c   **** 			}
 368:Src/state.c   **** 			break;
 369:Src/state.c   **** 		case ID_ATC_POT:
 370:Src/state.c   **** 			atc_pot_operations();
 371:Src/state.c   **** 			break;
 372:Src/state.c   **** 		default:
 373:Src/state.c   **** 			break;
 374:Src/state.c   **** 		}
 375:Src/state.c   **** 	}
 376:Src/state.c   **** }
 377:Src/state.c   **** /*******************************************************************
 378:Src/state.c   ****  *                         END RUN STATE
 379:Src/state.c   ****  *******************************************************************/
 380:Src/state.c   **** 
 381:Src/state.c   **** void debug_operations()
 382:Src/state.c   **** {
 587              		.loc 1 382 1 is_stmt 1 view -0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591 0000 30B5     		push	{r4, r5, lr}
 592              	.LCFI4:
 593              		.cfi_def_cfa_offset 12
 594              		.cfi_offset 4, -12
 595              		.cfi_offset 5, -8
 596              		.cfi_offset 14, -4
 597 0002 83B0     		sub	sp, sp, #12
 598              	.LCFI5:
 599              		.cfi_def_cfa_offset 24
 383:Src/state.c   **** 	if (strcmp(debug_rx, "help") == 0)
 600              		.loc 1 383 2 view .LVU155
 601              		.loc 1 383 6 is_stmt 0 view .LVU156
 602 0004 8F49     		ldr	r1, .L61
 603 0006 9048     		ldr	r0, .L61+4
 604 0008 FFF7FEFF 		bl	strcmp
 605              	.LVL12:
 606              		.loc 1 383 5 view .LVU157
 607 000c 20B3     		cbz	r0, .L50
 384:Src/state.c   **** 	{
 385:Src/state.c   **** 		sprintf(debug_tx,
 386:Src/state.c   **** 				"\r\n***********ECU HELP***********\r\n"
 387:Src/state.c   **** 				"Avaiable msg are:\r\n"
 388:Src/state.c   **** 				"\t-- status -> print ECU status\r\n"
 389:Src/state.c   **** 				"\t-- sd status -> print SD status and the name of file inside\r\n"
 390:Src/state.c   **** 				"\t-- sd file -> print files inside the SD\r\n"
 391:Src/state.c   **** 				"\t-- time -> print activity time\r\n"
 392:Src/state.c   **** 				"\t-- codev  -> print code version\r\n");
 393:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 394:Src/state.c   **** 	}
 395:Src/state.c   **** 	else if (strcmp(debug_rx, "codev") == 0)
 608              		.loc 1 395 7 is_stmt 1 view .LVU158
 609              		.loc 1 395 11 is_stmt 0 view .LVU159
 610 000e 8F49     		ldr	r1, .L61+8
 611 0010 8D48     		ldr	r0, .L61+4
 612 0012 FFF7FEFF 		bl	strcmp
ARM GAS  /tmp/ccEvYcEU.s 			page 23


 613              	.LVL13:
 614              		.loc 1 395 10 view .LVU160
 615 0016 0028     		cmp	r0, #0
 616 0018 30D0     		beq	.L51
 396:Src/state.c   **** 	{
 397:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)code_version, strlen(code_version),
 398:Src/state.c   **** 						  100);
 399:Src/state.c   **** 	}
 400:Src/state.c   **** 	else if (strcmp(debug_rx, "time") == 0)
 617              		.loc 1 400 7 is_stmt 1 view .LVU161
 618              		.loc 1 400 11 is_stmt 0 view .LVU162
 619 001a 8D49     		ldr	r1, .L61+12
 620 001c 8A48     		ldr	r0, .L61+4
 621 001e FFF7FEFF 		bl	strcmp
 622              	.LVL14:
 623              		.loc 1 400 10 view .LVU163
 624 0022 0028     		cmp	r0, #0
 625 0024 35D0     		beq	.L52
 401:Src/state.c   **** 	{
 402:Src/state.c   **** 		sprintf(debug_tx, "\r\nTime: %d hours : %d min : %d sec : %d dec\r\n",
 403:Src/state.c   **** 				count_hour, count_min, count_sec, count_dec);
 404:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 405:Src/state.c   **** 	}
 406:Src/state.c   **** 	else if (strcmp(debug_rx, "status") == 0)
 626              		.loc 1 406 7 is_stmt 1 view .LVU164
 627              		.loc 1 406 11 is_stmt 0 view .LVU165
 628 0026 8B49     		ldr	r1, .L61+16
 629 0028 8748     		ldr	r0, .L61+4
 630 002a FFF7FEFF 		bl	strcmp
 631              	.LVL15:
 632              		.loc 1 406 10 view .LVU166
 633 002e 0028     		cmp	r0, #0
 634 0030 48D0     		beq	.L53
 407:Src/state.c   **** 	{
 408:Src/state.c   **** 		sprintf(debug_tx,
 409:Src/state.c   **** 				"\r\n\ntype of status:\r\n"
 410:Src/state.c   **** 				"\t 0 = OK\r\n"
 411:Src/state.c   **** 				"\t 1 = ERROR\r\n"
 412:Src/state.c   **** 				"\t 2 = BUSY\r\n"
 413:Src/state.c   **** 				"\t 3 = TIMEOUT\r\n\n"
 414:Src/state.c   **** 				"CAN1 status:\r\n"
 415:Src/state.c   **** 				"\tCAN1 config status: %d \r\n"
 416:Src/state.c   **** 				"\tCAN1 notification status: %d\r\n"
 417:Src/state.c   **** 				"\tCAN1 start status: %d\r\n",
 418:Src/state.c   **** 				can1.configFilter_status, can1.activateNotif_status,
 419:Src/state.c   **** 				can1.canStart_status);
 420:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 421:Src/state.c   **** 		sprintf(debug_tx,
 422:Src/state.c   **** 				"CAN3 status:\r\n"
 423:Src/state.c   **** 				"\tCAN3 config status: %d \r\n"
 424:Src/state.c   **** 				"\tCAN3 notification status: %d\r\n"
 425:Src/state.c   **** 				"\tCAN3 start status: %d\r\n",
 426:Src/state.c   **** 				can3.configFilter_status, can3.activateNotif_status,
 427:Src/state.c   **** 				can3.canStart_status);
 428:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 429:Src/state.c   **** 		if (current_state == STATE_INIT)
 430:Src/state.c   **** 		{
ARM GAS  /tmp/ccEvYcEU.s 			page 24


 431:Src/state.c   **** 			HAL_UART_Transmit(&huart3,
 432:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_INIT\r\n",
 433:Src/state.c   **** 							  strlen("\r\nCurrent state: STATE_INIT\r\n"), 100);
 434:Src/state.c   **** 		}
 435:Src/state.c   **** 		else if (current_state == STATE_IDLE)
 436:Src/state.c   **** 		{
 437:Src/state.c   **** 			HAL_UART_Transmit(&huart3,
 438:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_IDLE\r\n",
 439:Src/state.c   **** 							  strlen("\r\nCurrent state: STATE_IDLE\r\n"), 100);
 440:Src/state.c   **** 		}
 441:Src/state.c   **** 		else if (current_state == STATE_SETUP)
 442:Src/state.c   **** 		{
 443:Src/state.c   **** 			HAL_UART_Transmit(
 444:Src/state.c   **** 				&huart3, (uint8_t *)"\r\nCurrent state: STATE_SETUP\r\n",
 445:Src/state.c   **** 				strlen("\r\nCurrent state: STATE_SETUP\r\n"), 100);
 446:Src/state.c   **** 		}
 447:Src/state.c   **** 		else if (current_state == STATE_RUN)
 448:Src/state.c   **** 		{
 449:Src/state.c   **** 			HAL_UART_Transmit(&huart3,
 450:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_RUN\r\n",
 451:Src/state.c   **** 							  strlen("\r\nCurrent state: STATE_RUN\r\n"), 100);
 452:Src/state.c   **** 		}
 453:Src/state.c   **** 		sprintf(debug_tx,
 454:Src/state.c   **** 				"\r\n"
 455:Src/state.c   **** 				"Device connected : (0 = no, 1 = yes (for each bit))\r\n"
 456:Src/state.c   **** 				"\t IMU -> %d\r\n"
 457:Src/state.c   **** 				"\t ITS -> %d\r\n",
 458:Src/state.c   **** 				imu_connected, its_connected);
 459:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 460:Src/state.c   **** 	}
 461:Src/state.c   **** 	else if (strcmp(debug_rx, "sd status") == 0){
 635              		.loc 1 461 7 is_stmt 1 view .LVU167
 636              		.loc 1 461 11 is_stmt 0 view .LVU168
 637 0032 8949     		ldr	r1, .L61+20
 638 0034 8448     		ldr	r0, .L61+4
 639 0036 FFF7FEFF 		bl	strcmp
 640              	.LVL16:
 641              		.loc 1 461 10 view .LVU169
 642 003a 0028     		cmp	r0, #0
 643 003c 40F0C780 		bne	.L44
 462:Src/state.c   **** 		if(mount_ok == 1){
 644              		.loc 1 462 3 is_stmt 1 view .LVU170
 645              		.loc 1 462 15 is_stmt 0 view .LVU171
 646 0040 864B     		ldr	r3, .L61+24
 647 0042 1B68     		ldr	r3, [r3]
 648              		.loc 1 462 5 view .LVU172
 649 0044 012B     		cmp	r3, #1
 650 0046 00F0A180 		beq	.L54
 463:Src/state.c   **** 			HAL_UART_Transmit(&huart3, (uint8_t *)"\r\nSd mounted ", strlen("\r\nSd mounted "), 100);
 464:Src/state.c   **** 			if(successfull_opening == 1){
 465:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 466:Src/state.c   **** 				HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 467:Src/state.c   **** 			}else{
 468:Src/state.c   **** 				HAL_UART_Transmit(&huart3, (uint8_t *)"Sd open FAILED\r\n", strlen("Sd open FAILED\r\n"), 100);
 469:Src/state.c   **** 			}
 470:Src/state.c   **** 		}else{
 471:Src/state.c   **** 			HAL_UART_Transmit(&huart3, (uint8_t *)"\r\nSd NOT mounted ", strlen("\r\nSd NOT mounted "), 100)
ARM GAS  /tmp/ccEvYcEU.s 			page 25


 651              		.loc 1 471 4 is_stmt 1 view .LVU173
 652 004a 6423     		movs	r3, #100
 653 004c 1122     		movs	r2, #17
 654 004e 8449     		ldr	r1, .L61+28
 655 0050 8448     		ldr	r0, .L61+32
 656 0052 FFF7FEFF 		bl	HAL_UART_Transmit
 657              	.LVL17:
 658 0056 0FE0     		b	.L34
 659              	.L50:
 385:Src/state.c   **** 				"\r\n***********ECU HELP***********\r\n"
 660              		.loc 1 385 3 view .LVU174
 661 0058 834C     		ldr	r4, .L61+36
 662 005a 40F20112 		movw	r2, #257
 663 005e 8349     		ldr	r1, .L61+40
 664 0060 2046     		mov	r0, r4
 665 0062 FFF7FEFF 		bl	memcpy
 666              	.LVL18:
 393:Src/state.c   **** 	}
 667              		.loc 1 393 3 view .LVU175
 393:Src/state.c   **** 	}
 668              		.loc 1 393 51 is_stmt 0 view .LVU176
 669 0066 2046     		mov	r0, r4
 670 0068 FFF7FEFF 		bl	strlen
 671              	.LVL19:
 393:Src/state.c   **** 	}
 672              		.loc 1 393 3 view .LVU177
 673 006c 6423     		movs	r3, #100
 674 006e 82B2     		uxth	r2, r0
 675 0070 2146     		mov	r1, r4
 676 0072 7C48     		ldr	r0, .L61+32
 677 0074 FFF7FEFF 		bl	HAL_UART_Transmit
 678              	.LVL20:
 679              	.L34:
 472:Src/state.c   **** 		}
 473:Src/state.c   **** 	}
 474:Src/state.c   **** 	else if(strcmp(debug_rx, "sd file") == 0){
 475:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 476:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 1000);
 477:Src/state.c   **** 	}
 478:Src/state.c   **** 	else if (strcmp(debug_rx, "gay") == 0)
 479:Src/state.c   **** 	{
 480:Src/state.c   **** 		sprintf(debug_tx,
 481:Src/state.c   **** 				"\r\n"
 482:Src/state.c   **** 				"          $\r\n"
 483:Src/state.c   **** 				"        $   $\r\n"
 484:Src/state.c   **** 				"       $     $\r\n"
 485:Src/state.c   **** 				"       $$$$$$$\r\n"
 486:Src/state.c   **** 				"       $$$$$$$\r\n"
 487:Src/state.c   **** 				"       $$$$$$$\r\n"
 488:Src/state.c   **** 				"       $$$$$$$\r\n"
 489:Src/state.c   **** 				"  $$$$$$     $$$$$$\r\n"
 490:Src/state.c   **** 				" $$$$$$$$   $$$$$$$$\r\n"
 491:Src/state.c   **** 				"$$$$$$$$$$$$$$$$$$$$\r\n"
 492:Src/state.c   **** 				" $$$$$$$$   $$$$$$$$\r\n"
 493:Src/state.c   **** 				"  $$$$$$     $$$$$$\r\n");
 494:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 495:Src/state.c   **** 	}
ARM GAS  /tmp/ccEvYcEU.s 			page 26


 496:Src/state.c   **** 	else
 497:Src/state.c   **** 	{
 498:Src/state.c   **** 		sprintf(debug_tx, "\r\nERROR : msg %s doesn't exist\r\n", debug_rx);
 499:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 500:Src/state.c   **** 	}
 501:Src/state.c   **** }
 680              		.loc 1 501 1 view .LVU178
 681 0078 03B0     		add	sp, sp, #12
 682              	.LCFI6:
 683              		.cfi_remember_state
 684              		.cfi_def_cfa_offset 12
 685              		@ sp needed
 686 007a 30BD     		pop	{r4, r5, pc}
 687              	.L51:
 688              	.LCFI7:
 689              		.cfi_restore_state
 397:Src/state.c   **** 						  100);
 690              		.loc 1 397 3 is_stmt 1 view .LVU179
 397:Src/state.c   **** 						  100);
 691              		.loc 1 397 55 is_stmt 0 view .LVU180
 692 007c 7C4C     		ldr	r4, .L61+44
 693 007e 2046     		mov	r0, r4
 694 0080 FFF7FEFF 		bl	strlen
 695              	.LVL21:
 397:Src/state.c   **** 						  100);
 696              		.loc 1 397 3 view .LVU181
 697 0084 6423     		movs	r3, #100
 698 0086 82B2     		uxth	r2, r0
 699 0088 2146     		mov	r1, r4
 700 008a 7648     		ldr	r0, .L61+32
 701 008c FFF7FEFF 		bl	HAL_UART_Transmit
 702              	.LVL22:
 703 0090 F2E7     		b	.L34
 704              	.L52:
 402:Src/state.c   **** 				count_hour, count_min, count_sec, count_dec);
 705              		.loc 1 402 3 is_stmt 1 view .LVU182
 706 0092 784B     		ldr	r3, .L61+48
 707 0094 1A88     		ldrh	r2, [r3]
 708 0096 784B     		ldr	r3, .L61+52
 709 0098 1B88     		ldrh	r3, [r3]
 710 009a 7849     		ldr	r1, .L61+56
 711 009c 0988     		ldrh	r1, [r1]
 712 009e 7848     		ldr	r0, .L61+60
 713 00a0 0088     		ldrh	r0, [r0]
 714 00a2 714C     		ldr	r4, .L61+36
 715 00a4 0190     		str	r0, [sp, #4]
 716 00a6 0091     		str	r1, [sp]
 717 00a8 7649     		ldr	r1, .L61+64
 718 00aa 2046     		mov	r0, r4
 719 00ac FFF7FEFF 		bl	sprintf
 720              	.LVL23:
 404:Src/state.c   **** 	}
 721              		.loc 1 404 3 view .LVU183
 404:Src/state.c   **** 	}
 722              		.loc 1 404 51 is_stmt 0 view .LVU184
 723 00b0 2046     		mov	r0, r4
 724 00b2 FFF7FEFF 		bl	strlen
ARM GAS  /tmp/ccEvYcEU.s 			page 27


 725              	.LVL24:
 404:Src/state.c   **** 	}
 726              		.loc 1 404 3 view .LVU185
 727 00b6 6423     		movs	r3, #100
 728 00b8 82B2     		uxth	r2, r0
 729 00ba 2146     		mov	r1, r4
 730 00bc 6948     		ldr	r0, .L61+32
 731 00be FFF7FEFF 		bl	HAL_UART_Transmit
 732              	.LVL25:
 733 00c2 D9E7     		b	.L34
 734              	.L53:
 408:Src/state.c   **** 				"\r\n\ntype of status:\r\n"
 735              		.loc 1 408 3 is_stmt 1 view .LVU186
 418:Src/state.c   **** 				can1.canStart_status);
 736              		.loc 1 418 9 is_stmt 0 view .LVU187
 737 00c4 704A     		ldr	r2, .L61+68
 419:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 738              		.loc 1 419 9 view .LVU188
 739 00c6 92F86E30 		ldrb	r3, [r2, #110]	@ zero_extendqisi2
 408:Src/state.c   **** 				"\r\n\ntype of status:\r\n"
 740              		.loc 1 408 3 view .LVU189
 741 00ca 674C     		ldr	r4, .L61+36
 742 00cc 0093     		str	r3, [sp]
 743 00ce 92F86D30 		ldrb	r3, [r2, #109]	@ zero_extendqisi2
 744 00d2 92F86C20 		ldrb	r2, [r2, #108]	@ zero_extendqisi2
 745 00d6 6D49     		ldr	r1, .L61+72
 746 00d8 2046     		mov	r0, r4
 747 00da FFF7FEFF 		bl	sprintf
 748              	.LVL26:
 420:Src/state.c   **** 		sprintf(debug_tx,
 749              		.loc 1 420 3 is_stmt 1 view .LVU190
 420:Src/state.c   **** 		sprintf(debug_tx,
 750              		.loc 1 420 51 is_stmt 0 view .LVU191
 751 00de 2046     		mov	r0, r4
 752 00e0 FFF7FEFF 		bl	strlen
 753              	.LVL27:
 420:Src/state.c   **** 		sprintf(debug_tx,
 754              		.loc 1 420 3 view .LVU192
 755 00e4 5F4D     		ldr	r5, .L61+32
 756 00e6 6423     		movs	r3, #100
 757 00e8 82B2     		uxth	r2, r0
 758 00ea 2146     		mov	r1, r4
 759 00ec 2846     		mov	r0, r5
 760 00ee FFF7FEFF 		bl	HAL_UART_Transmit
 761              	.LVL28:
 421:Src/state.c   **** 				"CAN3 status:\r\n"
 762              		.loc 1 421 3 is_stmt 1 view .LVU193
 426:Src/state.c   **** 				can3.canStart_status);
 763              		.loc 1 426 9 is_stmt 0 view .LVU194
 764 00f2 674A     		ldr	r2, .L61+76
 427:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 765              		.loc 1 427 9 view .LVU195
 766 00f4 92F86E30 		ldrb	r3, [r2, #110]	@ zero_extendqisi2
 421:Src/state.c   **** 				"CAN3 status:\r\n"
 767              		.loc 1 421 3 view .LVU196
 768 00f8 0093     		str	r3, [sp]
 769 00fa 92F86D30 		ldrb	r3, [r2, #109]	@ zero_extendqisi2
ARM GAS  /tmp/ccEvYcEU.s 			page 28


 770 00fe 92F86C20 		ldrb	r2, [r2, #108]	@ zero_extendqisi2
 771 0102 6449     		ldr	r1, .L61+80
 772 0104 2046     		mov	r0, r4
 773 0106 FFF7FEFF 		bl	sprintf
 774              	.LVL29:
 428:Src/state.c   **** 		if (current_state == STATE_INIT)
 775              		.loc 1 428 3 is_stmt 1 view .LVU197
 428:Src/state.c   **** 		if (current_state == STATE_INIT)
 776              		.loc 1 428 51 is_stmt 0 view .LVU198
 777 010a 2046     		mov	r0, r4
 778 010c FFF7FEFF 		bl	strlen
 779              	.LVL30:
 428:Src/state.c   **** 		if (current_state == STATE_INIT)
 780              		.loc 1 428 3 view .LVU199
 781 0110 6423     		movs	r3, #100
 782 0112 82B2     		uxth	r2, r0
 783 0114 2146     		mov	r1, r4
 784 0116 2846     		mov	r0, r5
 785 0118 FFF7FEFF 		bl	HAL_UART_Transmit
 786              	.LVL31:
 429:Src/state.c   **** 		{
 787              		.loc 1 429 3 is_stmt 1 view .LVU200
 429:Src/state.c   **** 		{
 788              		.loc 1 429 21 is_stmt 0 view .LVU201
 789 011c 5E4B     		ldr	r3, .L61+84
 790 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 429:Src/state.c   **** 		{
 791              		.loc 1 429 6 view .LVU202
 792 0120 C3B1     		cbz	r3, .L55
 435:Src/state.c   **** 		{
 793              		.loc 1 435 8 is_stmt 1 view .LVU203
 435:Src/state.c   **** 		{
 794              		.loc 1 435 11 is_stmt 0 view .LVU204
 795 0122 012B     		cmp	r3, #1
 796 0124 1DD0     		beq	.L56
 441:Src/state.c   **** 		{
 797              		.loc 1 441 8 is_stmt 1 view .LVU205
 441:Src/state.c   **** 		{
 798              		.loc 1 441 11 is_stmt 0 view .LVU206
 799 0126 022B     		cmp	r3, #2
 800 0128 22D0     		beq	.L57
 447:Src/state.c   **** 		{
 801              		.loc 1 447 8 is_stmt 1 view .LVU207
 447:Src/state.c   **** 		{
 802              		.loc 1 447 11 is_stmt 0 view .LVU208
 803 012a 032B     		cmp	r3, #3
 804 012c 27D0     		beq	.L58
 805              	.L41:
 453:Src/state.c   **** 				"\r\n"
 806              		.loc 1 453 3 is_stmt 1 view .LVU209
 807 012e 4E4C     		ldr	r4, .L61+36
 808 0130 5A4B     		ldr	r3, .L61+88
 809 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 810 0134 5A4A     		ldr	r2, .L61+92
 811 0136 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 812 0138 5A49     		ldr	r1, .L61+96
 813 013a 2046     		mov	r0, r4
ARM GAS  /tmp/ccEvYcEU.s 			page 29


 814 013c FFF7FEFF 		bl	sprintf
 815              	.LVL32:
 459:Src/state.c   **** 	}
 816              		.loc 1 459 3 view .LVU210
 459:Src/state.c   **** 	}
 817              		.loc 1 459 51 is_stmt 0 view .LVU211
 818 0140 2046     		mov	r0, r4
 819 0142 FFF7FEFF 		bl	strlen
 820              	.LVL33:
 459:Src/state.c   **** 	}
 821              		.loc 1 459 3 view .LVU212
 822 0146 6423     		movs	r3, #100
 823 0148 82B2     		uxth	r2, r0
 824 014a 2146     		mov	r1, r4
 825 014c 4548     		ldr	r0, .L61+32
 826 014e FFF7FEFF 		bl	HAL_UART_Transmit
 827              	.LVL34:
 828 0152 91E7     		b	.L34
 829              	.L55:
 431:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_INIT\r\n",
 830              		.loc 1 431 4 is_stmt 1 view .LVU213
 831 0154 6423     		movs	r3, #100
 832 0156 1D22     		movs	r2, #29
 833 0158 5349     		ldr	r1, .L61+100
 834 015a 2846     		mov	r0, r5
 835 015c FFF7FEFF 		bl	HAL_UART_Transmit
 836              	.LVL35:
 837 0160 E5E7     		b	.L41
 838              	.L56:
 437:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_IDLE\r\n",
 839              		.loc 1 437 4 view .LVU214
 840 0162 6423     		movs	r3, #100
 841 0164 1D22     		movs	r2, #29
 842 0166 5149     		ldr	r1, .L61+104
 843 0168 3E48     		ldr	r0, .L61+32
 844 016a FFF7FEFF 		bl	HAL_UART_Transmit
 845              	.LVL36:
 846 016e DEE7     		b	.L41
 847              	.L57:
 443:Src/state.c   **** 				&huart3, (uint8_t *)"\r\nCurrent state: STATE_SETUP\r\n",
 848              		.loc 1 443 4 view .LVU215
 849 0170 6423     		movs	r3, #100
 850 0172 1E22     		movs	r2, #30
 851 0174 4E49     		ldr	r1, .L61+108
 852 0176 3B48     		ldr	r0, .L61+32
 853 0178 FFF7FEFF 		bl	HAL_UART_Transmit
 854              	.LVL37:
 855 017c D7E7     		b	.L41
 856              	.L58:
 449:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_RUN\r\n",
 857              		.loc 1 449 4 view .LVU216
 858 017e 6423     		movs	r3, #100
 859 0180 1C22     		movs	r2, #28
 860 0182 4C49     		ldr	r1, .L61+112
 861 0184 3748     		ldr	r0, .L61+32
 862 0186 FFF7FEFF 		bl	HAL_UART_Transmit
 863              	.LVL38:
ARM GAS  /tmp/ccEvYcEU.s 			page 30


 864 018a D0E7     		b	.L41
 865              	.L54:
 463:Src/state.c   **** 			if(successfull_opening == 1){
 866              		.loc 1 463 4 view .LVU217
 867 018c 6423     		movs	r3, #100
 868 018e 0D22     		movs	r2, #13
 869 0190 4949     		ldr	r1, .L61+116
 870 0192 3448     		ldr	r0, .L61+32
 871 0194 FFF7FEFF 		bl	HAL_UART_Transmit
 872              	.LVL39:
 464:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 873              		.loc 1 464 4 view .LVU218
 464:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 874              		.loc 1 464 27 is_stmt 0 view .LVU219
 875 0198 484B     		ldr	r3, .L61+120
 876 019a 1B68     		ldr	r3, [r3]
 464:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 877              		.loc 1 464 6 view .LVU220
 878 019c 012B     		cmp	r3, #1
 879 019e 06D0     		beq	.L59
 468:Src/state.c   **** 			}
 880              		.loc 1 468 5 is_stmt 1 view .LVU221
 881 01a0 6423     		movs	r3, #100
 882 01a2 1022     		movs	r2, #16
 883 01a4 4649     		ldr	r1, .L61+124
 884 01a6 2F48     		ldr	r0, .L61+32
 885 01a8 FFF7FEFF 		bl	HAL_UART_Transmit
 886              	.LVL40:
 887 01ac 64E7     		b	.L34
 888              	.L59:
 465:Src/state.c   **** 				HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 889              		.loc 1 465 5 view .LVU222
 890 01ae 2E4C     		ldr	r4, .L61+36
 891 01b0 444A     		ldr	r2, .L61+128
 892 01b2 4549     		ldr	r1, .L61+132
 893 01b4 2046     		mov	r0, r4
 894 01b6 FFF7FEFF 		bl	sprintf
 895              	.LVL41:
 466:Src/state.c   **** 			}else{
 896              		.loc 1 466 5 view .LVU223
 466:Src/state.c   **** 			}else{
 897              		.loc 1 466 53 is_stmt 0 view .LVU224
 898 01ba 2046     		mov	r0, r4
 899 01bc FFF7FEFF 		bl	strlen
 900              	.LVL42:
 466:Src/state.c   **** 			}else{
 901              		.loc 1 466 5 view .LVU225
 902 01c0 6423     		movs	r3, #100
 903 01c2 82B2     		uxth	r2, r0
 904 01c4 2146     		mov	r1, r4
 905 01c6 2748     		ldr	r0, .L61+32
 906 01c8 FFF7FEFF 		bl	HAL_UART_Transmit
 907              	.LVL43:
 908 01cc 54E7     		b	.L34
 909              	.L44:
 474:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 910              		.loc 1 474 7 is_stmt 1 view .LVU226
ARM GAS  /tmp/ccEvYcEU.s 			page 31


 474:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 911              		.loc 1 474 10 is_stmt 0 view .LVU227
 912 01ce 3F49     		ldr	r1, .L61+136
 913 01d0 1D48     		ldr	r0, .L61+4
 914 01d2 FFF7FEFF 		bl	strcmp
 915              	.LVL44:
 474:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 916              		.loc 1 474 9 view .LVU228
 917 01d6 A0B1     		cbz	r0, .L60
 478:Src/state.c   **** 	{
 918              		.loc 1 478 7 is_stmt 1 view .LVU229
 478:Src/state.c   **** 	{
 919              		.loc 1 478 11 is_stmt 0 view .LVU230
 920 01d8 3D49     		ldr	r1, .L61+140
 921 01da 1B48     		ldr	r0, .L61+4
 922 01dc FFF7FEFF 		bl	strcmp
 923              	.LVL45:
 478:Src/state.c   **** 	{
 924              		.loc 1 478 10 view .LVU231
 925 01e0 00BB     		cbnz	r0, .L48
 480:Src/state.c   **** 				"\r\n"
 926              		.loc 1 480 3 is_stmt 1 view .LVU232
 927 01e2 214C     		ldr	r4, .L61+36
 928 01e4 DB22     		movs	r2, #219
 929 01e6 3B49     		ldr	r1, .L61+144
 930 01e8 2046     		mov	r0, r4
 931 01ea FFF7FEFF 		bl	memcpy
 932              	.LVL46:
 494:Src/state.c   **** 	}
 933              		.loc 1 494 3 view .LVU233
 494:Src/state.c   **** 	}
 934              		.loc 1 494 51 is_stmt 0 view .LVU234
 935 01ee 2046     		mov	r0, r4
 936 01f0 FFF7FEFF 		bl	strlen
 937              	.LVL47:
 494:Src/state.c   **** 	}
 938              		.loc 1 494 3 view .LVU235
 939 01f4 6423     		movs	r3, #100
 940 01f6 82B2     		uxth	r2, r0
 941 01f8 2146     		mov	r1, r4
 942 01fa 1A48     		ldr	r0, .L61+32
 943 01fc FFF7FEFF 		bl	HAL_UART_Transmit
 944              	.LVL48:
 945 0200 3AE7     		b	.L34
 946              	.L60:
 475:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 1000);
 947              		.loc 1 475 3 is_stmt 1 view .LVU236
 948 0202 194C     		ldr	r4, .L61+36
 949 0204 344A     		ldr	r2, .L61+148
 950 0206 3549     		ldr	r1, .L61+152
 951 0208 2046     		mov	r0, r4
 952 020a FFF7FEFF 		bl	sprintf
 953              	.LVL49:
 476:Src/state.c   **** 	}
 954              		.loc 1 476 3 view .LVU237
 476:Src/state.c   **** 	}
 955              		.loc 1 476 51 is_stmt 0 view .LVU238
ARM GAS  /tmp/ccEvYcEU.s 			page 32


 956 020e 2046     		mov	r0, r4
 957 0210 FFF7FEFF 		bl	strlen
 958              	.LVL50:
 476:Src/state.c   **** 	}
 959              		.loc 1 476 3 view .LVU239
 960 0214 4FF47A73 		mov	r3, #1000
 961 0218 82B2     		uxth	r2, r0
 962 021a 2146     		mov	r1, r4
 963 021c 1148     		ldr	r0, .L61+32
 964 021e FFF7FEFF 		bl	HAL_UART_Transmit
 965              	.LVL51:
 966 0222 29E7     		b	.L34
 967              	.L48:
 498:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 968              		.loc 1 498 3 is_stmt 1 view .LVU240
 969 0224 104C     		ldr	r4, .L61+36
 970 0226 084A     		ldr	r2, .L61+4
 971 0228 2D49     		ldr	r1, .L61+156
 972 022a 2046     		mov	r0, r4
 973 022c FFF7FEFF 		bl	sprintf
 974              	.LVL52:
 499:Src/state.c   **** 	}
 975              		.loc 1 499 3 view .LVU241
 499:Src/state.c   **** 	}
 976              		.loc 1 499 51 is_stmt 0 view .LVU242
 977 0230 2046     		mov	r0, r4
 978 0232 FFF7FEFF 		bl	strlen
 979              	.LVL53:
 499:Src/state.c   **** 	}
 980              		.loc 1 499 3 view .LVU243
 981 0236 6423     		movs	r3, #100
 982 0238 82B2     		uxth	r2, r0
 983 023a 2146     		mov	r1, r4
 984 023c 0948     		ldr	r0, .L61+32
 985 023e FFF7FEFF 		bl	HAL_UART_Transmit
 986              	.LVL54:
 987              		.loc 1 501 1 view .LVU244
 988 0242 19E7     		b	.L34
 989              	.L62:
 990              		.align	2
 991              	.L61:
 992 0244 00000000 		.word	.LC0
 993 0248 00000000 		.word	debug_rx
 994 024c 0C010000 		.word	.LC2
 995 0250 14010000 		.word	.LC3
 996 0254 4C010000 		.word	.LC5
 997 0258 30030000 		.word	.LC13
 998 025c 00000000 		.word	mount_ok
 999 0260 90030000 		.word	.LC17
 1000 0264 00000000 		.word	huart3
 1001 0268 00000000 		.word	debug_tx
 1002 026c 08000000 		.word	.LC1
 1003 0270 00000000 		.word	code_version
 1004 0274 00000000 		.word	count_hour
 1005 0278 00000000 		.word	count_min
 1006 027c 00000000 		.word	count_sec
 1007 0280 00000000 		.word	count_dec
ARM GAS  /tmp/ccEvYcEU.s 			page 33


 1008 0284 1C010000 		.word	.LC4
 1009 0288 00000000 		.word	can1
 1010 028c 54010000 		.word	.LC6
 1011 0290 00000000 		.word	can3
 1012 0294 FC010000 		.word	.LC7
 1013 0298 00000000 		.word	current_state
 1014 029c 00000000 		.word	its_connected
 1015 02a0 00000000 		.word	imu_connected
 1016 02a4 DC020000 		.word	.LC12
 1017 02a8 5C020000 		.word	.LC8
 1018 02ac 7C020000 		.word	.LC9
 1019 02b0 9C020000 		.word	.LC10
 1020 02b4 BC020000 		.word	.LC11
 1021 02b8 3C030000 		.word	.LC14
 1022 02bc 00000000 		.word	successfull_opening
 1023 02c0 7C030000 		.word	.LC16
 1024 02c4 00000000 		.word	filename_log
 1025 02c8 4C030000 		.word	.LC15
 1026 02cc A4030000 		.word	.LC18
 1027 02d0 C8030000 		.word	.LC20
 1028 02d4 CC030000 		.word	.LC21
 1029 02d8 00000000 		.word	log_names
 1030 02dc AC030000 		.word	.LC19
 1031 02e0 A8040000 		.word	.LC22
 1032              		.cfi_endproc
 1033              	.LFE149:
 1035              		.section	.rodata.imu_operations.str1.4,"aMS",%progbits,1
 1036              		.align	2
 1037              	.LC23:
 1038 0000 494D5520 		.ascii	"IMU presente\015\012\000"
 1038      70726573 
 1038      656E7465 
 1038      0D0A00
 1039              		.section	.text.imu_operations,"ax",%progbits
 1040              		.align	1
 1041              		.global	imu_operations
 1042              		.syntax unified
 1043              		.thumb
 1044              		.thumb_func
 1045              		.fpu fpv5-d16
 1047              	imu_operations:
 1048              	.LFB150:
 502:Src/state.c   **** 
 503:Src/state.c   **** void imu_operations()
 504:Src/state.c   **** {
 1049              		.loc 1 504 1 is_stmt 1 view -0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053 0000 08B5     		push	{r3, lr}
 1054              	.LCFI8:
 1055              		.cfi_def_cfa_offset 8
 1056              		.cfi_offset 3, -8
 1057              		.cfi_offset 14, -4
 505:Src/state.c   **** 	imu_connected = 1; // imu connected true
 1058              		.loc 1 505 2 view .LVU246
 1059              		.loc 1 505 16 is_stmt 0 view .LVU247
ARM GAS  /tmp/ccEvYcEU.s 			page 34


 1060 0002 0A4B     		ldr	r3, .L67
 1061 0004 0122     		movs	r2, #1
 1062 0006 1A70     		strb	r2, [r3]
 506:Src/state.c   **** 	if (count_imu == 10 || count_imu == 11)
 1063              		.loc 1 506 2 is_stmt 1 view .LVU248
 1064              		.loc 1 506 22 is_stmt 0 view .LVU249
 1065 0008 094B     		ldr	r3, .L67+4
 1066 000a 1B88     		ldrh	r3, [r3]
 1067 000c 0A3B     		subs	r3, r3, #10
 1068 000e 9BB2     		uxth	r3, r3
 1069              		.loc 1 506 5 view .LVU250
 1070 0010 9342     		cmp	r3, r2
 1071 0012 03D9     		bls	.L66
 1072              	.L64:
 507:Src/state.c   **** 	{
 508:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"IMU presente\r\n",
 509:Src/state.c   **** 						  strlen("IMU presente\r\n"), 10);
 510:Src/state.c   **** 	}
 511:Src/state.c   **** 	count_imu = 0;
 1073              		.loc 1 511 2 is_stmt 1 view .LVU251
 1074              		.loc 1 511 12 is_stmt 0 view .LVU252
 1075 0014 064B     		ldr	r3, .L67+4
 1076 0016 0022     		movs	r2, #0
 1077 0018 1A80     		strh	r2, [r3]	@ movhi
 512:Src/state.c   **** }
 1078              		.loc 1 512 1 view .LVU253
 1079 001a 08BD     		pop	{r3, pc}
 1080              	.L66:
 508:Src/state.c   **** 						  strlen("IMU presente\r\n"), 10);
 1081              		.loc 1 508 3 is_stmt 1 view .LVU254
 1082 001c 0A23     		movs	r3, #10
 1083 001e 0E22     		movs	r2, #14
 1084 0020 0449     		ldr	r1, .L67+8
 1085 0022 0548     		ldr	r0, .L67+12
 1086 0024 FFF7FEFF 		bl	HAL_UART_Transmit
 1087              	.LVL55:
 1088 0028 F4E7     		b	.L64
 1089              	.L68:
 1090 002a 00BF     		.align	2
 1091              	.L67:
 1092 002c 00000000 		.word	imu_connected
 1093 0030 00000000 		.word	count_imu
 1094 0034 00000000 		.word	.LC23
 1095 0038 00000000 		.word	huart3
 1096              		.cfi_endproc
 1097              	.LFE150:
 1099              		.section	.rodata.atc_pot_operations.str1.4,"aMS",%progbits,1
 1100              		.align	2
 1101              	.LC24:
 1102 0000 504F5420 		.ascii	"POT FAIL %d\015\012\000"
 1102      4641494C 
 1102      2025640D 
 1102      0A00
 1103 000e 0000     		.align	2
 1104              	.LC25:
 1105 0010 504F5420 		.ascii	"POT WORK %d %d\015\012\000"
 1105      574F524B 
ARM GAS  /tmp/ccEvYcEU.s 			page 35


 1105      20256420 
 1105      25640D0A 
 1105      00
 1106              		.section	.text.atc_pot_operations,"ax",%progbits
 1107              		.align	1
 1108              		.global	atc_pot_operations
 1109              		.syntax unified
 1110              		.thumb
 1111              		.thumb_func
 1112              		.fpu fpv5-d16
 1114              	atc_pot_operations:
 1115              	.LFB151:
 513:Src/state.c   **** void atc_pot_operations()
 514:Src/state.c   **** {
 1116              		.loc 1 514 1 view -0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120 0000 38B5     		push	{r3, r4, r5, lr}
 1121              	.LCFI9:
 1122              		.cfi_def_cfa_offset 16
 1123              		.cfi_offset 3, -16
 1124              		.cfi_offset 4, -12
 1125              		.cfi_offset 5, -8
 1126              		.cfi_offset 14, -4
 515:Src/state.c   **** 	atc_connected = 1;
 1127              		.loc 1 515 2 view .LVU256
 1128              		.loc 1 515 16 is_stmt 0 view .LVU257
 1129 0002 3D4B     		ldr	r3, .L77
 1130 0004 0122     		movs	r2, #1
 1131 0006 1A70     		strb	r2, [r3]
 516:Src/state.c   **** 	count_atc = 0;
 1132              		.loc 1 516 2 is_stmt 1 view .LVU258
 1133              		.loc 1 516 12 is_stmt 0 view .LVU259
 1134 0008 3C4B     		ldr	r3, .L77+4
 1135 000a 0022     		movs	r2, #0
 1136 000c 1A80     		strh	r2, [r3]	@ movhi
 517:Src/state.c   **** 	accel.pot1_val = can1.dataRx[0] * 256 + can1.dataRx[1];
 1137              		.loc 1 517 2 is_stmt 1 view .LVU260
 1138              		.loc 1 517 30 is_stmt 0 view .LVU261
 1139 000e 3C49     		ldr	r1, .L77+8
 1140 0010 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
 1141              		.loc 1 517 53 view .LVU262
 1142 0012 4B7D     		ldrb	r3, [r1, #21]	@ zero_extendqisi2
 1143              		.loc 1 517 40 view .LVU263
 1144 0014 03EB0223 		add	r3, r3, r2, lsl #8
 1145 0018 9BB2     		uxth	r3, r3
 1146              		.loc 1 517 17 view .LVU264
 1147 001a 3A48     		ldr	r0, .L77+12
 1148 001c 0380     		strh	r3, [r0]	@ movhi
 518:Src/state.c   **** 	accel.pot2_val = can1.dataRx[2] * 256 + can1.dataRx[3];
 1149              		.loc 1 518 2 is_stmt 1 view .LVU265
 1150              		.loc 1 518 30 is_stmt 0 view .LVU266
 1151 001e 8C7D     		ldrb	r4, [r1, #22]	@ zero_extendqisi2
 1152              		.loc 1 518 53 view .LVU267
 1153 0020 CA7D     		ldrb	r2, [r1, #23]	@ zero_extendqisi2
 1154              		.loc 1 518 40 view .LVU268
ARM GAS  /tmp/ccEvYcEU.s 			page 36


 1155 0022 02EB0422 		add	r2, r2, r4, lsl #8
 1156 0026 92B2     		uxth	r2, r2
 1157              		.loc 1 518 17 view .LVU269
 1158 0028 8280     		strh	r2, [r0, #4]	@ movhi
 519:Src/state.c   **** 	// brake.pot1_val = can1.dataRx[4] * 256 + can1.dataRx[5];
 520:Src/state.c   **** 	// brake.pot2_val = can1.dataRx[6] * 256 + can1.dataRx[7];
 521:Src/state.c   **** 	/*sprintf(txt, "CAN: %d %d %d %d\r\n ", can1.dataRx[0], can1.dataRx[1],
 522:Src/state.c   **** 			can1.dataRx[2], can1.dataRx[3]);
 523:Src/state.c   **** 	HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 10);*/
 524:Src/state.c   **** 	// val100 = (val - pot_min_val)/(pot_max_val - pot_min_val)*100
 525:Src/state.c   **** 
 526:Src/state.c   **** 	if (accel.pot1_range != 0 && accel.pot2_range != 0)
 1159              		.loc 1 526 2 is_stmt 1 view .LVU270
 1160              		.loc 1 526 11 is_stmt 0 view .LVU271
 1161 002a 8189     		ldrh	r1, [r0, #12]
 1162              		.loc 1 526 5 view .LVU272
 1163 002c 89B1     		cbz	r1, .L70
 1164              		.loc 1 526 36 discriminator 1 view .LVU273
 1165 002e 458A     		ldrh	r5, [r0, #18]
 1166              		.loc 1 526 28 discriminator 1 view .LVU274
 1167 0030 7DB1     		cbz	r5, .L70
 527:Src/state.c   **** 	{
 528:Src/state.c   **** 		accel.pot1_val_100 =
 1168              		.loc 1 528 3 is_stmt 1 view .LVU275
 529:Src/state.c   **** 			((accel.pot1_val - accel.pot1_min_val) * 100) / (accel.pot1_range);
 1169              		.loc 1 529 28 is_stmt 0 view .LVU276
 1170 0032 0446     		mov	r4, r0
 1171 0034 C089     		ldrh	r0, [r0, #14]
 1172              		.loc 1 529 21 view .LVU277
 1173 0036 1B1A     		subs	r3, r3, r0
 1174              		.loc 1 529 43 view .LVU278
 1175 0038 6420     		movs	r0, #100
 1176 003a 00FB03F3 		mul	r3, r0, r3
 1177              		.loc 1 529 50 view .LVU279
 1178 003e 93FBF1F3 		sdiv	r3, r3, r1
 528:Src/state.c   **** 			((accel.pot1_val - accel.pot1_min_val) * 100) / (accel.pot1_range);
 1179              		.loc 1 528 22 view .LVU280
 1180 0042 A370     		strb	r3, [r4, #2]
 530:Src/state.c   **** 		accel.pot2_val_100 =
 1181              		.loc 1 530 3 is_stmt 1 view .LVU281
 531:Src/state.c   **** 			((accel.pot2_val - accel.pot2_min_val) * 100) / (accel.pot2_range);
 1182              		.loc 1 531 28 is_stmt 0 view .LVU282
 1183 0044 238A     		ldrh	r3, [r4, #16]
 1184              		.loc 1 531 21 view .LVU283
 1185 0046 D21A     		subs	r2, r2, r3
 1186              		.loc 1 531 43 view .LVU284
 1187 0048 00FB02F2 		mul	r2, r0, r2
 1188              		.loc 1 531 50 view .LVU285
 1189 004c 92FBF5F2 		sdiv	r2, r2, r5
 530:Src/state.c   **** 		accel.pot2_val_100 =
 1190              		.loc 1 530 22 view .LVU286
 1191 0050 A271     		strb	r2, [r4, #6]
 1192              	.L70:
 532:Src/state.c   **** 	}
 533:Src/state.c   **** 	if (brake.pot1_range != 0 && brake.pot2_range != 0)
 1193              		.loc 1 533 2 is_stmt 1 view .LVU287
 1194              		.loc 1 533 11 is_stmt 0 view .LVU288
ARM GAS  /tmp/ccEvYcEU.s 			page 37


 1195 0052 2D4B     		ldr	r3, .L77+16
 1196 0054 9989     		ldrh	r1, [r3, #12]
 1197              		.loc 1 533 5 view .LVU289
 1198 0056 C1B1     		cbz	r1, .L71
 1199              		.loc 1 533 36 discriminator 1 view .LVU290
 1200 0058 5C8A     		ldrh	r4, [r3, #18]
 1201              		.loc 1 533 28 discriminator 1 view .LVU291
 1202 005a B4B1     		cbz	r4, .L71
 534:Src/state.c   **** 	{
 535:Src/state.c   **** 		brake.pot1_val_100 =
 1203              		.loc 1 535 3 is_stmt 1 view .LVU292
 536:Src/state.c   **** 			(brake.pot1_val - brake.pot1_min_val) / (brake.pot1_range) * 100;
 1204              		.loc 1 536 10 is_stmt 0 view .LVU293
 1205 005c 1846     		mov	r0, r3
 1206 005e 1A88     		ldrh	r2, [r3]
 1207              		.loc 1 536 27 view .LVU294
 1208 0060 DB89     		ldrh	r3, [r3, #14]
 1209              		.loc 1 536 20 view .LVU295
 1210 0062 D21A     		subs	r2, r2, r3
 1211              		.loc 1 536 42 view .LVU296
 1212 0064 92FBF1F2 		sdiv	r2, r2, r1
 535:Src/state.c   **** 			(brake.pot1_val - brake.pot1_min_val) / (brake.pot1_range) * 100;
 1213              		.loc 1 535 22 view .LVU297
 1214 0068 02EB8202 		add	r2, r2, r2, lsl #2
 1215 006c 02EB8202 		add	r2, r2, r2, lsl #2
 1216 0070 9200     		lsls	r2, r2, #2
 1217 0072 8270     		strb	r2, [r0, #2]
 537:Src/state.c   **** 		brake.pot2_val_100 =
 1218              		.loc 1 537 3 is_stmt 1 view .LVU298
 538:Src/state.c   **** 			(brake.pot2_val - brake.pot2_min_val) / (brake.pot2_range) * 100;
 1219              		.loc 1 538 10 is_stmt 0 view .LVU299
 1220 0074 8388     		ldrh	r3, [r0, #4]
 1221              		.loc 1 538 27 view .LVU300
 1222 0076 028A     		ldrh	r2, [r0, #16]
 1223              		.loc 1 538 20 view .LVU301
 1224 0078 9B1A     		subs	r3, r3, r2
 1225              		.loc 1 538 42 view .LVU302
 1226 007a 93FBF4F3 		sdiv	r3, r3, r4
 537:Src/state.c   **** 		brake.pot2_val_100 =
 1227              		.loc 1 537 22 view .LVU303
 1228 007e 03EB8303 		add	r3, r3, r3, lsl #2
 1229 0082 03EB8303 		add	r3, r3, r3, lsl #2
 1230 0086 9B00     		lsls	r3, r3, #2
 1231 0088 8371     		strb	r3, [r0, #6]
 1232              	.L71:
 539:Src/state.c   **** 	}
 540:Src/state.c   **** 	/*sprintf(txt, "size: %d ", can1.rx_size);
 541:Src/state.c   **** 	HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 10);*/
 542:Src/state.c   **** 	/*sprintf(txt, "%d %d\r\n", accel.pot1_val, accel.pot2_val);
 543:Src/state.c   **** 	HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 10);*/
 544:Src/state.c   **** 	/*sprintf(txt, "%d %d\r\n", accel.pot1_val_100, accel.pot2_val_100);
 545:Src/state.c   **** 	HAL_UART_Transmit(&huart3, (uint8_t*)txt, strlen(txt), 10);*/
 546:Src/state.c   **** 	if (accel_implausibility_check() == 1)
 1233              		.loc 1 546 2 is_stmt 1 view .LVU304
 1234              		.loc 1 546 6 is_stmt 0 view .LVU305
 1235 008a FFF7FEFF 		bl	accel_implausibility_check
 1236              	.LVL56:
ARM GAS  /tmp/ccEvYcEU.s 			page 38


 1237              		.loc 1 546 5 view .LVU306
 1238 008e 0128     		cmp	r0, #1
 1239 0090 03D0     		beq	.L75
 547:Src/state.c   **** 	{
 548:Src/state.c   **** 		accel.pot1_val = 0;
 549:Src/state.c   **** 		accel.pot2_val = 0;
 550:Src/state.c   **** 		accel.pot1_val_100 = 0;
 551:Src/state.c   **** 		accel.pot2_val_100 = 0;
 552:Src/state.c   **** 		// send error//
 553:Src/state.c   **** 		can1.tx_id = 0x10;
 554:Src/state.c   **** 		can1.dataTx[0] = 1;
 555:Src/state.c   **** 		can1.tx_size = 1;
 556:Src/state.c   **** 		// CAN_Send(&can1, highPriority);
 557:Src/state.c   **** 		sprintf(txt, "POT FAIL %d\r\n", accel_implausibility_check_count_flag);
 558:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)txt, strlen(txt), 10);
 559:Src/state.c   **** 	}
 560:Src/state.c   **** 	else if (accel_implausibility_check() == 0)
 1240              		.loc 1 560 7 is_stmt 1 view .LVU307
 1241              		.loc 1 560 11 is_stmt 0 view .LVU308
 1242 0092 FFF7FEFF 		bl	accel_implausibility_check
 1243              	.LVL57:
 1244              		.loc 1 560 10 view .LVU309
 1245 0096 E8B1     		cbz	r0, .L76
 1246              	.L69:
 561:Src/state.c   **** 	{
 562:Src/state.c   **** 		sprintf(txt, "POT WORK %d %d\r\n", accel.pot1_val_100,
 563:Src/state.c   **** 				accel.pot2_val_100);
 564:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)txt, strlen(txt), 10);
 565:Src/state.c   **** 	}
 566:Src/state.c   **** 	/*if(brake_implausibility_check()){
 567:Src/state.c   **** 		brake.pot1_val = 0;
 568:Src/state.c   **** 		brake.pot2_val = 0;
 569:Src/state.c   **** 	}*/
 570:Src/state.c   **** }
 1247              		.loc 1 570 1 view .LVU310
 1248 0098 38BD     		pop	{r3, r4, r5, pc}
 1249              	.L75:
 548:Src/state.c   **** 		accel.pot2_val = 0;
 1250              		.loc 1 548 3 is_stmt 1 view .LVU311
 548:Src/state.c   **** 		accel.pot2_val = 0;
 1251              		.loc 1 548 18 is_stmt 0 view .LVU312
 1252 009a 1A4B     		ldr	r3, .L77+12
 1253 009c 0022     		movs	r2, #0
 1254 009e 1A80     		strh	r2, [r3]	@ movhi
 549:Src/state.c   **** 		accel.pot1_val_100 = 0;
 1255              		.loc 1 549 3 is_stmt 1 view .LVU313
 549:Src/state.c   **** 		accel.pot1_val_100 = 0;
 1256              		.loc 1 549 18 is_stmt 0 view .LVU314
 1257 00a0 9A80     		strh	r2, [r3, #4]	@ movhi
 550:Src/state.c   **** 		accel.pot2_val_100 = 0;
 1258              		.loc 1 550 3 is_stmt 1 view .LVU315
 550:Src/state.c   **** 		accel.pot2_val_100 = 0;
 1259              		.loc 1 550 22 is_stmt 0 view .LVU316
 1260 00a2 9A70     		strb	r2, [r3, #2]
 551:Src/state.c   **** 		// send error//
 1261              		.loc 1 551 3 is_stmt 1 view .LVU317
 551:Src/state.c   **** 		// send error//
ARM GAS  /tmp/ccEvYcEU.s 			page 39


 1262              		.loc 1 551 22 is_stmt 0 view .LVU318
 1263 00a4 9A71     		strb	r2, [r3, #6]
 553:Src/state.c   **** 		can1.dataTx[0] = 1;
 1264              		.loc 1 553 3 is_stmt 1 view .LVU319
 553:Src/state.c   **** 		can1.dataTx[0] = 1;
 1265              		.loc 1 553 14 is_stmt 0 view .LVU320
 1266 00a6 164B     		ldr	r3, .L77+8
 1267 00a8 1022     		movs	r2, #16
 1268 00aa DA62     		str	r2, [r3, #44]
 554:Src/state.c   **** 		can1.tx_size = 1;
 1269              		.loc 1 554 3 is_stmt 1 view .LVU321
 554:Src/state.c   **** 		can1.tx_size = 1;
 1270              		.loc 1 554 18 is_stmt 0 view .LVU322
 1271 00ac 0122     		movs	r2, #1
 1272 00ae 1A73     		strb	r2, [r3, #12]
 555:Src/state.c   **** 		// CAN_Send(&can1, highPriority);
 1273              		.loc 1 555 3 is_stmt 1 view .LVU323
 555:Src/state.c   **** 		// CAN_Send(&can1, highPriority);
 1274              		.loc 1 555 16 is_stmt 0 view .LVU324
 1275 00b0 1A60     		str	r2, [r3]
 557:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)txt, strlen(txt), 10);
 1276              		.loc 1 557 3 is_stmt 1 view .LVU325
 1277 00b2 164C     		ldr	r4, .L77+20
 1278 00b4 164B     		ldr	r3, .L77+24
 1279 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1280 00b8 1649     		ldr	r1, .L77+28
 1281 00ba 2046     		mov	r0, r4
 1282 00bc FFF7FEFF 		bl	sprintf
 1283              	.LVL58:
 558:Src/state.c   **** 	}
 1284              		.loc 1 558 3 view .LVU326
 558:Src/state.c   **** 	}
 1285              		.loc 1 558 46 is_stmt 0 view .LVU327
 1286 00c0 2046     		mov	r0, r4
 1287 00c2 FFF7FEFF 		bl	strlen
 1288              	.LVL59:
 558:Src/state.c   **** 	}
 1289              		.loc 1 558 3 view .LVU328
 1290 00c6 0A23     		movs	r3, #10
 1291 00c8 82B2     		uxth	r2, r0
 1292 00ca 2146     		mov	r1, r4
 1293 00cc 1248     		ldr	r0, .L77+32
 1294 00ce FFF7FEFF 		bl	HAL_UART_Transmit
 1295              	.LVL60:
 1296 00d2 E1E7     		b	.L69
 1297              	.L76:
 562:Src/state.c   **** 				accel.pot2_val_100);
 1298              		.loc 1 562 3 is_stmt 1 view .LVU329
 562:Src/state.c   **** 				accel.pot2_val_100);
 1299              		.loc 1 562 43 is_stmt 0 view .LVU330
 1300 00d4 0B4A     		ldr	r2, .L77+12
 562:Src/state.c   **** 				accel.pot2_val_100);
 1301              		.loc 1 562 3 view .LVU331
 1302 00d6 0D4C     		ldr	r4, .L77+20
 1303 00d8 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 1304 00da 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1305 00dc 0F49     		ldr	r1, .L77+36
ARM GAS  /tmp/ccEvYcEU.s 			page 40


 1306 00de 2046     		mov	r0, r4
 1307 00e0 FFF7FEFF 		bl	sprintf
 1308              	.LVL61:
 564:Src/state.c   **** 	}
 1309              		.loc 1 564 3 is_stmt 1 view .LVU332
 564:Src/state.c   **** 	}
 1310              		.loc 1 564 46 is_stmt 0 view .LVU333
 1311 00e4 2046     		mov	r0, r4
 1312 00e6 FFF7FEFF 		bl	strlen
 1313              	.LVL62:
 564:Src/state.c   **** 	}
 1314              		.loc 1 564 3 view .LVU334
 1315 00ea 0A23     		movs	r3, #10
 1316 00ec 82B2     		uxth	r2, r0
 1317 00ee 2146     		mov	r1, r4
 1318 00f0 0948     		ldr	r0, .L77+32
 1319 00f2 FFF7FEFF 		bl	HAL_UART_Transmit
 1320              	.LVL63:
 1321              		.loc 1 570 1 view .LVU335
 1322 00f6 CFE7     		b	.L69
 1323              	.L78:
 1324              		.align	2
 1325              	.L77:
 1326 00f8 00000000 		.word	atc_connected
 1327 00fc 00000000 		.word	count_atc
 1328 0100 00000000 		.word	can1
 1329 0104 00000000 		.word	accel
 1330 0108 00000000 		.word	brake
 1331 010c 00000000 		.word	txt
 1332 0110 00000000 		.word	accel_implausibility_check_count_flag
 1333 0114 00000000 		.word	.LC24
 1334 0118 00000000 		.word	huart3
 1335 011c 10000000 		.word	.LC25
 1336              		.cfi_endproc
 1337              	.LFE151:
 1339              		.section	.text.idle,"ax",%progbits
 1340              		.align	1
 1341              		.global	idle
 1342              		.syntax unified
 1343              		.thumb
 1344              		.thumb_func
 1345              		.fpu fpv5-d16
 1347              	idle:
 1348              	.LFB146:
 129:Src/state.c   **** 	/*if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port,USER_BUTTON_Pin) == GPIO_PIN_SET){
 1349              		.loc 1 129 1 is_stmt 1 view -0
 1350              		.cfi_startproc
 1351              		@ args = 0, pretend = 0, frame = 0
 1352              		@ frame_needed = 0, uses_anonymous_args = 0
 1353 0000 08B5     		push	{r3, lr}
 1354              	.LCFI10:
 1355              		.cfi_def_cfa_offset 8
 1356              		.cfi_offset 3, -8
 1357              		.cfi_offset 14, -4
 138:Src/state.c   **** 	{
 1358              		.loc 1 138 2 view .LVU337
 138:Src/state.c   **** 	{
ARM GAS  /tmp/ccEvYcEU.s 			page 41


 1359              		.loc 1 138 24 is_stmt 0 view .LVU338
 1360 0002 174B     		ldr	r3, .L87
 1361 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 138:Src/state.c   **** 	{
 1362              		.loc 1 138 5 view .LVU339
 1363 0006 012B     		cmp	r3, #1
 1364 0008 0FD0     		beq	.L86
 1365              	.L80:
 143:Src/state.c   **** 	{
 1366              		.loc 1 143 2 is_stmt 1 view .LVU340
 143:Src/state.c   **** 	{
 1367              		.loc 1 143 6 is_stmt 0 view .LVU341
 1368 000a 1648     		ldr	r0, .L87+4
 1369 000c FFF7FEFF 		bl	fifoRxDataCAN_pop
 1370              	.LVL64:
 143:Src/state.c   **** 	{
 1371              		.loc 1 143 5 view .LVU342
 1372 0010 E8B1     		cbz	r0, .L79
 145:Src/state.c   **** 		{
 1373              		.loc 1 145 3 is_stmt 1 view .LVU343
 145:Src/state.c   **** 		{
 1374              		.loc 1 145 15 is_stmt 0 view .LVU344
 1375 0012 144B     		ldr	r3, .L87+4
 1376 0014 1B6B     		ldr	r3, [r3, #48]
 145:Src/state.c   **** 		{
 1377              		.loc 1 145 3 view .LVU345
 1378 0016 A02B     		cmp	r3, #160
 1379 0018 1AD0     		beq	.L82
 1380 001a 18D8     		bhi	.L79
 1381 001c 102B     		cmp	r3, #16
 1382 001e 0AD0     		beq	.L83
 1383 0020 342B     		cmp	r3, #52
 1384 0022 14D1     		bne	.L79
 184:Src/state.c   **** 			break;
 1385              		.loc 1 184 4 is_stmt 1 view .LVU346
 1386 0024 FFF7FEFF 		bl	atc_pot_operations
 1387              	.LVL65:
 185:Src/state.c   **** 		default:
 1388              		.loc 1 185 4 view .LVU347
 190:Src/state.c   **** /*******************************************************************
 1389              		.loc 1 190 1 is_stmt 0 view .LVU348
 1390 0028 11E0     		b	.L79
 1391              	.L86:
 140:Src/state.c   **** 		debug_operations();
 1392              		.loc 1 140 3 is_stmt 1 view .LVU349
 140:Src/state.c   **** 		debug_operations();
 1393              		.loc 1 140 21 is_stmt 0 view .LVU350
 1394 002a 0D4B     		ldr	r3, .L87
 1395 002c 0022     		movs	r2, #0
 1396 002e 1A70     		strb	r2, [r3]
 141:Src/state.c   **** 	}
 1397              		.loc 1 141 3 is_stmt 1 view .LVU351
 1398 0030 FFF7FEFF 		bl	debug_operations
 1399              	.LVL66:
 1400 0034 E9E7     		b	.L80
 1401              	.L83:
 148:Src/state.c   **** 			can1.tx_size = 1;
ARM GAS  /tmp/ccEvYcEU.s 			page 42


 1402              		.loc 1 148 4 view .LVU352
 148:Src/state.c   **** 			can1.tx_size = 1;
 1403              		.loc 1 148 19 is_stmt 0 view .LVU353
 1404 0036 0B48     		ldr	r0, .L87+4
 1405 0038 0B4B     		ldr	r3, .L87+8
 1406 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1407 003c 0373     		strb	r3, [r0, #12]
 149:Src/state.c   **** 			can1.tx_id = ID_ACU_1;
 1408              		.loc 1 149 4 is_stmt 1 view .LVU354
 149:Src/state.c   **** 			can1.tx_id = ID_ACU_1;
 1409              		.loc 1 149 17 is_stmt 0 view .LVU355
 1410 003e 0123     		movs	r3, #1
 1411 0040 0360     		str	r3, [r0]
 150:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 1412              		.loc 1 150 4 is_stmt 1 view .LVU356
 150:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 1413              		.loc 1 150 15 is_stmt 0 view .LVU357
 1414 0042 4FF48073 		mov	r3, #256
 1415 0046 C362     		str	r3, [r0, #44]
 151:Src/state.c   **** 			break;
 1416              		.loc 1 151 4 is_stmt 1 view .LVU358
 1417 0048 0021     		movs	r1, #0
 1418 004a FFF7FEFF 		bl	CAN_Send
 1419              	.LVL67:
 152:Src/state.c   **** 		case ID_ASK_INV_DX:
 1420              		.loc 1 152 4 view .LVU359
 1421              	.L79:
 190:Src/state.c   **** /*******************************************************************
 1422              		.loc 1 190 1 is_stmt 0 view .LVU360
 1423 004e 08BD     		pop	{r3, pc}
 1424              	.L82:
 173:Src/state.c   **** 			{
 1425              		.loc 1 173 4 is_stmt 1 view .LVU361
 173:Src/state.c   **** 			{
 1426              		.loc 1 173 23 is_stmt 0 view .LVU362
 1427 0050 044B     		ldr	r3, .L87+4
 1428 0052 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1429 0054 022B     		cmp	r3, #2
 1430 0056 FAD1     		bne	.L79
 177:Src/state.c   **** 				break;
 1431              		.loc 1 177 5 is_stmt 1 view .LVU363
 177:Src/state.c   **** 				break;
 1432              		.loc 1 177 19 is_stmt 0 view .LVU364
 1433 0058 034B     		ldr	r3, .L87+8
 1434 005a 0222     		movs	r2, #2
 1435 005c 1A70     		strb	r2, [r3]
 178:Src/state.c   **** 			default:
 1436              		.loc 1 178 5 is_stmt 1 view .LVU365
 1437 005e F6E7     		b	.L79
 1438              	.L88:
 1439              		.align	2
 1440              	.L87:
 1441 0060 00000000 		.word	debug_msg_arrived
 1442 0064 00000000 		.word	can1
 1443 0068 00000000 		.word	current_state
 1444              		.cfi_endproc
 1445              	.LFE146:
ARM GAS  /tmp/ccEvYcEU.s 			page 43


 1447              		.section	.text.run,"ax",%progbits
 1448              		.align	1
 1449              		.global	run
 1450              		.syntax unified
 1451              		.thumb
 1452              		.thumb_func
 1453              		.fpu fpv5-d16
 1455              	run:
 1456              	.LFB148:
 357:Src/state.c   **** 	if (fifoRxDataCAN_pop(&can1))
 1457              		.loc 1 357 1 view -0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 0
 1460              		@ frame_needed = 0, uses_anonymous_args = 0
 1461 0000 08B5     		push	{r3, lr}
 1462              	.LCFI11:
 1463              		.cfi_def_cfa_offset 8
 1464              		.cfi_offset 3, -8
 1465              		.cfi_offset 14, -4
 358:Src/state.c   **** 	{
 1466              		.loc 1 358 2 view .LVU367
 358:Src/state.c   **** 	{
 1467              		.loc 1 358 6 is_stmt 0 view .LVU368
 1468 0002 0A48     		ldr	r0, .L93
 1469 0004 FFF7FEFF 		bl	fifoRxDataCAN_pop
 1470              	.LVL68:
 358:Src/state.c   **** 	{
 1471              		.loc 1 358 5 view .LVU369
 1472 0008 78B1     		cbz	r0, .L89
 360:Src/state.c   **** 		{
 1473              		.loc 1 360 3 is_stmt 1 view .LVU370
 360:Src/state.c   **** 		{
 1474              		.loc 1 360 15 is_stmt 0 view .LVU371
 1475 000a 084B     		ldr	r3, .L93
 1476 000c 1B6B     		ldr	r3, [r3, #48]
 360:Src/state.c   **** 		{
 1477              		.loc 1 360 3 view .LVU372
 1478 000e 342B     		cmp	r3, #52
 1479 0010 09D0     		beq	.L91
 1480 0012 A02B     		cmp	r3, #160
 1481 0014 09D1     		bne	.L89
 363:Src/state.c   **** 				6)
 1482              		.loc 1 363 4 is_stmt 1 view .LVU373
 363:Src/state.c   **** 				6)
 1483              		.loc 1 363 19 is_stmt 0 view .LVU374
 1484 0016 054B     		ldr	r3, .L93
 1485 0018 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 363:Src/state.c   **** 				6)
 1486              		.loc 1 363 7 view .LVU375
 1487 001a 062B     		cmp	r3, #6
 1488 001c 05D1     		bne	.L89
 366:Src/state.c   **** 			}
 1489              		.loc 1 366 5 is_stmt 1 view .LVU376
 366:Src/state.c   **** 			}
 1490              		.loc 1 366 19 is_stmt 0 view .LVU377
 1491 001e 044B     		ldr	r3, .L93+4
 1492 0020 0222     		movs	r2, #2
ARM GAS  /tmp/ccEvYcEU.s 			page 44


 1493 0022 1A70     		strb	r2, [r3]
 1494 0024 01E0     		b	.L89
 1495              	.L91:
 370:Src/state.c   **** 			break;
 1496              		.loc 1 370 4 is_stmt 1 view .LVU378
 1497 0026 FFF7FEFF 		bl	atc_pot_operations
 1498              	.LVL69:
 371:Src/state.c   **** 		default:
 1499              		.loc 1 371 4 view .LVU379
 1500              	.L89:
 376:Src/state.c   **** /*******************************************************************
 1501              		.loc 1 376 1 is_stmt 0 view .LVU380
 1502 002a 08BD     		pop	{r3, pc}
 1503              	.L94:
 1504              		.align	2
 1505              	.L93:
 1506 002c 00000000 		.word	can1
 1507 0030 00000000 		.word	current_state
 1508              		.cfi_endproc
 1509              	.LFE148:
 1511              		.global	inv_init_response
 1512              		.global	init_precharge_start_time
 1513              		.global	init_step_start_time
 1514              		.global	init_step
 1515              		.global	critical_errors
 1516              		.global	setup_init
 1517              		.comm	current_state,1,1
 1518              		.section	.bss.critical_errors,"aw",%nobits
 1519              		.align	2
 1520              		.set	.LANCHOR4,. + 0
 1523              	critical_errors:
 1524 0000 00000000 		.space	4
 1525              		.section	.bss.init_precharge_start_time,"aw",%nobits
 1526              		.align	2
 1529              	init_precharge_start_time:
 1530 0000 00000000 		.space	4
 1531              		.section	.bss.init_step,"aw",%nobits
 1532              		.align	2
 1533              		.set	.LANCHOR0,. + 0
 1536              	init_step:
 1537 0000 00000000 		.space	4
 1538              		.section	.bss.init_step_start_time,"aw",%nobits
 1539              		.align	2
 1540              		.set	.LANCHOR1,. + 0
 1543              	init_step_start_time:
 1544 0000 00000000 		.space	4
 1545              		.section	.bss.inv_init_response,"aw",%nobits
 1546              		.set	.LANCHOR2,. + 0
 1549              	inv_init_response:
 1550 0000 00       		.space	1
 1551              		.section	.bss.setup_init,"aw",%nobits
 1552              		.align	2
 1553              		.set	.LANCHOR3,. + 0
 1556              	setup_init:
 1557 0000 00000000 		.space	4
 1558              		.text
 1559              	.Letext0:
ARM GAS  /tmp/ccEvYcEU.s 			page 45


 1560              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1561              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1562              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1563              		.file 5 "Inc/state.h"
 1564              		.file 6 "Drivers/CMSIS/Include/core_cm7.h"
 1565              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1566              		.file 8 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1567              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1568              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1569              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 1570              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1571              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1572              		.file 14 "Inc/can.h"
 1573              		.file 15 "Middlewares/Third_Party/FatFs/src/integer.h"
 1574              		.file 16 "/usr/arm-none-eabi/include/sys/lock.h"
 1575              		.file 17 "/usr/arm-none-eabi/include/sys/_types.h"
 1576              		.file 18 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 1577              		.file 19 "/usr/arm-none-eabi/include/sys/reent.h"
 1578              		.file 20 "/usr/arm-none-eabi/include/stdlib.h"
 1579              		.file 21 "Middlewares/Third_Party/FatFs/src/ff.h"
 1580              		.file 22 "Middlewares/Third_Party/FatFs/src/diskio.h"
 1581              		.file 23 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 1582              		.file 24 "Inc/sd_diskio.h"
 1583              		.file 25 "Inc/fatfs.h"
 1584              		.file 26 "Inc/pedals.h"
 1585              		.file 27 "Inc/global_variables.h"
 1586              		.file 28 "/usr/arm-none-eabi/include/stdio.h"
 1587              		.file 29 "/usr/arm-none-eabi/include/string.h"
 1588              		.file 30 "<built-in>"
ARM GAS  /tmp/ccEvYcEU.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 state.c
     /tmp/ccEvYcEU.s:17     .text.set_bit_uint8:0000000000000000 $t
     /tmp/ccEvYcEU.s:25     .text.set_bit_uint8:0000000000000000 set_bit_uint8
     /tmp/ccEvYcEU.s:73     .text.init:0000000000000000 $t
     /tmp/ccEvYcEU.s:80     .text.init:0000000000000000 init
     /tmp/ccEvYcEU.s:365    .text.init:0000000000000164 $d
                            *COM*:0000000000000001 current_state
     /tmp/ccEvYcEU.s:376    .text.setup:0000000000000000 $t
     /tmp/ccEvYcEU.s:383    .text.setup:0000000000000000 setup
     /tmp/ccEvYcEU.s:477    .text.setup:000000000000005c $d
     /tmp/ccEvYcEU.s:487    .rodata.debug_operations.str1.4:0000000000000000 $d
     /tmp/ccEvYcEU.s:578    .text.debug_operations:0000000000000000 $t
     /tmp/ccEvYcEU.s:585    .text.debug_operations:0000000000000000 debug_operations
     /tmp/ccEvYcEU.s:992    .text.debug_operations:0000000000000244 $d
     /tmp/ccEvYcEU.s:1036   .rodata.imu_operations.str1.4:0000000000000000 $d
     /tmp/ccEvYcEU.s:1040   .text.imu_operations:0000000000000000 $t
     /tmp/ccEvYcEU.s:1047   .text.imu_operations:0000000000000000 imu_operations
     /tmp/ccEvYcEU.s:1092   .text.imu_operations:000000000000002c $d
     /tmp/ccEvYcEU.s:1100   .rodata.atc_pot_operations.str1.4:0000000000000000 $d
     /tmp/ccEvYcEU.s:1107   .text.atc_pot_operations:0000000000000000 $t
     /tmp/ccEvYcEU.s:1114   .text.atc_pot_operations:0000000000000000 atc_pot_operations
     /tmp/ccEvYcEU.s:1326   .text.atc_pot_operations:00000000000000f8 $d
     /tmp/ccEvYcEU.s:1340   .text.idle:0000000000000000 $t
     /tmp/ccEvYcEU.s:1347   .text.idle:0000000000000000 idle
     /tmp/ccEvYcEU.s:1441   .text.idle:0000000000000060 $d
     /tmp/ccEvYcEU.s:1448   .text.run:0000000000000000 $t
     /tmp/ccEvYcEU.s:1455   .text.run:0000000000000000 run
     /tmp/ccEvYcEU.s:1506   .text.run:000000000000002c $d
     /tmp/ccEvYcEU.s:1549   .bss.inv_init_response:0000000000000000 inv_init_response
     /tmp/ccEvYcEU.s:1529   .bss.init_precharge_start_time:0000000000000000 init_precharge_start_time
     /tmp/ccEvYcEU.s:1543   .bss.init_step_start_time:0000000000000000 init_step_start_time
     /tmp/ccEvYcEU.s:1536   .bss.init_step:0000000000000000 init_step
     /tmp/ccEvYcEU.s:1523   .bss.critical_errors:0000000000000000 critical_errors
     /tmp/ccEvYcEU.s:1556   .bss.setup_init:0000000000000000 setup_init
     /tmp/ccEvYcEU.s:1519   .bss.critical_errors:0000000000000000 $d
     /tmp/ccEvYcEU.s:1526   .bss.init_precharge_start_time:0000000000000000 $d
     /tmp/ccEvYcEU.s:1532   .bss.init_step:0000000000000000 $d
     /tmp/ccEvYcEU.s:1539   .bss.init_step_start_time:0000000000000000 $d
     /tmp/ccEvYcEU.s:1550   .bss.inv_init_response:0000000000000000 $d
     /tmp/ccEvYcEU.s:1552   .bss.setup_init:0000000000000000 $d

UNDEFINED SYMBOLS
CAN_Send
fifoRxDataCAN_pop
can3
can1
count_ms_abs
atc_connected
brake
strcmp
HAL_UART_Transmit
memcpy
strlen
sprintf
debug_rx
mount_ok
ARM GAS  /tmp/ccEvYcEU.s 			page 47


huart3
debug_tx
code_version
count_hour
count_min
count_sec
count_dec
its_connected
imu_connected
successfull_opening
filename_log
log_names
count_imu
accel_implausibility_check
count_atc
accel
txt
accel_implausibility_check_count_flag
debug_msg_arrived
