ARM GAS  /tmp/ccTcsCTY.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"state.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.set_bit_uint8,"ax",%progbits
  17              		.align	1
  18              		.global	set_bit_uint8
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	set_bit_uint8:
  26              	.LVL0:
  27              	.LFB144:
  28              		.file 1 "Src/state.c"
   1:Src/state.c   **** #include "state.h"
   2:Src/state.c   **** #include "can.h"
   3:Src/state.c   **** #include "global_variables.h"
   4:Src/state.c   **** #include "stdio.h"
   5:Src/state.c   **** #include "stm32f7xx_hal.h"
   6:Src/state.c   **** #include "string.h"
   7:Src/state.c   **** /*******************************************************************
   8:Src/state.c   ****  *                         USER FUNCTIONS
   9:Src/state.c   ****  *******************************************************************/ 
  10:Src/state.c   **** void set_bit_uint8(uint8_t* _var, uint8_t _nBit, uint8_t _bool){
  29              		.loc 1 10 64 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  11:Src/state.c   **** 	if(_bool == 0 || _bool == 1){
  34              		.loc 1 11 2 view .LVU1
  35              		.loc 1 11 4 is_stmt 0 view .LVU2
  36 0000 012A     		cmp	r2, #1
  37 0002 00D9     		bls	.L7
  38 0004 7047     		bx	lr
  39              	.L7:
  10:Src/state.c   **** 	if(_bool == 0 || _bool == 1){
  40              		.loc 1 10 64 view .LVU3
  41 0006 10B4     		push	{r4}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 4
  44              		.cfi_offset 4, -4
  12:Src/state.c   **** 		(*_var) = ((*_var) & ( 0b11111111 ^ (0b00000001 << _nBit))) | (0b00000000 | (_bool << _nBit));
  45              		.loc 1 12 3 is_stmt 1 view .LVU4
ARM GAS  /tmp/ccTcsCTY.s 			page 2


  46              		.loc 1 12 15 is_stmt 0 view .LVU5
  47 0008 90F90040 		ldrsb	r4, [r0]
  48              		.loc 1 12 51 view .LVU6
  49 000c 0123     		movs	r3, #1
  50 000e 8B40     		lsls	r3, r3, r1
  51              		.loc 1 12 37 view .LVU7
  52 0010 DB43     		mvns	r3, r3
  53 0012 5BB2     		sxtb	r3, r3
  54              		.loc 1 12 22 view .LVU8
  55 0014 2340     		ands	r3, r3, r4
  56              		.loc 1 12 77 view .LVU9
  57 0016 8A40     		lsls	r2, r2, r1
  58              	.LVL1:
  59              		.loc 1 12 63 view .LVU10
  60 0018 1A43     		orrs	r2, r2, r3
  61              		.loc 1 12 11 view .LVU11
  62 001a 0270     		strb	r2, [r0]
  13:Src/state.c   **** 	}
  14:Src/state.c   **** }
  63              		.loc 1 14 1 view .LVU12
  64 001c 5DF8044B 		ldr	r4, [sp], #4
  65              	.LCFI1:
  66              		.cfi_restore 4
  67              		.cfi_def_cfa_offset 0
  68 0020 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE144:
  72              		.section	.text.init,"ax",%progbits
  73              		.align	1
  74              		.global	init
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv5-d16
  80              	init:
  81              	.LFB145:
  15:Src/state.c   **** /*******************************************************************
  16:Src/state.c   ****  *                         STATE VARIABLES
  17:Src/state.c   ****  *******************************************************************/ 
  18:Src/state.c   **** /*** GLOBAL ***/
  19:Src/state.c   **** int setup_init = 0;
  20:Src/state.c   **** int critical_errors = 0;
  21:Src/state.c   **** 
  22:Src/state.c   **** /*** FOR INIT STATE ***/
  23:Src/state.c   **** int init_step = 0;
  24:Src/state.c   **** uint32_t init_step_start_time = 0;
  25:Src/state.c   **** uint32_t init_precharge_start_time = 0;
  26:Src/state.c   **** uint32_t init_inv_resp = 0;
  27:Src/state.c   **** 
  28:Src/state.c   **** uint8_t inv_init_response = 0; // bit 0 = inv R -> 0 = no / 1 = YES ---- bit 1 = inv L -> 0 = no / 
  29:Src/state.c   **** // Default state
  30:Src/state.c   **** // Init variables
  31:Src/state.c   **** /*******************************************************************
  32:Src/state.c   ****  *                         START INIT STATE
  33:Src/state.c   ****  *******************************************************************/
  34:Src/state.c   **** void init()
  35:Src/state.c   **** {
ARM GAS  /tmp/ccTcsCTY.s 			page 3


  82              		.loc 1 35 1 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  87              	.LCFI2:
  88              		.cfi_def_cfa_offset 40
  89              		.cfi_offset 3, -40
  90              		.cfi_offset 4, -36
  91              		.cfi_offset 5, -32
  92              		.cfi_offset 6, -28
  93              		.cfi_offset 7, -24
  94              		.cfi_offset 8, -20
  95              		.cfi_offset 9, -16
  96              		.cfi_offset 10, -12
  97              		.cfi_offset 11, -8
  98              		.cfi_offset 14, -4
  36:Src/state.c   **** 	if(init_step == 0){
  99              		.loc 1 36 2 view .LVU14
 100              		.loc 1 36 15 is_stmt 0 view .LVU15
 101 0004 574B     		ldr	r3, .L22
 102 0006 1B68     		ldr	r3, [r3]
 103              		.loc 1 36 4 view .LVU16
 104 0008 53B1     		cbz	r3, .L17
  37:Src/state.c   **** 		init_step = 1;
  38:Src/state.c   **** 		/* Send inverter L disable */
  39:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_SX;
  40:Src/state.c   **** 		can3.dataTx[0] = 0x51;
  41:Src/state.c   **** 		can3.dataTx[1] = 0x04;
  42:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  43:Src/state.c   **** 		can3.tx_size = 3;
  44:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  45:Src/state.c   **** 
  46:Src/state.c   **** 		/* Send inverter R disable */
  47:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_DX;
  48:Src/state.c   **** 		can3.dataTx[0] = 0x51;
  49:Src/state.c   **** 		can3.dataTx[1] = 0x04;
  50:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  51:Src/state.c   **** 		can3.tx_size = 3;
  52:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  53:Src/state.c   **** 
  54:Src/state.c   **** 		/* Send req to inverter L presence */
  55:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_SX;
  56:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
  57:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
  58:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  59:Src/state.c   **** 		can3.tx_size = 3;
  60:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  61:Src/state.c   **** 
  62:Src/state.c   **** 		/* Send req to inverter R presence */
  63:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_DX;
  64:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
  65:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
  66:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  67:Src/state.c   **** 		can3.tx_size = 3;
  68:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  69:Src/state.c   **** 
ARM GAS  /tmp/ccTcsCTY.s 			page 4


  70:Src/state.c   **** 		init_step_start_time = count_ms_abs; // save the curret time
  71:Src/state.c   **** 
  72:Src/state.c   **** 	}else if(init_step == 1){
 105              		.loc 1 72 8 is_stmt 1 view .LVU17
 106              		.loc 1 72 10 is_stmt 0 view .LVU18
 107 000a 012B     		cmp	r3, #1
 108 000c 51D0     		beq	.L18
  73:Src/state.c   **** 		if (fifoRxDataCAN_pop(&can1)){
  74:Src/state.c   **** 			switch (can1.rx_id)
  75:Src/state.c   **** 			{
  76:Src/state.c   **** 			case ID_ASK_INV_DX:
  77:Src/state.c   **** 				if(can1.dataRx[0] == 0xE2 && can1.dataRx[1] == 0x01 && can1.dataRx[2] == 0x00 && can1.dataRx[3]
  78:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
  79:Src/state.c   **** 				}
  80:Src/state.c   **** 				break;
  81:Src/state.c   **** 			case ID_ASK_INV_SX:
  82:Src/state.c   **** 				if(can1.dataRx[0] == 0xE2 && can1.dataRx[1] == 0x01 && can1.dataRx[2] == 0x00 && can1.dataRx[3]
  83:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
  84:Src/state.c   **** 				}
  85:Src/state.c   **** 			default:
  86:Src/state.c   **** 				break;
  87:Src/state.c   **** 			}
  88:Src/state.c   **** 		}
  89:Src/state.c   **** 		if(inv_init_response == 3){ // means that each inv has responded
  90:Src/state.c   **** 			init_step = 2;
  91:Src/state.c   **** 		}else{
  92:Src/state.c   **** 			if(count_ms_abs - init_step_start_time > 1000 ){ //if is passed more than 1 second -> go ahead
  93:Src/state.c   **** 				/* Send Error to steer */ 
  94:Src/state.c   **** 
  95:Src/state.c   **** 				//TODO: send errors
  96:Src/state.c   **** 
  97:Src/state.c   **** 				init_step = 3;
  98:Src/state.c   **** 			}
  99:Src/state.c   **** 		}
 100:Src/state.c   **** 	}else if(init_step == 2){
 109              		.loc 1 100 8 is_stmt 1 view .LVU19
 110              		.loc 1 100 10 is_stmt 0 view .LVU20
 111 000e 022B     		cmp	r3, #2
 112 0010 00F08780 		beq	.L19
 101:Src/state.c   **** 		/* Send periodical status inv L */
 102:Src/state.c   **** 		can1.tx_id = ID_ASK_INV_SX;
 103:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 104:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 105:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 106:Src/state.c   **** 		can1.tx_size = 3;
 107:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 108:Src/state.c   **** 
 109:Src/state.c   **** 		/* Send periodical status inv R */
 110:Src/state.c   **** 		can1.tx_id = ID_ASK_INV_DX;
 111:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 112:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 113:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 114:Src/state.c   **** 		can1.tx_size = 3;
 115:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 116:Src/state.c   **** 
 117:Src/state.c   **** 		init_step = 3;
 118:Src/state.c   **** 	}else if(init_step == 3){
ARM GAS  /tmp/ccTcsCTY.s 			page 5


 113              		.loc 1 118 8 is_stmt 1 view .LVU21
 114              		.loc 1 118 10 is_stmt 0 view .LVU22
 115 0014 032B     		cmp	r3, #3
 116 0016 4AD1     		bne	.L8
 119:Src/state.c   **** 		current_state = STATE_IDLE; // Change state to STATE_IDLE
 117              		.loc 1 119 3 is_stmt 1 view .LVU23
 118              		.loc 1 119 17 is_stmt 0 view .LVU24
 119 0018 534B     		ldr	r3, .L22+4
 120 001a 0122     		movs	r2, #1
 121 001c 1A70     		strb	r2, [r3]
 120:Src/state.c   **** 		/* Send msg to steer of changing state */
 121:Src/state.c   **** 	}
 122:Src/state.c   **** }
 122              		.loc 1 122 1 view .LVU25
 123 001e 46E0     		b	.L8
 124              	.L17:
  37:Src/state.c   **** 		/* Send inverter L disable */
 125              		.loc 1 37 3 is_stmt 1 view .LVU26
  37:Src/state.c   **** 		/* Send inverter L disable */
 126              		.loc 1 37 13 is_stmt 0 view .LVU27
 127 0020 504B     		ldr	r3, .L22
 128 0022 0122     		movs	r2, #1
 129 0024 1A60     		str	r2, [r3]
  39:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 130              		.loc 1 39 3 is_stmt 1 view .LVU28
  39:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 131              		.loc 1 39 14 is_stmt 0 view .LVU29
 132 0026 514C     		ldr	r4, .L22+8
 133 0028 40F20128 		movw	r8, #513
 134 002c C4F82C80 		str	r8, [r4, #44]
  40:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 135              		.loc 1 40 3 is_stmt 1 view .LVU30
  40:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 136              		.loc 1 40 18 is_stmt 0 view .LVU31
 137 0030 4FF0510B 		mov	fp, #81
 138 0034 84F80CB0 		strb	fp, [r4, #12]
  41:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 139              		.loc 1 41 3 is_stmt 1 view .LVU32
  41:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 140              		.loc 1 41 18 is_stmt 0 view .LVU33
 141 0038 4FF00409 		mov	r9, #4
 142 003c 84F80D90 		strb	r9, [r4, #13]
  42:Src/state.c   **** 		can3.tx_size = 3;
 143              		.loc 1 42 3 is_stmt 1 view .LVU34
  42:Src/state.c   **** 		can3.tx_size = 3;
 144              		.loc 1 42 18 is_stmt 0 view .LVU35
 145 0040 0025     		movs	r5, #0
 146 0042 A573     		strb	r5, [r4, #14]
  43:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 147              		.loc 1 43 3 is_stmt 1 view .LVU36
  43:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 148              		.loc 1 43 16 is_stmt 0 view .LVU37
 149 0044 0327     		movs	r7, #3
 150 0046 2760     		str	r7, [r4]
  44:Src/state.c   **** 
 151              		.loc 1 44 3 is_stmt 1 view .LVU38
 152 0048 494E     		ldr	r6, .L22+12
ARM GAS  /tmp/ccTcsCTY.s 			page 6


 153 004a 2946     		mov	r1, r5
 154 004c 3046     		mov	r0, r6
 155 004e FFF7FEFF 		bl	CAN_Send
 156              	.LVL2:
  47:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 157              		.loc 1 47 3 view .LVU39
  47:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 158              		.loc 1 47 14 is_stmt 0 view .LVU40
 159 0052 40F2022A 		movw	r10, #514
 160 0056 C4F82CA0 		str	r10, [r4, #44]
  48:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 161              		.loc 1 48 3 is_stmt 1 view .LVU41
  48:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 162              		.loc 1 48 18 is_stmt 0 view .LVU42
 163 005a 84F80CB0 		strb	fp, [r4, #12]
  49:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 164              		.loc 1 49 3 is_stmt 1 view .LVU43
  49:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 165              		.loc 1 49 18 is_stmt 0 view .LVU44
 166 005e 84F80D90 		strb	r9, [r4, #13]
  50:Src/state.c   **** 		can3.tx_size = 3;
 167              		.loc 1 50 3 is_stmt 1 view .LVU45
  50:Src/state.c   **** 		can3.tx_size = 3;
 168              		.loc 1 50 18 is_stmt 0 view .LVU46
 169 0062 A573     		strb	r5, [r4, #14]
  51:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 170              		.loc 1 51 3 is_stmt 1 view .LVU47
  51:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 171              		.loc 1 51 16 is_stmt 0 view .LVU48
 172 0064 2760     		str	r7, [r4]
  52:Src/state.c   **** 
 173              		.loc 1 52 3 is_stmt 1 view .LVU49
 174 0066 2946     		mov	r1, r5
 175 0068 3046     		mov	r0, r6
 176 006a FFF7FEFF 		bl	CAN_Send
 177              	.LVL3:
  55:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 178              		.loc 1 55 3 view .LVU50
  55:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 179              		.loc 1 55 14 is_stmt 0 view .LVU51
 180 006e C4F82C80 		str	r8, [r4, #44]
  56:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 181              		.loc 1 56 3 is_stmt 1 view .LVU52
  56:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 182              		.loc 1 56 18 is_stmt 0 view .LVU53
 183 0072 4FF03D09 		mov	r9, #61
 184 0076 84F80C90 		strb	r9, [r4, #12]
  57:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 185              		.loc 1 57 3 is_stmt 1 view .LVU54
  57:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 186              		.loc 1 57 18 is_stmt 0 view .LVU55
 187 007a 4FF0E208 		mov	r8, #226
 188 007e 84F80D80 		strb	r8, [r4, #13]
  58:Src/state.c   **** 		can3.tx_size = 3;
 189              		.loc 1 58 3 is_stmt 1 view .LVU56
  58:Src/state.c   **** 		can3.tx_size = 3;
 190              		.loc 1 58 18 is_stmt 0 view .LVU57
ARM GAS  /tmp/ccTcsCTY.s 			page 7


 191 0082 A573     		strb	r5, [r4, #14]
  59:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 192              		.loc 1 59 3 is_stmt 1 view .LVU58
  59:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 193              		.loc 1 59 16 is_stmt 0 view .LVU59
 194 0084 2760     		str	r7, [r4]
  60:Src/state.c   **** 
 195              		.loc 1 60 3 is_stmt 1 view .LVU60
 196 0086 2946     		mov	r1, r5
 197 0088 3046     		mov	r0, r6
 198 008a FFF7FEFF 		bl	CAN_Send
 199              	.LVL4:
  63:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 200              		.loc 1 63 3 view .LVU61
  63:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 201              		.loc 1 63 14 is_stmt 0 view .LVU62
 202 008e C4F82CA0 		str	r10, [r4, #44]
  64:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 203              		.loc 1 64 3 is_stmt 1 view .LVU63
  64:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 204              		.loc 1 64 18 is_stmt 0 view .LVU64
 205 0092 84F80C90 		strb	r9, [r4, #12]
  65:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 206              		.loc 1 65 3 is_stmt 1 view .LVU65
  65:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 207              		.loc 1 65 18 is_stmt 0 view .LVU66
 208 0096 84F80D80 		strb	r8, [r4, #13]
  66:Src/state.c   **** 		can3.tx_size = 3;
 209              		.loc 1 66 3 is_stmt 1 view .LVU67
  66:Src/state.c   **** 		can3.tx_size = 3;
 210              		.loc 1 66 18 is_stmt 0 view .LVU68
 211 009a A573     		strb	r5, [r4, #14]
  67:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 212              		.loc 1 67 3 is_stmt 1 view .LVU69
  67:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 213              		.loc 1 67 16 is_stmt 0 view .LVU70
 214 009c 2760     		str	r7, [r4]
  68:Src/state.c   **** 
 215              		.loc 1 68 3 is_stmt 1 view .LVU71
 216 009e 2946     		mov	r1, r5
 217 00a0 3046     		mov	r0, r6
 218 00a2 FFF7FEFF 		bl	CAN_Send
 219              	.LVL5:
  70:Src/state.c   **** 
 220              		.loc 1 70 3 view .LVU72
  70:Src/state.c   **** 
 221              		.loc 1 70 24 is_stmt 0 view .LVU73
 222 00a6 334B     		ldr	r3, .L22+16
 223 00a8 1A68     		ldr	r2, [r3]
 224 00aa 334B     		ldr	r3, .L22+20
 225 00ac 1A60     		str	r2, [r3]
 226              	.L8:
 227              		.loc 1 122 1 view .LVU74
 228 00ae BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 229              	.L18:
  73:Src/state.c   **** 			switch (can1.rx_id)
 230              		.loc 1 73 3 is_stmt 1 view .LVU75
ARM GAS  /tmp/ccTcsCTY.s 			page 8


  73:Src/state.c   **** 			switch (can1.rx_id)
 231              		.loc 1 73 7 is_stmt 0 view .LVU76
 232 00b2 2F48     		ldr	r0, .L22+12
 233 00b4 FFF7FEFF 		bl	fifoRxDataCAN_pop
 234              	.LVL6:
  73:Src/state.c   **** 			switch (can1.rx_id)
 235              		.loc 1 73 6 view .LVU77
 236 00b8 70B1     		cbz	r0, .L12
  74:Src/state.c   **** 			{
 237              		.loc 1 74 4 is_stmt 1 view .LVU78
  74:Src/state.c   **** 			{
 238              		.loc 1 74 16 is_stmt 0 view .LVU79
 239 00ba 2D4B     		ldr	r3, .L22+12
 240 00bc 1B6B     		ldr	r3, [r3, #48]
  74:Src/state.c   **** 			{
 241              		.loc 1 74 4 view .LVU80
 242 00be 40F20122 		movw	r2, #513
 243 00c2 9342     		cmp	r3, r2
 244 00c4 1ED0     		beq	.L13
 245 00c6 40F20222 		movw	r2, #514
 246 00ca 9342     		cmp	r3, r2
 247 00cc 04D1     		bne	.L12
  77:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
 248              		.loc 1 77 5 is_stmt 1 view .LVU81
  77:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
 249              		.loc 1 77 83 is_stmt 0 view .LVU82
 250 00ce 284B     		ldr	r3, .L22+12
 251 00d0 5B69     		ldr	r3, [r3, #20]
  77:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
 252              		.loc 1 77 7 view .LVU83
 253 00d2 B3F5F17F 		cmp	r3, #482
 254 00d6 0FD0     		beq	.L20
 255              	.L12:
  89:Src/state.c   **** 			init_step = 2;
 256              		.loc 1 89 3 is_stmt 1 view .LVU84
  89:Src/state.c   **** 			init_step = 2;
 257              		.loc 1 89 24 is_stmt 0 view .LVU85
 258 00d8 284B     		ldr	r3, .L22+24
 259 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  89:Src/state.c   **** 			init_step = 2;
 260              		.loc 1 89 5 view .LVU86
 261 00dc 032B     		cmp	r3, #3
 262 00de 1CD0     		beq	.L21
  92:Src/state.c   **** 				/* Send Error to steer */ 
 263              		.loc 1 92 4 is_stmt 1 view .LVU87
  92:Src/state.c   **** 				/* Send Error to steer */ 
 264              		.loc 1 92 20 is_stmt 0 view .LVU88
 265 00e0 244B     		ldr	r3, .L22+16
 266 00e2 1B68     		ldr	r3, [r3]
 267 00e4 244A     		ldr	r2, .L22+20
 268 00e6 1268     		ldr	r2, [r2]
 269 00e8 9B1A     		subs	r3, r3, r2
  92:Src/state.c   **** 				/* Send Error to steer */ 
 270              		.loc 1 92 6 view .LVU89
 271 00ea B3F57A7F 		cmp	r3, #1000
 272 00ee DED9     		bls	.L8
  97:Src/state.c   **** 			}
ARM GAS  /tmp/ccTcsCTY.s 			page 9


 273              		.loc 1 97 5 is_stmt 1 view .LVU90
  97:Src/state.c   **** 			}
 274              		.loc 1 97 15 is_stmt 0 view .LVU91
 275 00f0 1C4B     		ldr	r3, .L22
 276 00f2 0322     		movs	r2, #3
 277 00f4 1A60     		str	r2, [r3]
 278 00f6 DAE7     		b	.L8
 279              	.L20:
  78:Src/state.c   **** 				}
 280              		.loc 1 78 6 is_stmt 1 view .LVU92
 281 00f8 0122     		movs	r2, #1
 282 00fa 0021     		movs	r1, #0
 283 00fc 1F48     		ldr	r0, .L22+24
 284 00fe FFF7FEFF 		bl	set_bit_uint8
 285              	.LVL7:
 286 0102 E9E7     		b	.L12
 287              	.L13:
  82:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
 288              		.loc 1 82 5 view .LVU93
  82:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
 289              		.loc 1 82 83 is_stmt 0 view .LVU94
 290 0104 1A4B     		ldr	r3, .L22+12
 291 0106 5B69     		ldr	r3, [r3, #20]
  82:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
 292              		.loc 1 82 7 view .LVU95
 293 0108 B3F5F17F 		cmp	r3, #482
 294 010c E4D1     		bne	.L12
  83:Src/state.c   **** 				}
 295              		.loc 1 83 6 is_stmt 1 view .LVU96
 296 010e 0122     		movs	r2, #1
 297 0110 1146     		mov	r1, r2
 298 0112 1A48     		ldr	r0, .L22+24
 299 0114 FFF7FEFF 		bl	set_bit_uint8
 300              	.LVL8:
 301 0118 DEE7     		b	.L12
 302              	.L21:
  90:Src/state.c   **** 		}else{
 303              		.loc 1 90 4 view .LVU97
  90:Src/state.c   **** 		}else{
 304              		.loc 1 90 14 is_stmt 0 view .LVU98
 305 011a 124B     		ldr	r3, .L22
 306 011c 0222     		movs	r2, #2
 307 011e 1A60     		str	r2, [r3]
 308 0120 C5E7     		b	.L8
 309              	.L19:
 102:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 310              		.loc 1 102 3 is_stmt 1 view .LVU99
 102:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 311              		.loc 1 102 14 is_stmt 0 view .LVU100
 312 0122 134C     		ldr	r4, .L22+12
 313 0124 40F20123 		movw	r3, #513
 314 0128 E362     		str	r3, [r4, #44]
 103:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 315              		.loc 1 103 3 is_stmt 1 view .LVU101
 103:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 316              		.loc 1 103 18 is_stmt 0 view .LVU102
 317 012a 4FF03D08 		mov	r8, #61
ARM GAS  /tmp/ccTcsCTY.s 			page 10


 318 012e 84F80C80 		strb	r8, [r4, #12]
 104:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 319              		.loc 1 104 3 is_stmt 1 view .LVU103
 104:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 320              		.loc 1 104 18 is_stmt 0 view .LVU104
 321 0132 4027     		movs	r7, #64
 322 0134 6773     		strb	r7, [r4, #13]
 105:Src/state.c   **** 		can1.tx_size = 3;
 323              		.loc 1 105 3 is_stmt 1 view .LVU105
 105:Src/state.c   **** 		can1.tx_size = 3;
 324              		.loc 1 105 18 is_stmt 0 view .LVU106
 325 0136 FA26     		movs	r6, #250
 326 0138 A673     		strb	r6, [r4, #14]
 106:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 327              		.loc 1 106 3 is_stmt 1 view .LVU107
 106:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 328              		.loc 1 106 16 is_stmt 0 view .LVU108
 329 013a 0325     		movs	r5, #3
 330 013c 2560     		str	r5, [r4]
 107:Src/state.c   **** 
 331              		.loc 1 107 3 is_stmt 1 view .LVU109
 332 013e 0021     		movs	r1, #0
 333 0140 2046     		mov	r0, r4
 334 0142 FFF7FEFF 		bl	CAN_Send
 335              	.LVL9:
 110:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 336              		.loc 1 110 3 view .LVU110
 110:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 337              		.loc 1 110 14 is_stmt 0 view .LVU111
 338 0146 40F20223 		movw	r3, #514
 339 014a E362     		str	r3, [r4, #44]
 111:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 340              		.loc 1 111 3 is_stmt 1 view .LVU112
 111:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 341              		.loc 1 111 18 is_stmt 0 view .LVU113
 342 014c 84F80C80 		strb	r8, [r4, #12]
 112:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 343              		.loc 1 112 3 is_stmt 1 view .LVU114
 112:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 344              		.loc 1 112 18 is_stmt 0 view .LVU115
 345 0150 6773     		strb	r7, [r4, #13]
 113:Src/state.c   **** 		can1.tx_size = 3;
 346              		.loc 1 113 3 is_stmt 1 view .LVU116
 113:Src/state.c   **** 		can1.tx_size = 3;
 347              		.loc 1 113 18 is_stmt 0 view .LVU117
 348 0152 A673     		strb	r6, [r4, #14]
 114:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 349              		.loc 1 114 3 is_stmt 1 view .LVU118
 114:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 350              		.loc 1 114 16 is_stmt 0 view .LVU119
 351 0154 2560     		str	r5, [r4]
 115:Src/state.c   **** 
 352              		.loc 1 115 3 is_stmt 1 view .LVU120
 353 0156 0021     		movs	r1, #0
 354 0158 2046     		mov	r0, r4
 355 015a FFF7FEFF 		bl	CAN_Send
 356              	.LVL10:
ARM GAS  /tmp/ccTcsCTY.s 			page 11


 117:Src/state.c   **** 	}else if(init_step == 3){
 357              		.loc 1 117 3 view .LVU121
 117:Src/state.c   **** 	}else if(init_step == 3){
 358              		.loc 1 117 13 is_stmt 0 view .LVU122
 359 015e 014B     		ldr	r3, .L22
 360 0160 1D60     		str	r5, [r3]
 361 0162 A4E7     		b	.L8
 362              	.L23:
 363              		.align	2
 364              	.L22:
 365 0164 00000000 		.word	.LANCHOR0
 366 0168 00000000 		.word	current_state
 367 016c 00000000 		.word	can3
 368 0170 00000000 		.word	can1
 369 0174 00000000 		.word	count_ms_abs
 370 0178 00000000 		.word	.LANCHOR1
 371 017c 00000000 		.word	.LANCHOR2
 372              		.cfi_endproc
 373              	.LFE145:
 375              		.section	.text.setup,"ax",%progbits
 376              		.align	1
 377              		.global	setup
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 381              		.fpu fpv5-d16
 383              	setup:
 384              	.LFB147:
 123:Src/state.c   **** /*******************************************************************
 124:Src/state.c   ****  *                         END INIT STATE
 125:Src/state.c   ****  *******************************************************************/
 126:Src/state.c   **** /*******************************************************************
 127:Src/state.c   ****  *                        START IDLE STATE
 128:Src/state.c   ****  *******************************************************************/
 129:Src/state.c   **** void idle()
 130:Src/state.c   **** {
 131:Src/state.c   **** 	/*if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port,USER_BUTTON_Pin) == GPIO_PIN_SET){
 132:Src/state.c   **** 		sprintf(txt,"%d\r\n%d\r\n%d\r\n%d\r\n",accel.pot1_val,accel.pot2_val,brake.pot1_val,brake.pot2_va
 133:Src/state.c   **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 134:Src/state.c   **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_ALWAYS | FA_WRITE );
 135:Src/state.c   **** 		f_write(&pot_values_f,(TCHAR const*)&txt,strlen(txt), &byteswritten);
 136:Src/state.c   **** 		f_close(&pot_values_f);
 137:Src/state.c   **** 		HAL_Delay(1000);
 138:Src/state.c   **** 	}*/
 139:Src/state.c   **** 	if (debug_msg_arrived == 1)
 140:Src/state.c   **** 	{
 141:Src/state.c   **** 		debug_msg_arrived = 0; // reset flag
 142:Src/state.c   **** 		debug_operations();
 143:Src/state.c   **** 	}
 144:Src/state.c   **** 	if (fifoRxDataCAN_pop(&can1)) // Check if there are messages on CAN1 fifo
 145:Src/state.c   **** 	{
 146:Src/state.c   **** 		switch (can1.rx_id)
 147:Src/state.c   **** 		{
 148:Src/state.c   **** 		case ID_ASK_STATE:
 149:Src/state.c   **** 			can1.dataTx[0] = (uint8_t)current_state;
 150:Src/state.c   **** 			can1.tx_size = 1;
 151:Src/state.c   **** 			can1.tx_id = ID_ACU_1;
ARM GAS  /tmp/ccTcsCTY.s 			page 12


 152:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 153:Src/state.c   **** 			break;
 154:Src/state.c   **** 		case ID_ASK_INV_DX:
 155:Src/state.c   **** 			break;
 156:Src/state.c   **** 		case ID_ASK_INV_SX:
 157:Src/state.c   **** 			break;
 158:Src/state.c   **** 		case ID_BMS_HV:
 159:Src/state.c   **** 			if (can1.dataRx[0] == 0x03)
 160:Src/state.c   **** 			{
 161:Src/state.c   **** 				// Turn ON tractive system
 162:Src/state.c   **** 				if(critical_errors == 0){
 163:Src/state.c   **** 
 164:Src/state.c   **** 				}
 165:Src/state.c   **** 			}
 166:Src/state.c   **** 			else if (can1.dataRx[0] == 0x04)
 167:Src/state.c   **** 			{
 168:Src/state.c   **** 				// Turn OFF tractive system
 169:Src/state.c   **** 			}
 170:Src/state.c   **** 			break;
 171:Src/state.c   **** 		case ID_BMS_LV:
 172:Src/state.c   **** 			break;
 173:Src/state.c   **** 		case ID_STEERING_WEEL_1:
 174:Src/state.c   **** 			switch (can1.dataRx[0])
 175:Src/state.c   **** 			{
 176:Src/state.c   **** 			case REQUEST_TS_ON:
 177:Src/state.c   **** 				//If req Tractive System ON msg arrives -> go to setup state
 178:Src/state.c   **** 				current_state = STATE_SETUP;
 179:Src/state.c   **** 				break;
 180:Src/state.c   **** 			default:
 181:Src/state.c   **** 				break;
 182:Src/state.c   **** 			}
 183:Src/state.c   **** 			break;
 184:Src/state.c   **** 		case ID_ATC_POT:
 185:Src/state.c   **** 			atc_pot_operations();
 186:Src/state.c   **** 			break;
 187:Src/state.c   **** 		default:
 188:Src/state.c   **** 			break;
 189:Src/state.c   **** 		}
 190:Src/state.c   **** 	}
 191:Src/state.c   **** }
 192:Src/state.c   **** /*******************************************************************
 193:Src/state.c   ****  *                         END IDLE STATE
 194:Src/state.c   ****  *******************************************************************/
 195:Src/state.c   **** /*******************************************************************
 196:Src/state.c   ****  *                        START SETUP STATE
 197:Src/state.c   ****  *******************************************************************/
 198:Src/state.c   **** void setup()
 199:Src/state.c   **** {
 385              		.loc 1 199 1 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 200:Src/state.c   **** 	if(setup_init == 0){
 389              		.loc 1 200 2 view .LVU124
 390              		.loc 1 200 16 is_stmt 0 view .LVU125
 391 0000 434B     		ldr	r3, .L41
 392 0002 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccTcsCTY.s 			page 13


 393              		.loc 1 200 4 view .LVU126
 394 0004 73B9     		cbnz	r3, .L25
 201:Src/state.c   **** 		setup_init = 1; //set that setup procedure is started
 395              		.loc 1 201 3 is_stmt 1 view .LVU127
 396              		.loc 1 201 14 is_stmt 0 view .LVU128
 397 0006 424B     		ldr	r3, .L41
 398 0008 0122     		movs	r2, #1
 399 000a 1A60     		str	r2, [r3]
 202:Src/state.c   **** 		if((atc_connected == 1) && (critical_errors = 0)){
 400              		.loc 1 202 3 is_stmt 1 view .LVU129
 401              		.loc 1 202 21 is_stmt 0 view .LVU130
 402 000c 414B     		ldr	r3, .L41+4
 403 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 404              		.loc 1 202 5 view .LVU131
 405 0010 9342     		cmp	r3, r2
 406 0012 03D0     		beq	.L36
 407              	.L26:
 203:Src/state.c   **** 			//If Analog to CAN device is connected, brake is pressed and there aren't critical erros -> 
 204:Src/state.c   **** 				//-> send pre-charge request to HV
 205:Src/state.c   **** 			can1.tx_id = ID_REQ_PRCH;
 206:Src/state.c   **** 			can1.dataTx[0] = 1;
 207:Src/state.c   **** 			can1.tx_size = 1;
 208:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 209:Src/state.c   **** 			init_precharge_start_time = count_ms_abs; //take the time when the pre-charge is sent
 210:Src/state.c   **** 		}else{
 211:Src/state.c   **** 			//Can't turn on TS caused by some errors
 212:Src/state.c   **** 			current_state = STATE_IDLE; //return to idle state
 408              		.loc 1 212 4 is_stmt 1 view .LVU132
 409              		.loc 1 212 18 is_stmt 0 view .LVU133
 410 0014 404B     		ldr	r3, .L41+8
 411 0016 0122     		movs	r2, #1
 412 0018 1A70     		strb	r2, [r3]
 413 001a 7047     		bx	lr
 414              	.L36:
 202:Src/state.c   **** 		if((atc_connected == 1) && (critical_errors = 0)){
 415              		.loc 1 202 47 discriminator 1 view .LVU134
 416 001c 3F4B     		ldr	r3, .L41+12
 417 001e 0022     		movs	r2, #0
 418 0020 1A60     		str	r2, [r3]
 419 0022 F7E7     		b	.L26
 420              	.L25:
 199:Src/state.c   **** 	if(setup_init == 0){
 421              		.loc 1 199 1 view .LVU135
 422 0024 70B5     		push	{r4, r5, r6, lr}
 423              	.LCFI3:
 424              		.cfi_def_cfa_offset 16
 425              		.cfi_offset 4, -16
 426              		.cfi_offset 5, -12
 427              		.cfi_offset 6, -8
 428              		.cfi_offset 14, -4
 213:Src/state.c   **** 			// TODO: report error to steer
 214:Src/state.c   **** 		}
 215:Src/state.c   **** 	}else if(setup_init == 1){
 429              		.loc 1 215 8 is_stmt 1 view .LVU136
 430              		.loc 1 215 10 is_stmt 0 view .LVU137
 431 0026 012B     		cmp	r3, #1
 432 0028 04D0     		beq	.L37
ARM GAS  /tmp/ccTcsCTY.s 			page 14


 216:Src/state.c   **** 		if(count_ms_abs - init_precharge_start_time > 5000){
 217:Src/state.c   **** 			// report error
 218:Src/state.c   **** 			current_state = STATE_IDLE;
 219:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 220:Src/state.c   **** 			switch(can1.rx_id){
 221:Src/state.c   **** 				case ID_BMS_HV:
 222:Src/state.c   **** 					if(can1.dataRx[0] == 1){ //Pre-cherge ended sucessfully
 223:Src/state.c   **** 						setup_init = 2;
 224:Src/state.c   **** 					}else{ //Pre-charge failed
 225:Src/state.c   **** 						current_state = STATE_IDLE;
 226:Src/state.c   **** 						//TODO: send error to steer
 227:Src/state.c   **** 					}
 228:Src/state.c   **** 			}
 229:Src/state.c   **** 		}
 230:Src/state.c   **** 	}else if(setup_init == 2){
 433              		.loc 1 230 8 is_stmt 1 view .LVU138
 434              		.loc 1 230 10 is_stmt 0 view .LVU139
 435 002a 022B     		cmp	r3, #2
 436 002c 24D0     		beq	.L38
 231:Src/state.c   **** 		//send command inverter enable
 232:Src/state.c   **** 		can1.tx_id = ID_REQ_INV_DX;
 233:Src/state.c   **** 		can1.dataTx[0] = 0x51;
 234:Src/state.c   **** 		can1.dataTx[1] = 0x00;
 235:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 236:Src/state.c   **** 		can1.tx_size = 3;
 237:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 238:Src/state.c   **** 
 239:Src/state.c   **** 		//send request inverter enable
 240:Src/state.c   **** 		can1.tx_id = ID_ASK_INV_DX;
 241:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 242:Src/state.c   **** 		can1.dataTx[1] = 0xE8;
 243:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 244:Src/state.c   **** 		can1.tx_size = 3;
 245:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 246:Src/state.c   **** 
 247:Src/state.c   **** 		setup_init = 3;
 248:Src/state.c   **** 
 249:Src/state.c   **** 		init_inv_resp = count_ms_abs;
 250:Src/state.c   **** 	}else if(setup_init == 3){
 437              		.loc 1 250 8 is_stmt 1 view .LVU140
 438              		.loc 1 250 10 is_stmt 0 view .LVU141
 439 002e 032B     		cmp	r3, #3
 440 0030 45D0     		beq	.L39
 441              	.L24:
 251:Src/state.c   **** 		if(count_ms_abs - init_inv_resp > 10000){
 252:Src/state.c   **** 			// report error
 253:Src/state.c   **** 			//send pre-charge OFF req
 254:Src/state.c   **** 			can1.tx_id = ID_REQ_PRCH;
 255:Src/state.c   **** 			can1.dataTx[0] = 0x00;
 256:Src/state.c   **** 			can1.tx_size = 1;
 257:Src/state.c   **** 			CAN_Send(&can1, highPriority);
 258:Src/state.c   **** 			current_state = STATE_IDLE;
 259:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 260:Src/state.c   **** 			switch(can1.rx_id){
 261:Src/state.c   **** 				case ID_REQ_INV_DX:
 262:Src/state.c   **** 					if(can1.dataRx[0] == 0xE0 && can1.dataRx[1] == 0x01 && can1.dataRx[2] == 0x00 && can1.dataRx[3
 263:Src/state.c   **** 						setup_init = 4;
ARM GAS  /tmp/ccTcsCTY.s 			page 15


 264:Src/state.c   **** 					}
 265:Src/state.c   **** 			}			
 266:Src/state.c   **** 		}
 267:Src/state.c   **** 	}else if(setup_init == 4){
 268:Src/state.c   **** 		// In this state all is ready for run //
 269:Src/state.c   **** 		// Waiting for run signal from steer //
 270:Src/state.c   **** 		
 271:Src/state.c   **** 	}
 272:Src/state.c   **** 	/*if (fifoRxDataCAN_pop(&can1))
 273:Src/state.c   **** 	{
 274:Src/state.c   **** 		switch (can1.rx_id)
 275:Src/state.c   **** 		{
 276:Src/state.c   **** 		case ID_STEERING_WEEL_1:
 277:Src/state.c   **** 			switch (can1.dataRx[0])
 278:Src/state.c   **** 			{
 279:Src/state.c   **** 			//----- change state to run -----//
 280:Src/state.c   **** 			case 5:
 281:Src/state.c   **** 				// If inverter are ON and Brake is Pressed
 282:Src/state.c   **** 				current_state = STATE_RUN;
 283:Src/state.c   **** 				can1.tx_id = ID_ACU_2;
 284:Src/state.c   **** 				can1.dataRx[0] = 5;
 285:Src/state.c   **** 				can1.tx_size = 1;
 286:Src/state.c   **** 				CAN_Send(&can1, normalPriority);
 287:Src/state.c   **** 				break;
 288:Src/state.c   **** 			// Turn On inverter Dx
 289:Src/state.c   **** 			case 8:
 290:Src/state.c   **** 				// If Inverter Temp < 80
 291:Src/state.c   **** 				break;
 292:Src/state.c   **** 			// Turn On inverter Sx
 293:Src/state.c   **** 			case 9:
 294:Src/state.c   **** 				// if Iverter Temp < 80
 295:Src/state.c   **** 				break;
 296:Src/state.c   **** 			default:
 297:Src/state.c   **** 				break;
 298:Src/state.c   **** 			}
 299:Src/state.c   **** 			break;
 300:Src/state.c   **** 		case ID_BMS_HV:
 301:Src/state.c   **** 			switch (can1.dataRx[0])
 302:Src/state.c   **** 			{
 303:Src/state.c   **** 			case 4:
 304:Src/state.c   **** 				// Shutdown Confirmed
 305:Src/state.c   **** 				break;
 306:Src/state.c   **** 			case 8:
 307:Src/state.c   **** 				// Shutdown from Error
 308:Src/state.c   **** 				break;
 309:Src/state.c   **** 			}
 310:Src/state.c   **** 			break;
 311:Src/state.c   **** 		case ID_ATC_POT:
 312:Src/state.c   **** 			atc_pot_operations();
 313:Src/state.c   **** 			break;
 314:Src/state.c   **** 		case ID_REQ_INV_DX:
 315:Src/state.c   **** 			switch (can1.dataRx[0])
 316:Src/state.c   **** 			{
 317:Src/state.c   **** 			case 0x4A:
 318:Src/state.c   **** 				// Update Inverter Dx Temp = (can1.RxData[2] * 256 + can1.RxData[1] - 15797) / 112.1182
 319:Src/state.c   **** 				break;
 320:Src/state.c   **** 			case 0xD8:
ARM GAS  /tmp/ccTcsCTY.s 			page 16


 321:Src/state.c   **** 				if (can1.dataRx[2] == 0x0C  && request of shutdown == false)
 322:Src/state.c   **** 				{
 323:Src/state.c   **** 					can1.dataTx[0] = 0x09;
 324:Src/state.c   **** 					can1.dataTx[1] = 0;
 325:Src/state.c   **** 					can1.dataTx[2] = 0;
 326:Src/state.c   **** 					can1.dataTx[3] = 0;
 327:Src/state.c   **** 					can1.dataTx[4] = 0;
 328:Src/state.c   **** 					can1.dataTx[5] = 0;
 329:Src/state.c   **** 					can1.dataTx[6] = 0;
 330:Src/state.c   **** 					can1.dataTx[7] = 0;
 331:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 332:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 333:Src/state.c   **** 					// Inverter Dx true
 334:Src/state.c   **** 				}
 335:Src/state.c   **** 				else
 336:Src/state.c   **** 				{
 337:Src/state.c   **** 					can1.dataTx[0] = 0xD0;
 338:Src/state.c   **** 					can1.dataTx[1] = 0;
 339:Src/state.c   **** 					can1.dataTx[2] = 0;
 340:Src/state.c   **** 					can1.dataTx[3] = 0;
 341:Src/state.c   **** 					can1.dataTx[4] = 0;
 342:Src/state.c   **** 					can1.dataTx[5] = 0;
 343:Src/state.c   **** 					can1.dataTx[6] = 0;
 344:Src/state.c   **** 					can1.dataTx[7] = 0;
 345:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 346:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 347:Src/state.c   **** 					// Inverter Dx false
 348:Src/state.c   **** 				}
 349:Src/state.c   **** 				break;
 350:Src/state.c   **** 			}
 351:Src/state.c   **** 			break;
 352:Src/state.c   **** 		case ID_REQ_INV_SX:
 353:Src/state.c   **** 			switch (can1.dataRx[0])
 354:Src/state.c   **** 			{
 355:Src/state.c   **** 			case 0x4A:
 356:Src/state.c   **** 				// Update Inverter Sx Temp = (can1.RxData[2] * 256 + can1.RxData[1] - 15797) / 112.1182
 357:Src/state.c   **** 				break;
 358:Src/state.c   **** 			case 0xD8:
 359:Src/state.c   **** 				if (can1.dataRx[2] == 0x0C  && request of shutdown == false)
 360:Src/state.c   **** 				{
 361:Src/state.c   **** 					can1.dataTx[0] = 0x08;
 362:Src/state.c   **** 					can1.dataTx[1] = 0;
 363:Src/state.c   **** 					can1.dataTx[2] = 0;
 364:Src/state.c   **** 					can1.dataTx[3] = 0;
 365:Src/state.c   **** 					can1.dataTx[4] = 0;
 366:Src/state.c   **** 					can1.dataTx[5] = 0;
 367:Src/state.c   **** 					can1.dataTx[6] = 0;
 368:Src/state.c   **** 					can1.dataTx[7] = 0;
 369:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 370:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 371:Src/state.c   **** 					// Inverter Sx true
 372:Src/state.c   **** 				}
 373:Src/state.c   **** 				else
 374:Src/state.c   **** 				{
 375:Src/state.c   **** 					can1.dataTx[0] = 0x0C;
 376:Src/state.c   **** 					can1.dataTx[1] = 0;
 377:Src/state.c   **** 					can1.dataTx[2] = 0;
ARM GAS  /tmp/ccTcsCTY.s 			page 17


 378:Src/state.c   **** 					can1.dataTx[3] = 0;
 379:Src/state.c   **** 					can1.dataTx[4] = 0;
 380:Src/state.c   **** 					can1.dataTx[5] = 0;
 381:Src/state.c   **** 					can1.dataTx[6] = 0;
 382:Src/state.c   **** 					can1.dataTx[7] = 0;
 383:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 384:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 385:Src/state.c   **** 					// Inverter Sx false
 386:Src/state.c   **** 				}
 387:Src/state.c   **** 				break;
 388:Src/state.c   **** 			}
 389:Src/state.c   **** 			break;
 390:Src/state.c   **** 		default:
 391:Src/state.c   **** 			break;
 392:Src/state.c   **** 		}
 393:Src/state.c   **** 	}*/
 394:Src/state.c   **** }
 442              		.loc 1 394 1 view .LVU142
 443 0032 70BD     		pop	{r4, r5, r6, pc}
 444              	.L37:
 216:Src/state.c   **** 			// report error
 445              		.loc 1 216 3 is_stmt 1 view .LVU143
 216:Src/state.c   **** 			// report error
 446              		.loc 1 216 19 is_stmt 0 view .LVU144
 447 0034 3A4B     		ldr	r3, .L41+16
 448 0036 1B68     		ldr	r3, [r3]
 449 0038 3A4A     		ldr	r2, .L41+20
 450 003a 1268     		ldr	r2, [r2]
 451 003c 9B1A     		subs	r3, r3, r2
 216:Src/state.c   **** 			// report error
 452              		.loc 1 216 5 view .LVU145
 453 003e 41F28832 		movw	r2, #5000
 454 0042 9342     		cmp	r3, r2
 455 0044 03D9     		bls	.L29
 218:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 456              		.loc 1 218 4 is_stmt 1 view .LVU146
 218:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 457              		.loc 1 218 18 is_stmt 0 view .LVU147
 458 0046 344B     		ldr	r3, .L41+8
 459 0048 0122     		movs	r2, #1
 460 004a 1A70     		strb	r2, [r3]
 461 004c F1E7     		b	.L24
 462              	.L29:
 219:Src/state.c   **** 			switch(can1.rx_id){
 463              		.loc 1 219 9 is_stmt 1 view .LVU148
 219:Src/state.c   **** 			switch(can1.rx_id){
 464              		.loc 1 219 13 is_stmt 0 view .LVU149
 465 004e 3648     		ldr	r0, .L41+24
 466 0050 FFF7FEFF 		bl	fifoRxDataCAN_pop
 467              	.LVL11:
 219:Src/state.c   **** 			switch(can1.rx_id){
 468              		.loc 1 219 12 view .LVU150
 469 0054 0028     		cmp	r0, #0
 470 0056 ECD0     		beq	.L24
 220:Src/state.c   **** 				case ID_BMS_HV:
 471              		.loc 1 220 4 is_stmt 1 view .LVU151
 220:Src/state.c   **** 				case ID_BMS_HV:
ARM GAS  /tmp/ccTcsCTY.s 			page 18


 472              		.loc 1 220 15 is_stmt 0 view .LVU152
 473 0058 334B     		ldr	r3, .L41+24
 474 005a 1B6B     		ldr	r3, [r3, #48]
 220:Src/state.c   **** 				case ID_BMS_HV:
 475              		.loc 1 220 4 view .LVU153
 476 005c AA2B     		cmp	r3, #170
 477 005e E8D1     		bne	.L24
 222:Src/state.c   **** 						setup_init = 2;
 478              		.loc 1 222 6 is_stmt 1 view .LVU154
 222:Src/state.c   **** 						setup_init = 2;
 479              		.loc 1 222 20 is_stmt 0 view .LVU155
 480 0060 314B     		ldr	r3, .L41+24
 481 0062 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 222:Src/state.c   **** 						setup_init = 2;
 482              		.loc 1 222 8 view .LVU156
 483 0064 012B     		cmp	r3, #1
 484 0066 03D0     		beq	.L40
 225:Src/state.c   **** 						//TODO: send error to steer
 485              		.loc 1 225 7 is_stmt 1 view .LVU157
 225:Src/state.c   **** 						//TODO: send error to steer
 486              		.loc 1 225 21 is_stmt 0 view .LVU158
 487 0068 2B4B     		ldr	r3, .L41+8
 488 006a 0122     		movs	r2, #1
 489 006c 1A70     		strb	r2, [r3]
 490 006e E0E7     		b	.L24
 491              	.L40:
 223:Src/state.c   **** 					}else{ //Pre-charge failed
 492              		.loc 1 223 7 is_stmt 1 view .LVU159
 223:Src/state.c   **** 					}else{ //Pre-charge failed
 493              		.loc 1 223 18 is_stmt 0 view .LVU160
 494 0070 274B     		ldr	r3, .L41
 495 0072 0222     		movs	r2, #2
 496 0074 1A60     		str	r2, [r3]
 497 0076 DCE7     		b	.L24
 498              	.L38:
 232:Src/state.c   **** 		can1.dataTx[0] = 0x51;
 499              		.loc 1 232 3 is_stmt 1 view .LVU161
 232:Src/state.c   **** 		can1.dataTx[0] = 0x51;
 500              		.loc 1 232 14 is_stmt 0 view .LVU162
 501 0078 2B4C     		ldr	r4, .L41+24
 502 007a 4FF4C173 		mov	r3, #386
 503 007e E362     		str	r3, [r4, #44]
 233:Src/state.c   **** 		can1.dataTx[1] = 0x00;
 504              		.loc 1 233 3 is_stmt 1 view .LVU163
 233:Src/state.c   **** 		can1.dataTx[1] = 0x00;
 505              		.loc 1 233 18 is_stmt 0 view .LVU164
 506 0080 5123     		movs	r3, #81
 507 0082 2373     		strb	r3, [r4, #12]
 234:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 508              		.loc 1 234 3 is_stmt 1 view .LVU165
 234:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 509              		.loc 1 234 18 is_stmt 0 view .LVU166
 510 0084 0025     		movs	r5, #0
 511 0086 6573     		strb	r5, [r4, #13]
 235:Src/state.c   **** 		can1.tx_size = 3;
 512              		.loc 1 235 3 is_stmt 1 view .LVU167
 235:Src/state.c   **** 		can1.tx_size = 3;
ARM GAS  /tmp/ccTcsCTY.s 			page 19


 513              		.loc 1 235 18 is_stmt 0 view .LVU168
 514 0088 A573     		strb	r5, [r4, #14]
 236:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 515              		.loc 1 236 3 is_stmt 1 view .LVU169
 236:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 516              		.loc 1 236 16 is_stmt 0 view .LVU170
 517 008a 0326     		movs	r6, #3
 518 008c 2660     		str	r6, [r4]
 237:Src/state.c   **** 
 519              		.loc 1 237 3 is_stmt 1 view .LVU171
 520 008e 2946     		mov	r1, r5
 521 0090 2046     		mov	r0, r4
 522 0092 FFF7FEFF 		bl	CAN_Send
 523              	.LVL12:
 240:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 524              		.loc 1 240 3 view .LVU172
 240:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 525              		.loc 1 240 14 is_stmt 0 view .LVU173
 526 0096 40F20223 		movw	r3, #514
 527 009a E362     		str	r3, [r4, #44]
 241:Src/state.c   **** 		can1.dataTx[1] = 0xE8;
 528              		.loc 1 241 3 is_stmt 1 view .LVU174
 241:Src/state.c   **** 		can1.dataTx[1] = 0xE8;
 529              		.loc 1 241 18 is_stmt 0 view .LVU175
 530 009c 3D23     		movs	r3, #61
 531 009e 2373     		strb	r3, [r4, #12]
 242:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 532              		.loc 1 242 3 is_stmt 1 view .LVU176
 242:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 533              		.loc 1 242 18 is_stmt 0 view .LVU177
 534 00a0 E823     		movs	r3, #232
 535 00a2 6373     		strb	r3, [r4, #13]
 243:Src/state.c   **** 		can1.tx_size = 3;
 536              		.loc 1 243 3 is_stmt 1 view .LVU178
 243:Src/state.c   **** 		can1.tx_size = 3;
 537              		.loc 1 243 18 is_stmt 0 view .LVU179
 538 00a4 A573     		strb	r5, [r4, #14]
 244:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 539              		.loc 1 244 3 is_stmt 1 view .LVU180
 244:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 540              		.loc 1 244 16 is_stmt 0 view .LVU181
 541 00a6 2660     		str	r6, [r4]
 245:Src/state.c   **** 
 542              		.loc 1 245 3 is_stmt 1 view .LVU182
 543 00a8 2946     		mov	r1, r5
 544 00aa 2046     		mov	r0, r4
 545 00ac FFF7FEFF 		bl	CAN_Send
 546              	.LVL13:
 247:Src/state.c   **** 
 547              		.loc 1 247 3 view .LVU183
 247:Src/state.c   **** 
 548              		.loc 1 247 14 is_stmt 0 view .LVU184
 549 00b0 174B     		ldr	r3, .L41
 550 00b2 1E60     		str	r6, [r3]
 249:Src/state.c   **** 	}else if(setup_init == 3){
 551              		.loc 1 249 3 is_stmt 1 view .LVU185
 249:Src/state.c   **** 	}else if(setup_init == 3){
ARM GAS  /tmp/ccTcsCTY.s 			page 20


 552              		.loc 1 249 17 is_stmt 0 view .LVU186
 553 00b4 1A4B     		ldr	r3, .L41+16
 554 00b6 1A68     		ldr	r2, [r3]
 555 00b8 1C4B     		ldr	r3, .L41+28
 556 00ba 1A60     		str	r2, [r3]
 557 00bc B9E7     		b	.L24
 558              	.L39:
 251:Src/state.c   **** 			// report error
 559              		.loc 1 251 3 is_stmt 1 view .LVU187
 251:Src/state.c   **** 			// report error
 560              		.loc 1 251 19 is_stmt 0 view .LVU188
 561 00be 184B     		ldr	r3, .L41+16
 562 00c0 1B68     		ldr	r3, [r3]
 563 00c2 1A4A     		ldr	r2, .L41+28
 564 00c4 1268     		ldr	r2, [r2]
 565 00c6 9B1A     		subs	r3, r3, r2
 251:Src/state.c   **** 			// report error
 566              		.loc 1 251 5 view .LVU189
 567 00c8 42F21072 		movw	r2, #10000
 568 00cc 9342     		cmp	r3, r2
 569 00ce 0CD9     		bls	.L32
 254:Src/state.c   **** 			can1.dataTx[0] = 0x00;
 570              		.loc 1 254 4 is_stmt 1 view .LVU190
 254:Src/state.c   **** 			can1.dataTx[0] = 0x00;
 571              		.loc 1 254 15 is_stmt 0 view .LVU191
 572 00d0 1548     		ldr	r0, .L41+24
 573 00d2 B423     		movs	r3, #180
 574 00d4 C362     		str	r3, [r0, #44]
 255:Src/state.c   **** 			can1.tx_size = 1;
 575              		.loc 1 255 4 is_stmt 1 view .LVU192
 255:Src/state.c   **** 			can1.tx_size = 1;
 576              		.loc 1 255 19 is_stmt 0 view .LVU193
 577 00d6 0023     		movs	r3, #0
 578 00d8 0373     		strb	r3, [r0, #12]
 256:Src/state.c   **** 			CAN_Send(&can1, highPriority);
 579              		.loc 1 256 4 is_stmt 1 view .LVU194
 256:Src/state.c   **** 			CAN_Send(&can1, highPriority);
 580              		.loc 1 256 17 is_stmt 0 view .LVU195
 581 00da 0124     		movs	r4, #1
 582 00dc 0460     		str	r4, [r0]
 257:Src/state.c   **** 			current_state = STATE_IDLE;
 583              		.loc 1 257 4 is_stmt 1 view .LVU196
 584 00de 2146     		mov	r1, r4
 585 00e0 FFF7FEFF 		bl	CAN_Send
 586              	.LVL14:
 258:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 587              		.loc 1 258 4 view .LVU197
 258:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 588              		.loc 1 258 18 is_stmt 0 view .LVU198
 589 00e4 0C4B     		ldr	r3, .L41+8
 590 00e6 1C70     		strb	r4, [r3]
 591 00e8 A3E7     		b	.L24
 592              	.L32:
 259:Src/state.c   **** 			switch(can1.rx_id){
 593              		.loc 1 259 9 is_stmt 1 view .LVU199
 259:Src/state.c   **** 			switch(can1.rx_id){
 594              		.loc 1 259 13 is_stmt 0 view .LVU200
ARM GAS  /tmp/ccTcsCTY.s 			page 21


 595 00ea 0F48     		ldr	r0, .L41+24
 596 00ec FFF7FEFF 		bl	fifoRxDataCAN_pop
 597              	.LVL15:
 259:Src/state.c   **** 			switch(can1.rx_id){
 598              		.loc 1 259 12 view .LVU201
 599 00f0 0028     		cmp	r0, #0
 600 00f2 9ED0     		beq	.L24
 260:Src/state.c   **** 				case ID_REQ_INV_DX:
 601              		.loc 1 260 4 is_stmt 1 view .LVU202
 260:Src/state.c   **** 				case ID_REQ_INV_DX:
 602              		.loc 1 260 15 is_stmt 0 view .LVU203
 603 00f4 0C4B     		ldr	r3, .L41+24
 604 00f6 1B6B     		ldr	r3, [r3, #48]
 260:Src/state.c   **** 				case ID_REQ_INV_DX:
 605              		.loc 1 260 4 view .LVU204
 606 00f8 B3F5C17F 		cmp	r3, #386
 607 00fc 99D1     		bne	.L24
 262:Src/state.c   **** 						setup_init = 4;
 608              		.loc 1 262 6 is_stmt 1 view .LVU205
 262:Src/state.c   **** 						setup_init = 4;
 609              		.loc 1 262 84 is_stmt 0 view .LVU206
 610 00fe 0A4B     		ldr	r3, .L41+24
 611 0100 5B69     		ldr	r3, [r3, #20]
 262:Src/state.c   **** 						setup_init = 4;
 612              		.loc 1 262 8 view .LVU207
 613 0102 B3F5F07F 		cmp	r3, #480
 614 0106 94D1     		bne	.L24
 263:Src/state.c   **** 					}
 615              		.loc 1 263 7 is_stmt 1 view .LVU208
 263:Src/state.c   **** 					}
 616              		.loc 1 263 18 is_stmt 0 view .LVU209
 617 0108 014B     		ldr	r3, .L41
 618 010a 0422     		movs	r2, #4
 619 010c 1A60     		str	r2, [r3]
 271:Src/state.c   **** 	/*if (fifoRxDataCAN_pop(&can1))
 620              		.loc 1 271 2 is_stmt 1 view .LVU210
 621              		.loc 1 394 1 is_stmt 0 view .LVU211
 622 010e 90E7     		b	.L24
 623              	.L42:
 624              		.align	2
 625              	.L41:
 626 0110 00000000 		.word	.LANCHOR3
 627 0114 00000000 		.word	atc_connected
 628 0118 00000000 		.word	current_state
 629 011c 00000000 		.word	.LANCHOR4
 630 0120 00000000 		.word	count_ms_abs
 631 0124 00000000 		.word	.LANCHOR5
 632 0128 00000000 		.word	can1
 633 012c 00000000 		.word	.LANCHOR6
 634              		.cfi_endproc
 635              	.LFE147:
 637              		.section	.rodata.debug_operations.str1.4,"aMS",%progbits,1
 638              		.align	2
 639              	.LC0:
 640 0000 68656C70 		.ascii	"help\000"
 640      00
 641 0005 000000   		.align	2
ARM GAS  /tmp/ccTcsCTY.s 			page 22


 642              	.LC1:
 643 0008 0D0A2A2A 		.ascii	"\015\012***********ECU HELP***********\015\012Avaia"
 643      2A2A2A2A 
 643      2A2A2A2A 
 643      2A454355 
 643      2048454C 
 644 002f 626C6520 		.ascii	"ble msg are:\015\012\011-- status -> print ECU stat"
 644      6D736720 
 644      6172653A 
 644      0D0A092D 
 644      2D207374 
 645 0059 75730D0A 		.ascii	"us\015\012\011-- can sniffer -> enter in can sniffe"
 645      092D2D20 
 645      63616E20 
 645      736E6966 
 645      66657220 
 646 0083 72206D6F 		.ascii	"r mode (q for quit)\015\012\011-- send -> send a CA"
 646      64652028 
 646      7120666F 
 646      72207175 
 646      6974290D 
 647 00ad 4E206D73 		.ascii	"N msg (xxxx.xxx.xxx.xxx ... ecc)\015\012\011-- sd s"
 647      67202878 
 647      7878782E 
 647      7878782E 
 647      7878782E 
 648 00d7 74617475 		.ascii	"tatus -> print SD status and the name of file insid"
 648      73202D3E 
 648      20707269 
 648      6E742053 
 648      44207374 
 649 010a 650D0A09 		.ascii	"e\015\012\011-- sd file -> print files inside the S"
 649      2D2D2073 
 649      64206669 
 649      6C65202D 
 649      3E207072 
 650 0134 440D0A09 		.ascii	"D\015\012\011-- time -> print activity time\015\012"
 650      2D2D2074 
 650      696D6520 
 650      2D3E2070 
 650      72696E74 
 651 0158 092D2D20 		.ascii	"\011-- codev  -> print code version\015\012\000"
 651      636F6465 
 651      7620202D 
 651      3E207072 
 651      696E7420 
 652 017b 00       		.align	2
 653              	.LC2:
 654 017c 636F6465 		.ascii	"codev\000"
 654      7600
 655 0182 0000     		.align	2
 656              	.LC3:
 657 0184 74696D65 		.ascii	"time\000"
 657      00
 658 0189 000000   		.align	2
 659              	.LC4:
 660 018c 0D0A5469 		.ascii	"\015\012Time: %d hours : %d min : %d sec : %d dec\015"
ARM GAS  /tmp/ccTcsCTY.s 			page 23


 660      6D653A20 
 660      25642068 
 660      6F757273 
 660      203A2025 
 661 01b8 0A00     		.ascii	"\012\000"
 662 01ba 0000     		.align	2
 663              	.LC5:
 664 01bc 73746174 		.ascii	"status\000"
 664      757300
 665 01c3 00       		.align	2
 666              	.LC6:
 667 01c4 0D0A0A74 		.ascii	"\015\012\012type of status:\015\012\011 0 = OK\015\012"
 667      79706520 
 667      6F662073 
 667      74617475 
 667      733A0D0A 
 668 01e2 09203120 		.ascii	"\011 1 = ERROR\015\012\011 2 = BUSY\015\012\011 3 ="
 668      3D204552 
 668      524F520D 
 668      0A092032 
 668      203D2042 
 669 0200 2054494D 		.ascii	" TIMEOUT\015\012\012CAN1 status:\015\012\011CAN1 co"
 669      454F5554 
 669      0D0A0A43 
 669      414E3120 
 669      73746174 
 670 0221 6E666967 		.ascii	"nfig status: %d \015\012\011CAN1 notification statu"
 670      20737461 
 670      7475733A 
 670      20256420 
 670      0D0A0943 
 671 024b 733A2025 		.ascii	"s: %d\015\012\011CAN1 start status: %d\015\012\000"
 671      640D0A09 
 671      43414E31 
 671      20737461 
 671      72742073 
 672 026b 00       		.align	2
 673              	.LC7:
 674 026c 43414E33 		.ascii	"CAN3 status:\015\012\011CAN3 config status: %d \015"
 674      20737461 
 674      7475733A 
 674      0D0A0943 
 674      414E3320 
 675 0293 0A094341 		.ascii	"\012\011CAN3 notification status: %d\015\012\011CAN"
 675      4E33206E 
 675      6F746966 
 675      69636174 
 675      696F6E20 
 676 02b7 33207374 		.ascii	"3 start status: %d\015\012\000"
 676      61727420 
 676      73746174 
 676      75733A20 
 676      25640D0A 
 677              		.align	2
 678              	.LC8:
 679 02cc 0D0A4375 		.ascii	"\015\012Current state: STATE_INIT\015\012\000"
 679      7272656E 
ARM GAS  /tmp/ccTcsCTY.s 			page 24


 679      74207374 
 679      6174653A 
 679      20535441 
 680 02ea 0000     		.align	2
 681              	.LC9:
 682 02ec 0D0A4375 		.ascii	"\015\012Current state: STATE_IDLE\015\012\000"
 682      7272656E 
 682      74207374 
 682      6174653A 
 682      20535441 
 683 030a 0000     		.align	2
 684              	.LC10:
 685 030c 0D0A4375 		.ascii	"\015\012Current state: STATE_SETUP\015\012\000"
 685      7272656E 
 685      74207374 
 685      6174653A 
 685      20535441 
 686 032b 00       		.align	2
 687              	.LC11:
 688 032c 0D0A4375 		.ascii	"\015\012Current state: STATE_RUN\015\012\000"
 688      7272656E 
 688      74207374 
 688      6174653A 
 688      20535441 
 689 0349 000000   		.align	2
 690              	.LC12:
 691 034c 0D0A4465 		.ascii	"\015\012Device connected : (0 = no, 1 = yes (for ea"
 691      76696365 
 691      20636F6E 
 691      6E656374 
 691      6564203A 
 692 0379 63682062 		.ascii	"ch bit))\015\012\011 IMU -> %d\015\012\011 ITS -> %"
 692      69742929 
 692      0D0A0920 
 692      494D5520 
 692      2D3E2025 
 693 039a 640D0A00 		.ascii	"d\015\012\000"
 694 039e 0000     		.align	2
 695              	.LC13:
 696 03a0 63616E20 		.ascii	"can sniffer\000"
 696      736E6966 
 696      66657200 
 697              		.align	2
 698              	.LC14:
 699 03ac 0D0A456E 		.ascii	"\015\012Enter in can sniffer mode\015\012\000"
 699      74657220 
 699      696E2063 
 699      616E2073 
 699      6E696666 
 700 03ca 0000     		.align	2
 701              	.LC15:
 702 03cc 7100     		.ascii	"q\000"
 703 03ce 0000     		.align	2
 704              	.LC16:
 705 03d0 0D0A4578 		.ascii	"\015\012Exit from can sniffer mode\015\012\000"
 705      69742066 
 705      726F6D20 
ARM GAS  /tmp/ccTcsCTY.s 			page 25


 705      63616E20 
 705      736E6966 
 706 03ef 00       		.align	2
 707              	.LC17:
 708 03f0 73656E64 		.ascii	"send\000"
 708      00
 709 03f5 000000   		.align	2
 710              	.LC18:
 711 03f8 0D0A5365 		.ascii	"\015\012Sent %ld %d %d %d %d %d %d %d %d\015\012\000"
 711      6E742025 
 711      6C642025 
 711      64202564 
 711      20256420 
 712 041d 000000   		.align	2
 713              	.LC19:
 714 0420 73642073 		.ascii	"sd status\000"
 714      74617475 
 714      7300
 715 042a 0000     		.align	2
 716              	.LC20:
 717 042c 0D0A5364 		.ascii	"\015\012Sd mounted \000"
 717      206D6F75 
 717      6E746564 
 717      2000
 718 043a 0000     		.align	2
 719              	.LC21:
 720 043c 53642073 		.ascii	"Sd successfully opened and created file: %s\015\012"
 720      75636365 
 720      73736675 
 720      6C6C7920 
 720      6F70656E 
 721 0469 00       		.ascii	"\000"
 722 046a 0000     		.align	2
 723              	.LC22:
 724 046c 5364206F 		.ascii	"Sd open FAILED\015\012\000"
 724      70656E20 
 724      4641494C 
 724      45440D0A 
 724      00
 725 047d 000000   		.align	2
 726              	.LC23:
 727 0480 0D0A5364 		.ascii	"\015\012Sd NOT mounted \000"
 727      204E4F54 
 727      206D6F75 
 727      6E746564 
 727      2000
 728 0492 0000     		.align	2
 729              	.LC24:
 730 0494 73642066 		.ascii	"sd file\000"
 730      696C6500 
 731              		.align	2
 732              	.LC25:
 733 049c 0D0A4669 		.ascii	"\015\012Files inside sd are:\015\012%s\000"
 733      6C657320 
 733      696E7369 
 733      64652073 
 733      64206172 
ARM GAS  /tmp/ccTcsCTY.s 			page 26


 734 04b7 00       		.align	2
 735              	.LC26:
 736 04b8 67617900 		.ascii	"gay\000"
 737              		.align	2
 738              	.LC27:
 739 04bc 0D0A2020 		.ascii	"\015\012          $\015\012        $   $\015\012   "
 739      20202020 
 739      20202020 
 739      240D0A20 
 739      20202020 
 740 04dd 20202020 		.ascii	"    $     $\015\012       $$$$$$$\015\012       $$$"
 740      24202020 
 740      2020240D 
 740      0A202020 
 740      20202020 
 741 0504 24242424 		.ascii	"$$$$\015\012       $$$$$$$\015\012       $$$$$$$\015"
 741      0D0A2020 
 741      20202020 
 741      20242424 
 741      24242424 
 742 0529 0A202024 		.ascii	"\012  $$$$$$     $$$$$$\015\012 $$$$$$$$   $$$$$$$$"
 742      24242424 
 742      24202020 
 742      20202424 
 742      24242424 
 743 0553 0D0A2424 		.ascii	"\015\012$$$$$$$$$$$$$$$$$$$$\015\012 $$$$$$$$   $$$"
 743      24242424 
 743      24242424 
 743      24242424 
 743      24242424 
 744 057a 24242424 		.ascii	"$$$$$\015\012  $$$$$$     $$$$$$\015\012\000"
 744      240D0A20 
 744      20242424 
 744      24242420 
 744      20202020 
 745 0597 00       		.align	2
 746              	.LC28:
 747 0598 0D0A4552 		.ascii	"\015\012ERROR : msg %s doesn't exist\015\012\000"
 747      524F5220 
 747      3A206D73 
 747      67202573 
 747      20646F65 
 748              		.section	.text.debug_operations,"ax",%progbits
 749              		.align	1
 750              		.global	debug_operations
 751              		.syntax unified
 752              		.thumb
 753              		.thumb_func
 754              		.fpu fpv5-d16
 756              	debug_operations:
 757              	.LFB149:
 395:Src/state.c   **** /*******************************************************************
 396:Src/state.c   ****  *                         END SETUP STATE
 397:Src/state.c   ****  *******************************************************************/
 398:Src/state.c   **** /*******************************************************************
 399:Src/state.c   ****  *                         START RUN STATE
 400:Src/state.c   ****  *******************************************************************/
ARM GAS  /tmp/ccTcsCTY.s 			page 27


 401:Src/state.c   **** void run()
 402:Src/state.c   **** {
 403:Src/state.c   **** 	if (fifoRxDataCAN_pop(&can1))
 404:Src/state.c   **** 	{
 405:Src/state.c   **** 		switch (can1.rx_id)
 406:Src/state.c   **** 		{
 407:Src/state.c   **** 		case ID_STEERING_WEEL_1:
 408:Src/state.c   **** 			if (can1.dataRx[0] == 6)
 409:Src/state.c   **** 			{ //----- change state to setup -----//
 410:Src/state.c   **** 				current_state = STATE_SETUP;
 411:Src/state.c   **** 			}
 412:Src/state.c   **** 			break;
 413:Src/state.c   **** 		case ID_ATC_POT:
 414:Src/state.c   **** 			atc_pot_operations();
 415:Src/state.c   **** 			break;
 416:Src/state.c   **** 		default:
 417:Src/state.c   **** 			break;
 418:Src/state.c   **** 		}
 419:Src/state.c   **** 	}
 420:Src/state.c   **** }
 421:Src/state.c   **** /*******************************************************************
 422:Src/state.c   ****  *                         END RUN STATE
 423:Src/state.c   ****  *******************************************************************/
 424:Src/state.c   **** 
 425:Src/state.c   **** void debug_operations()
 426:Src/state.c   **** {
 758              		.loc 1 426 1 is_stmt 1 view -0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 8
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 763              	.LCFI4:
 764              		.cfi_def_cfa_offset 36
 765              		.cfi_offset 4, -36
 766              		.cfi_offset 5, -32
 767              		.cfi_offset 6, -28
 768              		.cfi_offset 7, -24
 769              		.cfi_offset 8, -20
 770              		.cfi_offset 9, -16
 771              		.cfi_offset 10, -12
 772              		.cfi_offset 11, -8
 773              		.cfi_offset 14, -4
 774 0004 8BB0     		sub	sp, sp, #44
 775              	.LCFI5:
 776              		.cfi_def_cfa_offset 80
 427:Src/state.c   **** 	if (strcmp(debug_rx, "help") == 0)
 777              		.loc 1 427 2 view .LVU213
 778              		.loc 1 427 6 is_stmt 0 view .LVU214
 779 0006 8949     		ldr	r1, .L76
 780 0008 8948     		ldr	r0, .L76+4
 781 000a FFF7FEFF 		bl	strcmp
 782              	.LVL16:
 783              		.loc 1 427 5 view .LVU215
 784 000e 0028     		cmp	r0, #0
 785 0010 3AD0     		beq	.L62
 428:Src/state.c   **** 	{
 429:Src/state.c   **** 		sprintf(debug_tx,
ARM GAS  /tmp/ccTcsCTY.s 			page 28


 430:Src/state.c   **** 				"\r\n***********ECU HELP***********\r\n"
 431:Src/state.c   **** 				"Avaiable msg are:\r\n"
 432:Src/state.c   **** 				"\t-- status -> print ECU status\r\n"
 433:Src/state.c   **** 				"\t-- can sniffer -> enter in can sniffer mode (q for quit)\r\n"
 434:Src/state.c   **** 				"\t-- send -> send a CAN msg (xxxx.xxx.xxx.xxx ... ecc)\r\n"
 435:Src/state.c   **** 				"\t-- sd status -> print SD status and the name of file inside\r\n"
 436:Src/state.c   **** 				"\t-- sd file -> print files inside the SD\r\n"
 437:Src/state.c   **** 				"\t-- time -> print activity time\r\n"
 438:Src/state.c   **** 				"\t-- codev  -> print code version\r\n");
 439:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 440:Src/state.c   **** 	}
 441:Src/state.c   **** 	else if (strcmp(debug_rx, "codev") == 0)
 786              		.loc 1 441 7 is_stmt 1 view .LVU216
 787              		.loc 1 441 11 is_stmt 0 view .LVU217
 788 0012 8849     		ldr	r1, .L76+8
 789 0014 8648     		ldr	r0, .L76+4
 790 0016 FFF7FEFF 		bl	strcmp
 791              	.LVL17:
 792              		.loc 1 441 10 view .LVU218
 793 001a 0028     		cmp	r0, #0
 794 001c 47D0     		beq	.L63
 442:Src/state.c   **** 	{
 443:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)code_version, strlen(code_version),
 444:Src/state.c   **** 						  100);
 445:Src/state.c   **** 	}
 446:Src/state.c   **** 	else if (strcmp(debug_rx, "time") == 0)
 795              		.loc 1 446 7 is_stmt 1 view .LVU219
 796              		.loc 1 446 11 is_stmt 0 view .LVU220
 797 001e 8649     		ldr	r1, .L76+12
 798 0020 8348     		ldr	r0, .L76+4
 799 0022 FFF7FEFF 		bl	strcmp
 800              	.LVL18:
 801              		.loc 1 446 10 view .LVU221
 802 0026 0028     		cmp	r0, #0
 803 0028 4CD0     		beq	.L64
 447:Src/state.c   **** 	{
 448:Src/state.c   **** 		sprintf(debug_tx, "\r\nTime: %d hours : %d min : %d sec : %d dec\r\n",
 449:Src/state.c   **** 				count_hour, count_min, count_sec, count_dec);
 450:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 451:Src/state.c   **** 	}
 452:Src/state.c   **** 	else if (strcmp(debug_rx, "status") == 0)
 804              		.loc 1 452 7 is_stmt 1 view .LVU222
 805              		.loc 1 452 11 is_stmt 0 view .LVU223
 806 002a 8449     		ldr	r1, .L76+16
 807 002c 8048     		ldr	r0, .L76+4
 808 002e FFF7FEFF 		bl	strcmp
 809              	.LVL19:
 810              		.loc 1 452 10 view .LVU224
 811 0032 0028     		cmp	r0, #0
 812 0034 5FD0     		beq	.L65
 453:Src/state.c   **** 	{
 454:Src/state.c   **** 		sprintf(debug_tx,
 455:Src/state.c   **** 				"\r\n\ntype of status:\r\n"
 456:Src/state.c   **** 				"\t 0 = OK\r\n"
 457:Src/state.c   **** 				"\t 1 = ERROR\r\n"
 458:Src/state.c   **** 				"\t 2 = BUSY\r\n"
 459:Src/state.c   **** 				"\t 3 = TIMEOUT\r\n\n"
ARM GAS  /tmp/ccTcsCTY.s 			page 29


 460:Src/state.c   **** 				"CAN1 status:\r\n"
 461:Src/state.c   **** 				"\tCAN1 config status: %d \r\n"
 462:Src/state.c   **** 				"\tCAN1 notification status: %d\r\n"
 463:Src/state.c   **** 				"\tCAN1 start status: %d\r\n",
 464:Src/state.c   **** 				can1.configFilter_status, can1.activateNotif_status,
 465:Src/state.c   **** 				can1.canStart_status);
 466:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 467:Src/state.c   **** 		sprintf(debug_tx,
 468:Src/state.c   **** 				"CAN3 status:\r\n"
 469:Src/state.c   **** 				"\tCAN3 config status: %d \r\n"
 470:Src/state.c   **** 				"\tCAN3 notification status: %d\r\n"
 471:Src/state.c   **** 				"\tCAN3 start status: %d\r\n",
 472:Src/state.c   **** 				can3.configFilter_status, can3.activateNotif_status,
 473:Src/state.c   **** 				can3.canStart_status);
 474:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 475:Src/state.c   **** 		if (current_state == STATE_INIT)
 476:Src/state.c   **** 		{
 477:Src/state.c   **** 			HAL_UART_Transmit(&huart3,
 478:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_INIT\r\n",
 479:Src/state.c   **** 							  strlen("\r\nCurrent state: STATE_INIT\r\n"), 100);
 480:Src/state.c   **** 		}
 481:Src/state.c   **** 		else if (current_state == STATE_IDLE)
 482:Src/state.c   **** 		{
 483:Src/state.c   **** 			HAL_UART_Transmit(&huart3,
 484:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_IDLE\r\n",
 485:Src/state.c   **** 							  strlen("\r\nCurrent state: STATE_IDLE\r\n"), 100);
 486:Src/state.c   **** 		}
 487:Src/state.c   **** 		else if (current_state == STATE_SETUP)
 488:Src/state.c   **** 		{
 489:Src/state.c   **** 			HAL_UART_Transmit(
 490:Src/state.c   **** 				&huart3, (uint8_t *)"\r\nCurrent state: STATE_SETUP\r\n",
 491:Src/state.c   **** 				strlen("\r\nCurrent state: STATE_SETUP\r\n"), 100);
 492:Src/state.c   **** 		}
 493:Src/state.c   **** 		else if (current_state == STATE_RUN)
 494:Src/state.c   **** 		{
 495:Src/state.c   **** 			HAL_UART_Transmit(&huart3,
 496:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_RUN\r\n",
 497:Src/state.c   **** 							  strlen("\r\nCurrent state: STATE_RUN\r\n"), 100);
 498:Src/state.c   **** 		}
 499:Src/state.c   **** 		sprintf(debug_tx,
 500:Src/state.c   **** 				"\r\n"
 501:Src/state.c   **** 				"Device connected : (0 = no, 1 = yes (for each bit))\r\n"
 502:Src/state.c   **** 				"\t IMU -> %d\r\n"
 503:Src/state.c   **** 				"\t ITS -> %d\r\n",
 504:Src/state.c   **** 				imu_connected, its_connected);
 505:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 506:Src/state.c   **** 	}else if(strcmp(debug_rx, "can sniffer") == 0){
 813              		.loc 1 506 8 is_stmt 1 view .LVU225
 814              		.loc 1 506 11 is_stmt 0 view .LVU226
 815 0036 8249     		ldr	r1, .L76+20
 816 0038 7D48     		ldr	r0, .L76+4
 817 003a FFF7FEFF 		bl	strcmp
 818              	.LVL20:
 819              		.loc 1 506 10 view .LVU227
 820 003e 0028     		cmp	r0, #0
 821 0040 00F0BD80 		beq	.L66
 507:Src/state.c   **** 		canSnifferMode = 1;
ARM GAS  /tmp/ccTcsCTY.s 			page 30


 508:Src/state.c   **** 		sprintf(debug_tx,"\r\nEnter in can sniffer mode\r\n");
 509:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 510:Src/state.c   **** 	}else if(strcmp(debug_rx, "q") == 0){
 822              		.loc 1 510 8 is_stmt 1 view .LVU228
 823              		.loc 1 510 11 is_stmt 0 view .LVU229
 824 0044 7F49     		ldr	r1, .L76+24
 825 0046 7A48     		ldr	r0, .L76+4
 826 0048 FFF7FEFF 		bl	strcmp
 827              	.LVL21:
 828              		.loc 1 510 10 view .LVU230
 829 004c 0028     		cmp	r0, #0
 830 004e 00F0D080 		beq	.L67
 511:Src/state.c   **** 		canSnifferMode = 0;
 512:Src/state.c   **** 		sprintf(debug_tx,"\r\nExit from can sniffer mode\r\n");
 513:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 514:Src/state.c   **** 	}else if(strncmp(debug_rx, "send",4) == 0){
 831              		.loc 1 514 8 is_stmt 1 view .LVU231
 832              		.loc 1 514 11 is_stmt 0 view .LVU232
 833 0052 0422     		movs	r2, #4
 834 0054 7C49     		ldr	r1, .L76+28
 835 0056 7648     		ldr	r0, .L76+4
 836 0058 FFF7FEFF 		bl	strncmp
 837              	.LVL22:
 838              		.loc 1 514 10 view .LVU233
 839 005c 0028     		cmp	r0, #0
 840 005e 00F02B81 		beq	.L68
 515:Src/state.c   **** 		uint8_t dataToSend[8];can1.dataTx[0] = dataToSend[0];
 516:Src/state.c   **** 		uint32_t idToSend;
 517:Src/state.c   **** 		uint8_t offset = (uint8_t)'0';
 518:Src/state.c   **** 		idToSend = ((uint8_t)debug_rx[5]-offset)*1000 + ((uint8_t)debug_rx[6]-offset)*100 + ((uint8_t)deb
 519:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 520:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 521:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 522:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 523:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 524:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 525:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 526:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 527:Src/state.c   **** 		can1.tx_id = idToSend;
 528:Src/state.c   **** 		can1.dataTx[0] = dataToSend[0];
 529:Src/state.c   **** 		can1.dataTx[1] = dataToSend[1];
 530:Src/state.c   **** 		can1.dataTx[2] = dataToSend[2];
 531:Src/state.c   **** 		can1.dataTx[3] = dataToSend[3];
 532:Src/state.c   **** 		can1.dataTx[4] = dataToSend[4];
 533:Src/state.c   **** 		can1.dataTx[5] = dataToSend[5];
 534:Src/state.c   **** 		can1.dataTx[6] = dataToSend[6];
 535:Src/state.c   **** 		can1.dataTx[7] = dataToSend[7];
 536:Src/state.c   **** 		can1.tx_size = 8;
 537:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 538:Src/state.c   **** 		sprintf(debug_tx,"\r\nSent %ld %d %d %d %d %d %d %d %d\r\n", idToSend, dataToSend[0], dataToSend[
 539:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 540:Src/state.c   **** 	}else if (strcmp(debug_rx, "sd status") == 0){
 841              		.loc 1 540 8 is_stmt 1 view .LVU234
 842              		.loc 1 540 12 is_stmt 0 view .LVU235
 843 0062 7A49     		ldr	r1, .L76+32
 844 0064 7248     		ldr	r0, .L76+4
 845 0066 FFF7FEFF 		bl	strcmp
ARM GAS  /tmp/ccTcsCTY.s 			page 31


 846              	.LVL23:
 847              		.loc 1 540 11 view .LVU236
 848 006a 0028     		cmp	r0, #0
 849 006c 40F03782 		bne	.L56
 541:Src/state.c   **** 		if(mount_ok == 1){
 850              		.loc 1 541 3 is_stmt 1 view .LVU237
 851              		.loc 1 541 15 is_stmt 0 view .LVU238
 852 0070 774B     		ldr	r3, .L76+36
 853 0072 1B68     		ldr	r3, [r3]
 854              		.loc 1 541 5 view .LVU239
 855 0074 012B     		cmp	r3, #1
 856 0076 00F01182 		beq	.L69
 542:Src/state.c   **** 			HAL_UART_Transmit(&huart3, (uint8_t *)"\r\nSd mounted ", strlen("\r\nSd mounted "), 100);
 543:Src/state.c   **** 			if(successfull_opening == 1){
 544:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 545:Src/state.c   **** 				HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 546:Src/state.c   **** 			}else{
 547:Src/state.c   **** 				HAL_UART_Transmit(&huart3, (uint8_t *)"Sd open FAILED\r\n", strlen("Sd open FAILED\r\n"), 100);
 548:Src/state.c   **** 			}
 549:Src/state.c   **** 		}else{
 550:Src/state.c   **** 			HAL_UART_Transmit(&huart3, (uint8_t *)"\r\nSd NOT mounted ", strlen("\r\nSd NOT mounted "), 100)
 857              		.loc 1 550 4 is_stmt 1 view .LVU240
 858 007a 6423     		movs	r3, #100
 859 007c 1122     		movs	r2, #17
 860 007e 7549     		ldr	r1, .L76+40
 861 0080 7548     		ldr	r0, .L76+44
 862 0082 FFF7FEFF 		bl	HAL_UART_Transmit
 863              	.LVL24:
 864 0086 0FE0     		b	.L43
 865              	.L62:
 429:Src/state.c   **** 				"\r\n***********ECU HELP***********\r\n"
 866              		.loc 1 429 3 view .LVU241
 867 0088 744C     		ldr	r4, .L76+48
 868 008a 40F27312 		movw	r2, #371
 869 008e 7449     		ldr	r1, .L76+52
 870 0090 2046     		mov	r0, r4
 871 0092 FFF7FEFF 		bl	memcpy
 872              	.LVL25:
 439:Src/state.c   **** 	}
 873              		.loc 1 439 3 view .LVU242
 439:Src/state.c   **** 	}
 874              		.loc 1 439 51 is_stmt 0 view .LVU243
 875 0096 2046     		mov	r0, r4
 876 0098 FFF7FEFF 		bl	strlen
 877              	.LVL26:
 439:Src/state.c   **** 	}
 878              		.loc 1 439 3 view .LVU244
 879 009c 6423     		movs	r3, #100
 880 009e 82B2     		uxth	r2, r0
 881 00a0 2146     		mov	r1, r4
 882 00a2 6D48     		ldr	r0, .L76+44
 883 00a4 FFF7FEFF 		bl	HAL_UART_Transmit
 884              	.LVL27:
 885              	.L43:
 551:Src/state.c   **** 		}
 552:Src/state.c   **** 	}
 553:Src/state.c   **** 	else if(strcmp(debug_rx, "sd file") == 0){
ARM GAS  /tmp/ccTcsCTY.s 			page 32


 554:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 555:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 1000);
 556:Src/state.c   **** 	}
 557:Src/state.c   **** 	else if (strcmp(debug_rx, "gay") == 0)
 558:Src/state.c   **** 	{
 559:Src/state.c   **** 		sprintf(debug_tx,
 560:Src/state.c   **** 				"\r\n"
 561:Src/state.c   **** 				"          $\r\n"
 562:Src/state.c   **** 				"        $   $\r\n"
 563:Src/state.c   **** 				"       $     $\r\n"
 564:Src/state.c   **** 				"       $$$$$$$\r\n"
 565:Src/state.c   **** 				"       $$$$$$$\r\n"
 566:Src/state.c   **** 				"       $$$$$$$\r\n"
 567:Src/state.c   **** 				"       $$$$$$$\r\n"
 568:Src/state.c   **** 				"  $$$$$$     $$$$$$\r\n"
 569:Src/state.c   **** 				" $$$$$$$$   $$$$$$$$\r\n"
 570:Src/state.c   **** 				"$$$$$$$$$$$$$$$$$$$$\r\n"
 571:Src/state.c   **** 				" $$$$$$$$   $$$$$$$$\r\n"
 572:Src/state.c   **** 				"  $$$$$$     $$$$$$\r\n");
 573:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 574:Src/state.c   **** 	}
 575:Src/state.c   **** 	else
 576:Src/state.c   **** 	{
 577:Src/state.c   **** 		sprintf(debug_tx, "\r\nERROR : msg %s doesn't exist\r\n", debug_rx);
 578:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 579:Src/state.c   **** 	}
 580:Src/state.c   **** }
 886              		.loc 1 580 1 view .LVU245
 887 00a8 0BB0     		add	sp, sp, #44
 888              	.LCFI6:
 889              		.cfi_remember_state
 890              		.cfi_def_cfa_offset 36
 891              		@ sp needed
 892 00aa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 893              	.L63:
 894              	.LCFI7:
 895              		.cfi_restore_state
 443:Src/state.c   **** 						  100);
 896              		.loc 1 443 3 is_stmt 1 view .LVU246
 443:Src/state.c   **** 						  100);
 897              		.loc 1 443 55 is_stmt 0 view .LVU247
 898 00ae 6D4C     		ldr	r4, .L76+56
 899 00b0 2046     		mov	r0, r4
 900 00b2 FFF7FEFF 		bl	strlen
 901              	.LVL28:
 443:Src/state.c   **** 						  100);
 902              		.loc 1 443 3 view .LVU248
 903 00b6 6423     		movs	r3, #100
 904 00b8 82B2     		uxth	r2, r0
 905 00ba 2146     		mov	r1, r4
 906 00bc 6648     		ldr	r0, .L76+44
 907 00be FFF7FEFF 		bl	HAL_UART_Transmit
 908              	.LVL29:
 909 00c2 F1E7     		b	.L43
 910              	.L64:
 448:Src/state.c   **** 				count_hour, count_min, count_sec, count_dec);
 911              		.loc 1 448 3 is_stmt 1 view .LVU249
ARM GAS  /tmp/ccTcsCTY.s 			page 33


 912 00c4 684B     		ldr	r3, .L76+60
 913 00c6 1A88     		ldrh	r2, [r3]
 914 00c8 684B     		ldr	r3, .L76+64
 915 00ca 1B88     		ldrh	r3, [r3]
 916 00cc 6849     		ldr	r1, .L76+68
 917 00ce 0988     		ldrh	r1, [r1]
 918 00d0 6848     		ldr	r0, .L76+72
 919 00d2 0088     		ldrh	r0, [r0]
 920 00d4 614C     		ldr	r4, .L76+48
 921 00d6 0190     		str	r0, [sp, #4]
 922 00d8 0091     		str	r1, [sp]
 923 00da 6749     		ldr	r1, .L76+76
 924 00dc 2046     		mov	r0, r4
 925 00de FFF7FEFF 		bl	sprintf
 926              	.LVL30:
 450:Src/state.c   **** 	}
 927              		.loc 1 450 3 view .LVU250
 450:Src/state.c   **** 	}
 928              		.loc 1 450 51 is_stmt 0 view .LVU251
 929 00e2 2046     		mov	r0, r4
 930 00e4 FFF7FEFF 		bl	strlen
 931              	.LVL31:
 450:Src/state.c   **** 	}
 932              		.loc 1 450 3 view .LVU252
 933 00e8 6423     		movs	r3, #100
 934 00ea 82B2     		uxth	r2, r0
 935 00ec 2146     		mov	r1, r4
 936 00ee 5A48     		ldr	r0, .L76+44
 937 00f0 FFF7FEFF 		bl	HAL_UART_Transmit
 938              	.LVL32:
 939 00f4 D8E7     		b	.L43
 940              	.L65:
 454:Src/state.c   **** 				"\r\n\ntype of status:\r\n"
 941              		.loc 1 454 3 is_stmt 1 view .LVU253
 464:Src/state.c   **** 				can1.canStart_status);
 942              		.loc 1 464 9 is_stmt 0 view .LVU254
 943 00f6 614A     		ldr	r2, .L76+80
 465:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 944              		.loc 1 465 9 view .LVU255
 945 00f8 92F86E30 		ldrb	r3, [r2, #110]	@ zero_extendqisi2
 454:Src/state.c   **** 				"\r\n\ntype of status:\r\n"
 946              		.loc 1 454 3 view .LVU256
 947 00fc 574C     		ldr	r4, .L76+48
 948 00fe 0093     		str	r3, [sp]
 949 0100 92F86D30 		ldrb	r3, [r2, #109]	@ zero_extendqisi2
 950 0104 92F86C20 		ldrb	r2, [r2, #108]	@ zero_extendqisi2
 951 0108 5D49     		ldr	r1, .L76+84
 952 010a 2046     		mov	r0, r4
 953 010c FFF7FEFF 		bl	sprintf
 954              	.LVL33:
 466:Src/state.c   **** 		sprintf(debug_tx,
 955              		.loc 1 466 3 is_stmt 1 view .LVU257
 466:Src/state.c   **** 		sprintf(debug_tx,
 956              		.loc 1 466 51 is_stmt 0 view .LVU258
 957 0110 2046     		mov	r0, r4
 958 0112 FFF7FEFF 		bl	strlen
 959              	.LVL34:
ARM GAS  /tmp/ccTcsCTY.s 			page 34


 466:Src/state.c   **** 		sprintf(debug_tx,
 960              		.loc 1 466 3 view .LVU259
 961 0116 504D     		ldr	r5, .L76+44
 962 0118 6423     		movs	r3, #100
 963 011a 82B2     		uxth	r2, r0
 964 011c 2146     		mov	r1, r4
 965 011e 2846     		mov	r0, r5
 966 0120 FFF7FEFF 		bl	HAL_UART_Transmit
 967              	.LVL35:
 467:Src/state.c   **** 				"CAN3 status:\r\n"
 968              		.loc 1 467 3 is_stmt 1 view .LVU260
 472:Src/state.c   **** 				can3.canStart_status);
 969              		.loc 1 472 9 is_stmt 0 view .LVU261
 970 0124 574A     		ldr	r2, .L76+88
 473:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 971              		.loc 1 473 9 view .LVU262
 972 0126 92F86E30 		ldrb	r3, [r2, #110]	@ zero_extendqisi2
 467:Src/state.c   **** 				"CAN3 status:\r\n"
 973              		.loc 1 467 3 view .LVU263
 974 012a 0093     		str	r3, [sp]
 975 012c 92F86D30 		ldrb	r3, [r2, #109]	@ zero_extendqisi2
 976 0130 92F86C20 		ldrb	r2, [r2, #108]	@ zero_extendqisi2
 977 0134 5449     		ldr	r1, .L76+92
 978 0136 2046     		mov	r0, r4
 979 0138 FFF7FEFF 		bl	sprintf
 980              	.LVL36:
 474:Src/state.c   **** 		if (current_state == STATE_INIT)
 981              		.loc 1 474 3 is_stmt 1 view .LVU264
 474:Src/state.c   **** 		if (current_state == STATE_INIT)
 982              		.loc 1 474 51 is_stmt 0 view .LVU265
 983 013c 2046     		mov	r0, r4
 984 013e FFF7FEFF 		bl	strlen
 985              	.LVL37:
 474:Src/state.c   **** 		if (current_state == STATE_INIT)
 986              		.loc 1 474 3 view .LVU266
 987 0142 6423     		movs	r3, #100
 988 0144 82B2     		uxth	r2, r0
 989 0146 2146     		mov	r1, r4
 990 0148 2846     		mov	r0, r5
 991 014a FFF7FEFF 		bl	HAL_UART_Transmit
 992              	.LVL38:
 475:Src/state.c   **** 		{
 993              		.loc 1 475 3 is_stmt 1 view .LVU267
 475:Src/state.c   **** 		{
 994              		.loc 1 475 21 is_stmt 0 view .LVU268
 995 014e 4F4B     		ldr	r3, .L76+96
 996 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 475:Src/state.c   **** 		{
 997              		.loc 1 475 6 view .LVU269
 998 0152 C3B1     		cbz	r3, .L70
 481:Src/state.c   **** 		{
 999              		.loc 1 481 8 is_stmt 1 view .LVU270
 481:Src/state.c   **** 		{
 1000              		.loc 1 481 11 is_stmt 0 view .LVU271
 1001 0154 012B     		cmp	r3, #1
 1002 0156 1DD0     		beq	.L71
 487:Src/state.c   **** 		{
ARM GAS  /tmp/ccTcsCTY.s 			page 35


 1003              		.loc 1 487 8 is_stmt 1 view .LVU272
 487:Src/state.c   **** 		{
 1004              		.loc 1 487 11 is_stmt 0 view .LVU273
 1005 0158 022B     		cmp	r3, #2
 1006 015a 22D0     		beq	.L72
 493:Src/state.c   **** 		{
 1007              		.loc 1 493 8 is_stmt 1 view .LVU274
 493:Src/state.c   **** 		{
 1008              		.loc 1 493 11 is_stmt 0 view .LVU275
 1009 015c 032B     		cmp	r3, #3
 1010 015e 27D0     		beq	.L73
 1011              	.L50:
 499:Src/state.c   **** 				"\r\n"
 1012              		.loc 1 499 3 is_stmt 1 view .LVU276
 1013 0160 3E4C     		ldr	r4, .L76+48
 1014 0162 4B4B     		ldr	r3, .L76+100
 1015 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1016 0166 4B4A     		ldr	r2, .L76+104
 1017 0168 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1018 016a 4B49     		ldr	r1, .L76+108
 1019 016c 2046     		mov	r0, r4
 1020 016e FFF7FEFF 		bl	sprintf
 1021              	.LVL39:
 505:Src/state.c   **** 	}else if(strcmp(debug_rx, "can sniffer") == 0){
 1022              		.loc 1 505 3 view .LVU277
 505:Src/state.c   **** 	}else if(strcmp(debug_rx, "can sniffer") == 0){
 1023              		.loc 1 505 51 is_stmt 0 view .LVU278
 1024 0172 2046     		mov	r0, r4
 1025 0174 FFF7FEFF 		bl	strlen
 1026              	.LVL40:
 505:Src/state.c   **** 	}else if(strcmp(debug_rx, "can sniffer") == 0){
 1027              		.loc 1 505 3 view .LVU279
 1028 0178 6423     		movs	r3, #100
 1029 017a 82B2     		uxth	r2, r0
 1030 017c 2146     		mov	r1, r4
 1031 017e 3648     		ldr	r0, .L76+44
 1032 0180 FFF7FEFF 		bl	HAL_UART_Transmit
 1033              	.LVL41:
 1034 0184 90E7     		b	.L43
 1035              	.L70:
 477:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_INIT\r\n",
 1036              		.loc 1 477 4 is_stmt 1 view .LVU280
 1037 0186 6423     		movs	r3, #100
 1038 0188 1D22     		movs	r2, #29
 1039 018a 4449     		ldr	r1, .L76+112
 1040 018c 2846     		mov	r0, r5
 1041 018e FFF7FEFF 		bl	HAL_UART_Transmit
 1042              	.LVL42:
 1043 0192 E5E7     		b	.L50
 1044              	.L71:
 483:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_IDLE\r\n",
 1045              		.loc 1 483 4 view .LVU281
 1046 0194 6423     		movs	r3, #100
 1047 0196 1D22     		movs	r2, #29
 1048 0198 4149     		ldr	r1, .L76+116
 1049 019a 2F48     		ldr	r0, .L76+44
 1050 019c FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccTcsCTY.s 			page 36


 1051              	.LVL43:
 1052 01a0 DEE7     		b	.L50
 1053              	.L72:
 489:Src/state.c   **** 				&huart3, (uint8_t *)"\r\nCurrent state: STATE_SETUP\r\n",
 1054              		.loc 1 489 4 view .LVU282
 1055 01a2 6423     		movs	r3, #100
 1056 01a4 1E22     		movs	r2, #30
 1057 01a6 3F49     		ldr	r1, .L76+120
 1058 01a8 2B48     		ldr	r0, .L76+44
 1059 01aa FFF7FEFF 		bl	HAL_UART_Transmit
 1060              	.LVL44:
 1061 01ae D7E7     		b	.L50
 1062              	.L73:
 495:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_RUN\r\n",
 1063              		.loc 1 495 4 view .LVU283
 1064 01b0 6423     		movs	r3, #100
 1065 01b2 1C22     		movs	r2, #28
 1066 01b4 3C49     		ldr	r1, .L76+124
 1067 01b6 2848     		ldr	r0, .L76+44
 1068 01b8 FFF7FEFF 		bl	HAL_UART_Transmit
 1069              	.LVL45:
 1070 01bc D0E7     		b	.L50
 1071              	.L66:
 507:Src/state.c   **** 		sprintf(debug_tx,"\r\nEnter in can sniffer mode\r\n");
 1072              		.loc 1 507 3 view .LVU284
 507:Src/state.c   **** 		sprintf(debug_tx,"\r\nEnter in can sniffer mode\r\n");
 1073              		.loc 1 507 18 is_stmt 0 view .LVU285
 1074 01be 3B4B     		ldr	r3, .L76+128
 1075 01c0 0122     		movs	r2, #1
 1076 01c2 1A70     		strb	r2, [r3]
 508:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 1077              		.loc 1 508 3 is_stmt 1 view .LVU286
 1078 01c4 254D     		ldr	r5, .L76+48
 1079 01c6 3A4C     		ldr	r4, .L76+132
 1080 01c8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1081 01ca 2860     		str	r0, [r5]	@ unaligned
 1082 01cc 6960     		str	r1, [r5, #4]	@ unaligned
 1083 01ce AA60     		str	r2, [r5, #8]	@ unaligned
 1084 01d0 EB60     		str	r3, [r5, #12]	@ unaligned
 1085 01d2 07CC     		ldmia	r4!, {r0, r1, r2}
 1086 01d4 2861     		str	r0, [r5, #16]	@ unaligned
 1087 01d6 6961     		str	r1, [r5, #20]	@ unaligned
 1088 01d8 AA61     		str	r2, [r5, #24]	@ unaligned
 1089 01da 2388     		ldrh	r3, [r4]	@ unaligned
 1090 01dc AB83     		strh	r3, [r5, #28]	@ unaligned
 509:Src/state.c   **** 	}else if(strcmp(debug_rx, "q") == 0){
 1091              		.loc 1 509 3 view .LVU287
 509:Src/state.c   **** 	}else if(strcmp(debug_rx, "q") == 0){
 1092              		.loc 1 509 51 is_stmt 0 view .LVU288
 1093 01de 2846     		mov	r0, r5
 1094 01e0 FFF7FEFF 		bl	strlen
 1095              	.LVL46:
 509:Src/state.c   **** 	}else if(strcmp(debug_rx, "q") == 0){
 1096              		.loc 1 509 3 view .LVU289
 1097 01e4 6423     		movs	r3, #100
 1098 01e6 82B2     		uxth	r2, r0
 1099 01e8 2946     		mov	r1, r5
ARM GAS  /tmp/ccTcsCTY.s 			page 37


 1100 01ea 1B48     		ldr	r0, .L76+44
 1101 01ec FFF7FEFF 		bl	HAL_UART_Transmit
 1102              	.LVL47:
 1103 01f0 5AE7     		b	.L43
 1104              	.L67:
 511:Src/state.c   **** 		sprintf(debug_tx,"\r\nExit from can sniffer mode\r\n");
 1105              		.loc 1 511 3 is_stmt 1 view .LVU290
 511:Src/state.c   **** 		sprintf(debug_tx,"\r\nExit from can sniffer mode\r\n");
 1106              		.loc 1 511 18 is_stmt 0 view .LVU291
 1107 01f2 2E4B     		ldr	r3, .L76+128
 1108 01f4 0022     		movs	r2, #0
 1109 01f6 1A70     		strb	r2, [r3]
 512:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 1110              		.loc 1 512 3 is_stmt 1 view .LVU292
 1111 01f8 184D     		ldr	r5, .L76+48
 1112 01fa 2E4C     		ldr	r4, .L76+136
 1113 01fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1114 01fe 2860     		str	r0, [r5]	@ unaligned
 1115 0200 6960     		str	r1, [r5, #4]	@ unaligned
 1116 0202 AA60     		str	r2, [r5, #8]	@ unaligned
 1117 0204 EB60     		str	r3, [r5, #12]	@ unaligned
 1118 0206 07CC     		ldmia	r4!, {r0, r1, r2}
 1119 0208 2861     		str	r0, [r5, #16]	@ unaligned
 1120 020a 6961     		str	r1, [r5, #20]	@ unaligned
 1121 020c AA61     		str	r2, [r5, #24]	@ unaligned
 1122 020e 2288     		ldrh	r2, [r4]	@ unaligned
 1123 0210 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1124 0212 AA83     		strh	r2, [r5, #28]	@ unaligned
 1125 0214 AB77     		strb	r3, [r5, #30]
 513:Src/state.c   **** 	}else if(strncmp(debug_rx, "send",4) == 0){
 1126              		.loc 1 513 3 view .LVU293
 513:Src/state.c   **** 	}else if(strncmp(debug_rx, "send",4) == 0){
 1127              		.loc 1 513 51 is_stmt 0 view .LVU294
 1128 0216 2846     		mov	r0, r5
 1129 0218 FFF7FEFF 		bl	strlen
 1130              	.LVL48:
 513:Src/state.c   **** 	}else if(strncmp(debug_rx, "send",4) == 0){
 1131              		.loc 1 513 3 view .LVU295
 1132 021c 6423     		movs	r3, #100
 1133 021e 82B2     		uxth	r2, r0
 1134 0220 2946     		mov	r1, r5
 1135 0222 0D48     		ldr	r0, .L76+44
 1136 0224 FFF7FEFF 		bl	HAL_UART_Transmit
 1137              	.LVL49:
 1138 0228 3EE7     		b	.L43
 1139              	.L77:
 1140 022a 00BF     		.align	2
 1141              	.L76:
 1142 022c 00000000 		.word	.LC0
 1143 0230 00000000 		.word	debug_rx
 1144 0234 7C010000 		.word	.LC2
 1145 0238 84010000 		.word	.LC3
 1146 023c BC010000 		.word	.LC5
 1147 0240 A0030000 		.word	.LC13
 1148 0244 CC030000 		.word	.LC15
 1149 0248 F0030000 		.word	.LC17
 1150 024c 20040000 		.word	.LC19
ARM GAS  /tmp/ccTcsCTY.s 			page 38


 1151 0250 00000000 		.word	mount_ok
 1152 0254 80040000 		.word	.LC23
 1153 0258 00000000 		.word	huart3
 1154 025c 00000000 		.word	debug_tx
 1155 0260 08000000 		.word	.LC1
 1156 0264 00000000 		.word	code_version
 1157 0268 00000000 		.word	count_hour
 1158 026c 00000000 		.word	count_min
 1159 0270 00000000 		.word	count_sec
 1160 0274 00000000 		.word	count_dec
 1161 0278 8C010000 		.word	.LC4
 1162 027c 00000000 		.word	can1
 1163 0280 C4010000 		.word	.LC6
 1164 0284 00000000 		.word	can3
 1165 0288 6C020000 		.word	.LC7
 1166 028c 00000000 		.word	current_state
 1167 0290 00000000 		.word	its_connected
 1168 0294 00000000 		.word	imu_connected
 1169 0298 4C030000 		.word	.LC12
 1170 029c CC020000 		.word	.LC8
 1171 02a0 EC020000 		.word	.LC9
 1172 02a4 0C030000 		.word	.LC10
 1173 02a8 2C030000 		.word	.LC11
 1174 02ac 00000000 		.word	canSnifferMode
 1175 02b0 AC030000 		.word	.LC14
 1176 02b4 D0030000 		.word	.LC16
 1177              	.L68:
 1178              	.LBB2:
 515:Src/state.c   **** 		uint32_t idToSend;
 1179              		.loc 1 515 3 is_stmt 1 view .LVU296
 515:Src/state.c   **** 		uint32_t idToSend;
 1180              		.loc 1 515 25 view .LVU297
 516:Src/state.c   **** 		uint8_t offset = (uint8_t)'0';
 1181              		.loc 1 516 3 view .LVU298
 517:Src/state.c   **** 		idToSend = ((uint8_t)debug_rx[5]-offset)*1000 + ((uint8_t)debug_rx[6]-offset)*100 + ((uint8_t)deb
 1182              		.loc 1 517 3 view .LVU299
 1183              	.LVL50:
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1184              		.loc 1 518 3 view .LVU300
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1185              		.loc 1 518 32 is_stmt 0 view .LVU301
 1186 02b8 A64B     		ldr	r3, .L78
 1187 02ba 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1188              		.loc 1 518 35 view .LVU302
 1189 02bc 303A     		subs	r2, r2, #48
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1190              		.loc 1 518 69 view .LVU303
 1191 02be 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1192              		.loc 1 518 72 view .LVU304
 1193 02c0 3039     		subs	r1, r1, #48
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1194              		.loc 1 518 80 view .LVU305
 1195 02c2 6420     		movs	r0, #100
 1196 02c4 00FB01F1 		mul	r1, r0, r1
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
ARM GAS  /tmp/ccTcsCTY.s 			page 39


 1197              		.loc 1 518 49 view .LVU306
 1198 02c8 4FF47A70 		mov	r0, #1000
 1199 02cc 00FB0212 		mla	r2, r0, r2, r1
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1200              		.loc 1 518 105 view .LVU307
 1201 02d0 D979     		ldrb	r1, [r3, #7]	@ zero_extendqisi2
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1202              		.loc 1 518 108 view .LVU308
 1203 02d2 3039     		subs	r1, r1, #48
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1204              		.loc 1 518 116 view .LVU309
 1205 02d4 01EB8101 		add	r1, r1, r1, lsl #2
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1206              		.loc 1 518 85 view .LVU310
 1207 02d8 02EB4102 		add	r2, r2, r1, lsl #1
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1208              		.loc 1 518 140 view .LVU311
 1209 02dc 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1210              		.loc 1 518 143 view .LVU312
 1211 02de 3039     		subs	r1, r1, #48
 518:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1212              		.loc 1 518 120 view .LVU313
 1213 02e0 0A44     		add	r2, r2, r1
 1214 02e2 0992     		str	r2, [sp, #36]
 1215              	.LVL51:
 519:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 1216              		.loc 1 519 3 is_stmt 1 view .LVU314
 519:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 1217              		.loc 1 519 37 is_stmt 0 view .LVU315
 1218 02e4 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 1219              	.LVL52:
 519:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 1220              		.loc 1 519 74 view .LVU316
 1221 02e6 D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 519:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 1222              		.loc 1 519 54 view .LVU317
 1223 02e8 303A     		subs	r2, r2, #48
 1224 02ea 02EB8202 		add	r2, r2, r2, lsl #2
 1225 02ee 02EB8200 		add	r0, r2, r2, lsl #2
 1226 02f2 A1F13002 		sub	r2, r1, #48
 1227 02f6 02EB8202 		add	r2, r2, r2, lsl #2
 1228 02fa 5200     		lsls	r2, r2, #1
 1229 02fc 02EB8002 		add	r2, r2, r0, lsl #2
 1230 0300 D2B2     		uxtb	r2, r2
 519:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 1231              		.loc 1 519 110 view .LVU318
 1232 0302 197B     		ldrb	r1, [r3, #12]	@ zero_extendqisi2
 519:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 1233              		.loc 1 519 114 view .LVU319
 1234 0304 3039     		subs	r1, r1, #48
 519:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 1235              		.loc 1 519 90 view .LVU320
 1236 0306 52FA81F2 		uxtab	r2, r2, r1
 1237 030a 5FFA82FB 		uxtb	fp, r2
 520:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1238              		.loc 1 520 3 is_stmt 1 view .LVU321
ARM GAS  /tmp/ccTcsCTY.s 			page 40


 520:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1239              		.loc 1 520 37 is_stmt 0 view .LVU322
 1240 030e 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 520:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1241              		.loc 1 520 74 view .LVU323
 1242 0310 D97B     		ldrb	r1, [r3, #15]	@ zero_extendqisi2
 520:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1243              		.loc 1 520 54 view .LVU324
 1244 0312 303A     		subs	r2, r2, #48
 1245 0314 02EB8202 		add	r2, r2, r2, lsl #2
 1246 0318 02EB8200 		add	r0, r2, r2, lsl #2
 1247 031c A1F13002 		sub	r2, r1, #48
 1248 0320 02EB8202 		add	r2, r2, r2, lsl #2
 1249 0324 5200     		lsls	r2, r2, #1
 1250 0326 02EB8002 		add	r2, r2, r0, lsl #2
 1251 032a D2B2     		uxtb	r2, r2
 520:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1252              		.loc 1 520 110 view .LVU325
 1253 032c 1C7C     		ldrb	r4, [r3, #16]	@ zero_extendqisi2
 520:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1254              		.loc 1 520 114 view .LVU326
 1255 032e 303C     		subs	r4, r4, #48
 520:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1256              		.loc 1 520 90 view .LVU327
 1257 0330 52FA84F4 		uxtab	r4, r2, r4
 1258 0334 E4B2     		uxtb	r4, r4
 521:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 1259              		.loc 1 521 3 is_stmt 1 view .LVU328
 521:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 1260              		.loc 1 521 37 is_stmt 0 view .LVU329
 1261 0336 9A7C     		ldrb	r2, [r3, #18]	@ zero_extendqisi2
 521:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 1262              		.loc 1 521 74 view .LVU330
 1263 0338 D97C     		ldrb	r1, [r3, #19]	@ zero_extendqisi2
 521:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 1264              		.loc 1 521 54 view .LVU331
 1265 033a 303A     		subs	r2, r2, #48
 1266 033c 02EB8202 		add	r2, r2, r2, lsl #2
 1267 0340 02EB8200 		add	r0, r2, r2, lsl #2
 1268 0344 A1F13002 		sub	r2, r1, #48
 1269 0348 02EB8202 		add	r2, r2, r2, lsl #2
 1270 034c 5200     		lsls	r2, r2, #1
 1271 034e 02EB8002 		add	r2, r2, r0, lsl #2
 1272 0352 D2B2     		uxtb	r2, r2
 521:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 1273              		.loc 1 521 110 view .LVU332
 1274 0354 1D7D     		ldrb	r5, [r3, #20]	@ zero_extendqisi2
 521:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 1275              		.loc 1 521 114 view .LVU333
 1276 0356 303D     		subs	r5, r5, #48
 521:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 1277              		.loc 1 521 90 view .LVU334
 1278 0358 52FA85F5 		uxtab	r5, r2, r5
 1279 035c EDB2     		uxtb	r5, r5
 522:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 1280              		.loc 1 522 3 is_stmt 1 view .LVU335
 522:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
ARM GAS  /tmp/ccTcsCTY.s 			page 41


 1281              		.loc 1 522 37 is_stmt 0 view .LVU336
 1282 035e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 522:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 1283              		.loc 1 522 74 view .LVU337
 1284 0360 D97D     		ldrb	r1, [r3, #23]	@ zero_extendqisi2
 522:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 1285              		.loc 1 522 54 view .LVU338
 1286 0362 303A     		subs	r2, r2, #48
 1287 0364 02EB8202 		add	r2, r2, r2, lsl #2
 1288 0368 02EB8200 		add	r0, r2, r2, lsl #2
 1289 036c A1F13002 		sub	r2, r1, #48
 1290 0370 02EB8202 		add	r2, r2, r2, lsl #2
 1291 0374 5200     		lsls	r2, r2, #1
 1292 0376 02EB8002 		add	r2, r2, r0, lsl #2
 1293 037a D2B2     		uxtb	r2, r2
 522:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 1294              		.loc 1 522 110 view .LVU339
 1295 037c 1E7E     		ldrb	r6, [r3, #24]	@ zero_extendqisi2
 522:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 1296              		.loc 1 522 114 view .LVU340
 1297 037e 303E     		subs	r6, r6, #48
 522:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 1298              		.loc 1 522 90 view .LVU341
 1299 0380 52FA86F6 		uxtab	r6, r2, r6
 1300 0384 F6B2     		uxtb	r6, r6
 523:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1301              		.loc 1 523 3 is_stmt 1 view .LVU342
 523:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1302              		.loc 1 523 37 is_stmt 0 view .LVU343
 1303 0386 9A7E     		ldrb	r2, [r3, #26]	@ zero_extendqisi2
 523:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1304              		.loc 1 523 74 view .LVU344
 1305 0388 D97E     		ldrb	r1, [r3, #27]	@ zero_extendqisi2
 523:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1306              		.loc 1 523 54 view .LVU345
 1307 038a 303A     		subs	r2, r2, #48
 1308 038c 02EB8202 		add	r2, r2, r2, lsl #2
 1309 0390 02EB8200 		add	r0, r2, r2, lsl #2
 1310 0394 A1F13002 		sub	r2, r1, #48
 1311 0398 02EB8202 		add	r2, r2, r2, lsl #2
 1312 039c 5200     		lsls	r2, r2, #1
 1313 039e 02EB8002 		add	r2, r2, r0, lsl #2
 1314 03a2 D2B2     		uxtb	r2, r2
 523:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1315              		.loc 1 523 110 view .LVU346
 1316 03a4 1F7F     		ldrb	r7, [r3, #28]	@ zero_extendqisi2
 523:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1317              		.loc 1 523 114 view .LVU347
 1318 03a6 303F     		subs	r7, r7, #48
 523:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1319              		.loc 1 523 90 view .LVU348
 1320 03a8 52FA87F7 		uxtab	r7, r2, r7
 1321 03ac FFB2     		uxtb	r7, r7
 524:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1322              		.loc 1 524 3 is_stmt 1 view .LVU349
 524:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1323              		.loc 1 524 37 is_stmt 0 view .LVU350
ARM GAS  /tmp/ccTcsCTY.s 			page 42


 1324 03ae 9A7F     		ldrb	r2, [r3, #30]	@ zero_extendqisi2
 524:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1325              		.loc 1 524 74 view .LVU351
 1326 03b0 D97F     		ldrb	r1, [r3, #31]	@ zero_extendqisi2
 524:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1327              		.loc 1 524 54 view .LVU352
 1328 03b2 303A     		subs	r2, r2, #48
 1329 03b4 02EB8202 		add	r2, r2, r2, lsl #2
 1330 03b8 02EB8200 		add	r0, r2, r2, lsl #2
 1331 03bc A1F13002 		sub	r2, r1, #48
 1332 03c0 02EB8202 		add	r2, r2, r2, lsl #2
 1333 03c4 5200     		lsls	r2, r2, #1
 1334 03c6 02EB8002 		add	r2, r2, r0, lsl #2
 1335 03ca D2B2     		uxtb	r2, r2
 524:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1336              		.loc 1 524 110 view .LVU353
 1337 03cc 93F82080 		ldrb	r8, [r3, #32]	@ zero_extendqisi2
 524:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1338              		.loc 1 524 114 view .LVU354
 1339 03d0 A8F13008 		sub	r8, r8, #48
 524:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1340              		.loc 1 524 90 view .LVU355
 1341 03d4 52FA88F8 		uxtab	r8, r2, r8
 1342 03d8 5FFA88F8 		uxtb	r8, r8
 525:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 1343              		.loc 1 525 3 is_stmt 1 view .LVU356
 525:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 1344              		.loc 1 525 37 is_stmt 0 view .LVU357
 1345 03dc 93F82220 		ldrb	r2, [r3, #34]	@ zero_extendqisi2
 525:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 1346              		.loc 1 525 74 view .LVU358
 1347 03e0 93F82310 		ldrb	r1, [r3, #35]	@ zero_extendqisi2
 525:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 1348              		.loc 1 525 54 view .LVU359
 1349 03e4 303A     		subs	r2, r2, #48
 1350 03e6 02EB8202 		add	r2, r2, r2, lsl #2
 1351 03ea 02EB8200 		add	r0, r2, r2, lsl #2
 1352 03ee A1F13002 		sub	r2, r1, #48
 1353 03f2 02EB8202 		add	r2, r2, r2, lsl #2
 1354 03f6 5200     		lsls	r2, r2, #1
 1355 03f8 02EB8002 		add	r2, r2, r0, lsl #2
 1356 03fc D2B2     		uxtb	r2, r2
 525:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 1357              		.loc 1 525 110 view .LVU360
 1358 03fe 93F82490 		ldrb	r9, [r3, #36]	@ zero_extendqisi2
 525:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 1359              		.loc 1 525 114 view .LVU361
 1360 0402 A9F13009 		sub	r9, r9, #48
 525:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 1361              		.loc 1 525 90 view .LVU362
 1362 0406 52FA89F9 		uxtab	r9, r2, r9
 1363 040a 5FFA89F9 		uxtb	r9, r9
 526:Src/state.c   **** 		can1.tx_id = idToSend;
 1364              		.loc 1 526 3 is_stmt 1 view .LVU363
 526:Src/state.c   **** 		can1.tx_id = idToSend;
 1365              		.loc 1 526 37 is_stmt 0 view .LVU364
 1366 040e 93F82620 		ldrb	r2, [r3, #38]	@ zero_extendqisi2
ARM GAS  /tmp/ccTcsCTY.s 			page 43


 526:Src/state.c   **** 		can1.tx_id = idToSend;
 1367              		.loc 1 526 74 view .LVU365
 1368 0412 93F82710 		ldrb	r1, [r3, #39]	@ zero_extendqisi2
 526:Src/state.c   **** 		can1.tx_id = idToSend;
 1369              		.loc 1 526 54 view .LVU366
 1370 0416 303A     		subs	r2, r2, #48
 1371 0418 02EB8202 		add	r2, r2, r2, lsl #2
 1372 041c 02EB8200 		add	r0, r2, r2, lsl #2
 1373 0420 A1F13002 		sub	r2, r1, #48
 1374 0424 02EB8202 		add	r2, r2, r2, lsl #2
 1375 0428 5200     		lsls	r2, r2, #1
 1376 042a 02EB8002 		add	r2, r2, r0, lsl #2
 1377 042e D2B2     		uxtb	r2, r2
 526:Src/state.c   **** 		can1.tx_id = idToSend;
 1378              		.loc 1 526 110 view .LVU367
 1379 0430 93F828A0 		ldrb	r10, [r3, #40]	@ zero_extendqisi2
 526:Src/state.c   **** 		can1.tx_id = idToSend;
 1380              		.loc 1 526 114 view .LVU368
 1381 0434 AAF1300A 		sub	r10, r10, #48
 526:Src/state.c   **** 		can1.tx_id = idToSend;
 1382              		.loc 1 526 90 view .LVU369
 1383 0438 52FA8AFA 		uxtab	r10, r2, r10
 1384 043c 5FFA8AFA 		uxtb	r10, r10
 527:Src/state.c   **** 		can1.dataTx[0] = dataToSend[0];
 1385              		.loc 1 527 3 is_stmt 1 view .LVU370
 527:Src/state.c   **** 		can1.dataTx[0] = dataToSend[0];
 1386              		.loc 1 527 14 is_stmt 0 view .LVU371
 1387 0440 4548     		ldr	r0, .L78+4
 1388 0442 099A     		ldr	r2, [sp, #36]
 1389 0444 C262     		str	r2, [r0, #44]
 528:Src/state.c   **** 		can1.dataTx[1] = dataToSend[1];
 1390              		.loc 1 528 3 is_stmt 1 view .LVU372
 528:Src/state.c   **** 		can1.dataTx[1] = dataToSend[1];
 1391              		.loc 1 528 18 is_stmt 0 view .LVU373
 1392 0446 80F80CB0 		strb	fp, [r0, #12]
 529:Src/state.c   **** 		can1.dataTx[2] = dataToSend[2];
 1393              		.loc 1 529 3 is_stmt 1 view .LVU374
 529:Src/state.c   **** 		can1.dataTx[2] = dataToSend[2];
 1394              		.loc 1 529 18 is_stmt 0 view .LVU375
 1395 044a 4473     		strb	r4, [r0, #13]
 530:Src/state.c   **** 		can1.dataTx[3] = dataToSend[3];
 1396              		.loc 1 530 3 is_stmt 1 view .LVU376
 530:Src/state.c   **** 		can1.dataTx[3] = dataToSend[3];
 1397              		.loc 1 530 18 is_stmt 0 view .LVU377
 1398 044c 8573     		strb	r5, [r0, #14]
 531:Src/state.c   **** 		can1.dataTx[4] = dataToSend[4];
 1399              		.loc 1 531 3 is_stmt 1 view .LVU378
 531:Src/state.c   **** 		can1.dataTx[4] = dataToSend[4];
 1400              		.loc 1 531 18 is_stmt 0 view .LVU379
 1401 044e C673     		strb	r6, [r0, #15]
 532:Src/state.c   **** 		can1.dataTx[5] = dataToSend[5];
 1402              		.loc 1 532 3 is_stmt 1 view .LVU380
 532:Src/state.c   **** 		can1.dataTx[5] = dataToSend[5];
 1403              		.loc 1 532 18 is_stmt 0 view .LVU381
 1404 0450 0774     		strb	r7, [r0, #16]
 533:Src/state.c   **** 		can1.dataTx[6] = dataToSend[6];
 1405              		.loc 1 533 3 is_stmt 1 view .LVU382
ARM GAS  /tmp/ccTcsCTY.s 			page 44


 533:Src/state.c   **** 		can1.dataTx[6] = dataToSend[6];
 1406              		.loc 1 533 18 is_stmt 0 view .LVU383
 1407 0452 80F81180 		strb	r8, [r0, #17]
 534:Src/state.c   **** 		can1.dataTx[7] = dataToSend[7];
 1408              		.loc 1 534 3 is_stmt 1 view .LVU384
 534:Src/state.c   **** 		can1.dataTx[7] = dataToSend[7];
 1409              		.loc 1 534 18 is_stmt 0 view .LVU385
 1410 0456 80F81290 		strb	r9, [r0, #18]
 535:Src/state.c   **** 		can1.tx_size = 8;
 1411              		.loc 1 535 3 is_stmt 1 view .LVU386
 535:Src/state.c   **** 		can1.tx_size = 8;
 1412              		.loc 1 535 18 is_stmt 0 view .LVU387
 1413 045a 80F813A0 		strb	r10, [r0, #19]
 536:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 1414              		.loc 1 536 3 is_stmt 1 view .LVU388
 536:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 1415              		.loc 1 536 16 is_stmt 0 view .LVU389
 1416 045e 0823     		movs	r3, #8
 1417 0460 0360     		str	r3, [r0]
 537:Src/state.c   **** 		sprintf(debug_tx,"\r\nSent %ld %d %d %d %d %d %d %d %d\r\n", idToSend, dataToSend[0], dataToSend[
 1418              		.loc 1 537 3 is_stmt 1 view .LVU390
 1419 0462 0021     		movs	r1, #0
 1420 0464 FFF7FEFF 		bl	CAN_Send
 1421              	.LVL53:
 538:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 1422              		.loc 1 538 3 view .LVU391
 1423 0468 CDF818A0 		str	r10, [sp, #24]
 1424 046c CDF81490 		str	r9, [sp, #20]
 1425 0470 CDF81080 		str	r8, [sp, #16]
 1426 0474 0397     		str	r7, [sp, #12]
 1427 0476 0296     		str	r6, [sp, #8]
 1428 0478 0195     		str	r5, [sp, #4]
 1429 047a 0094     		str	r4, [sp]
 1430 047c 5B46     		mov	r3, fp
 1431 047e 099A     		ldr	r2, [sp, #36]
 1432 0480 3649     		ldr	r1, .L78+8
 1433 0482 3748     		ldr	r0, .L78+12
 1434 0484 FFF7FEFF 		bl	sprintf
 1435              	.LVL54:
 539:Src/state.c   **** 	}else if (strcmp(debug_rx, "sd status") == 0){
 1436              		.loc 1 539 3 view .LVU392
 539:Src/state.c   **** 	}else if (strcmp(debug_rx, "sd status") == 0){
 1437              		.loc 1 539 51 is_stmt 0 view .LVU393
 1438 0488 3548     		ldr	r0, .L78+12
 1439 048a FFF7FEFF 		bl	strlen
 1440              	.LVL55:
 539:Src/state.c   **** 	}else if (strcmp(debug_rx, "sd status") == 0){
 1441              		.loc 1 539 3 view .LVU394
 1442 048e 6423     		movs	r3, #100
 1443 0490 82B2     		uxth	r2, r0
 1444 0492 3349     		ldr	r1, .L78+12
 1445 0494 3348     		ldr	r0, .L78+16
 1446 0496 FFF7FEFF 		bl	HAL_UART_Transmit
 1447              	.LVL56:
 1448              	.LBE2:
 1449 049a 05E6     		b	.L43
 1450              	.LVL57:
ARM GAS  /tmp/ccTcsCTY.s 			page 45


 1451              	.L69:
 542:Src/state.c   **** 			if(successfull_opening == 1){
 1452              		.loc 1 542 4 is_stmt 1 view .LVU395
 1453 049c 6423     		movs	r3, #100
 1454 049e 0D22     		movs	r2, #13
 1455 04a0 3149     		ldr	r1, .L78+20
 1456 04a2 3048     		ldr	r0, .L78+16
 1457 04a4 FFF7FEFF 		bl	HAL_UART_Transmit
 1458              	.LVL58:
 543:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 1459              		.loc 1 543 4 view .LVU396
 543:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 1460              		.loc 1 543 27 is_stmt 0 view .LVU397
 1461 04a8 304B     		ldr	r3, .L78+24
 1462 04aa 1B68     		ldr	r3, [r3]
 543:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 1463              		.loc 1 543 6 view .LVU398
 1464 04ac 012B     		cmp	r3, #1
 1465 04ae 06D0     		beq	.L74
 547:Src/state.c   **** 			}
 1466              		.loc 1 547 5 is_stmt 1 view .LVU399
 1467 04b0 6423     		movs	r3, #100
 1468 04b2 1022     		movs	r2, #16
 1469 04b4 2E49     		ldr	r1, .L78+28
 1470 04b6 2B48     		ldr	r0, .L78+16
 1471 04b8 FFF7FEFF 		bl	HAL_UART_Transmit
 1472              	.LVL59:
 1473 04bc F4E5     		b	.L43
 1474              	.L74:
 544:Src/state.c   **** 				HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 1475              		.loc 1 544 5 view .LVU400
 1476 04be 284C     		ldr	r4, .L78+12
 1477 04c0 2C4A     		ldr	r2, .L78+32
 1478 04c2 2D49     		ldr	r1, .L78+36
 1479 04c4 2046     		mov	r0, r4
 1480 04c6 FFF7FEFF 		bl	sprintf
 1481              	.LVL60:
 545:Src/state.c   **** 			}else{
 1482              		.loc 1 545 5 view .LVU401
 545:Src/state.c   **** 			}else{
 1483              		.loc 1 545 53 is_stmt 0 view .LVU402
 1484 04ca 2046     		mov	r0, r4
 1485 04cc FFF7FEFF 		bl	strlen
 1486              	.LVL61:
 545:Src/state.c   **** 			}else{
 1487              		.loc 1 545 5 view .LVU403
 1488 04d0 6423     		movs	r3, #100
 1489 04d2 82B2     		uxth	r2, r0
 1490 04d4 2146     		mov	r1, r4
 1491 04d6 2348     		ldr	r0, .L78+16
 1492 04d8 FFF7FEFF 		bl	HAL_UART_Transmit
 1493              	.LVL62:
 1494 04dc E4E5     		b	.L43
 1495              	.L56:
 553:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 1496              		.loc 1 553 7 is_stmt 1 view .LVU404
 553:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
ARM GAS  /tmp/ccTcsCTY.s 			page 46


 1497              		.loc 1 553 10 is_stmt 0 view .LVU405
 1498 04de 2749     		ldr	r1, .L78+40
 1499 04e0 1C48     		ldr	r0, .L78
 1500 04e2 FFF7FEFF 		bl	strcmp
 1501              	.LVL63:
 553:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 1502              		.loc 1 553 9 view .LVU406
 1503 04e6 A0B1     		cbz	r0, .L75
 557:Src/state.c   **** 	{
 1504              		.loc 1 557 7 is_stmt 1 view .LVU407
 557:Src/state.c   **** 	{
 1505              		.loc 1 557 11 is_stmt 0 view .LVU408
 1506 04e8 2549     		ldr	r1, .L78+44
 1507 04ea 1A48     		ldr	r0, .L78
 1508 04ec FFF7FEFF 		bl	strcmp
 1509              	.LVL64:
 557:Src/state.c   **** 	{
 1510              		.loc 1 557 10 view .LVU409
 1511 04f0 00BB     		cbnz	r0, .L60
 559:Src/state.c   **** 				"\r\n"
 1512              		.loc 1 559 3 is_stmt 1 view .LVU410
 1513 04f2 1B4C     		ldr	r4, .L78+12
 1514 04f4 DB22     		movs	r2, #219
 1515 04f6 2349     		ldr	r1, .L78+48
 1516 04f8 2046     		mov	r0, r4
 1517 04fa FFF7FEFF 		bl	memcpy
 1518              	.LVL65:
 573:Src/state.c   **** 	}
 1519              		.loc 1 573 3 view .LVU411
 573:Src/state.c   **** 	}
 1520              		.loc 1 573 51 is_stmt 0 view .LVU412
 1521 04fe 2046     		mov	r0, r4
 1522 0500 FFF7FEFF 		bl	strlen
 1523              	.LVL66:
 573:Src/state.c   **** 	}
 1524              		.loc 1 573 3 view .LVU413
 1525 0504 6423     		movs	r3, #100
 1526 0506 82B2     		uxth	r2, r0
 1527 0508 2146     		mov	r1, r4
 1528 050a 1648     		ldr	r0, .L78+16
 1529 050c FFF7FEFF 		bl	HAL_UART_Transmit
 1530              	.LVL67:
 1531 0510 CAE5     		b	.L43
 1532              	.L75:
 554:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 1000);
 1533              		.loc 1 554 3 is_stmt 1 view .LVU414
 1534 0512 134C     		ldr	r4, .L78+12
 1535 0514 1C4A     		ldr	r2, .L78+52
 1536 0516 1D49     		ldr	r1, .L78+56
 1537 0518 2046     		mov	r0, r4
 1538 051a FFF7FEFF 		bl	sprintf
 1539              	.LVL68:
 555:Src/state.c   **** 	}
 1540              		.loc 1 555 3 view .LVU415
 555:Src/state.c   **** 	}
 1541              		.loc 1 555 51 is_stmt 0 view .LVU416
 1542 051e 2046     		mov	r0, r4
ARM GAS  /tmp/ccTcsCTY.s 			page 47


 1543 0520 FFF7FEFF 		bl	strlen
 1544              	.LVL69:
 555:Src/state.c   **** 	}
 1545              		.loc 1 555 3 view .LVU417
 1546 0524 4FF47A73 		mov	r3, #1000
 1547 0528 82B2     		uxth	r2, r0
 1548 052a 2146     		mov	r1, r4
 1549 052c 0D48     		ldr	r0, .L78+16
 1550 052e FFF7FEFF 		bl	HAL_UART_Transmit
 1551              	.LVL70:
 1552 0532 B9E5     		b	.L43
 1553              	.L60:
 577:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 1554              		.loc 1 577 3 is_stmt 1 view .LVU418
 1555 0534 0A4C     		ldr	r4, .L78+12
 1556 0536 074A     		ldr	r2, .L78
 1557 0538 1549     		ldr	r1, .L78+60
 1558 053a 2046     		mov	r0, r4
 1559 053c FFF7FEFF 		bl	sprintf
 1560              	.LVL71:
 578:Src/state.c   **** 	}
 1561              		.loc 1 578 3 view .LVU419
 578:Src/state.c   **** 	}
 1562              		.loc 1 578 51 is_stmt 0 view .LVU420
 1563 0540 2046     		mov	r0, r4
 1564 0542 FFF7FEFF 		bl	strlen
 1565              	.LVL72:
 578:Src/state.c   **** 	}
 1566              		.loc 1 578 3 view .LVU421
 1567 0546 6423     		movs	r3, #100
 1568 0548 82B2     		uxth	r2, r0
 1569 054a 2146     		mov	r1, r4
 1570 054c 0548     		ldr	r0, .L78+16
 1571 054e FFF7FEFF 		bl	HAL_UART_Transmit
 1572              	.LVL73:
 1573              		.loc 1 580 1 view .LVU422
 1574 0552 A9E5     		b	.L43
 1575              	.L79:
 1576              		.align	2
 1577              	.L78:
 1578 0554 00000000 		.word	debug_rx
 1579 0558 00000000 		.word	can1
 1580 055c F8030000 		.word	.LC18
 1581 0560 00000000 		.word	debug_tx
 1582 0564 00000000 		.word	huart3
 1583 0568 2C040000 		.word	.LC20
 1584 056c 00000000 		.word	successfull_opening
 1585 0570 6C040000 		.word	.LC22
 1586 0574 00000000 		.word	filename_log
 1587 0578 3C040000 		.word	.LC21
 1588 057c 94040000 		.word	.LC24
 1589 0580 B8040000 		.word	.LC26
 1590 0584 BC040000 		.word	.LC27
 1591 0588 00000000 		.word	log_names
 1592 058c 9C040000 		.word	.LC25
 1593 0590 98050000 		.word	.LC28
 1594              		.cfi_endproc
ARM GAS  /tmp/ccTcsCTY.s 			page 48


 1595              	.LFE149:
 1597              		.section	.rodata.imu_operations.str1.4,"aMS",%progbits,1
 1598              		.align	2
 1599              	.LC29:
 1600 0000 494D5520 		.ascii	"IMU presente\015\012\000"
 1600      70726573 
 1600      656E7465 
 1600      0D0A00
 1601              		.section	.text.imu_operations,"ax",%progbits
 1602              		.align	1
 1603              		.global	imu_operations
 1604              		.syntax unified
 1605              		.thumb
 1606              		.thumb_func
 1607              		.fpu fpv5-d16
 1609              	imu_operations:
 1610              	.LFB150:
 581:Src/state.c   **** 
 582:Src/state.c   **** void imu_operations()
 583:Src/state.c   **** {
 1611              		.loc 1 583 1 is_stmt 1 view -0
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 0
 1614              		@ frame_needed = 0, uses_anonymous_args = 0
 1615 0000 08B5     		push	{r3, lr}
 1616              	.LCFI8:
 1617              		.cfi_def_cfa_offset 8
 1618              		.cfi_offset 3, -8
 1619              		.cfi_offset 14, -4
 584:Src/state.c   **** 	imu_connected = 1; // imu connected true
 1620              		.loc 1 584 2 view .LVU424
 1621              		.loc 1 584 16 is_stmt 0 view .LVU425
 1622 0002 0A4B     		ldr	r3, .L84
 1623 0004 0122     		movs	r2, #1
 1624 0006 1A70     		strb	r2, [r3]
 585:Src/state.c   **** 	if (count_imu == 10 || count_imu == 11)
 1625              		.loc 1 585 2 is_stmt 1 view .LVU426
 1626              		.loc 1 585 22 is_stmt 0 view .LVU427
 1627 0008 094B     		ldr	r3, .L84+4
 1628 000a 1B88     		ldrh	r3, [r3]
 1629 000c 0A3B     		subs	r3, r3, #10
 1630 000e 9BB2     		uxth	r3, r3
 1631              		.loc 1 585 5 view .LVU428
 1632 0010 9342     		cmp	r3, r2
 1633 0012 03D9     		bls	.L83
 1634              	.L81:
 586:Src/state.c   **** 	{
 587:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"IMU presente\r\n",
 588:Src/state.c   **** 						  strlen("IMU presente\r\n"), 10);
 589:Src/state.c   **** 	}
 590:Src/state.c   **** 	count_imu = 0;
 1635              		.loc 1 590 2 is_stmt 1 view .LVU429
 1636              		.loc 1 590 12 is_stmt 0 view .LVU430
 1637 0014 064B     		ldr	r3, .L84+4
 1638 0016 0022     		movs	r2, #0
 1639 0018 1A80     		strh	r2, [r3]	@ movhi
 591:Src/state.c   **** }
ARM GAS  /tmp/ccTcsCTY.s 			page 49


 1640              		.loc 1 591 1 view .LVU431
 1641 001a 08BD     		pop	{r3, pc}
 1642              	.L83:
 587:Src/state.c   **** 						  strlen("IMU presente\r\n"), 10);
 1643              		.loc 1 587 3 is_stmt 1 view .LVU432
 1644 001c 0A23     		movs	r3, #10
 1645 001e 0E22     		movs	r2, #14
 1646 0020 0449     		ldr	r1, .L84+8
 1647 0022 0548     		ldr	r0, .L84+12
 1648 0024 FFF7FEFF 		bl	HAL_UART_Transmit
 1649              	.LVL74:
 1650 0028 F4E7     		b	.L81
 1651              	.L85:
 1652 002a 00BF     		.align	2
 1653              	.L84:
 1654 002c 00000000 		.word	imu_connected
 1655 0030 00000000 		.word	count_imu
 1656 0034 00000000 		.word	.LC29
 1657 0038 00000000 		.word	huart3
 1658              		.cfi_endproc
 1659              	.LFE150:
 1661              		.section	.text.atc_pot_operations,"ax",%progbits
 1662              		.align	1
 1663              		.global	atc_pot_operations
 1664              		.syntax unified
 1665              		.thumb
 1666              		.thumb_func
 1667              		.fpu fpv5-d16
 1669              	atc_pot_operations:
 1670              	.LFB151:
 592:Src/state.c   **** void atc_pot_operations()
 593:Src/state.c   **** {
 1671              		.loc 1 593 1 view -0
 1672              		.cfi_startproc
 1673              		@ args = 0, pretend = 0, frame = 0
 1674              		@ frame_needed = 0, uses_anonymous_args = 0
 1675              		@ link register save eliminated.
 594:Src/state.c   **** 	atc_connected = 1;
 1676              		.loc 1 594 2 view .LVU434
 1677              		.loc 1 594 16 is_stmt 0 view .LVU435
 1678 0000 034B     		ldr	r3, .L87
 1679 0002 0122     		movs	r2, #1
 1680 0004 1A70     		strb	r2, [r3]
 595:Src/state.c   **** 	count_atc = 0;
 1681              		.loc 1 595 2 is_stmt 1 view .LVU436
 1682              		.loc 1 595 12 is_stmt 0 view .LVU437
 1683 0006 034B     		ldr	r3, .L87+4
 1684 0008 0022     		movs	r2, #0
 1685 000a 1A80     		strh	r2, [r3]	@ movhi
 596:Src/state.c   **** }
 1686              		.loc 1 596 1 view .LVU438
 1687 000c 7047     		bx	lr
 1688              	.L88:
 1689 000e 00BF     		.align	2
 1690              	.L87:
 1691 0010 00000000 		.word	atc_connected
 1692 0014 00000000 		.word	count_atc
ARM GAS  /tmp/ccTcsCTY.s 			page 50


 1693              		.cfi_endproc
 1694              	.LFE151:
 1696              		.section	.text.idle,"ax",%progbits
 1697              		.align	1
 1698              		.global	idle
 1699              		.syntax unified
 1700              		.thumb
 1701              		.thumb_func
 1702              		.fpu fpv5-d16
 1704              	idle:
 1705              	.LFB146:
 130:Src/state.c   **** 	/*if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port,USER_BUTTON_Pin) == GPIO_PIN_SET){
 1706              		.loc 1 130 1 is_stmt 1 view -0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710 0000 08B5     		push	{r3, lr}
 1711              	.LCFI9:
 1712              		.cfi_def_cfa_offset 8
 1713              		.cfi_offset 3, -8
 1714              		.cfi_offset 14, -4
 139:Src/state.c   **** 	{
 1715              		.loc 1 139 2 view .LVU440
 139:Src/state.c   **** 	{
 1716              		.loc 1 139 24 is_stmt 0 view .LVU441
 1717 0002 174B     		ldr	r3, .L97
 1718 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139:Src/state.c   **** 	{
 1719              		.loc 1 139 5 view .LVU442
 1720 0006 012B     		cmp	r3, #1
 1721 0008 0FD0     		beq	.L96
 1722              	.L90:
 144:Src/state.c   **** 	{
 1723              		.loc 1 144 2 is_stmt 1 view .LVU443
 144:Src/state.c   **** 	{
 1724              		.loc 1 144 6 is_stmt 0 view .LVU444
 1725 000a 1648     		ldr	r0, .L97+4
 1726 000c FFF7FEFF 		bl	fifoRxDataCAN_pop
 1727              	.LVL75:
 144:Src/state.c   **** 	{
 1728              		.loc 1 144 5 view .LVU445
 1729 0010 E8B1     		cbz	r0, .L89
 146:Src/state.c   **** 		{
 1730              		.loc 1 146 3 is_stmt 1 view .LVU446
 146:Src/state.c   **** 		{
 1731              		.loc 1 146 15 is_stmt 0 view .LVU447
 1732 0012 144B     		ldr	r3, .L97+4
 1733 0014 1B6B     		ldr	r3, [r3, #48]
 146:Src/state.c   **** 		{
 1734              		.loc 1 146 3 view .LVU448
 1735 0016 A02B     		cmp	r3, #160
 1736 0018 1AD0     		beq	.L92
 1737 001a 18D8     		bhi	.L89
 1738 001c 102B     		cmp	r3, #16
 1739 001e 0AD0     		beq	.L93
 1740 0020 342B     		cmp	r3, #52
 1741 0022 14D1     		bne	.L89
ARM GAS  /tmp/ccTcsCTY.s 			page 51


 185:Src/state.c   **** 			break;
 1742              		.loc 1 185 4 is_stmt 1 view .LVU449
 1743 0024 FFF7FEFF 		bl	atc_pot_operations
 1744              	.LVL76:
 186:Src/state.c   **** 		default:
 1745              		.loc 1 186 4 view .LVU450
 191:Src/state.c   **** /*******************************************************************
 1746              		.loc 1 191 1 is_stmt 0 view .LVU451
 1747 0028 11E0     		b	.L89
 1748              	.L96:
 141:Src/state.c   **** 		debug_operations();
 1749              		.loc 1 141 3 is_stmt 1 view .LVU452
 141:Src/state.c   **** 		debug_operations();
 1750              		.loc 1 141 21 is_stmt 0 view .LVU453
 1751 002a 0D4B     		ldr	r3, .L97
 1752 002c 0022     		movs	r2, #0
 1753 002e 1A70     		strb	r2, [r3]
 142:Src/state.c   **** 	}
 1754              		.loc 1 142 3 is_stmt 1 view .LVU454
 1755 0030 FFF7FEFF 		bl	debug_operations
 1756              	.LVL77:
 1757 0034 E9E7     		b	.L90
 1758              	.L93:
 149:Src/state.c   **** 			can1.tx_size = 1;
 1759              		.loc 1 149 4 view .LVU455
 149:Src/state.c   **** 			can1.tx_size = 1;
 1760              		.loc 1 149 19 is_stmt 0 view .LVU456
 1761 0036 0B48     		ldr	r0, .L97+4
 1762 0038 0B4B     		ldr	r3, .L97+8
 1763 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1764 003c 0373     		strb	r3, [r0, #12]
 150:Src/state.c   **** 			can1.tx_id = ID_ACU_1;
 1765              		.loc 1 150 4 is_stmt 1 view .LVU457
 150:Src/state.c   **** 			can1.tx_id = ID_ACU_1;
 1766              		.loc 1 150 17 is_stmt 0 view .LVU458
 1767 003e 0123     		movs	r3, #1
 1768 0040 0360     		str	r3, [r0]
 151:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 1769              		.loc 1 151 4 is_stmt 1 view .LVU459
 151:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 1770              		.loc 1 151 15 is_stmt 0 view .LVU460
 1771 0042 4FF48073 		mov	r3, #256
 1772 0046 C362     		str	r3, [r0, #44]
 152:Src/state.c   **** 			break;
 1773              		.loc 1 152 4 is_stmt 1 view .LVU461
 1774 0048 0021     		movs	r1, #0
 1775 004a FFF7FEFF 		bl	CAN_Send
 1776              	.LVL78:
 153:Src/state.c   **** 		case ID_ASK_INV_DX:
 1777              		.loc 1 153 4 view .LVU462
 1778              	.L89:
 191:Src/state.c   **** /*******************************************************************
 1779              		.loc 1 191 1 is_stmt 0 view .LVU463
 1780 004e 08BD     		pop	{r3, pc}
 1781              	.L92:
 174:Src/state.c   **** 			{
 1782              		.loc 1 174 4 is_stmt 1 view .LVU464
ARM GAS  /tmp/ccTcsCTY.s 			page 52


 174:Src/state.c   **** 			{
 1783              		.loc 1 174 23 is_stmt 0 view .LVU465
 1784 0050 044B     		ldr	r3, .L97+4
 1785 0052 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1786 0054 022B     		cmp	r3, #2
 1787 0056 FAD1     		bne	.L89
 178:Src/state.c   **** 				break;
 1788              		.loc 1 178 5 is_stmt 1 view .LVU466
 178:Src/state.c   **** 				break;
 1789              		.loc 1 178 19 is_stmt 0 view .LVU467
 1790 0058 034B     		ldr	r3, .L97+8
 1791 005a 0222     		movs	r2, #2
 1792 005c 1A70     		strb	r2, [r3]
 179:Src/state.c   **** 			default:
 1793              		.loc 1 179 5 is_stmt 1 view .LVU468
 1794 005e F6E7     		b	.L89
 1795              	.L98:
 1796              		.align	2
 1797              	.L97:
 1798 0060 00000000 		.word	debug_msg_arrived
 1799 0064 00000000 		.word	can1
 1800 0068 00000000 		.word	current_state
 1801              		.cfi_endproc
 1802              	.LFE146:
 1804              		.section	.text.run,"ax",%progbits
 1805              		.align	1
 1806              		.global	run
 1807              		.syntax unified
 1808              		.thumb
 1809              		.thumb_func
 1810              		.fpu fpv5-d16
 1812              	run:
 1813              	.LFB148:
 402:Src/state.c   **** 	if (fifoRxDataCAN_pop(&can1))
 1814              		.loc 1 402 1 view -0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 0
 1817              		@ frame_needed = 0, uses_anonymous_args = 0
 1818 0000 08B5     		push	{r3, lr}
 1819              	.LCFI10:
 1820              		.cfi_def_cfa_offset 8
 1821              		.cfi_offset 3, -8
 1822              		.cfi_offset 14, -4
 403:Src/state.c   **** 	{
 1823              		.loc 1 403 2 view .LVU470
 403:Src/state.c   **** 	{
 1824              		.loc 1 403 6 is_stmt 0 view .LVU471
 1825 0002 0A48     		ldr	r0, .L103
 1826 0004 FFF7FEFF 		bl	fifoRxDataCAN_pop
 1827              	.LVL79:
 403:Src/state.c   **** 	{
 1828              		.loc 1 403 5 view .LVU472
 1829 0008 78B1     		cbz	r0, .L99
 405:Src/state.c   **** 		{
 1830              		.loc 1 405 3 is_stmt 1 view .LVU473
 405:Src/state.c   **** 		{
 1831              		.loc 1 405 15 is_stmt 0 view .LVU474
ARM GAS  /tmp/ccTcsCTY.s 			page 53


 1832 000a 084B     		ldr	r3, .L103
 1833 000c 1B6B     		ldr	r3, [r3, #48]
 405:Src/state.c   **** 		{
 1834              		.loc 1 405 3 view .LVU475
 1835 000e 342B     		cmp	r3, #52
 1836 0010 09D0     		beq	.L101
 1837 0012 A02B     		cmp	r3, #160
 1838 0014 09D1     		bne	.L99
 408:Src/state.c   **** 			{ //----- change state to setup -----//
 1839              		.loc 1 408 4 is_stmt 1 view .LVU476
 408:Src/state.c   **** 			{ //----- change state to setup -----//
 1840              		.loc 1 408 19 is_stmt 0 view .LVU477
 1841 0016 054B     		ldr	r3, .L103
 1842 0018 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 408:Src/state.c   **** 			{ //----- change state to setup -----//
 1843              		.loc 1 408 7 view .LVU478
 1844 001a 062B     		cmp	r3, #6
 1845 001c 05D1     		bne	.L99
 410:Src/state.c   **** 			}
 1846              		.loc 1 410 5 is_stmt 1 view .LVU479
 410:Src/state.c   **** 			}
 1847              		.loc 1 410 19 is_stmt 0 view .LVU480
 1848 001e 044B     		ldr	r3, .L103+4
 1849 0020 0222     		movs	r2, #2
 1850 0022 1A70     		strb	r2, [r3]
 1851 0024 01E0     		b	.L99
 1852              	.L101:
 414:Src/state.c   **** 			break;
 1853              		.loc 1 414 4 is_stmt 1 view .LVU481
 1854 0026 FFF7FEFF 		bl	atc_pot_operations
 1855              	.LVL80:
 415:Src/state.c   **** 		default:
 1856              		.loc 1 415 4 view .LVU482
 1857              	.L99:
 420:Src/state.c   **** /*******************************************************************
 1858              		.loc 1 420 1 is_stmt 0 view .LVU483
 1859 002a 08BD     		pop	{r3, pc}
 1860              	.L104:
 1861              		.align	2
 1862              	.L103:
 1863 002c 00000000 		.word	can1
 1864 0030 00000000 		.word	current_state
 1865              		.cfi_endproc
 1866              	.LFE148:
 1868              		.global	inv_init_response
 1869              		.global	init_inv_resp
 1870              		.global	init_precharge_start_time
 1871              		.global	init_step_start_time
 1872              		.global	init_step
 1873              		.global	critical_errors
 1874              		.global	setup_init
 1875              		.comm	current_state,1,1
 1876              		.section	.bss.critical_errors,"aw",%nobits
 1877              		.align	2
 1878              		.set	.LANCHOR4,. + 0
 1881              	critical_errors:
 1882 0000 00000000 		.space	4
ARM GAS  /tmp/ccTcsCTY.s 			page 54


 1883              		.section	.bss.init_inv_resp,"aw",%nobits
 1884              		.align	2
 1885              		.set	.LANCHOR6,. + 0
 1888              	init_inv_resp:
 1889 0000 00000000 		.space	4
 1890              		.section	.bss.init_precharge_start_time,"aw",%nobits
 1891              		.align	2
 1892              		.set	.LANCHOR5,. + 0
 1895              	init_precharge_start_time:
 1896 0000 00000000 		.space	4
 1897              		.section	.bss.init_step,"aw",%nobits
 1898              		.align	2
 1899              		.set	.LANCHOR0,. + 0
 1902              	init_step:
 1903 0000 00000000 		.space	4
 1904              		.section	.bss.init_step_start_time,"aw",%nobits
 1905              		.align	2
 1906              		.set	.LANCHOR1,. + 0
 1909              	init_step_start_time:
 1910 0000 00000000 		.space	4
 1911              		.section	.bss.inv_init_response,"aw",%nobits
 1912              		.set	.LANCHOR2,. + 0
 1915              	inv_init_response:
 1916 0000 00       		.space	1
 1917              		.section	.bss.setup_init,"aw",%nobits
 1918              		.align	2
 1919              		.set	.LANCHOR3,. + 0
 1922              	setup_init:
 1923 0000 00000000 		.space	4
 1924              		.text
 1925              	.Letext0:
 1926              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1927              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1928              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1929              		.file 5 "Inc/state.h"
 1930              		.file 6 "Drivers/CMSIS/Include/core_cm7.h"
 1931              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1932              		.file 8 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1933              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1934              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1935              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 1936              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1937              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1938              		.file 14 "Inc/can.h"
 1939              		.file 15 "Middlewares/Third_Party/FatFs/src/integer.h"
 1940              		.file 16 "/usr/arm-none-eabi/include/sys/lock.h"
 1941              		.file 17 "/usr/arm-none-eabi/include/sys/_types.h"
 1942              		.file 18 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 1943              		.file 19 "/usr/arm-none-eabi/include/sys/reent.h"
 1944              		.file 20 "/usr/arm-none-eabi/include/stdlib.h"
 1945              		.file 21 "Middlewares/Third_Party/FatFs/src/ff.h"
 1946              		.file 22 "Middlewares/Third_Party/FatFs/src/diskio.h"
 1947              		.file 23 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 1948              		.file 24 "Inc/sd_diskio.h"
 1949              		.file 25 "Inc/fatfs.h"
 1950              		.file 26 "Inc/global_variables.h"
 1951              		.file 27 "/usr/arm-none-eabi/include/stdio.h"
ARM GAS  /tmp/ccTcsCTY.s 			page 55


 1952              		.file 28 "/usr/arm-none-eabi/include/string.h"
 1953              		.file 29 "<built-in>"
ARM GAS  /tmp/ccTcsCTY.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 state.c
     /tmp/ccTcsCTY.s:17     .text.set_bit_uint8:0000000000000000 $t
     /tmp/ccTcsCTY.s:25     .text.set_bit_uint8:0000000000000000 set_bit_uint8
     /tmp/ccTcsCTY.s:73     .text.init:0000000000000000 $t
     /tmp/ccTcsCTY.s:80     .text.init:0000000000000000 init
     /tmp/ccTcsCTY.s:365    .text.init:0000000000000164 $d
                            *COM*:0000000000000001 current_state
     /tmp/ccTcsCTY.s:376    .text.setup:0000000000000000 $t
     /tmp/ccTcsCTY.s:383    .text.setup:0000000000000000 setup
     /tmp/ccTcsCTY.s:626    .text.setup:0000000000000110 $d
     /tmp/ccTcsCTY.s:638    .rodata.debug_operations.str1.4:0000000000000000 $d
     /tmp/ccTcsCTY.s:749    .text.debug_operations:0000000000000000 $t
     /tmp/ccTcsCTY.s:756    .text.debug_operations:0000000000000000 debug_operations
     /tmp/ccTcsCTY.s:1142   .text.debug_operations:000000000000022c $d
     /tmp/ccTcsCTY.s:1186   .text.debug_operations:00000000000002b8 $t
     /tmp/ccTcsCTY.s:1578   .text.debug_operations:0000000000000554 $d
     /tmp/ccTcsCTY.s:1598   .rodata.imu_operations.str1.4:0000000000000000 $d
     /tmp/ccTcsCTY.s:1602   .text.imu_operations:0000000000000000 $t
     /tmp/ccTcsCTY.s:1609   .text.imu_operations:0000000000000000 imu_operations
     /tmp/ccTcsCTY.s:1654   .text.imu_operations:000000000000002c $d
     /tmp/ccTcsCTY.s:1662   .text.atc_pot_operations:0000000000000000 $t
     /tmp/ccTcsCTY.s:1669   .text.atc_pot_operations:0000000000000000 atc_pot_operations
     /tmp/ccTcsCTY.s:1691   .text.atc_pot_operations:0000000000000010 $d
     /tmp/ccTcsCTY.s:1697   .text.idle:0000000000000000 $t
     /tmp/ccTcsCTY.s:1704   .text.idle:0000000000000000 idle
     /tmp/ccTcsCTY.s:1798   .text.idle:0000000000000060 $d
     /tmp/ccTcsCTY.s:1805   .text.run:0000000000000000 $t
     /tmp/ccTcsCTY.s:1812   .text.run:0000000000000000 run
     /tmp/ccTcsCTY.s:1863   .text.run:000000000000002c $d
     /tmp/ccTcsCTY.s:1915   .bss.inv_init_response:0000000000000000 inv_init_response
     /tmp/ccTcsCTY.s:1888   .bss.init_inv_resp:0000000000000000 init_inv_resp
     /tmp/ccTcsCTY.s:1895   .bss.init_precharge_start_time:0000000000000000 init_precharge_start_time
     /tmp/ccTcsCTY.s:1909   .bss.init_step_start_time:0000000000000000 init_step_start_time
     /tmp/ccTcsCTY.s:1902   .bss.init_step:0000000000000000 init_step
     /tmp/ccTcsCTY.s:1881   .bss.critical_errors:0000000000000000 critical_errors
     /tmp/ccTcsCTY.s:1922   .bss.setup_init:0000000000000000 setup_init
     /tmp/ccTcsCTY.s:1877   .bss.critical_errors:0000000000000000 $d
     /tmp/ccTcsCTY.s:1884   .bss.init_inv_resp:0000000000000000 $d
     /tmp/ccTcsCTY.s:1891   .bss.init_precharge_start_time:0000000000000000 $d
     /tmp/ccTcsCTY.s:1898   .bss.init_step:0000000000000000 $d
     /tmp/ccTcsCTY.s:1905   .bss.init_step_start_time:0000000000000000 $d
     /tmp/ccTcsCTY.s:1916   .bss.inv_init_response:0000000000000000 $d
     /tmp/ccTcsCTY.s:1918   .bss.setup_init:0000000000000000 $d

UNDEFINED SYMBOLS
CAN_Send
fifoRxDataCAN_pop
can3
can1
count_ms_abs
atc_connected
strcmp
strncmp
HAL_UART_Transmit
memcpy
strlen
ARM GAS  /tmp/ccTcsCTY.s 			page 57


sprintf
debug_rx
mount_ok
huart3
debug_tx
code_version
count_hour
count_min
count_sec
count_dec
its_connected
imu_connected
canSnifferMode
successfull_opening
filename_log
log_names
count_imu
count_atc
debug_msg_arrived
