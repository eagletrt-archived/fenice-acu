ARM GAS  /tmp/ccBPpXQI.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"state.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.set_bit_uint8,"ax",%progbits
  17              		.align	1
  18              		.global	set_bit_uint8
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	set_bit_uint8:
  26              	.LVL0:
  27              	.LFB144:
  28              		.file 1 "Src/state.c"
   1:Src/state.c   **** #include "state.h"
   2:Src/state.c   **** #include "can.h"
   3:Src/state.c   **** #include "global_variables.h"
   4:Src/state.c   **** #include "stdio.h"
   5:Src/state.c   **** #include "stm32f7xx_hal.h"
   6:Src/state.c   **** #include "string.h"
   7:Src/state.c   **** /*******************************************************************
   8:Src/state.c   ****  *                         USER FUNCTIONS
   9:Src/state.c   ****  *******************************************************************/ 
  10:Src/state.c   **** void set_bit_uint8(uint8_t* _var, uint8_t _nBit, uint8_t _bool){
  29              		.loc 1 10 64 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  11:Src/state.c   **** 	if(_bool == 0 || _bool == 1){
  34              		.loc 1 11 2 view .LVU1
  35              		.loc 1 11 4 is_stmt 0 view .LVU2
  36 0000 012A     		cmp	r2, #1
  37 0002 00D9     		bls	.L7
  38 0004 7047     		bx	lr
  39              	.L7:
  10:Src/state.c   **** 	if(_bool == 0 || _bool == 1){
  40              		.loc 1 10 64 view .LVU3
  41 0006 10B4     		push	{r4}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 4
  44              		.cfi_offset 4, -4
  12:Src/state.c   **** 		(*_var) = ((*_var) & ( 0b11111111 ^ (0b00000001 << _nBit))) | (0b00000000 | (_bool << _nBit));
  45              		.loc 1 12 3 is_stmt 1 view .LVU4
ARM GAS  /tmp/ccBPpXQI.s 			page 2


  46              		.loc 1 12 15 is_stmt 0 view .LVU5
  47 0008 90F90040 		ldrsb	r4, [r0]
  48              		.loc 1 12 51 view .LVU6
  49 000c 0123     		movs	r3, #1
  50 000e 8B40     		lsls	r3, r3, r1
  51              		.loc 1 12 37 view .LVU7
  52 0010 DB43     		mvns	r3, r3
  53 0012 5BB2     		sxtb	r3, r3
  54              		.loc 1 12 22 view .LVU8
  55 0014 2340     		ands	r3, r3, r4
  56              		.loc 1 12 77 view .LVU9
  57 0016 8A40     		lsls	r2, r2, r1
  58              	.LVL1:
  59              		.loc 1 12 63 view .LVU10
  60 0018 1A43     		orrs	r2, r2, r3
  61              		.loc 1 12 11 view .LVU11
  62 001a 0270     		strb	r2, [r0]
  13:Src/state.c   **** 	}
  14:Src/state.c   **** }
  63              		.loc 1 14 1 view .LVU12
  64 001c 5DF8044B 		ldr	r4, [sp], #4
  65              	.LCFI1:
  66              		.cfi_restore 4
  67              		.cfi_def_cfa_offset 0
  68 0020 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE144:
  72              		.section	.text.init,"ax",%progbits
  73              		.align	1
  74              		.global	init
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv5-d16
  80              	init:
  81              	.LFB145:
  15:Src/state.c   **** /*******************************************************************
  16:Src/state.c   ****  *                         STATE VARIABLES
  17:Src/state.c   ****  *******************************************************************/ 
  18:Src/state.c   **** /*** GLOBAL ***/
  19:Src/state.c   **** int setup_init = 0;
  20:Src/state.c   **** int critical_errors = 0;
  21:Src/state.c   **** 
  22:Src/state.c   **** /*** FOR INIT STATE ***/
  23:Src/state.c   **** int init_step = 0;
  24:Src/state.c   **** uint32_t init_step_start_time = 0;
  25:Src/state.c   **** uint32_t init_precharge_start_time = 0;
  26:Src/state.c   **** uint32_t init_inv_resp = 0;
  27:Src/state.c   **** 
  28:Src/state.c   **** uint8_t inv_init_response = 0; // bit 0 = inv R -> 0 = no / 1 = YES ---- bit 1 = inv L -> 0 = no / 
  29:Src/state.c   **** // Default state
  30:Src/state.c   **** // Init variables
  31:Src/state.c   **** /*******************************************************************
  32:Src/state.c   ****  *                         START INIT STATE
  33:Src/state.c   ****  *******************************************************************/
  34:Src/state.c   **** void init()
  35:Src/state.c   **** {
ARM GAS  /tmp/ccBPpXQI.s 			page 3


  82              		.loc 1 35 1 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  87              	.LCFI2:
  88              		.cfi_def_cfa_offset 40
  89              		.cfi_offset 3, -40
  90              		.cfi_offset 4, -36
  91              		.cfi_offset 5, -32
  92              		.cfi_offset 6, -28
  93              		.cfi_offset 7, -24
  94              		.cfi_offset 8, -20
  95              		.cfi_offset 9, -16
  96              		.cfi_offset 10, -12
  97              		.cfi_offset 11, -8
  98              		.cfi_offset 14, -4
  36:Src/state.c   **** 	if(init_step == 0){
  99              		.loc 1 36 2 view .LVU14
 100              		.loc 1 36 15 is_stmt 0 view .LVU15
 101 0004 574B     		ldr	r3, .L22
 102 0006 1B68     		ldr	r3, [r3]
 103              		.loc 1 36 4 view .LVU16
 104 0008 53B1     		cbz	r3, .L17
  37:Src/state.c   **** 		init_step = 1;
  38:Src/state.c   **** 		/* Send inverter L disable */
  39:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_SX;
  40:Src/state.c   **** 		can3.dataTx[0] = 0x51;
  41:Src/state.c   **** 		can3.dataTx[1] = 0x04;
  42:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  43:Src/state.c   **** 		can3.tx_size = 3;
  44:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  45:Src/state.c   **** 
  46:Src/state.c   **** 		/* Send inverter R disable */
  47:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_DX;
  48:Src/state.c   **** 		can3.dataTx[0] = 0x51;
  49:Src/state.c   **** 		can3.dataTx[1] = 0x04;
  50:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  51:Src/state.c   **** 		can3.tx_size = 3;
  52:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  53:Src/state.c   **** 
  54:Src/state.c   **** 		/* Send req to inverter L presence */
  55:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_SX;
  56:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
  57:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
  58:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  59:Src/state.c   **** 		can3.tx_size = 3;
  60:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  61:Src/state.c   **** 
  62:Src/state.c   **** 		/* Send req to inverter R presence */
  63:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_DX;
  64:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
  65:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
  66:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  67:Src/state.c   **** 		can3.tx_size = 3;
  68:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  69:Src/state.c   **** 
ARM GAS  /tmp/ccBPpXQI.s 			page 4


  70:Src/state.c   **** 		init_step_start_time = count_ms_abs; // save the curret time
  71:Src/state.c   **** 
  72:Src/state.c   **** 	}else if(init_step == 1){
 105              		.loc 1 72 8 is_stmt 1 view .LVU17
 106              		.loc 1 72 10 is_stmt 0 view .LVU18
 107 000a 012B     		cmp	r3, #1
 108 000c 51D0     		beq	.L18
  73:Src/state.c   **** 		if (fifoRxDataCAN_pop(&can1)){
  74:Src/state.c   **** 			switch (can1.rx_id)
  75:Src/state.c   **** 			{
  76:Src/state.c   **** 			case ID_ASK_INV_DX:
  77:Src/state.c   **** 				if(can1.dataRx[0] == 0xE2 && can1.dataRx[1] == 0x01 && can1.dataRx[2] == 0x00 && can1.dataRx[3]
  78:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
  79:Src/state.c   **** 				}
  80:Src/state.c   **** 				break;
  81:Src/state.c   **** 			case ID_ASK_INV_SX:
  82:Src/state.c   **** 				if(can1.dataRx[0] == 0xE2 && can1.dataRx[1] == 0x01 && can1.dataRx[2] == 0x00 && can1.dataRx[3]
  83:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
  84:Src/state.c   **** 				}
  85:Src/state.c   **** 			default:
  86:Src/state.c   **** 				break;
  87:Src/state.c   **** 			}
  88:Src/state.c   **** 		}
  89:Src/state.c   **** 		if(inv_init_response == 3){ // means that each inv has responded
  90:Src/state.c   **** 			init_step = 2;
  91:Src/state.c   **** 		}else{
  92:Src/state.c   **** 			if(count_ms_abs - init_step_start_time > 1000 ){ //if is passed more than 1 second -> go ahead
  93:Src/state.c   **** 				/* Send Error to steer */ 
  94:Src/state.c   **** 
  95:Src/state.c   **** 				//TODO: send errors
  96:Src/state.c   **** 
  97:Src/state.c   **** 				init_step = 3;
  98:Src/state.c   **** 			}
  99:Src/state.c   **** 		}
 100:Src/state.c   **** 	}else if(init_step == 2){
 109              		.loc 1 100 8 is_stmt 1 view .LVU19
 110              		.loc 1 100 10 is_stmt 0 view .LVU20
 111 000e 022B     		cmp	r3, #2
 112 0010 00F08780 		beq	.L19
 101:Src/state.c   **** 		/* Send periodical status inv L */
 102:Src/state.c   **** 		can1.tx_id = ID_ASK_INV_SX;
 103:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 104:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 105:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 106:Src/state.c   **** 		can1.tx_size = 3;
 107:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 108:Src/state.c   **** 
 109:Src/state.c   **** 		/* Send periodical status inv R */
 110:Src/state.c   **** 		can1.tx_id = ID_ASK_INV_DX;
 111:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 112:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 113:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 114:Src/state.c   **** 		can1.tx_size = 3;
 115:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 116:Src/state.c   **** 
 117:Src/state.c   **** 		init_step = 3;
 118:Src/state.c   **** 	}else if(init_step == 3){
ARM GAS  /tmp/ccBPpXQI.s 			page 5


 113              		.loc 1 118 8 is_stmt 1 view .LVU21
 114              		.loc 1 118 10 is_stmt 0 view .LVU22
 115 0014 032B     		cmp	r3, #3
 116 0016 4AD1     		bne	.L8
 119:Src/state.c   **** 		current_state = STATE_IDLE; // Change state to STATE_IDLE
 117              		.loc 1 119 3 is_stmt 1 view .LVU23
 118              		.loc 1 119 17 is_stmt 0 view .LVU24
 119 0018 534B     		ldr	r3, .L22+4
 120 001a 0122     		movs	r2, #1
 121 001c 1A70     		strb	r2, [r3]
 120:Src/state.c   **** 		/* Send msg to steer of changing state */
 121:Src/state.c   **** 	}
 122:Src/state.c   **** }
 122              		.loc 1 122 1 view .LVU25
 123 001e 46E0     		b	.L8
 124              	.L17:
  37:Src/state.c   **** 		/* Send inverter L disable */
 125              		.loc 1 37 3 is_stmt 1 view .LVU26
  37:Src/state.c   **** 		/* Send inverter L disable */
 126              		.loc 1 37 13 is_stmt 0 view .LVU27
 127 0020 504B     		ldr	r3, .L22
 128 0022 0122     		movs	r2, #1
 129 0024 1A60     		str	r2, [r3]
  39:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 130              		.loc 1 39 3 is_stmt 1 view .LVU28
  39:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 131              		.loc 1 39 14 is_stmt 0 view .LVU29
 132 0026 514C     		ldr	r4, .L22+8
 133 0028 40F20128 		movw	r8, #513
 134 002c C4F82C80 		str	r8, [r4, #44]
  40:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 135              		.loc 1 40 3 is_stmt 1 view .LVU30
  40:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 136              		.loc 1 40 18 is_stmt 0 view .LVU31
 137 0030 4FF0510B 		mov	fp, #81
 138 0034 84F80CB0 		strb	fp, [r4, #12]
  41:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 139              		.loc 1 41 3 is_stmt 1 view .LVU32
  41:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 140              		.loc 1 41 18 is_stmt 0 view .LVU33
 141 0038 4FF00409 		mov	r9, #4
 142 003c 84F80D90 		strb	r9, [r4, #13]
  42:Src/state.c   **** 		can3.tx_size = 3;
 143              		.loc 1 42 3 is_stmt 1 view .LVU34
  42:Src/state.c   **** 		can3.tx_size = 3;
 144              		.loc 1 42 18 is_stmt 0 view .LVU35
 145 0040 0025     		movs	r5, #0
 146 0042 A573     		strb	r5, [r4, #14]
  43:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 147              		.loc 1 43 3 is_stmt 1 view .LVU36
  43:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 148              		.loc 1 43 16 is_stmt 0 view .LVU37
 149 0044 0327     		movs	r7, #3
 150 0046 2760     		str	r7, [r4]
  44:Src/state.c   **** 
 151              		.loc 1 44 3 is_stmt 1 view .LVU38
 152 0048 494E     		ldr	r6, .L22+12
ARM GAS  /tmp/ccBPpXQI.s 			page 6


 153 004a 2946     		mov	r1, r5
 154 004c 3046     		mov	r0, r6
 155 004e FFF7FEFF 		bl	CAN_Send
 156              	.LVL2:
  47:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 157              		.loc 1 47 3 view .LVU39
  47:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 158              		.loc 1 47 14 is_stmt 0 view .LVU40
 159 0052 40F2022A 		movw	r10, #514
 160 0056 C4F82CA0 		str	r10, [r4, #44]
  48:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 161              		.loc 1 48 3 is_stmt 1 view .LVU41
  48:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 162              		.loc 1 48 18 is_stmt 0 view .LVU42
 163 005a 84F80CB0 		strb	fp, [r4, #12]
  49:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 164              		.loc 1 49 3 is_stmt 1 view .LVU43
  49:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 165              		.loc 1 49 18 is_stmt 0 view .LVU44
 166 005e 84F80D90 		strb	r9, [r4, #13]
  50:Src/state.c   **** 		can3.tx_size = 3;
 167              		.loc 1 50 3 is_stmt 1 view .LVU45
  50:Src/state.c   **** 		can3.tx_size = 3;
 168              		.loc 1 50 18 is_stmt 0 view .LVU46
 169 0062 A573     		strb	r5, [r4, #14]
  51:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 170              		.loc 1 51 3 is_stmt 1 view .LVU47
  51:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 171              		.loc 1 51 16 is_stmt 0 view .LVU48
 172 0064 2760     		str	r7, [r4]
  52:Src/state.c   **** 
 173              		.loc 1 52 3 is_stmt 1 view .LVU49
 174 0066 2946     		mov	r1, r5
 175 0068 3046     		mov	r0, r6
 176 006a FFF7FEFF 		bl	CAN_Send
 177              	.LVL3:
  55:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 178              		.loc 1 55 3 view .LVU50
  55:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 179              		.loc 1 55 14 is_stmt 0 view .LVU51
 180 006e C4F82C80 		str	r8, [r4, #44]
  56:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 181              		.loc 1 56 3 is_stmt 1 view .LVU52
  56:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 182              		.loc 1 56 18 is_stmt 0 view .LVU53
 183 0072 4FF03D09 		mov	r9, #61
 184 0076 84F80C90 		strb	r9, [r4, #12]
  57:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 185              		.loc 1 57 3 is_stmt 1 view .LVU54
  57:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 186              		.loc 1 57 18 is_stmt 0 view .LVU55
 187 007a 4FF0E208 		mov	r8, #226
 188 007e 84F80D80 		strb	r8, [r4, #13]
  58:Src/state.c   **** 		can3.tx_size = 3;
 189              		.loc 1 58 3 is_stmt 1 view .LVU56
  58:Src/state.c   **** 		can3.tx_size = 3;
 190              		.loc 1 58 18 is_stmt 0 view .LVU57
ARM GAS  /tmp/ccBPpXQI.s 			page 7


 191 0082 A573     		strb	r5, [r4, #14]
  59:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 192              		.loc 1 59 3 is_stmt 1 view .LVU58
  59:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 193              		.loc 1 59 16 is_stmt 0 view .LVU59
 194 0084 2760     		str	r7, [r4]
  60:Src/state.c   **** 
 195              		.loc 1 60 3 is_stmt 1 view .LVU60
 196 0086 2946     		mov	r1, r5
 197 0088 3046     		mov	r0, r6
 198 008a FFF7FEFF 		bl	CAN_Send
 199              	.LVL4:
  63:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 200              		.loc 1 63 3 view .LVU61
  63:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 201              		.loc 1 63 14 is_stmt 0 view .LVU62
 202 008e C4F82CA0 		str	r10, [r4, #44]
  64:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 203              		.loc 1 64 3 is_stmt 1 view .LVU63
  64:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 204              		.loc 1 64 18 is_stmt 0 view .LVU64
 205 0092 84F80C90 		strb	r9, [r4, #12]
  65:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 206              		.loc 1 65 3 is_stmt 1 view .LVU65
  65:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 207              		.loc 1 65 18 is_stmt 0 view .LVU66
 208 0096 84F80D80 		strb	r8, [r4, #13]
  66:Src/state.c   **** 		can3.tx_size = 3;
 209              		.loc 1 66 3 is_stmt 1 view .LVU67
  66:Src/state.c   **** 		can3.tx_size = 3;
 210              		.loc 1 66 18 is_stmt 0 view .LVU68
 211 009a A573     		strb	r5, [r4, #14]
  67:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 212              		.loc 1 67 3 is_stmt 1 view .LVU69
  67:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 213              		.loc 1 67 16 is_stmt 0 view .LVU70
 214 009c 2760     		str	r7, [r4]
  68:Src/state.c   **** 
 215              		.loc 1 68 3 is_stmt 1 view .LVU71
 216 009e 2946     		mov	r1, r5
 217 00a0 3046     		mov	r0, r6
 218 00a2 FFF7FEFF 		bl	CAN_Send
 219              	.LVL5:
  70:Src/state.c   **** 
 220              		.loc 1 70 3 view .LVU72
  70:Src/state.c   **** 
 221              		.loc 1 70 24 is_stmt 0 view .LVU73
 222 00a6 334B     		ldr	r3, .L22+16
 223 00a8 1A68     		ldr	r2, [r3]
 224 00aa 334B     		ldr	r3, .L22+20
 225 00ac 1A60     		str	r2, [r3]
 226              	.L8:
 227              		.loc 1 122 1 view .LVU74
 228 00ae BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 229              	.L18:
  73:Src/state.c   **** 			switch (can1.rx_id)
 230              		.loc 1 73 3 is_stmt 1 view .LVU75
ARM GAS  /tmp/ccBPpXQI.s 			page 8


  73:Src/state.c   **** 			switch (can1.rx_id)
 231              		.loc 1 73 7 is_stmt 0 view .LVU76
 232 00b2 2F48     		ldr	r0, .L22+12
 233 00b4 FFF7FEFF 		bl	fifoRxDataCAN_pop
 234              	.LVL6:
  73:Src/state.c   **** 			switch (can1.rx_id)
 235              		.loc 1 73 6 view .LVU77
 236 00b8 70B1     		cbz	r0, .L12
  74:Src/state.c   **** 			{
 237              		.loc 1 74 4 is_stmt 1 view .LVU78
  74:Src/state.c   **** 			{
 238              		.loc 1 74 16 is_stmt 0 view .LVU79
 239 00ba 2D4B     		ldr	r3, .L22+12
 240 00bc 1B6B     		ldr	r3, [r3, #48]
  74:Src/state.c   **** 			{
 241              		.loc 1 74 4 view .LVU80
 242 00be 40F20122 		movw	r2, #513
 243 00c2 9342     		cmp	r3, r2
 244 00c4 1ED0     		beq	.L13
 245 00c6 40F20222 		movw	r2, #514
 246 00ca 9342     		cmp	r3, r2
 247 00cc 04D1     		bne	.L12
  77:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
 248              		.loc 1 77 5 is_stmt 1 view .LVU81
  77:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
 249              		.loc 1 77 83 is_stmt 0 view .LVU82
 250 00ce 284B     		ldr	r3, .L22+12
 251 00d0 5B69     		ldr	r3, [r3, #20]
  77:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
 252              		.loc 1 77 7 view .LVU83
 253 00d2 B3F5F17F 		cmp	r3, #482
 254 00d6 0FD0     		beq	.L20
 255              	.L12:
  89:Src/state.c   **** 			init_step = 2;
 256              		.loc 1 89 3 is_stmt 1 view .LVU84
  89:Src/state.c   **** 			init_step = 2;
 257              		.loc 1 89 24 is_stmt 0 view .LVU85
 258 00d8 284B     		ldr	r3, .L22+24
 259 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  89:Src/state.c   **** 			init_step = 2;
 260              		.loc 1 89 5 view .LVU86
 261 00dc 032B     		cmp	r3, #3
 262 00de 1CD0     		beq	.L21
  92:Src/state.c   **** 				/* Send Error to steer */ 
 263              		.loc 1 92 4 is_stmt 1 view .LVU87
  92:Src/state.c   **** 				/* Send Error to steer */ 
 264              		.loc 1 92 20 is_stmt 0 view .LVU88
 265 00e0 244B     		ldr	r3, .L22+16
 266 00e2 1B68     		ldr	r3, [r3]
 267 00e4 244A     		ldr	r2, .L22+20
 268 00e6 1268     		ldr	r2, [r2]
 269 00e8 9B1A     		subs	r3, r3, r2
  92:Src/state.c   **** 				/* Send Error to steer */ 
 270              		.loc 1 92 6 view .LVU89
 271 00ea B3F57A7F 		cmp	r3, #1000
 272 00ee DED9     		bls	.L8
  97:Src/state.c   **** 			}
ARM GAS  /tmp/ccBPpXQI.s 			page 9


 273              		.loc 1 97 5 is_stmt 1 view .LVU90
  97:Src/state.c   **** 			}
 274              		.loc 1 97 15 is_stmt 0 view .LVU91
 275 00f0 1C4B     		ldr	r3, .L22
 276 00f2 0322     		movs	r2, #3
 277 00f4 1A60     		str	r2, [r3]
 278 00f6 DAE7     		b	.L8
 279              	.L20:
  78:Src/state.c   **** 				}
 280              		.loc 1 78 6 is_stmt 1 view .LVU92
 281 00f8 0122     		movs	r2, #1
 282 00fa 0021     		movs	r1, #0
 283 00fc 1F48     		ldr	r0, .L22+24
 284 00fe FFF7FEFF 		bl	set_bit_uint8
 285              	.LVL7:
 286 0102 E9E7     		b	.L12
 287              	.L13:
  82:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
 288              		.loc 1 82 5 view .LVU93
  82:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
 289              		.loc 1 82 83 is_stmt 0 view .LVU94
 290 0104 1A4B     		ldr	r3, .L22+12
 291 0106 5B69     		ldr	r3, [r3, #20]
  82:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
 292              		.loc 1 82 7 view .LVU95
 293 0108 B3F5F17F 		cmp	r3, #482
 294 010c E4D1     		bne	.L12
  83:Src/state.c   **** 				}
 295              		.loc 1 83 6 is_stmt 1 view .LVU96
 296 010e 0122     		movs	r2, #1
 297 0110 1146     		mov	r1, r2
 298 0112 1A48     		ldr	r0, .L22+24
 299 0114 FFF7FEFF 		bl	set_bit_uint8
 300              	.LVL8:
 301 0118 DEE7     		b	.L12
 302              	.L21:
  90:Src/state.c   **** 		}else{
 303              		.loc 1 90 4 view .LVU97
  90:Src/state.c   **** 		}else{
 304              		.loc 1 90 14 is_stmt 0 view .LVU98
 305 011a 124B     		ldr	r3, .L22
 306 011c 0222     		movs	r2, #2
 307 011e 1A60     		str	r2, [r3]
 308 0120 C5E7     		b	.L8
 309              	.L19:
 102:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 310              		.loc 1 102 3 is_stmt 1 view .LVU99
 102:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 311              		.loc 1 102 14 is_stmt 0 view .LVU100
 312 0122 134C     		ldr	r4, .L22+12
 313 0124 40F20123 		movw	r3, #513
 314 0128 E362     		str	r3, [r4, #44]
 103:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 315              		.loc 1 103 3 is_stmt 1 view .LVU101
 103:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 316              		.loc 1 103 18 is_stmt 0 view .LVU102
 317 012a 4FF03D08 		mov	r8, #61
ARM GAS  /tmp/ccBPpXQI.s 			page 10


 318 012e 84F80C80 		strb	r8, [r4, #12]
 104:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 319              		.loc 1 104 3 is_stmt 1 view .LVU103
 104:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 320              		.loc 1 104 18 is_stmt 0 view .LVU104
 321 0132 4027     		movs	r7, #64
 322 0134 6773     		strb	r7, [r4, #13]
 105:Src/state.c   **** 		can1.tx_size = 3;
 323              		.loc 1 105 3 is_stmt 1 view .LVU105
 105:Src/state.c   **** 		can1.tx_size = 3;
 324              		.loc 1 105 18 is_stmt 0 view .LVU106
 325 0136 FA26     		movs	r6, #250
 326 0138 A673     		strb	r6, [r4, #14]
 106:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 327              		.loc 1 106 3 is_stmt 1 view .LVU107
 106:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 328              		.loc 1 106 16 is_stmt 0 view .LVU108
 329 013a 0325     		movs	r5, #3
 330 013c 2560     		str	r5, [r4]
 107:Src/state.c   **** 
 331              		.loc 1 107 3 is_stmt 1 view .LVU109
 332 013e 0021     		movs	r1, #0
 333 0140 2046     		mov	r0, r4
 334 0142 FFF7FEFF 		bl	CAN_Send
 335              	.LVL9:
 110:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 336              		.loc 1 110 3 view .LVU110
 110:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 337              		.loc 1 110 14 is_stmt 0 view .LVU111
 338 0146 40F20223 		movw	r3, #514
 339 014a E362     		str	r3, [r4, #44]
 111:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 340              		.loc 1 111 3 is_stmt 1 view .LVU112
 111:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 341              		.loc 1 111 18 is_stmt 0 view .LVU113
 342 014c 84F80C80 		strb	r8, [r4, #12]
 112:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 343              		.loc 1 112 3 is_stmt 1 view .LVU114
 112:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 344              		.loc 1 112 18 is_stmt 0 view .LVU115
 345 0150 6773     		strb	r7, [r4, #13]
 113:Src/state.c   **** 		can1.tx_size = 3;
 346              		.loc 1 113 3 is_stmt 1 view .LVU116
 113:Src/state.c   **** 		can1.tx_size = 3;
 347              		.loc 1 113 18 is_stmt 0 view .LVU117
 348 0152 A673     		strb	r6, [r4, #14]
 114:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 349              		.loc 1 114 3 is_stmt 1 view .LVU118
 114:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 350              		.loc 1 114 16 is_stmt 0 view .LVU119
 351 0154 2560     		str	r5, [r4]
 115:Src/state.c   **** 
 352              		.loc 1 115 3 is_stmt 1 view .LVU120
 353 0156 0021     		movs	r1, #0
 354 0158 2046     		mov	r0, r4
 355 015a FFF7FEFF 		bl	CAN_Send
 356              	.LVL10:
ARM GAS  /tmp/ccBPpXQI.s 			page 11


 117:Src/state.c   **** 	}else if(init_step == 3){
 357              		.loc 1 117 3 view .LVU121
 117:Src/state.c   **** 	}else if(init_step == 3){
 358              		.loc 1 117 13 is_stmt 0 view .LVU122
 359 015e 014B     		ldr	r3, .L22
 360 0160 1D60     		str	r5, [r3]
 361 0162 A4E7     		b	.L8
 362              	.L23:
 363              		.align	2
 364              	.L22:
 365 0164 00000000 		.word	.LANCHOR0
 366 0168 00000000 		.word	current_state
 367 016c 00000000 		.word	can3
 368 0170 00000000 		.word	can1
 369 0174 00000000 		.word	count_ms_abs
 370 0178 00000000 		.word	.LANCHOR1
 371 017c 00000000 		.word	.LANCHOR2
 372              		.cfi_endproc
 373              	.LFE145:
 375              		.section	.text.setup,"ax",%progbits
 376              		.align	1
 377              		.global	setup
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 381              		.fpu fpv5-d16
 383              	setup:
 384              	.LFB147:
 123:Src/state.c   **** /*******************************************************************
 124:Src/state.c   ****  *                         END INIT STATE
 125:Src/state.c   ****  *******************************************************************/
 126:Src/state.c   **** /*******************************************************************
 127:Src/state.c   ****  *                        START IDLE STATE
 128:Src/state.c   ****  *******************************************************************/
 129:Src/state.c   **** void idle()
 130:Src/state.c   **** {
 131:Src/state.c   **** 	/*if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port,USER_BUTTON_Pin) == GPIO_PIN_SET){
 132:Src/state.c   **** 		sprintf(txt,"%d\r\n%d\r\n%d\r\n%d\r\n",accel.pot1_val,accel.pot2_val,brake.pot1_val,brake.pot2_va
 133:Src/state.c   **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 134:Src/state.c   **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_ALWAYS | FA_WRITE );
 135:Src/state.c   **** 		f_write(&pot_values_f,(TCHAR const*)&txt,strlen(txt), &byteswritten);
 136:Src/state.c   **** 		f_close(&pot_values_f);
 137:Src/state.c   **** 		HAL_Delay(1000);
 138:Src/state.c   **** 	}*/
 139:Src/state.c   **** 	if (debug_msg_arrived == 1)
 140:Src/state.c   **** 	{
 141:Src/state.c   **** 		debug_msg_arrived = 0; // reset flag
 142:Src/state.c   **** 		debug_operations();
 143:Src/state.c   **** 	}
 144:Src/state.c   **** 	if (fifoRxDataCAN_pop(&can1)) // Check if there are messages on CAN1 fifo
 145:Src/state.c   **** 	{
 146:Src/state.c   **** 		switch (can1.rx_id)
 147:Src/state.c   **** 		{
 148:Src/state.c   **** 		case ID_ASK_STATE:
 149:Src/state.c   **** 			can1.dataTx[0] = (uint8_t)current_state;
 150:Src/state.c   **** 			can1.tx_size = 1;
 151:Src/state.c   **** 			can1.tx_id = ID_ACU_1;
ARM GAS  /tmp/ccBPpXQI.s 			page 12


 152:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 153:Src/state.c   **** 			break;
 154:Src/state.c   **** 		case ID_ASK_INV_DX:
 155:Src/state.c   **** 			break;
 156:Src/state.c   **** 		case ID_ASK_INV_SX:
 157:Src/state.c   **** 			break;
 158:Src/state.c   **** 		case ID_BMS_HV:
 159:Src/state.c   **** 			if (can1.dataRx[0] == 0x03)
 160:Src/state.c   **** 			{
 161:Src/state.c   **** 				// Turn ON tractive system
 162:Src/state.c   **** 				if(critical_errors == 0){
 163:Src/state.c   **** 
 164:Src/state.c   **** 				}
 165:Src/state.c   **** 			}
 166:Src/state.c   **** 			else if (can1.dataRx[0] == 0x04)
 167:Src/state.c   **** 			{
 168:Src/state.c   **** 				// Turn OFF tractive system
 169:Src/state.c   **** 			}
 170:Src/state.c   **** 			break;
 171:Src/state.c   **** 		case ID_BMS_LV:
 172:Src/state.c   **** 			break;
 173:Src/state.c   **** 		case ID_STEERING_WEEL_1:
 174:Src/state.c   **** 			switch (can1.dataRx[0])
 175:Src/state.c   **** 			{
 176:Src/state.c   **** 			case REQUEST_TS_ON:
 177:Src/state.c   **** 				//If req Tractive System ON msg arrives -> go to setup state
 178:Src/state.c   **** 				current_state = STATE_SETUP;
 179:Src/state.c   **** 				break;
 180:Src/state.c   **** 			default:
 181:Src/state.c   **** 				break;
 182:Src/state.c   **** 			}
 183:Src/state.c   **** 			break;
 184:Src/state.c   **** 		case ID_ATC_POT:
 185:Src/state.c   **** 			atc_pot_operations();
 186:Src/state.c   **** 			break;
 187:Src/state.c   **** 		case ID_ATC_MAX_VAL:
 188:Src/state.c   **** 			break;
 189:Src/state.c   **** 		default:
 190:Src/state.c   **** 			break;
 191:Src/state.c   **** 		}
 192:Src/state.c   **** 	}
 193:Src/state.c   **** }
 194:Src/state.c   **** /*******************************************************************
 195:Src/state.c   ****  *                         END IDLE STATE
 196:Src/state.c   ****  *******************************************************************/
 197:Src/state.c   **** /*******************************************************************
 198:Src/state.c   ****  *                        START SETUP STATE
 199:Src/state.c   ****  *******************************************************************/
 200:Src/state.c   **** void setup()
 201:Src/state.c   **** {
 385              		.loc 1 201 1 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 202:Src/state.c   **** 	if(setup_init == 0){
 389              		.loc 1 202 2 view .LVU124
 390              		.loc 1 202 16 is_stmt 0 view .LVU125
ARM GAS  /tmp/ccBPpXQI.s 			page 13


 391 0000 434B     		ldr	r3, .L41
 392 0002 1B68     		ldr	r3, [r3]
 393              		.loc 1 202 4 view .LVU126
 394 0004 73B9     		cbnz	r3, .L25
 203:Src/state.c   **** 		setup_init = 1; //set that setup procedure is started
 395              		.loc 1 203 3 is_stmt 1 view .LVU127
 396              		.loc 1 203 14 is_stmt 0 view .LVU128
 397 0006 424B     		ldr	r3, .L41
 398 0008 0122     		movs	r2, #1
 399 000a 1A60     		str	r2, [r3]
 204:Src/state.c   **** 		if((atc_connected == 1) && (critical_errors = 0)){
 400              		.loc 1 204 3 is_stmt 1 view .LVU129
 401              		.loc 1 204 21 is_stmt 0 view .LVU130
 402 000c 414B     		ldr	r3, .L41+4
 403 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 404              		.loc 1 204 5 view .LVU131
 405 0010 9342     		cmp	r3, r2
 406 0012 03D0     		beq	.L36
 407              	.L26:
 205:Src/state.c   **** 			//If Analog to CAN device is connected, brake is pressed and there aren't critical erros -> 
 206:Src/state.c   **** 				//-> send pre-charge request to HV
 207:Src/state.c   **** 			can1.tx_id = ID_REQ_PRCH;
 208:Src/state.c   **** 			can1.dataTx[0] = 1;
 209:Src/state.c   **** 			can1.tx_size = 1;
 210:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 211:Src/state.c   **** 			init_precharge_start_time = count_ms_abs; //take the time when the pre-charge is sent
 212:Src/state.c   **** 		}else{
 213:Src/state.c   **** 			//Can't turn on TS caused by some errors
 214:Src/state.c   **** 			current_state = STATE_IDLE; //return to idle state
 408              		.loc 1 214 4 is_stmt 1 view .LVU132
 409              		.loc 1 214 18 is_stmt 0 view .LVU133
 410 0014 404B     		ldr	r3, .L41+8
 411 0016 0122     		movs	r2, #1
 412 0018 1A70     		strb	r2, [r3]
 413 001a 7047     		bx	lr
 414              	.L36:
 204:Src/state.c   **** 		if((atc_connected == 1) && (critical_errors = 0)){
 415              		.loc 1 204 47 discriminator 1 view .LVU134
 416 001c 3F4B     		ldr	r3, .L41+12
 417 001e 0022     		movs	r2, #0
 418 0020 1A60     		str	r2, [r3]
 419 0022 F7E7     		b	.L26
 420              	.L25:
 201:Src/state.c   **** 	if(setup_init == 0){
 421              		.loc 1 201 1 view .LVU135
 422 0024 70B5     		push	{r4, r5, r6, lr}
 423              	.LCFI3:
 424              		.cfi_def_cfa_offset 16
 425              		.cfi_offset 4, -16
 426              		.cfi_offset 5, -12
 427              		.cfi_offset 6, -8
 428              		.cfi_offset 14, -4
 215:Src/state.c   **** 			// TODO: report error to steer
 216:Src/state.c   **** 		}
 217:Src/state.c   **** 	}else if(setup_init == 1){
 429              		.loc 1 217 8 is_stmt 1 view .LVU136
 430              		.loc 1 217 10 is_stmt 0 view .LVU137
ARM GAS  /tmp/ccBPpXQI.s 			page 14


 431 0026 012B     		cmp	r3, #1
 432 0028 04D0     		beq	.L37
 218:Src/state.c   **** 		if(count_ms_abs - init_precharge_start_time > 5000){
 219:Src/state.c   **** 			// report error
 220:Src/state.c   **** 			current_state = STATE_IDLE;
 221:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 222:Src/state.c   **** 			switch(can1.rx_id){
 223:Src/state.c   **** 				case ID_BMS_HV:
 224:Src/state.c   **** 					if(can1.dataRx[0] == 1){ //Pre-cherge ended sucessfully
 225:Src/state.c   **** 						setup_init = 2;
 226:Src/state.c   **** 					}else{ //Pre-charge failed
 227:Src/state.c   **** 						current_state = STATE_IDLE;
 228:Src/state.c   **** 						//TODO: send error to steer
 229:Src/state.c   **** 					}
 230:Src/state.c   **** 			}
 231:Src/state.c   **** 		}
 232:Src/state.c   **** 	}else if(setup_init == 2){
 433              		.loc 1 232 8 is_stmt 1 view .LVU138
 434              		.loc 1 232 10 is_stmt 0 view .LVU139
 435 002a 022B     		cmp	r3, #2
 436 002c 24D0     		beq	.L38
 233:Src/state.c   **** 		//send command inverter enable
 234:Src/state.c   **** 		can1.tx_id = ID_REQ_INV_DX;
 235:Src/state.c   **** 		can1.dataTx[0] = 0x51;
 236:Src/state.c   **** 		can1.dataTx[1] = 0x00;
 237:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 238:Src/state.c   **** 		can1.tx_size = 3;
 239:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 240:Src/state.c   **** 
 241:Src/state.c   **** 		//send request inverter enable
 242:Src/state.c   **** 		can1.tx_id = ID_ASK_INV_DX;
 243:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 244:Src/state.c   **** 		can1.dataTx[1] = 0xE8;
 245:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 246:Src/state.c   **** 		can1.tx_size = 3;
 247:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 248:Src/state.c   **** 
 249:Src/state.c   **** 		setup_init = 3;
 250:Src/state.c   **** 
 251:Src/state.c   **** 		init_inv_resp = count_ms_abs;
 252:Src/state.c   **** 	}else if(setup_init == 3){
 437              		.loc 1 252 8 is_stmt 1 view .LVU140
 438              		.loc 1 252 10 is_stmt 0 view .LVU141
 439 002e 032B     		cmp	r3, #3
 440 0030 45D0     		beq	.L39
 441              	.L24:
 253:Src/state.c   **** 		if(count_ms_abs - init_inv_resp > 10000){
 254:Src/state.c   **** 			// report error
 255:Src/state.c   **** 			//send pre-charge OFF req
 256:Src/state.c   **** 			can1.tx_id = ID_REQ_PRCH;
 257:Src/state.c   **** 			can1.dataTx[0] = 0x00;
 258:Src/state.c   **** 			can1.tx_size = 1;
 259:Src/state.c   **** 			CAN_Send(&can1, highPriority);
 260:Src/state.c   **** 			current_state = STATE_IDLE;
 261:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 262:Src/state.c   **** 			switch(can1.rx_id){
 263:Src/state.c   **** 				case ID_REQ_INV_DX:
ARM GAS  /tmp/ccBPpXQI.s 			page 15


 264:Src/state.c   **** 					if(can1.dataRx[0] == 0xE0 && can1.dataRx[1] == 0x01 && can1.dataRx[2] == 0x00 && can1.dataRx[3
 265:Src/state.c   **** 						setup_init = 4;
 266:Src/state.c   **** 					}
 267:Src/state.c   **** 			}			
 268:Src/state.c   **** 		}
 269:Src/state.c   **** 	}else if(setup_init == 4){
 270:Src/state.c   **** 		// In this state all is ready for run //
 271:Src/state.c   **** 		// Waiting for run signal from steer //
 272:Src/state.c   **** 		
 273:Src/state.c   **** 	}
 274:Src/state.c   **** 	/*if (fifoRxDataCAN_pop(&can1))
 275:Src/state.c   **** 	{
 276:Src/state.c   **** 		switch (can1.rx_id)
 277:Src/state.c   **** 		{
 278:Src/state.c   **** 		case ID_STEERING_WEEL_1:
 279:Src/state.c   **** 			switch (can1.dataRx[0])
 280:Src/state.c   **** 			{
 281:Src/state.c   **** 			//----- change state to run -----//
 282:Src/state.c   **** 			case 5:
 283:Src/state.c   **** 				// If inverter are ON and Brake is Pressed
 284:Src/state.c   **** 				current_state = STATE_RUN;
 285:Src/state.c   **** 				can1.tx_id = ID_ACU_2;
 286:Src/state.c   **** 				can1.dataRx[0] = 5;
 287:Src/state.c   **** 				can1.tx_size = 1;
 288:Src/state.c   **** 				CAN_Send(&can1, normalPriority);
 289:Src/state.c   **** 				break;
 290:Src/state.c   **** 			// Turn On inverter Dx
 291:Src/state.c   **** 			case 8:
 292:Src/state.c   **** 				// If Inverter Temp < 80
 293:Src/state.c   **** 				break;
 294:Src/state.c   **** 			// Turn On inverter Sx
 295:Src/state.c   **** 			case 9:
 296:Src/state.c   **** 				// if Iverter Temp < 80
 297:Src/state.c   **** 				break;
 298:Src/state.c   **** 			default:
 299:Src/state.c   **** 				break;
 300:Src/state.c   **** 			}
 301:Src/state.c   **** 			break;
 302:Src/state.c   **** 		case ID_BMS_HV:
 303:Src/state.c   **** 			switch (can1.dataRx[0])
 304:Src/state.c   **** 			{
 305:Src/state.c   **** 			case 4:
 306:Src/state.c   **** 				// Shutdown Confirmed
 307:Src/state.c   **** 				break;
 308:Src/state.c   **** 			case 8:
 309:Src/state.c   **** 				// Shutdown from Error
 310:Src/state.c   **** 				break;
 311:Src/state.c   **** 			}
 312:Src/state.c   **** 			break;
 313:Src/state.c   **** 		case ID_ATC_POT:
 314:Src/state.c   **** 			atc_pot_operations();
 315:Src/state.c   **** 			break;
 316:Src/state.c   **** 		case ID_REQ_INV_DX:
 317:Src/state.c   **** 			switch (can1.dataRx[0])
 318:Src/state.c   **** 			{
 319:Src/state.c   **** 			case 0x4A:
 320:Src/state.c   **** 				// Update Inverter Dx Temp = (can1.RxData[2] * 256 + can1.RxData[1] - 15797) / 112.1182
ARM GAS  /tmp/ccBPpXQI.s 			page 16


 321:Src/state.c   **** 				break;
 322:Src/state.c   **** 			case 0xD8:
 323:Src/state.c   **** 				if (can1.dataRx[2] == 0x0C  && request of shutdown == false)
 324:Src/state.c   **** 				{
 325:Src/state.c   **** 					can1.dataTx[0] = 0x09;
 326:Src/state.c   **** 					can1.dataTx[1] = 0;
 327:Src/state.c   **** 					can1.dataTx[2] = 0;
 328:Src/state.c   **** 					can1.dataTx[3] = 0;
 329:Src/state.c   **** 					can1.dataTx[4] = 0;
 330:Src/state.c   **** 					can1.dataTx[5] = 0;
 331:Src/state.c   **** 					can1.dataTx[6] = 0;
 332:Src/state.c   **** 					can1.dataTx[7] = 0;
 333:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 334:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 335:Src/state.c   **** 					// Inverter Dx true
 336:Src/state.c   **** 				}
 337:Src/state.c   **** 				else
 338:Src/state.c   **** 				{
 339:Src/state.c   **** 					can1.dataTx[0] = 0xD0;
 340:Src/state.c   **** 					can1.dataTx[1] = 0;
 341:Src/state.c   **** 					can1.dataTx[2] = 0;
 342:Src/state.c   **** 					can1.dataTx[3] = 0;
 343:Src/state.c   **** 					can1.dataTx[4] = 0;
 344:Src/state.c   **** 					can1.dataTx[5] = 0;
 345:Src/state.c   **** 					can1.dataTx[6] = 0;
 346:Src/state.c   **** 					can1.dataTx[7] = 0;
 347:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 348:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 349:Src/state.c   **** 					// Inverter Dx false
 350:Src/state.c   **** 				}
 351:Src/state.c   **** 				break;
 352:Src/state.c   **** 			}
 353:Src/state.c   **** 			break;
 354:Src/state.c   **** 		case ID_REQ_INV_SX:
 355:Src/state.c   **** 			switch (can1.dataRx[0])
 356:Src/state.c   **** 			{
 357:Src/state.c   **** 			case 0x4A:
 358:Src/state.c   **** 				// Update Inverter Sx Temp = (can1.RxData[2] * 256 + can1.RxData[1] - 15797) / 112.1182
 359:Src/state.c   **** 				break;
 360:Src/state.c   **** 			case 0xD8:
 361:Src/state.c   **** 				if (can1.dataRx[2] == 0x0C  && request of shutdown == false)
 362:Src/state.c   **** 				{
 363:Src/state.c   **** 					can1.dataTx[0] = 0x08;
 364:Src/state.c   **** 					can1.dataTx[1] = 0;
 365:Src/state.c   **** 					can1.dataTx[2] = 0;
 366:Src/state.c   **** 					can1.dataTx[3] = 0;
 367:Src/state.c   **** 					can1.dataTx[4] = 0;
 368:Src/state.c   **** 					can1.dataTx[5] = 0;
 369:Src/state.c   **** 					can1.dataTx[6] = 0;
 370:Src/state.c   **** 					can1.dataTx[7] = 0;
 371:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 372:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 373:Src/state.c   **** 					// Inverter Sx true
 374:Src/state.c   **** 				}
 375:Src/state.c   **** 				else
 376:Src/state.c   **** 				{
 377:Src/state.c   **** 					can1.dataTx[0] = 0x0C;
ARM GAS  /tmp/ccBPpXQI.s 			page 17


 378:Src/state.c   **** 					can1.dataTx[1] = 0;
 379:Src/state.c   **** 					can1.dataTx[2] = 0;
 380:Src/state.c   **** 					can1.dataTx[3] = 0;
 381:Src/state.c   **** 					can1.dataTx[4] = 0;
 382:Src/state.c   **** 					can1.dataTx[5] = 0;
 383:Src/state.c   **** 					can1.dataTx[6] = 0;
 384:Src/state.c   **** 					can1.dataTx[7] = 0;
 385:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 386:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 387:Src/state.c   **** 					// Inverter Sx false
 388:Src/state.c   **** 				}
 389:Src/state.c   **** 				break;
 390:Src/state.c   **** 			}
 391:Src/state.c   **** 			break;
 392:Src/state.c   **** 		default:
 393:Src/state.c   **** 			break;
 394:Src/state.c   **** 		}
 395:Src/state.c   **** 	}*/
 396:Src/state.c   **** }
 442              		.loc 1 396 1 view .LVU142
 443 0032 70BD     		pop	{r4, r5, r6, pc}
 444              	.L37:
 218:Src/state.c   **** 			// report error
 445              		.loc 1 218 3 is_stmt 1 view .LVU143
 218:Src/state.c   **** 			// report error
 446              		.loc 1 218 19 is_stmt 0 view .LVU144
 447 0034 3A4B     		ldr	r3, .L41+16
 448 0036 1B68     		ldr	r3, [r3]
 449 0038 3A4A     		ldr	r2, .L41+20
 450 003a 1268     		ldr	r2, [r2]
 451 003c 9B1A     		subs	r3, r3, r2
 218:Src/state.c   **** 			// report error
 452              		.loc 1 218 5 view .LVU145
 453 003e 41F28832 		movw	r2, #5000
 454 0042 9342     		cmp	r3, r2
 455 0044 03D9     		bls	.L29
 220:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 456              		.loc 1 220 4 is_stmt 1 view .LVU146
 220:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 457              		.loc 1 220 18 is_stmt 0 view .LVU147
 458 0046 344B     		ldr	r3, .L41+8
 459 0048 0122     		movs	r2, #1
 460 004a 1A70     		strb	r2, [r3]
 461 004c F1E7     		b	.L24
 462              	.L29:
 221:Src/state.c   **** 			switch(can1.rx_id){
 463              		.loc 1 221 9 is_stmt 1 view .LVU148
 221:Src/state.c   **** 			switch(can1.rx_id){
 464              		.loc 1 221 13 is_stmt 0 view .LVU149
 465 004e 3648     		ldr	r0, .L41+24
 466 0050 FFF7FEFF 		bl	fifoRxDataCAN_pop
 467              	.LVL11:
 221:Src/state.c   **** 			switch(can1.rx_id){
 468              		.loc 1 221 12 view .LVU150
 469 0054 0028     		cmp	r0, #0
 470 0056 ECD0     		beq	.L24
 222:Src/state.c   **** 				case ID_BMS_HV:
ARM GAS  /tmp/ccBPpXQI.s 			page 18


 471              		.loc 1 222 4 is_stmt 1 view .LVU151
 222:Src/state.c   **** 				case ID_BMS_HV:
 472              		.loc 1 222 15 is_stmt 0 view .LVU152
 473 0058 334B     		ldr	r3, .L41+24
 474 005a 1B6B     		ldr	r3, [r3, #48]
 222:Src/state.c   **** 				case ID_BMS_HV:
 475              		.loc 1 222 4 view .LVU153
 476 005c AA2B     		cmp	r3, #170
 477 005e E8D1     		bne	.L24
 224:Src/state.c   **** 						setup_init = 2;
 478              		.loc 1 224 6 is_stmt 1 view .LVU154
 224:Src/state.c   **** 						setup_init = 2;
 479              		.loc 1 224 20 is_stmt 0 view .LVU155
 480 0060 314B     		ldr	r3, .L41+24
 481 0062 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 224:Src/state.c   **** 						setup_init = 2;
 482              		.loc 1 224 8 view .LVU156
 483 0064 012B     		cmp	r3, #1
 484 0066 03D0     		beq	.L40
 227:Src/state.c   **** 						//TODO: send error to steer
 485              		.loc 1 227 7 is_stmt 1 view .LVU157
 227:Src/state.c   **** 						//TODO: send error to steer
 486              		.loc 1 227 21 is_stmt 0 view .LVU158
 487 0068 2B4B     		ldr	r3, .L41+8
 488 006a 0122     		movs	r2, #1
 489 006c 1A70     		strb	r2, [r3]
 490 006e E0E7     		b	.L24
 491              	.L40:
 225:Src/state.c   **** 					}else{ //Pre-charge failed
 492              		.loc 1 225 7 is_stmt 1 view .LVU159
 225:Src/state.c   **** 					}else{ //Pre-charge failed
 493              		.loc 1 225 18 is_stmt 0 view .LVU160
 494 0070 274B     		ldr	r3, .L41
 495 0072 0222     		movs	r2, #2
 496 0074 1A60     		str	r2, [r3]
 497 0076 DCE7     		b	.L24
 498              	.L38:
 234:Src/state.c   **** 		can1.dataTx[0] = 0x51;
 499              		.loc 1 234 3 is_stmt 1 view .LVU161
 234:Src/state.c   **** 		can1.dataTx[0] = 0x51;
 500              		.loc 1 234 14 is_stmt 0 view .LVU162
 501 0078 2B4C     		ldr	r4, .L41+24
 502 007a 4FF4C173 		mov	r3, #386
 503 007e E362     		str	r3, [r4, #44]
 235:Src/state.c   **** 		can1.dataTx[1] = 0x00;
 504              		.loc 1 235 3 is_stmt 1 view .LVU163
 235:Src/state.c   **** 		can1.dataTx[1] = 0x00;
 505              		.loc 1 235 18 is_stmt 0 view .LVU164
 506 0080 5123     		movs	r3, #81
 507 0082 2373     		strb	r3, [r4, #12]
 236:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 508              		.loc 1 236 3 is_stmt 1 view .LVU165
 236:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 509              		.loc 1 236 18 is_stmt 0 view .LVU166
 510 0084 0025     		movs	r5, #0
 511 0086 6573     		strb	r5, [r4, #13]
 237:Src/state.c   **** 		can1.tx_size = 3;
ARM GAS  /tmp/ccBPpXQI.s 			page 19


 512              		.loc 1 237 3 is_stmt 1 view .LVU167
 237:Src/state.c   **** 		can1.tx_size = 3;
 513              		.loc 1 237 18 is_stmt 0 view .LVU168
 514 0088 A573     		strb	r5, [r4, #14]
 238:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 515              		.loc 1 238 3 is_stmt 1 view .LVU169
 238:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 516              		.loc 1 238 16 is_stmt 0 view .LVU170
 517 008a 0326     		movs	r6, #3
 518 008c 2660     		str	r6, [r4]
 239:Src/state.c   **** 
 519              		.loc 1 239 3 is_stmt 1 view .LVU171
 520 008e 2946     		mov	r1, r5
 521 0090 2046     		mov	r0, r4
 522 0092 FFF7FEFF 		bl	CAN_Send
 523              	.LVL12:
 242:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 524              		.loc 1 242 3 view .LVU172
 242:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 525              		.loc 1 242 14 is_stmt 0 view .LVU173
 526 0096 40F20223 		movw	r3, #514
 527 009a E362     		str	r3, [r4, #44]
 243:Src/state.c   **** 		can1.dataTx[1] = 0xE8;
 528              		.loc 1 243 3 is_stmt 1 view .LVU174
 243:Src/state.c   **** 		can1.dataTx[1] = 0xE8;
 529              		.loc 1 243 18 is_stmt 0 view .LVU175
 530 009c 3D23     		movs	r3, #61
 531 009e 2373     		strb	r3, [r4, #12]
 244:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 532              		.loc 1 244 3 is_stmt 1 view .LVU176
 244:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 533              		.loc 1 244 18 is_stmt 0 view .LVU177
 534 00a0 E823     		movs	r3, #232
 535 00a2 6373     		strb	r3, [r4, #13]
 245:Src/state.c   **** 		can1.tx_size = 3;
 536              		.loc 1 245 3 is_stmt 1 view .LVU178
 245:Src/state.c   **** 		can1.tx_size = 3;
 537              		.loc 1 245 18 is_stmt 0 view .LVU179
 538 00a4 A573     		strb	r5, [r4, #14]
 246:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 539              		.loc 1 246 3 is_stmt 1 view .LVU180
 246:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 540              		.loc 1 246 16 is_stmt 0 view .LVU181
 541 00a6 2660     		str	r6, [r4]
 247:Src/state.c   **** 
 542              		.loc 1 247 3 is_stmt 1 view .LVU182
 543 00a8 2946     		mov	r1, r5
 544 00aa 2046     		mov	r0, r4
 545 00ac FFF7FEFF 		bl	CAN_Send
 546              	.LVL13:
 249:Src/state.c   **** 
 547              		.loc 1 249 3 view .LVU183
 249:Src/state.c   **** 
 548              		.loc 1 249 14 is_stmt 0 view .LVU184
 549 00b0 174B     		ldr	r3, .L41
 550 00b2 1E60     		str	r6, [r3]
 251:Src/state.c   **** 	}else if(setup_init == 3){
ARM GAS  /tmp/ccBPpXQI.s 			page 20


 551              		.loc 1 251 3 is_stmt 1 view .LVU185
 251:Src/state.c   **** 	}else if(setup_init == 3){
 552              		.loc 1 251 17 is_stmt 0 view .LVU186
 553 00b4 1A4B     		ldr	r3, .L41+16
 554 00b6 1A68     		ldr	r2, [r3]
 555 00b8 1C4B     		ldr	r3, .L41+28
 556 00ba 1A60     		str	r2, [r3]
 557 00bc B9E7     		b	.L24
 558              	.L39:
 253:Src/state.c   **** 			// report error
 559              		.loc 1 253 3 is_stmt 1 view .LVU187
 253:Src/state.c   **** 			// report error
 560              		.loc 1 253 19 is_stmt 0 view .LVU188
 561 00be 184B     		ldr	r3, .L41+16
 562 00c0 1B68     		ldr	r3, [r3]
 563 00c2 1A4A     		ldr	r2, .L41+28
 564 00c4 1268     		ldr	r2, [r2]
 565 00c6 9B1A     		subs	r3, r3, r2
 253:Src/state.c   **** 			// report error
 566              		.loc 1 253 5 view .LVU189
 567 00c8 42F21072 		movw	r2, #10000
 568 00cc 9342     		cmp	r3, r2
 569 00ce 0CD9     		bls	.L32
 256:Src/state.c   **** 			can1.dataTx[0] = 0x00;
 570              		.loc 1 256 4 is_stmt 1 view .LVU190
 256:Src/state.c   **** 			can1.dataTx[0] = 0x00;
 571              		.loc 1 256 15 is_stmt 0 view .LVU191
 572 00d0 1548     		ldr	r0, .L41+24
 573 00d2 B423     		movs	r3, #180
 574 00d4 C362     		str	r3, [r0, #44]
 257:Src/state.c   **** 			can1.tx_size = 1;
 575              		.loc 1 257 4 is_stmt 1 view .LVU192
 257:Src/state.c   **** 			can1.tx_size = 1;
 576              		.loc 1 257 19 is_stmt 0 view .LVU193
 577 00d6 0023     		movs	r3, #0
 578 00d8 0373     		strb	r3, [r0, #12]
 258:Src/state.c   **** 			CAN_Send(&can1, highPriority);
 579              		.loc 1 258 4 is_stmt 1 view .LVU194
 258:Src/state.c   **** 			CAN_Send(&can1, highPriority);
 580              		.loc 1 258 17 is_stmt 0 view .LVU195
 581 00da 0124     		movs	r4, #1
 582 00dc 0460     		str	r4, [r0]
 259:Src/state.c   **** 			current_state = STATE_IDLE;
 583              		.loc 1 259 4 is_stmt 1 view .LVU196
 584 00de 2146     		mov	r1, r4
 585 00e0 FFF7FEFF 		bl	CAN_Send
 586              	.LVL14:
 260:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 587              		.loc 1 260 4 view .LVU197
 260:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 588              		.loc 1 260 18 is_stmt 0 view .LVU198
 589 00e4 0C4B     		ldr	r3, .L41+8
 590 00e6 1C70     		strb	r4, [r3]
 591 00e8 A3E7     		b	.L24
 592              	.L32:
 261:Src/state.c   **** 			switch(can1.rx_id){
 593              		.loc 1 261 9 is_stmt 1 view .LVU199
ARM GAS  /tmp/ccBPpXQI.s 			page 21


 261:Src/state.c   **** 			switch(can1.rx_id){
 594              		.loc 1 261 13 is_stmt 0 view .LVU200
 595 00ea 0F48     		ldr	r0, .L41+24
 596 00ec FFF7FEFF 		bl	fifoRxDataCAN_pop
 597              	.LVL15:
 261:Src/state.c   **** 			switch(can1.rx_id){
 598              		.loc 1 261 12 view .LVU201
 599 00f0 0028     		cmp	r0, #0
 600 00f2 9ED0     		beq	.L24
 262:Src/state.c   **** 				case ID_REQ_INV_DX:
 601              		.loc 1 262 4 is_stmt 1 view .LVU202
 262:Src/state.c   **** 				case ID_REQ_INV_DX:
 602              		.loc 1 262 15 is_stmt 0 view .LVU203
 603 00f4 0C4B     		ldr	r3, .L41+24
 604 00f6 1B6B     		ldr	r3, [r3, #48]
 262:Src/state.c   **** 				case ID_REQ_INV_DX:
 605              		.loc 1 262 4 view .LVU204
 606 00f8 B3F5C17F 		cmp	r3, #386
 607 00fc 99D1     		bne	.L24
 264:Src/state.c   **** 						setup_init = 4;
 608              		.loc 1 264 6 is_stmt 1 view .LVU205
 264:Src/state.c   **** 						setup_init = 4;
 609              		.loc 1 264 84 is_stmt 0 view .LVU206
 610 00fe 0A4B     		ldr	r3, .L41+24
 611 0100 5B69     		ldr	r3, [r3, #20]
 264:Src/state.c   **** 						setup_init = 4;
 612              		.loc 1 264 8 view .LVU207
 613 0102 B3F5F07F 		cmp	r3, #480
 614 0106 94D1     		bne	.L24
 265:Src/state.c   **** 					}
 615              		.loc 1 265 7 is_stmt 1 view .LVU208
 265:Src/state.c   **** 					}
 616              		.loc 1 265 18 is_stmt 0 view .LVU209
 617 0108 014B     		ldr	r3, .L41
 618 010a 0422     		movs	r2, #4
 619 010c 1A60     		str	r2, [r3]
 273:Src/state.c   **** 	/*if (fifoRxDataCAN_pop(&can1))
 620              		.loc 1 273 2 is_stmt 1 view .LVU210
 621              		.loc 1 396 1 is_stmt 0 view .LVU211
 622 010e 90E7     		b	.L24
 623              	.L42:
 624              		.align	2
 625              	.L41:
 626 0110 00000000 		.word	.LANCHOR3
 627 0114 00000000 		.word	atc_connected
 628 0118 00000000 		.word	current_state
 629 011c 00000000 		.word	.LANCHOR4
 630 0120 00000000 		.word	count_ms_abs
 631 0124 00000000 		.word	.LANCHOR5
 632 0128 00000000 		.word	can1
 633 012c 00000000 		.word	.LANCHOR6
 634              		.cfi_endproc
 635              	.LFE147:
 637              		.section	.rodata.debug_operations.str1.4,"aMS",%progbits,1
 638              		.align	2
 639              	.LC0:
 640 0000 68656C70 		.ascii	"help\000"
ARM GAS  /tmp/ccBPpXQI.s 			page 22


 640      00
 641 0005 000000   		.align	2
 642              	.LC1:
 643 0008 0D0A2A2A 		.ascii	"\015\012***********ECU HELP***********\015\012Avaia"
 643      2A2A2A2A 
 643      2A2A2A2A 
 643      2A454355 
 643      2048454C 
 644 002f 626C6520 		.ascii	"ble msg are:\015\012\011-- status -> print ECU stat"
 644      6D736720 
 644      6172653A 
 644      0D0A092D 
 644      2D207374 
 645 0059 75730D0A 		.ascii	"us\015\012\011-- can sniffer -> enter in can sniffe"
 645      092D2D20 
 645      63616E20 
 645      736E6966 
 645      66657220 
 646 0083 72206D6F 		.ascii	"r mode (q for quit)\015\012\011-- send -> send a CA"
 646      64652028 
 646      7120666F 
 646      72207175 
 646      6974290D 
 647 00ad 4E206D73 		.ascii	"N msg (xxxx.xxx.xxx.xxx ... ecc)\015\012\011-- sd s"
 647      67202878 
 647      7878782E 
 647      7878782E 
 647      7878782E 
 648 00d7 74617475 		.ascii	"tatus -> print SD status and the name of file insid"
 648      73202D3E 
 648      20707269 
 648      6E742053 
 648      44207374 
 649 010a 650D0A09 		.ascii	"e\015\012\011-- sd file -> print files inside the S"
 649      2D2D2073 
 649      64206669 
 649      6C65202D 
 649      3E207072 
 650 0134 440D0A09 		.ascii	"D\015\012\011-- time -> print activity time\015\012"
 650      2D2D2074 
 650      696D6520 
 650      2D3E2070 
 650      72696E74 
 651 0158 092D2D20 		.ascii	"\011-- codev  -> print code version\015\012\011-- b"
 651      636F6465 
 651      7620202D 
 651      3E207072 
 651      696E7420 
 652 017f 65737420 		.ascii	"est car? -> print the best car\015\012\000"
 652      6361723F 
 652      202D3E20 
 652      7072696E 
 652      74207468 
 653              		.align	2
 654              	.LC2:
 655 01a0 636F6465 		.ascii	"codev\000"
 655      7600
ARM GAS  /tmp/ccBPpXQI.s 			page 23


 656 01a6 0000     		.align	2
 657              	.LC3:
 658 01a8 74696D65 		.ascii	"time\000"
 658      00
 659 01ad 000000   		.align	2
 660              	.LC4:
 661 01b0 0D0A5469 		.ascii	"\015\012Time: %d hours : %d min : %d sec : %d dec\015"
 661      6D653A20 
 661      25642068 
 661      6F757273 
 661      203A2025 
 662 01dc 0A00     		.ascii	"\012\000"
 663 01de 0000     		.align	2
 664              	.LC5:
 665 01e0 73746174 		.ascii	"status\000"
 665      757300
 666 01e7 00       		.align	2
 667              	.LC6:
 668 01e8 0D0A0A74 		.ascii	"\015\012\012type of status:\015\012\011 0 = OK\015\012"
 668      79706520 
 668      6F662073 
 668      74617475 
 668      733A0D0A 
 669 0206 09203120 		.ascii	"\011 1 = ERROR\015\012\011 2 = BUSY\015\012\011 3 ="
 669      3D204552 
 669      524F520D 
 669      0A092032 
 669      203D2042 
 670 0224 2054494D 		.ascii	" TIMEOUT\015\012\012CAN1 status:\015\012\011CAN1 co"
 670      454F5554 
 670      0D0A0A43 
 670      414E3120 
 670      73746174 
 671 0245 6E666967 		.ascii	"nfig status: %d \015\012\011CAN1 notification statu"
 671      20737461 
 671      7475733A 
 671      20256420 
 671      0D0A0943 
 672 026f 733A2025 		.ascii	"s: %d\015\012\011CAN1 start status: %d\015\012\000"
 672      640D0A09 
 672      43414E31 
 672      20737461 
 672      72742073 
 673 028f 00       		.align	2
 674              	.LC7:
 675 0290 43414E33 		.ascii	"CAN3 status:\015\012\011CAN3 config status: %d \015"
 675      20737461 
 675      7475733A 
 675      0D0A0943 
 675      414E3320 
 676 02b7 0A094341 		.ascii	"\012\011CAN3 notification status: %d\015\012\011CAN"
 676      4E33206E 
 676      6F746966 
 676      69636174 
 676      696F6E20 
 677 02db 33207374 		.ascii	"3 start status: %d\015\012\000"
 677      61727420 
ARM GAS  /tmp/ccBPpXQI.s 			page 24


 677      73746174 
 677      75733A20 
 677      25640D0A 
 678              		.align	2
 679              	.LC8:
 680 02f0 0D0A4375 		.ascii	"\015\012Current state: STATE_INIT\015\012\000"
 680      7272656E 
 680      74207374 
 680      6174653A 
 680      20535441 
 681 030e 0000     		.align	2
 682              	.LC9:
 683 0310 0D0A4375 		.ascii	"\015\012Current state: STATE_IDLE\015\012\000"
 683      7272656E 
 683      74207374 
 683      6174653A 
 683      20535441 
 684 032e 0000     		.align	2
 685              	.LC10:
 686 0330 0D0A4375 		.ascii	"\015\012Current state: STATE_SETUP\015\012\000"
 686      7272656E 
 686      74207374 
 686      6174653A 
 686      20535441 
 687 034f 00       		.align	2
 688              	.LC11:
 689 0350 0D0A4375 		.ascii	"\015\012Current state: STATE_RUN\015\012\000"
 689      7272656E 
 689      74207374 
 689      6174653A 
 689      20535441 
 690 036d 000000   		.align	2
 691              	.LC12:
 692 0370 0D0A4465 		.ascii	"\015\012Device connected : (0 = no, 1 = yes (for ea"
 692      76696365 
 692      20636F6E 
 692      6E656374 
 692      6564203A 
 693 039d 63682062 		.ascii	"ch bit))\015\012\011 IMU -> %d\015\012\011 ITS -> %"
 693      69742929 
 693      0D0A0920 
 693      494D5520 
 693      2D3E2025 
 694 03be 640D0A00 		.ascii	"d\015\012\000"
 695 03c2 0000     		.align	2
 696              	.LC13:
 697 03c4 63616E20 		.ascii	"can sniffer\000"
 697      736E6966 
 697      66657200 
 698              		.align	2
 699              	.LC14:
 700 03d0 0D0A456E 		.ascii	"\015\012Enter in can sniffer mode\015\012\000"
 700      74657220 
 700      696E2063 
 700      616E2073 
 700      6E696666 
 701 03ee 0000     		.align	2
ARM GAS  /tmp/ccBPpXQI.s 			page 25


 702              	.LC15:
 703 03f0 7100     		.ascii	"q\000"
 704 03f2 0000     		.align	2
 705              	.LC16:
 706 03f4 0D0A4578 		.ascii	"\015\012Exit from can sniffer mode\015\012\000"
 706      69742066 
 706      726F6D20 
 706      63616E20 
 706      736E6966 
 707 0413 00       		.align	2
 708              	.LC17:
 709 0414 73656E64 		.ascii	"send\000"
 709      00
 710 0419 000000   		.align	2
 711              	.LC18:
 712 041c 0D0A5365 		.ascii	"\015\012Sent %ld %d %d %d %d %d %d %d %d\015\012\000"
 712      6E742025 
 712      6C642025 
 712      64202564 
 712      20256420 
 713 0441 000000   		.align	2
 714              	.LC19:
 715 0444 73642073 		.ascii	"sd status\000"
 715      74617475 
 715      7300
 716 044e 0000     		.align	2
 717              	.LC20:
 718 0450 0D0A5364 		.ascii	"\015\012Sd mounted \000"
 718      206D6F75 
 718      6E746564 
 718      2000
 719 045e 0000     		.align	2
 720              	.LC21:
 721 0460 53642073 		.ascii	"Sd successfully opened and created file: %s\015\012"
 721      75636365 
 721      73736675 
 721      6C6C7920 
 721      6F70656E 
 722 048d 00       		.ascii	"\000"
 723 048e 0000     		.align	2
 724              	.LC22:
 725 0490 5364206F 		.ascii	"Sd open FAILED\015\012\000"
 725      70656E20 
 725      4641494C 
 725      45440D0A 
 725      00
 726 04a1 000000   		.align	2
 727              	.LC23:
 728 04a4 0D0A5364 		.ascii	"\015\012Sd NOT mounted \000"
 728      204E4F54 
 728      206D6F75 
 728      6E746564 
 728      2000
 729 04b6 0000     		.align	2
 730              	.LC24:
 731 04b8 73642066 		.ascii	"sd file\000"
 731      696C6500 
ARM GAS  /tmp/ccBPpXQI.s 			page 26


 732              		.align	2
 733              	.LC25:
 734 04c0 0D0A4669 		.ascii	"\015\012Files inside sd are:\015\012%s\000"
 734      6C657320 
 734      696E7369 
 734      64652073 
 734      64206172 
 735 04db 00       		.align	2
 736              	.LC26:
 737 04dc 62657374 		.ascii	"best car?\000"
 737      20636172 
 737      3F00
 738 04e6 0000     		.align	2
 739              	.LC27:
 740 04e8 0D0A6F6F 		.ascii	"\015\012oooooooooooo oooooooooooo ooooo      ooo oo"
 740      6F6F6F6F 
 740      6F6F6F6F 
 740      6F6F206F 
 740      6F6F6F6F 
 741 0515 6F6F6F20 		.ascii	"ooo   .oooooo.   oooooooooooo\015\012`888'     `8 `"
 741      20202E6F 
 741      6F6F6F6F 
 741      6F2E2020 
 741      206F6F6F 
 742 0542 38383827 		.ascii	"888'     `8 `888b.     `8' `888'  d8P'  `Y8b  `888'"
 742      20202020 
 742      20603820 
 742      60383838 
 742      622E2020 
 743 0575 20202020 		.ascii	"     `8\015\012 888          888          8 `88b.  "
 743      2060380D 
 743      0A203838 
 743      38202020 
 743      20202020 
 744 05a2 20203820 		.ascii	"  8   888  888           888\015\012 888oooo8     8"
 744      20203838 
 744      38202038 
 744      38382020 
 744      20202020 
 745 05cf 38386F6F 		.ascii	"88oooo8     8   `88b.  8   888  888           888oo"
 745      6F6F3820 
 745      20202020 
 745      38202020 
 745      60383862 
 746 0602 6F6F380D 		.ascii	"oo8\015\012 888          888          8     `88b.8 "
 746      0A203838 
 746      38202020 
 746      20202020 
 746      20202038 
 747 062f 20203838 		.ascii	"  888  888           888\015\012 888          888  "
 747      38202038 
 747      38382020 
 747      20202020 
 747      20202020 
 748 065c 20202020 		.ascii	"     o  8       `888   888  `88b    ooo   888o\015\012"
 748      206F2020 
 748      38202020 
ARM GAS  /tmp/ccBPpXQI.s 			page 27


 748      20202020 
 748      60383838 
 749 068c 6F383838 		.ascii	"o888o        o888ooooood8 o8o        `8  o888o  `Y8"
 749      6F202020 
 749      20202020 
 749      206F3838 
 749      386F6F6F 
 750 06bf 626F6F64 		.ascii	"bood8P'  o888ooooood8\015\012\000"
 750      38502720 
 750      206F3838 
 750      386F6F6F 
 750      6F6F6F64 
 751 06d7 00       		.align	2
 752              	.LC28:
 753 06d8 0D0A4552 		.ascii	"\015\012ERROR : msg %s doesn't exist\015\012\000"
 753      524F5220 
 753      3A206D73 
 753      67202573 
 753      20646F65 
 754              		.section	.text.debug_operations,"ax",%progbits
 755              		.align	1
 756              		.global	debug_operations
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 760              		.fpu fpv5-d16
 762              	debug_operations:
 763              	.LFB149:
 397:Src/state.c   **** /*******************************************************************
 398:Src/state.c   ****  *                         END SETUP STATE
 399:Src/state.c   ****  *******************************************************************/
 400:Src/state.c   **** /*******************************************************************
 401:Src/state.c   ****  *                         START RUN STATE
 402:Src/state.c   ****  *******************************************************************/
 403:Src/state.c   **** void run()
 404:Src/state.c   **** {
 405:Src/state.c   **** 	if (fifoRxDataCAN_pop(&can1))
 406:Src/state.c   **** 	{
 407:Src/state.c   **** 		switch (can1.rx_id)
 408:Src/state.c   **** 		{
 409:Src/state.c   **** 		case ID_STEERING_WEEL_1:
 410:Src/state.c   **** 			if (can1.dataRx[0] == 6)
 411:Src/state.c   **** 			{ //----- change state to setup -----//
 412:Src/state.c   **** 				current_state = STATE_SETUP;
 413:Src/state.c   **** 			}
 414:Src/state.c   **** 			break;
 415:Src/state.c   **** 		case ID_ATC_POT:
 416:Src/state.c   **** 			atc_pot_operations();
 417:Src/state.c   **** 			break;
 418:Src/state.c   **** 		default:
 419:Src/state.c   **** 			break;
 420:Src/state.c   **** 		}
 421:Src/state.c   **** 	}
 422:Src/state.c   **** }
 423:Src/state.c   **** /*******************************************************************
 424:Src/state.c   ****  *                         END RUN STATE
 425:Src/state.c   ****  *******************************************************************/
ARM GAS  /tmp/ccBPpXQI.s 			page 28


 426:Src/state.c   **** 
 427:Src/state.c   **** void debug_operations()
 428:Src/state.c   **** {
 764              		.loc 1 428 1 is_stmt 1 view -0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 8
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 769              	.LCFI4:
 770              		.cfi_def_cfa_offset 36
 771              		.cfi_offset 4, -36
 772              		.cfi_offset 5, -32
 773              		.cfi_offset 6, -28
 774              		.cfi_offset 7, -24
 775              		.cfi_offset 8, -20
 776              		.cfi_offset 9, -16
 777              		.cfi_offset 10, -12
 778              		.cfi_offset 11, -8
 779              		.cfi_offset 14, -4
 780 0004 8BB0     		sub	sp, sp, #44
 781              	.LCFI5:
 782              		.cfi_def_cfa_offset 80
 429:Src/state.c   **** 	if (strcmp(debug_rx, "help") == 0)
 783              		.loc 1 429 2 view .LVU213
 784              		.loc 1 429 6 is_stmt 0 view .LVU214
 785 0006 8949     		ldr	r1, .L76
 786 0008 8948     		ldr	r0, .L76+4
 787 000a FFF7FEFF 		bl	strcmp
 788              	.LVL16:
 789              		.loc 1 429 5 view .LVU215
 790 000e 0028     		cmp	r0, #0
 791 0010 3AD0     		beq	.L62
 430:Src/state.c   **** 	{
 431:Src/state.c   **** 		sprintf(debug_tx,
 432:Src/state.c   **** 				"\r\n***********ECU HELP***********\r\n"
 433:Src/state.c   **** 				"Avaiable msg are:\r\n"
 434:Src/state.c   **** 				"\t-- status -> print ECU status\r\n"
 435:Src/state.c   **** 				"\t-- can sniffer -> enter in can sniffer mode (q for quit)\r\n"
 436:Src/state.c   **** 				"\t-- send -> send a CAN msg (xxxx.xxx.xxx.xxx ... ecc)\r\n"
 437:Src/state.c   **** 				"\t-- sd status -> print SD status and the name of file inside\r\n"
 438:Src/state.c   **** 				"\t-- sd file -> print files inside the SD\r\n"
 439:Src/state.c   **** 				"\t-- time -> print activity time\r\n"
 440:Src/state.c   **** 				"\t-- codev  -> print code version\r\n"
 441:Src/state.c   **** 				"\t-- best car? -> print the best car\r\n");
 442:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 443:Src/state.c   **** 	}
 444:Src/state.c   **** 	else if (strcmp(debug_rx, "codev") == 0)
 792              		.loc 1 444 7 is_stmt 1 view .LVU216
 793              		.loc 1 444 11 is_stmt 0 view .LVU217
 794 0012 8849     		ldr	r1, .L76+8
 795 0014 8648     		ldr	r0, .L76+4
 796 0016 FFF7FEFF 		bl	strcmp
 797              	.LVL17:
 798              		.loc 1 444 10 view .LVU218
 799 001a 0028     		cmp	r0, #0
 800 001c 47D0     		beq	.L63
 445:Src/state.c   **** 	{
ARM GAS  /tmp/ccBPpXQI.s 			page 29


 446:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)code_version, strlen(code_version),
 447:Src/state.c   **** 						  100);
 448:Src/state.c   **** 	}
 449:Src/state.c   **** 	else if (strcmp(debug_rx, "time") == 0)
 801              		.loc 1 449 7 is_stmt 1 view .LVU219
 802              		.loc 1 449 11 is_stmt 0 view .LVU220
 803 001e 8649     		ldr	r1, .L76+12
 804 0020 8348     		ldr	r0, .L76+4
 805 0022 FFF7FEFF 		bl	strcmp
 806              	.LVL18:
 807              		.loc 1 449 10 view .LVU221
 808 0026 0028     		cmp	r0, #0
 809 0028 4CD0     		beq	.L64
 450:Src/state.c   **** 	{
 451:Src/state.c   **** 		sprintf(debug_tx, "\r\nTime: %d hours : %d min : %d sec : %d dec\r\n",
 452:Src/state.c   **** 				count_hour, count_min, count_sec, count_dec);
 453:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 454:Src/state.c   **** 	}
 455:Src/state.c   **** 	else if (strcmp(debug_rx, "status") == 0)
 810              		.loc 1 455 7 is_stmt 1 view .LVU222
 811              		.loc 1 455 11 is_stmt 0 view .LVU223
 812 002a 8449     		ldr	r1, .L76+16
 813 002c 8048     		ldr	r0, .L76+4
 814 002e FFF7FEFF 		bl	strcmp
 815              	.LVL19:
 816              		.loc 1 455 10 view .LVU224
 817 0032 0028     		cmp	r0, #0
 818 0034 5FD0     		beq	.L65
 456:Src/state.c   **** 	{
 457:Src/state.c   **** 		sprintf(debug_tx,
 458:Src/state.c   **** 				"\r\n\ntype of status:\r\n"
 459:Src/state.c   **** 				"\t 0 = OK\r\n"
 460:Src/state.c   **** 				"\t 1 = ERROR\r\n"
 461:Src/state.c   **** 				"\t 2 = BUSY\r\n"
 462:Src/state.c   **** 				"\t 3 = TIMEOUT\r\n\n"
 463:Src/state.c   **** 				"CAN1 status:\r\n"
 464:Src/state.c   **** 				"\tCAN1 config status: %d \r\n"
 465:Src/state.c   **** 				"\tCAN1 notification status: %d\r\n"
 466:Src/state.c   **** 				"\tCAN1 start status: %d\r\n",
 467:Src/state.c   **** 				can1.configFilter_status, can1.activateNotif_status,
 468:Src/state.c   **** 				can1.canStart_status);
 469:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 470:Src/state.c   **** 		sprintf(debug_tx,
 471:Src/state.c   **** 				"CAN3 status:\r\n"
 472:Src/state.c   **** 				"\tCAN3 config status: %d \r\n"
 473:Src/state.c   **** 				"\tCAN3 notification status: %d\r\n"
 474:Src/state.c   **** 				"\tCAN3 start status: %d\r\n",
 475:Src/state.c   **** 				can3.configFilter_status, can3.activateNotif_status,
 476:Src/state.c   **** 				can3.canStart_status);
 477:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 478:Src/state.c   **** 		if (current_state == STATE_INIT)
 479:Src/state.c   **** 		{
 480:Src/state.c   **** 			HAL_UART_Transmit(&huart3,
 481:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_INIT\r\n",
 482:Src/state.c   **** 							  strlen("\r\nCurrent state: STATE_INIT\r\n"), 100);
 483:Src/state.c   **** 		}
 484:Src/state.c   **** 		else if (current_state == STATE_IDLE)
ARM GAS  /tmp/ccBPpXQI.s 			page 30


 485:Src/state.c   **** 		{
 486:Src/state.c   **** 			HAL_UART_Transmit(&huart3,
 487:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_IDLE\r\n",
 488:Src/state.c   **** 							  strlen("\r\nCurrent state: STATE_IDLE\r\n"), 100);
 489:Src/state.c   **** 		}
 490:Src/state.c   **** 		else if (current_state == STATE_SETUP)
 491:Src/state.c   **** 		{
 492:Src/state.c   **** 			HAL_UART_Transmit(
 493:Src/state.c   **** 				&huart3, (uint8_t *)"\r\nCurrent state: STATE_SETUP\r\n",
 494:Src/state.c   **** 				strlen("\r\nCurrent state: STATE_SETUP\r\n"), 100);
 495:Src/state.c   **** 		}
 496:Src/state.c   **** 		else if (current_state == STATE_RUN)
 497:Src/state.c   **** 		{
 498:Src/state.c   **** 			HAL_UART_Transmit(&huart3,
 499:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_RUN\r\n",
 500:Src/state.c   **** 							  strlen("\r\nCurrent state: STATE_RUN\r\n"), 100);
 501:Src/state.c   **** 		}
 502:Src/state.c   **** 		sprintf(debug_tx,
 503:Src/state.c   **** 				"\r\n"
 504:Src/state.c   **** 				"Device connected : (0 = no, 1 = yes (for each bit))\r\n"
 505:Src/state.c   **** 				"\t IMU -> %d\r\n"
 506:Src/state.c   **** 				"\t ITS -> %d\r\n",
 507:Src/state.c   **** 				imu_connected, its_connected);
 508:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 509:Src/state.c   **** 	}else if(strcmp(debug_rx, "can sniffer") == 0){
 819              		.loc 1 509 8 is_stmt 1 view .LVU225
 820              		.loc 1 509 11 is_stmt 0 view .LVU226
 821 0036 8249     		ldr	r1, .L76+20
 822 0038 7D48     		ldr	r0, .L76+4
 823 003a FFF7FEFF 		bl	strcmp
 824              	.LVL20:
 825              		.loc 1 509 10 view .LVU227
 826 003e 0028     		cmp	r0, #0
 827 0040 00F0BD80 		beq	.L66
 510:Src/state.c   **** 		canSnifferMode = 1;
 511:Src/state.c   **** 		sprintf(debug_tx,"\r\nEnter in can sniffer mode\r\n");
 512:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 513:Src/state.c   **** 	}else if(strcmp(debug_rx, "q") == 0){
 828              		.loc 1 513 8 is_stmt 1 view .LVU228
 829              		.loc 1 513 11 is_stmt 0 view .LVU229
 830 0044 7F49     		ldr	r1, .L76+24
 831 0046 7A48     		ldr	r0, .L76+4
 832 0048 FFF7FEFF 		bl	strcmp
 833              	.LVL21:
 834              		.loc 1 513 10 view .LVU230
 835 004c 0028     		cmp	r0, #0
 836 004e 00F0D080 		beq	.L67
 514:Src/state.c   **** 		canSnifferMode = 0;
 515:Src/state.c   **** 		sprintf(debug_tx,"\r\nExit from can sniffer mode\r\n");
 516:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 517:Src/state.c   **** 	}else if(strncmp(debug_rx, "send",4) == 0){
 837              		.loc 1 517 8 is_stmt 1 view .LVU231
 838              		.loc 1 517 11 is_stmt 0 view .LVU232
 839 0052 0422     		movs	r2, #4
 840 0054 7C49     		ldr	r1, .L76+28
 841 0056 7648     		ldr	r0, .L76+4
 842 0058 FFF7FEFF 		bl	strncmp
ARM GAS  /tmp/ccBPpXQI.s 			page 31


 843              	.LVL22:
 844              		.loc 1 517 10 view .LVU233
 845 005c 0028     		cmp	r0, #0
 846 005e 00F02B81 		beq	.L68
 518:Src/state.c   **** 		uint8_t dataToSend[8];can1.dataTx[0] = dataToSend[0];
 519:Src/state.c   **** 		uint32_t idToSend;
 520:Src/state.c   **** 		uint8_t offset = (uint8_t)'0';
 521:Src/state.c   **** 		idToSend = ((uint8_t)debug_rx[5]-offset)*1000 + ((uint8_t)debug_rx[6]-offset)*100 + ((uint8_t)deb
 522:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 523:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 524:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 525:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 526:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 527:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 528:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 529:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 530:Src/state.c   **** 		can1.tx_id = idToSend;
 531:Src/state.c   **** 		can1.dataTx[0] = dataToSend[0];
 532:Src/state.c   **** 		can1.dataTx[1] = dataToSend[1];
 533:Src/state.c   **** 		can1.dataTx[2] = dataToSend[2];
 534:Src/state.c   **** 		can1.dataTx[3] = dataToSend[3];
 535:Src/state.c   **** 		can1.dataTx[4] = dataToSend[4];
 536:Src/state.c   **** 		can1.dataTx[5] = dataToSend[5];
 537:Src/state.c   **** 		can1.dataTx[6] = dataToSend[6];
 538:Src/state.c   **** 		can1.dataTx[7] = dataToSend[7];
 539:Src/state.c   **** 		can1.tx_size = 8;
 540:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 541:Src/state.c   **** 		sprintf(debug_tx,"\r\nSent %ld %d %d %d %d %d %d %d %d\r\n", idToSend, dataToSend[0], dataToSend[
 542:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 543:Src/state.c   **** 	}else if (strcmp(debug_rx, "sd status") == 0){
 847              		.loc 1 543 8 is_stmt 1 view .LVU234
 848              		.loc 1 543 12 is_stmt 0 view .LVU235
 849 0062 7A49     		ldr	r1, .L76+32
 850 0064 7248     		ldr	r0, .L76+4
 851 0066 FFF7FEFF 		bl	strcmp
 852              	.LVL23:
 853              		.loc 1 543 11 view .LVU236
 854 006a 0028     		cmp	r0, #0
 855 006c 40F03782 		bne	.L56
 544:Src/state.c   **** 		if(mount_ok == 1){
 856              		.loc 1 544 3 is_stmt 1 view .LVU237
 857              		.loc 1 544 15 is_stmt 0 view .LVU238
 858 0070 774B     		ldr	r3, .L76+36
 859 0072 1B68     		ldr	r3, [r3]
 860              		.loc 1 544 5 view .LVU239
 861 0074 012B     		cmp	r3, #1
 862 0076 00F01182 		beq	.L69
 545:Src/state.c   **** 			HAL_UART_Transmit(&huart3, (uint8_t *)"\r\nSd mounted ", strlen("\r\nSd mounted "), 100);
 546:Src/state.c   **** 			if(successfull_opening == 1){
 547:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 548:Src/state.c   **** 				HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 549:Src/state.c   **** 			}else{
 550:Src/state.c   **** 				HAL_UART_Transmit(&huart3, (uint8_t *)"Sd open FAILED\r\n", strlen("Sd open FAILED\r\n"), 100);
 551:Src/state.c   **** 			}
 552:Src/state.c   **** 		}else{
 553:Src/state.c   **** 			HAL_UART_Transmit(&huart3, (uint8_t *)"\r\nSd NOT mounted ", strlen("\r\nSd NOT mounted "), 100)
 863              		.loc 1 553 4 is_stmt 1 view .LVU240
ARM GAS  /tmp/ccBPpXQI.s 			page 32


 864 007a 6423     		movs	r3, #100
 865 007c 1122     		movs	r2, #17
 866 007e 7549     		ldr	r1, .L76+40
 867 0080 7548     		ldr	r0, .L76+44
 868 0082 FFF7FEFF 		bl	HAL_UART_Transmit
 869              	.LVL24:
 870 0086 0FE0     		b	.L43
 871              	.L62:
 431:Src/state.c   **** 				"\r\n***********ECU HELP***********\r\n"
 872              		.loc 1 431 3 view .LVU241
 873 0088 744C     		ldr	r4, .L76+48
 874 008a 4FF4CC72 		mov	r2, #408
 875 008e 7449     		ldr	r1, .L76+52
 876 0090 2046     		mov	r0, r4
 877 0092 FFF7FEFF 		bl	memcpy
 878              	.LVL25:
 442:Src/state.c   **** 	}
 879              		.loc 1 442 3 view .LVU242
 442:Src/state.c   **** 	}
 880              		.loc 1 442 51 is_stmt 0 view .LVU243
 881 0096 2046     		mov	r0, r4
 882 0098 FFF7FEFF 		bl	strlen
 883              	.LVL26:
 442:Src/state.c   **** 	}
 884              		.loc 1 442 3 view .LVU244
 885 009c 6423     		movs	r3, #100
 886 009e 82B2     		uxth	r2, r0
 887 00a0 2146     		mov	r1, r4
 888 00a2 6D48     		ldr	r0, .L76+44
 889 00a4 FFF7FEFF 		bl	HAL_UART_Transmit
 890              	.LVL27:
 891              	.L43:
 554:Src/state.c   **** 		}
 555:Src/state.c   **** 	}
 556:Src/state.c   **** 	else if(strcmp(debug_rx, "sd file") == 0){
 557:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 558:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 1000);
 559:Src/state.c   **** 	}
 560:Src/state.c   **** 	else if (strcmp(debug_rx, "best car?") == 0)
 561:Src/state.c   **** 	{
 562:Src/state.c   **** 		sprintf(debug_tx,
 563:Src/state.c   **** 			"\r\n"
 564:Src/state.c   **** 			"oooooooooooo oooooooooooo ooooo      ooo ooooo   .oooooo.   oooooooooooo\r\n" 
 565:Src/state.c   **** 			"`888'     `8 `888'     `8 `888b.     `8' `888'  d8P'  `Y8b  `888'     `8\r\n"  
 566:Src/state.c   **** 			" 888          888          8 `88b.    8   888  888           888\r\n"          
 567:Src/state.c   **** 			" 888oooo8     888oooo8     8   `88b.  8   888  888           888oooo8\r\n"     
 568:Src/state.c   **** 			" 888          888          8     `88b.8   888  888           888\r\n"     
 569:Src/state.c   **** 			" 888          888       o  8       `888   888  `88b    ooo   888o\r\n"  
 570:Src/state.c   **** 			"o888o        o888ooooood8 o8o        `8  o888o  `Y8bood8P'  o888ooooood8\r\n");
 571:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 572:Src/state.c   **** 	}
 573:Src/state.c   **** 	else
 574:Src/state.c   **** 	{
 575:Src/state.c   **** 		sprintf(debug_tx, "\r\nERROR : msg %s doesn't exist\r\n", debug_rx);
 576:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 577:Src/state.c   **** 	}
 578:Src/state.c   **** }
ARM GAS  /tmp/ccBPpXQI.s 			page 33


 892              		.loc 1 578 1 view .LVU245
 893 00a8 0BB0     		add	sp, sp, #44
 894              	.LCFI6:
 895              		.cfi_remember_state
 896              		.cfi_def_cfa_offset 36
 897              		@ sp needed
 898 00aa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 899              	.L63:
 900              	.LCFI7:
 901              		.cfi_restore_state
 446:Src/state.c   **** 						  100);
 902              		.loc 1 446 3 is_stmt 1 view .LVU246
 446:Src/state.c   **** 						  100);
 903              		.loc 1 446 55 is_stmt 0 view .LVU247
 904 00ae 6D4C     		ldr	r4, .L76+56
 905 00b0 2046     		mov	r0, r4
 906 00b2 FFF7FEFF 		bl	strlen
 907              	.LVL28:
 446:Src/state.c   **** 						  100);
 908              		.loc 1 446 3 view .LVU248
 909 00b6 6423     		movs	r3, #100
 910 00b8 82B2     		uxth	r2, r0
 911 00ba 2146     		mov	r1, r4
 912 00bc 6648     		ldr	r0, .L76+44
 913 00be FFF7FEFF 		bl	HAL_UART_Transmit
 914              	.LVL29:
 915 00c2 F1E7     		b	.L43
 916              	.L64:
 451:Src/state.c   **** 				count_hour, count_min, count_sec, count_dec);
 917              		.loc 1 451 3 is_stmt 1 view .LVU249
 918 00c4 684B     		ldr	r3, .L76+60
 919 00c6 1A88     		ldrh	r2, [r3]
 920 00c8 684B     		ldr	r3, .L76+64
 921 00ca 1B88     		ldrh	r3, [r3]
 922 00cc 6849     		ldr	r1, .L76+68
 923 00ce 0988     		ldrh	r1, [r1]
 924 00d0 6848     		ldr	r0, .L76+72
 925 00d2 0088     		ldrh	r0, [r0]
 926 00d4 614C     		ldr	r4, .L76+48
 927 00d6 0190     		str	r0, [sp, #4]
 928 00d8 0091     		str	r1, [sp]
 929 00da 6749     		ldr	r1, .L76+76
 930 00dc 2046     		mov	r0, r4
 931 00de FFF7FEFF 		bl	sprintf
 932              	.LVL30:
 453:Src/state.c   **** 	}
 933              		.loc 1 453 3 view .LVU250
 453:Src/state.c   **** 	}
 934              		.loc 1 453 51 is_stmt 0 view .LVU251
 935 00e2 2046     		mov	r0, r4
 936 00e4 FFF7FEFF 		bl	strlen
 937              	.LVL31:
 453:Src/state.c   **** 	}
 938              		.loc 1 453 3 view .LVU252
 939 00e8 6423     		movs	r3, #100
 940 00ea 82B2     		uxth	r2, r0
 941 00ec 2146     		mov	r1, r4
ARM GAS  /tmp/ccBPpXQI.s 			page 34


 942 00ee 5A48     		ldr	r0, .L76+44
 943 00f0 FFF7FEFF 		bl	HAL_UART_Transmit
 944              	.LVL32:
 945 00f4 D8E7     		b	.L43
 946              	.L65:
 457:Src/state.c   **** 				"\r\n\ntype of status:\r\n"
 947              		.loc 1 457 3 is_stmt 1 view .LVU253
 467:Src/state.c   **** 				can1.canStart_status);
 948              		.loc 1 467 9 is_stmt 0 view .LVU254
 949 00f6 614A     		ldr	r2, .L76+80
 468:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 950              		.loc 1 468 9 view .LVU255
 951 00f8 92F86E30 		ldrb	r3, [r2, #110]	@ zero_extendqisi2
 457:Src/state.c   **** 				"\r\n\ntype of status:\r\n"
 952              		.loc 1 457 3 view .LVU256
 953 00fc 574C     		ldr	r4, .L76+48
 954 00fe 0093     		str	r3, [sp]
 955 0100 92F86D30 		ldrb	r3, [r2, #109]	@ zero_extendqisi2
 956 0104 92F86C20 		ldrb	r2, [r2, #108]	@ zero_extendqisi2
 957 0108 5D49     		ldr	r1, .L76+84
 958 010a 2046     		mov	r0, r4
 959 010c FFF7FEFF 		bl	sprintf
 960              	.LVL33:
 469:Src/state.c   **** 		sprintf(debug_tx,
 961              		.loc 1 469 3 is_stmt 1 view .LVU257
 469:Src/state.c   **** 		sprintf(debug_tx,
 962              		.loc 1 469 51 is_stmt 0 view .LVU258
 963 0110 2046     		mov	r0, r4
 964 0112 FFF7FEFF 		bl	strlen
 965              	.LVL34:
 469:Src/state.c   **** 		sprintf(debug_tx,
 966              		.loc 1 469 3 view .LVU259
 967 0116 504D     		ldr	r5, .L76+44
 968 0118 6423     		movs	r3, #100
 969 011a 82B2     		uxth	r2, r0
 970 011c 2146     		mov	r1, r4
 971 011e 2846     		mov	r0, r5
 972 0120 FFF7FEFF 		bl	HAL_UART_Transmit
 973              	.LVL35:
 470:Src/state.c   **** 				"CAN3 status:\r\n"
 974              		.loc 1 470 3 is_stmt 1 view .LVU260
 475:Src/state.c   **** 				can3.canStart_status);
 975              		.loc 1 475 9 is_stmt 0 view .LVU261
 976 0124 574A     		ldr	r2, .L76+88
 476:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 977              		.loc 1 476 9 view .LVU262
 978 0126 92F86E30 		ldrb	r3, [r2, #110]	@ zero_extendqisi2
 470:Src/state.c   **** 				"CAN3 status:\r\n"
 979              		.loc 1 470 3 view .LVU263
 980 012a 0093     		str	r3, [sp]
 981 012c 92F86D30 		ldrb	r3, [r2, #109]	@ zero_extendqisi2
 982 0130 92F86C20 		ldrb	r2, [r2, #108]	@ zero_extendqisi2
 983 0134 5449     		ldr	r1, .L76+92
 984 0136 2046     		mov	r0, r4
 985 0138 FFF7FEFF 		bl	sprintf
 986              	.LVL36:
 477:Src/state.c   **** 		if (current_state == STATE_INIT)
ARM GAS  /tmp/ccBPpXQI.s 			page 35


 987              		.loc 1 477 3 is_stmt 1 view .LVU264
 477:Src/state.c   **** 		if (current_state == STATE_INIT)
 988              		.loc 1 477 51 is_stmt 0 view .LVU265
 989 013c 2046     		mov	r0, r4
 990 013e FFF7FEFF 		bl	strlen
 991              	.LVL37:
 477:Src/state.c   **** 		if (current_state == STATE_INIT)
 992              		.loc 1 477 3 view .LVU266
 993 0142 6423     		movs	r3, #100
 994 0144 82B2     		uxth	r2, r0
 995 0146 2146     		mov	r1, r4
 996 0148 2846     		mov	r0, r5
 997 014a FFF7FEFF 		bl	HAL_UART_Transmit
 998              	.LVL38:
 478:Src/state.c   **** 		{
 999              		.loc 1 478 3 is_stmt 1 view .LVU267
 478:Src/state.c   **** 		{
 1000              		.loc 1 478 21 is_stmt 0 view .LVU268
 1001 014e 4F4B     		ldr	r3, .L76+96
 1002 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 478:Src/state.c   **** 		{
 1003              		.loc 1 478 6 view .LVU269
 1004 0152 C3B1     		cbz	r3, .L70
 484:Src/state.c   **** 		{
 1005              		.loc 1 484 8 is_stmt 1 view .LVU270
 484:Src/state.c   **** 		{
 1006              		.loc 1 484 11 is_stmt 0 view .LVU271
 1007 0154 012B     		cmp	r3, #1
 1008 0156 1DD0     		beq	.L71
 490:Src/state.c   **** 		{
 1009              		.loc 1 490 8 is_stmt 1 view .LVU272
 490:Src/state.c   **** 		{
 1010              		.loc 1 490 11 is_stmt 0 view .LVU273
 1011 0158 022B     		cmp	r3, #2
 1012 015a 22D0     		beq	.L72
 496:Src/state.c   **** 		{
 1013              		.loc 1 496 8 is_stmt 1 view .LVU274
 496:Src/state.c   **** 		{
 1014              		.loc 1 496 11 is_stmt 0 view .LVU275
 1015 015c 032B     		cmp	r3, #3
 1016 015e 27D0     		beq	.L73
 1017              	.L50:
 502:Src/state.c   **** 				"\r\n"
 1018              		.loc 1 502 3 is_stmt 1 view .LVU276
 1019 0160 3E4C     		ldr	r4, .L76+48
 1020 0162 4B4B     		ldr	r3, .L76+100
 1021 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1022 0166 4B4A     		ldr	r2, .L76+104
 1023 0168 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1024 016a 4B49     		ldr	r1, .L76+108
 1025 016c 2046     		mov	r0, r4
 1026 016e FFF7FEFF 		bl	sprintf
 1027              	.LVL39:
 508:Src/state.c   **** 	}else if(strcmp(debug_rx, "can sniffer") == 0){
 1028              		.loc 1 508 3 view .LVU277
 508:Src/state.c   **** 	}else if(strcmp(debug_rx, "can sniffer") == 0){
 1029              		.loc 1 508 51 is_stmt 0 view .LVU278
ARM GAS  /tmp/ccBPpXQI.s 			page 36


 1030 0172 2046     		mov	r0, r4
 1031 0174 FFF7FEFF 		bl	strlen
 1032              	.LVL40:
 508:Src/state.c   **** 	}else if(strcmp(debug_rx, "can sniffer") == 0){
 1033              		.loc 1 508 3 view .LVU279
 1034 0178 6423     		movs	r3, #100
 1035 017a 82B2     		uxth	r2, r0
 1036 017c 2146     		mov	r1, r4
 1037 017e 3648     		ldr	r0, .L76+44
 1038 0180 FFF7FEFF 		bl	HAL_UART_Transmit
 1039              	.LVL41:
 1040 0184 90E7     		b	.L43
 1041              	.L70:
 480:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_INIT\r\n",
 1042              		.loc 1 480 4 is_stmt 1 view .LVU280
 1043 0186 6423     		movs	r3, #100
 1044 0188 1D22     		movs	r2, #29
 1045 018a 4449     		ldr	r1, .L76+112
 1046 018c 2846     		mov	r0, r5
 1047 018e FFF7FEFF 		bl	HAL_UART_Transmit
 1048              	.LVL42:
 1049 0192 E5E7     		b	.L50
 1050              	.L71:
 486:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_IDLE\r\n",
 1051              		.loc 1 486 4 view .LVU281
 1052 0194 6423     		movs	r3, #100
 1053 0196 1D22     		movs	r2, #29
 1054 0198 4149     		ldr	r1, .L76+116
 1055 019a 2F48     		ldr	r0, .L76+44
 1056 019c FFF7FEFF 		bl	HAL_UART_Transmit
 1057              	.LVL43:
 1058 01a0 DEE7     		b	.L50
 1059              	.L72:
 492:Src/state.c   **** 				&huart3, (uint8_t *)"\r\nCurrent state: STATE_SETUP\r\n",
 1060              		.loc 1 492 4 view .LVU282
 1061 01a2 6423     		movs	r3, #100
 1062 01a4 1E22     		movs	r2, #30
 1063 01a6 3F49     		ldr	r1, .L76+120
 1064 01a8 2B48     		ldr	r0, .L76+44
 1065 01aa FFF7FEFF 		bl	HAL_UART_Transmit
 1066              	.LVL44:
 1067 01ae D7E7     		b	.L50
 1068              	.L73:
 498:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_RUN\r\n",
 1069              		.loc 1 498 4 view .LVU283
 1070 01b0 6423     		movs	r3, #100
 1071 01b2 1C22     		movs	r2, #28
 1072 01b4 3C49     		ldr	r1, .L76+124
 1073 01b6 2848     		ldr	r0, .L76+44
 1074 01b8 FFF7FEFF 		bl	HAL_UART_Transmit
 1075              	.LVL45:
 1076 01bc D0E7     		b	.L50
 1077              	.L66:
 510:Src/state.c   **** 		sprintf(debug_tx,"\r\nEnter in can sniffer mode\r\n");
 1078              		.loc 1 510 3 view .LVU284
 510:Src/state.c   **** 		sprintf(debug_tx,"\r\nEnter in can sniffer mode\r\n");
 1079              		.loc 1 510 18 is_stmt 0 view .LVU285
ARM GAS  /tmp/ccBPpXQI.s 			page 37


 1080 01be 3B4B     		ldr	r3, .L76+128
 1081 01c0 0122     		movs	r2, #1
 1082 01c2 1A70     		strb	r2, [r3]
 511:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 1083              		.loc 1 511 3 is_stmt 1 view .LVU286
 1084 01c4 254D     		ldr	r5, .L76+48
 1085 01c6 3A4C     		ldr	r4, .L76+132
 1086 01c8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1087 01ca 2860     		str	r0, [r5]	@ unaligned
 1088 01cc 6960     		str	r1, [r5, #4]	@ unaligned
 1089 01ce AA60     		str	r2, [r5, #8]	@ unaligned
 1090 01d0 EB60     		str	r3, [r5, #12]	@ unaligned
 1091 01d2 07CC     		ldmia	r4!, {r0, r1, r2}
 1092 01d4 2861     		str	r0, [r5, #16]	@ unaligned
 1093 01d6 6961     		str	r1, [r5, #20]	@ unaligned
 1094 01d8 AA61     		str	r2, [r5, #24]	@ unaligned
 1095 01da 2388     		ldrh	r3, [r4]	@ unaligned
 1096 01dc AB83     		strh	r3, [r5, #28]	@ unaligned
 512:Src/state.c   **** 	}else if(strcmp(debug_rx, "q") == 0){
 1097              		.loc 1 512 3 view .LVU287
 512:Src/state.c   **** 	}else if(strcmp(debug_rx, "q") == 0){
 1098              		.loc 1 512 51 is_stmt 0 view .LVU288
 1099 01de 2846     		mov	r0, r5
 1100 01e0 FFF7FEFF 		bl	strlen
 1101              	.LVL46:
 512:Src/state.c   **** 	}else if(strcmp(debug_rx, "q") == 0){
 1102              		.loc 1 512 3 view .LVU289
 1103 01e4 6423     		movs	r3, #100
 1104 01e6 82B2     		uxth	r2, r0
 1105 01e8 2946     		mov	r1, r5
 1106 01ea 1B48     		ldr	r0, .L76+44
 1107 01ec FFF7FEFF 		bl	HAL_UART_Transmit
 1108              	.LVL47:
 1109 01f0 5AE7     		b	.L43
 1110              	.L67:
 514:Src/state.c   **** 		sprintf(debug_tx,"\r\nExit from can sniffer mode\r\n");
 1111              		.loc 1 514 3 is_stmt 1 view .LVU290
 514:Src/state.c   **** 		sprintf(debug_tx,"\r\nExit from can sniffer mode\r\n");
 1112              		.loc 1 514 18 is_stmt 0 view .LVU291
 1113 01f2 2E4B     		ldr	r3, .L76+128
 1114 01f4 0022     		movs	r2, #0
 1115 01f6 1A70     		strb	r2, [r3]
 515:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 1116              		.loc 1 515 3 is_stmt 1 view .LVU292
 1117 01f8 184D     		ldr	r5, .L76+48
 1118 01fa 2E4C     		ldr	r4, .L76+136
 1119 01fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1120 01fe 2860     		str	r0, [r5]	@ unaligned
 1121 0200 6960     		str	r1, [r5, #4]	@ unaligned
 1122 0202 AA60     		str	r2, [r5, #8]	@ unaligned
 1123 0204 EB60     		str	r3, [r5, #12]	@ unaligned
 1124 0206 07CC     		ldmia	r4!, {r0, r1, r2}
 1125 0208 2861     		str	r0, [r5, #16]	@ unaligned
 1126 020a 6961     		str	r1, [r5, #20]	@ unaligned
 1127 020c AA61     		str	r2, [r5, #24]	@ unaligned
 1128 020e 2288     		ldrh	r2, [r4]	@ unaligned
 1129 0210 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
ARM GAS  /tmp/ccBPpXQI.s 			page 38


 1130 0212 AA83     		strh	r2, [r5, #28]	@ unaligned
 1131 0214 AB77     		strb	r3, [r5, #30]
 516:Src/state.c   **** 	}else if(strncmp(debug_rx, "send",4) == 0){
 1132              		.loc 1 516 3 view .LVU293
 516:Src/state.c   **** 	}else if(strncmp(debug_rx, "send",4) == 0){
 1133              		.loc 1 516 51 is_stmt 0 view .LVU294
 1134 0216 2846     		mov	r0, r5
 1135 0218 FFF7FEFF 		bl	strlen
 1136              	.LVL48:
 516:Src/state.c   **** 	}else if(strncmp(debug_rx, "send",4) == 0){
 1137              		.loc 1 516 3 view .LVU295
 1138 021c 6423     		movs	r3, #100
 1139 021e 82B2     		uxth	r2, r0
 1140 0220 2946     		mov	r1, r5
 1141 0222 0D48     		ldr	r0, .L76+44
 1142 0224 FFF7FEFF 		bl	HAL_UART_Transmit
 1143              	.LVL49:
 1144 0228 3EE7     		b	.L43
 1145              	.L77:
 1146 022a 00BF     		.align	2
 1147              	.L76:
 1148 022c 00000000 		.word	.LC0
 1149 0230 00000000 		.word	debug_rx
 1150 0234 A0010000 		.word	.LC2
 1151 0238 A8010000 		.word	.LC3
 1152 023c E0010000 		.word	.LC5
 1153 0240 C4030000 		.word	.LC13
 1154 0244 F0030000 		.word	.LC15
 1155 0248 14040000 		.word	.LC17
 1156 024c 44040000 		.word	.LC19
 1157 0250 00000000 		.word	mount_ok
 1158 0254 A4040000 		.word	.LC23
 1159 0258 00000000 		.word	huart3
 1160 025c 00000000 		.word	debug_tx
 1161 0260 08000000 		.word	.LC1
 1162 0264 00000000 		.word	code_version
 1163 0268 00000000 		.word	count_hour
 1164 026c 00000000 		.word	count_min
 1165 0270 00000000 		.word	count_sec
 1166 0274 00000000 		.word	count_dec
 1167 0278 B0010000 		.word	.LC4
 1168 027c 00000000 		.word	can1
 1169 0280 E8010000 		.word	.LC6
 1170 0284 00000000 		.word	can3
 1171 0288 90020000 		.word	.LC7
 1172 028c 00000000 		.word	current_state
 1173 0290 00000000 		.word	its_connected
 1174 0294 00000000 		.word	imu_connected
 1175 0298 70030000 		.word	.LC12
 1176 029c F0020000 		.word	.LC8
 1177 02a0 10030000 		.word	.LC9
 1178 02a4 30030000 		.word	.LC10
 1179 02a8 50030000 		.word	.LC11
 1180 02ac 00000000 		.word	canSnifferMode
 1181 02b0 D0030000 		.word	.LC14
 1182 02b4 F4030000 		.word	.LC16
 1183              	.L68:
ARM GAS  /tmp/ccBPpXQI.s 			page 39


 1184              	.LBB2:
 518:Src/state.c   **** 		uint32_t idToSend;
 1185              		.loc 1 518 3 is_stmt 1 view .LVU296
 518:Src/state.c   **** 		uint32_t idToSend;
 1186              		.loc 1 518 25 view .LVU297
 519:Src/state.c   **** 		uint8_t offset = (uint8_t)'0';
 1187              		.loc 1 519 3 view .LVU298
 520:Src/state.c   **** 		idToSend = ((uint8_t)debug_rx[5]-offset)*1000 + ((uint8_t)debug_rx[6]-offset)*100 + ((uint8_t)deb
 1188              		.loc 1 520 3 view .LVU299
 1189              	.LVL50:
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1190              		.loc 1 521 3 view .LVU300
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1191              		.loc 1 521 32 is_stmt 0 view .LVU301
 1192 02b8 A74B     		ldr	r3, .L78
 1193 02ba 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1194              		.loc 1 521 35 view .LVU302
 1195 02bc 303A     		subs	r2, r2, #48
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1196              		.loc 1 521 69 view .LVU303
 1197 02be 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1198              		.loc 1 521 72 view .LVU304
 1199 02c0 3039     		subs	r1, r1, #48
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1200              		.loc 1 521 80 view .LVU305
 1201 02c2 6420     		movs	r0, #100
 1202 02c4 00FB01F1 		mul	r1, r0, r1
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1203              		.loc 1 521 49 view .LVU306
 1204 02c8 4FF47A70 		mov	r0, #1000
 1205 02cc 00FB0212 		mla	r2, r0, r2, r1
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1206              		.loc 1 521 105 view .LVU307
 1207 02d0 D979     		ldrb	r1, [r3, #7]	@ zero_extendqisi2
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1208              		.loc 1 521 108 view .LVU308
 1209 02d2 3039     		subs	r1, r1, #48
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1210              		.loc 1 521 116 view .LVU309
 1211 02d4 01EB8101 		add	r1, r1, r1, lsl #2
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1212              		.loc 1 521 85 view .LVU310
 1213 02d8 02EB4102 		add	r2, r2, r1, lsl #1
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1214              		.loc 1 521 140 view .LVU311
 1215 02dc 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1216              		.loc 1 521 143 view .LVU312
 1217 02de 3039     		subs	r1, r1, #48
 521:Src/state.c   **** 		dataToSend[0] = ((uint8_t)debug_rx[10]-offset)*100 + ((uint8_t)debug_rx[11]-offset)*10 + ((uint8_
 1218              		.loc 1 521 120 view .LVU313
 1219 02e0 0A44     		add	r2, r2, r1
 1220 02e2 0992     		str	r2, [sp, #36]
 1221              	.LVL51:
 522:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
ARM GAS  /tmp/ccBPpXQI.s 			page 40


 1222              		.loc 1 522 3 is_stmt 1 view .LVU314
 522:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 1223              		.loc 1 522 37 is_stmt 0 view .LVU315
 1224 02e4 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 1225              	.LVL52:
 522:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 1226              		.loc 1 522 74 view .LVU316
 1227 02e6 D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 522:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 1228              		.loc 1 522 54 view .LVU317
 1229 02e8 303A     		subs	r2, r2, #48
 1230 02ea 02EB8202 		add	r2, r2, r2, lsl #2
 1231 02ee 02EB8200 		add	r0, r2, r2, lsl #2
 1232 02f2 A1F13002 		sub	r2, r1, #48
 1233 02f6 02EB8202 		add	r2, r2, r2, lsl #2
 1234 02fa 5200     		lsls	r2, r2, #1
 1235 02fc 02EB8002 		add	r2, r2, r0, lsl #2
 1236 0300 D2B2     		uxtb	r2, r2
 522:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 1237              		.loc 1 522 110 view .LVU318
 1238 0302 197B     		ldrb	r1, [r3, #12]	@ zero_extendqisi2
 522:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 1239              		.loc 1 522 114 view .LVU319
 1240 0304 3039     		subs	r1, r1, #48
 522:Src/state.c   **** 		dataToSend[1] = ((uint8_t)debug_rx[14]-offset)*100 + ((uint8_t)debug_rx[15]-offset)*10 + ((uint8_
 1241              		.loc 1 522 90 view .LVU320
 1242 0306 52FA81F2 		uxtab	r2, r2, r1
 1243 030a 5FFA82FB 		uxtb	fp, r2
 523:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1244              		.loc 1 523 3 is_stmt 1 view .LVU321
 523:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1245              		.loc 1 523 37 is_stmt 0 view .LVU322
 1246 030e 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 523:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1247              		.loc 1 523 74 view .LVU323
 1248 0310 D97B     		ldrb	r1, [r3, #15]	@ zero_extendqisi2
 523:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1249              		.loc 1 523 54 view .LVU324
 1250 0312 303A     		subs	r2, r2, #48
 1251 0314 02EB8202 		add	r2, r2, r2, lsl #2
 1252 0318 02EB8200 		add	r0, r2, r2, lsl #2
 1253 031c A1F13002 		sub	r2, r1, #48
 1254 0320 02EB8202 		add	r2, r2, r2, lsl #2
 1255 0324 5200     		lsls	r2, r2, #1
 1256 0326 02EB8002 		add	r2, r2, r0, lsl #2
 1257 032a D2B2     		uxtb	r2, r2
 523:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1258              		.loc 1 523 110 view .LVU325
 1259 032c 1C7C     		ldrb	r4, [r3, #16]	@ zero_extendqisi2
 523:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1260              		.loc 1 523 114 view .LVU326
 1261 032e 303C     		subs	r4, r4, #48
 523:Src/state.c   **** 		dataToSend[2] = ((uint8_t)debug_rx[18]-offset)*100 + ((uint8_t)debug_rx[19]-offset)*10 + ((uint8_
 1262              		.loc 1 523 90 view .LVU327
 1263 0330 52FA84F4 		uxtab	r4, r2, r4
 1264 0334 E4B2     		uxtb	r4, r4
 524:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
ARM GAS  /tmp/ccBPpXQI.s 			page 41


 1265              		.loc 1 524 3 is_stmt 1 view .LVU328
 524:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 1266              		.loc 1 524 37 is_stmt 0 view .LVU329
 1267 0336 9A7C     		ldrb	r2, [r3, #18]	@ zero_extendqisi2
 524:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 1268              		.loc 1 524 74 view .LVU330
 1269 0338 D97C     		ldrb	r1, [r3, #19]	@ zero_extendqisi2
 524:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 1270              		.loc 1 524 54 view .LVU331
 1271 033a 303A     		subs	r2, r2, #48
 1272 033c 02EB8202 		add	r2, r2, r2, lsl #2
 1273 0340 02EB8200 		add	r0, r2, r2, lsl #2
 1274 0344 A1F13002 		sub	r2, r1, #48
 1275 0348 02EB8202 		add	r2, r2, r2, lsl #2
 1276 034c 5200     		lsls	r2, r2, #1
 1277 034e 02EB8002 		add	r2, r2, r0, lsl #2
 1278 0352 D2B2     		uxtb	r2, r2
 524:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 1279              		.loc 1 524 110 view .LVU332
 1280 0354 1D7D     		ldrb	r5, [r3, #20]	@ zero_extendqisi2
 524:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 1281              		.loc 1 524 114 view .LVU333
 1282 0356 303D     		subs	r5, r5, #48
 524:Src/state.c   **** 		dataToSend[3] = ((uint8_t)debug_rx[22]-offset)*100 + ((uint8_t)debug_rx[23]-offset)*10 + ((uint8_
 1283              		.loc 1 524 90 view .LVU334
 1284 0358 52FA85F5 		uxtab	r5, r2, r5
 1285 035c EDB2     		uxtb	r5, r5
 525:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 1286              		.loc 1 525 3 is_stmt 1 view .LVU335
 525:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 1287              		.loc 1 525 37 is_stmt 0 view .LVU336
 1288 035e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 525:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 1289              		.loc 1 525 74 view .LVU337
 1290 0360 D97D     		ldrb	r1, [r3, #23]	@ zero_extendqisi2
 525:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 1291              		.loc 1 525 54 view .LVU338
 1292 0362 303A     		subs	r2, r2, #48
 1293 0364 02EB8202 		add	r2, r2, r2, lsl #2
 1294 0368 02EB8200 		add	r0, r2, r2, lsl #2
 1295 036c A1F13002 		sub	r2, r1, #48
 1296 0370 02EB8202 		add	r2, r2, r2, lsl #2
 1297 0374 5200     		lsls	r2, r2, #1
 1298 0376 02EB8002 		add	r2, r2, r0, lsl #2
 1299 037a D2B2     		uxtb	r2, r2
 525:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 1300              		.loc 1 525 110 view .LVU339
 1301 037c 1E7E     		ldrb	r6, [r3, #24]	@ zero_extendqisi2
 525:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 1302              		.loc 1 525 114 view .LVU340
 1303 037e 303E     		subs	r6, r6, #48
 525:Src/state.c   **** 		dataToSend[4] = ((uint8_t)debug_rx[26]-offset)*100 + ((uint8_t)debug_rx[27]-offset)*10 + ((uint8_
 1304              		.loc 1 525 90 view .LVU341
 1305 0380 52FA86F6 		uxtab	r6, r2, r6
 1306 0384 F6B2     		uxtb	r6, r6
 526:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1307              		.loc 1 526 3 is_stmt 1 view .LVU342
ARM GAS  /tmp/ccBPpXQI.s 			page 42


 526:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1308              		.loc 1 526 37 is_stmt 0 view .LVU343
 1309 0386 9A7E     		ldrb	r2, [r3, #26]	@ zero_extendqisi2
 526:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1310              		.loc 1 526 74 view .LVU344
 1311 0388 D97E     		ldrb	r1, [r3, #27]	@ zero_extendqisi2
 526:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1312              		.loc 1 526 54 view .LVU345
 1313 038a 303A     		subs	r2, r2, #48
 1314 038c 02EB8202 		add	r2, r2, r2, lsl #2
 1315 0390 02EB8200 		add	r0, r2, r2, lsl #2
 1316 0394 A1F13002 		sub	r2, r1, #48
 1317 0398 02EB8202 		add	r2, r2, r2, lsl #2
 1318 039c 5200     		lsls	r2, r2, #1
 1319 039e 02EB8002 		add	r2, r2, r0, lsl #2
 1320 03a2 D2B2     		uxtb	r2, r2
 526:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1321              		.loc 1 526 110 view .LVU346
 1322 03a4 1F7F     		ldrb	r7, [r3, #28]	@ zero_extendqisi2
 526:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1323              		.loc 1 526 114 view .LVU347
 1324 03a6 303F     		subs	r7, r7, #48
 526:Src/state.c   **** 		dataToSend[5] = ((uint8_t)debug_rx[30]-offset)*100 + ((uint8_t)debug_rx[31]-offset)*10 + ((uint8_
 1325              		.loc 1 526 90 view .LVU348
 1326 03a8 52FA87F7 		uxtab	r7, r2, r7
 1327 03ac FFB2     		uxtb	r7, r7
 527:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1328              		.loc 1 527 3 is_stmt 1 view .LVU349
 527:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1329              		.loc 1 527 37 is_stmt 0 view .LVU350
 1330 03ae 9A7F     		ldrb	r2, [r3, #30]	@ zero_extendqisi2
 527:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1331              		.loc 1 527 74 view .LVU351
 1332 03b0 D97F     		ldrb	r1, [r3, #31]	@ zero_extendqisi2
 527:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1333              		.loc 1 527 54 view .LVU352
 1334 03b2 303A     		subs	r2, r2, #48
 1335 03b4 02EB8202 		add	r2, r2, r2, lsl #2
 1336 03b8 02EB8200 		add	r0, r2, r2, lsl #2
 1337 03bc A1F13002 		sub	r2, r1, #48
 1338 03c0 02EB8202 		add	r2, r2, r2, lsl #2
 1339 03c4 5200     		lsls	r2, r2, #1
 1340 03c6 02EB8002 		add	r2, r2, r0, lsl #2
 1341 03ca D2B2     		uxtb	r2, r2
 527:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1342              		.loc 1 527 110 view .LVU353
 1343 03cc 93F82080 		ldrb	r8, [r3, #32]	@ zero_extendqisi2
 527:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1344              		.loc 1 527 114 view .LVU354
 1345 03d0 A8F13008 		sub	r8, r8, #48
 527:Src/state.c   **** 		dataToSend[6] = ((uint8_t)debug_rx[34]-offset)*100 + ((uint8_t)debug_rx[35]-offset)*10 + ((uint8_
 1346              		.loc 1 527 90 view .LVU355
 1347 03d4 52FA88F8 		uxtab	r8, r2, r8
 1348 03d8 5FFA88F8 		uxtb	r8, r8
 528:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 1349              		.loc 1 528 3 is_stmt 1 view .LVU356
 528:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
ARM GAS  /tmp/ccBPpXQI.s 			page 43


 1350              		.loc 1 528 37 is_stmt 0 view .LVU357
 1351 03dc 93F82220 		ldrb	r2, [r3, #34]	@ zero_extendqisi2
 528:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 1352              		.loc 1 528 74 view .LVU358
 1353 03e0 93F82310 		ldrb	r1, [r3, #35]	@ zero_extendqisi2
 528:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 1354              		.loc 1 528 54 view .LVU359
 1355 03e4 303A     		subs	r2, r2, #48
 1356 03e6 02EB8202 		add	r2, r2, r2, lsl #2
 1357 03ea 02EB8200 		add	r0, r2, r2, lsl #2
 1358 03ee A1F13002 		sub	r2, r1, #48
 1359 03f2 02EB8202 		add	r2, r2, r2, lsl #2
 1360 03f6 5200     		lsls	r2, r2, #1
 1361 03f8 02EB8002 		add	r2, r2, r0, lsl #2
 1362 03fc D2B2     		uxtb	r2, r2
 528:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 1363              		.loc 1 528 110 view .LVU360
 1364 03fe 93F82490 		ldrb	r9, [r3, #36]	@ zero_extendqisi2
 528:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 1365              		.loc 1 528 114 view .LVU361
 1366 0402 A9F13009 		sub	r9, r9, #48
 528:Src/state.c   **** 		dataToSend[7] = ((uint8_t)debug_rx[38]-offset)*100 + ((uint8_t)debug_rx[39]-offset)*10 + ((uint8_
 1367              		.loc 1 528 90 view .LVU362
 1368 0406 52FA89F9 		uxtab	r9, r2, r9
 1369 040a 5FFA89F9 		uxtb	r9, r9
 529:Src/state.c   **** 		can1.tx_id = idToSend;
 1370              		.loc 1 529 3 is_stmt 1 view .LVU363
 529:Src/state.c   **** 		can1.tx_id = idToSend;
 1371              		.loc 1 529 37 is_stmt 0 view .LVU364
 1372 040e 93F82620 		ldrb	r2, [r3, #38]	@ zero_extendqisi2
 529:Src/state.c   **** 		can1.tx_id = idToSend;
 1373              		.loc 1 529 74 view .LVU365
 1374 0412 93F82710 		ldrb	r1, [r3, #39]	@ zero_extendqisi2
 529:Src/state.c   **** 		can1.tx_id = idToSend;
 1375              		.loc 1 529 54 view .LVU366
 1376 0416 303A     		subs	r2, r2, #48
 1377 0418 02EB8202 		add	r2, r2, r2, lsl #2
 1378 041c 02EB8200 		add	r0, r2, r2, lsl #2
 1379 0420 A1F13002 		sub	r2, r1, #48
 1380 0424 02EB8202 		add	r2, r2, r2, lsl #2
 1381 0428 5200     		lsls	r2, r2, #1
 1382 042a 02EB8002 		add	r2, r2, r0, lsl #2
 1383 042e D2B2     		uxtb	r2, r2
 529:Src/state.c   **** 		can1.tx_id = idToSend;
 1384              		.loc 1 529 110 view .LVU367
 1385 0430 93F828A0 		ldrb	r10, [r3, #40]	@ zero_extendqisi2
 529:Src/state.c   **** 		can1.tx_id = idToSend;
 1386              		.loc 1 529 114 view .LVU368
 1387 0434 AAF1300A 		sub	r10, r10, #48
 529:Src/state.c   **** 		can1.tx_id = idToSend;
 1388              		.loc 1 529 90 view .LVU369
 1389 0438 52FA8AFA 		uxtab	r10, r2, r10
 1390 043c 5FFA8AFA 		uxtb	r10, r10
 530:Src/state.c   **** 		can1.dataTx[0] = dataToSend[0];
 1391              		.loc 1 530 3 is_stmt 1 view .LVU370
 530:Src/state.c   **** 		can1.dataTx[0] = dataToSend[0];
 1392              		.loc 1 530 14 is_stmt 0 view .LVU371
ARM GAS  /tmp/ccBPpXQI.s 			page 44


 1393 0440 4648     		ldr	r0, .L78+4
 1394 0442 099A     		ldr	r2, [sp, #36]
 1395 0444 C262     		str	r2, [r0, #44]
 531:Src/state.c   **** 		can1.dataTx[1] = dataToSend[1];
 1396              		.loc 1 531 3 is_stmt 1 view .LVU372
 531:Src/state.c   **** 		can1.dataTx[1] = dataToSend[1];
 1397              		.loc 1 531 18 is_stmt 0 view .LVU373
 1398 0446 80F80CB0 		strb	fp, [r0, #12]
 532:Src/state.c   **** 		can1.dataTx[2] = dataToSend[2];
 1399              		.loc 1 532 3 is_stmt 1 view .LVU374
 532:Src/state.c   **** 		can1.dataTx[2] = dataToSend[2];
 1400              		.loc 1 532 18 is_stmt 0 view .LVU375
 1401 044a 4473     		strb	r4, [r0, #13]
 533:Src/state.c   **** 		can1.dataTx[3] = dataToSend[3];
 1402              		.loc 1 533 3 is_stmt 1 view .LVU376
 533:Src/state.c   **** 		can1.dataTx[3] = dataToSend[3];
 1403              		.loc 1 533 18 is_stmt 0 view .LVU377
 1404 044c 8573     		strb	r5, [r0, #14]
 534:Src/state.c   **** 		can1.dataTx[4] = dataToSend[4];
 1405              		.loc 1 534 3 is_stmt 1 view .LVU378
 534:Src/state.c   **** 		can1.dataTx[4] = dataToSend[4];
 1406              		.loc 1 534 18 is_stmt 0 view .LVU379
 1407 044e C673     		strb	r6, [r0, #15]
 535:Src/state.c   **** 		can1.dataTx[5] = dataToSend[5];
 1408              		.loc 1 535 3 is_stmt 1 view .LVU380
 535:Src/state.c   **** 		can1.dataTx[5] = dataToSend[5];
 1409              		.loc 1 535 18 is_stmt 0 view .LVU381
 1410 0450 0774     		strb	r7, [r0, #16]
 536:Src/state.c   **** 		can1.dataTx[6] = dataToSend[6];
 1411              		.loc 1 536 3 is_stmt 1 view .LVU382
 536:Src/state.c   **** 		can1.dataTx[6] = dataToSend[6];
 1412              		.loc 1 536 18 is_stmt 0 view .LVU383
 1413 0452 80F81180 		strb	r8, [r0, #17]
 537:Src/state.c   **** 		can1.dataTx[7] = dataToSend[7];
 1414              		.loc 1 537 3 is_stmt 1 view .LVU384
 537:Src/state.c   **** 		can1.dataTx[7] = dataToSend[7];
 1415              		.loc 1 537 18 is_stmt 0 view .LVU385
 1416 0456 80F81290 		strb	r9, [r0, #18]
 538:Src/state.c   **** 		can1.tx_size = 8;
 1417              		.loc 1 538 3 is_stmt 1 view .LVU386
 538:Src/state.c   **** 		can1.tx_size = 8;
 1418              		.loc 1 538 18 is_stmt 0 view .LVU387
 1419 045a 80F813A0 		strb	r10, [r0, #19]
 539:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 1420              		.loc 1 539 3 is_stmt 1 view .LVU388
 539:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 1421              		.loc 1 539 16 is_stmt 0 view .LVU389
 1422 045e 0823     		movs	r3, #8
 1423 0460 0360     		str	r3, [r0]
 540:Src/state.c   **** 		sprintf(debug_tx,"\r\nSent %ld %d %d %d %d %d %d %d %d\r\n", idToSend, dataToSend[0], dataToSend[
 1424              		.loc 1 540 3 is_stmt 1 view .LVU390
 1425 0462 0021     		movs	r1, #0
 1426 0464 FFF7FEFF 		bl	CAN_Send
 1427              	.LVL53:
 541:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 1428              		.loc 1 541 3 view .LVU391
 1429 0468 CDF818A0 		str	r10, [sp, #24]
ARM GAS  /tmp/ccBPpXQI.s 			page 45


 1430 046c CDF81490 		str	r9, [sp, #20]
 1431 0470 CDF81080 		str	r8, [sp, #16]
 1432 0474 0397     		str	r7, [sp, #12]
 1433 0476 0296     		str	r6, [sp, #8]
 1434 0478 0195     		str	r5, [sp, #4]
 1435 047a 0094     		str	r4, [sp]
 1436 047c 5B46     		mov	r3, fp
 1437 047e 099A     		ldr	r2, [sp, #36]
 1438 0480 3749     		ldr	r1, .L78+8
 1439 0482 3848     		ldr	r0, .L78+12
 1440 0484 FFF7FEFF 		bl	sprintf
 1441              	.LVL54:
 542:Src/state.c   **** 	}else if (strcmp(debug_rx, "sd status") == 0){
 1442              		.loc 1 542 3 view .LVU392
 542:Src/state.c   **** 	}else if (strcmp(debug_rx, "sd status") == 0){
 1443              		.loc 1 542 51 is_stmt 0 view .LVU393
 1444 0488 3648     		ldr	r0, .L78+12
 1445 048a FFF7FEFF 		bl	strlen
 1446              	.LVL55:
 542:Src/state.c   **** 	}else if (strcmp(debug_rx, "sd status") == 0){
 1447              		.loc 1 542 3 view .LVU394
 1448 048e 6423     		movs	r3, #100
 1449 0490 82B2     		uxth	r2, r0
 1450 0492 3449     		ldr	r1, .L78+12
 1451 0494 3448     		ldr	r0, .L78+16
 1452 0496 FFF7FEFF 		bl	HAL_UART_Transmit
 1453              	.LVL56:
 1454              	.LBE2:
 1455 049a 05E6     		b	.L43
 1456              	.LVL57:
 1457              	.L69:
 545:Src/state.c   **** 			if(successfull_opening == 1){
 1458              		.loc 1 545 4 is_stmt 1 view .LVU395
 1459 049c 6423     		movs	r3, #100
 1460 049e 0D22     		movs	r2, #13
 1461 04a0 3249     		ldr	r1, .L78+20
 1462 04a2 3148     		ldr	r0, .L78+16
 1463 04a4 FFF7FEFF 		bl	HAL_UART_Transmit
 1464              	.LVL58:
 546:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 1465              		.loc 1 546 4 view .LVU396
 546:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 1466              		.loc 1 546 27 is_stmt 0 view .LVU397
 1467 04a8 314B     		ldr	r3, .L78+24
 1468 04aa 1B68     		ldr	r3, [r3]
 546:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 1469              		.loc 1 546 6 view .LVU398
 1470 04ac 012B     		cmp	r3, #1
 1471 04ae 06D0     		beq	.L74
 550:Src/state.c   **** 			}
 1472              		.loc 1 550 5 is_stmt 1 view .LVU399
 1473 04b0 6423     		movs	r3, #100
 1474 04b2 1022     		movs	r2, #16
 1475 04b4 2F49     		ldr	r1, .L78+28
 1476 04b6 2C48     		ldr	r0, .L78+16
 1477 04b8 FFF7FEFF 		bl	HAL_UART_Transmit
 1478              	.LVL59:
ARM GAS  /tmp/ccBPpXQI.s 			page 46


 1479 04bc F4E5     		b	.L43
 1480              	.L74:
 547:Src/state.c   **** 				HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 1481              		.loc 1 547 5 view .LVU400
 1482 04be 294C     		ldr	r4, .L78+12
 1483 04c0 2D4A     		ldr	r2, .L78+32
 1484 04c2 2E49     		ldr	r1, .L78+36
 1485 04c4 2046     		mov	r0, r4
 1486 04c6 FFF7FEFF 		bl	sprintf
 1487              	.LVL60:
 548:Src/state.c   **** 			}else{
 1488              		.loc 1 548 5 view .LVU401
 548:Src/state.c   **** 			}else{
 1489              		.loc 1 548 53 is_stmt 0 view .LVU402
 1490 04ca 2046     		mov	r0, r4
 1491 04cc FFF7FEFF 		bl	strlen
 1492              	.LVL61:
 548:Src/state.c   **** 			}else{
 1493              		.loc 1 548 5 view .LVU403
 1494 04d0 6423     		movs	r3, #100
 1495 04d2 82B2     		uxth	r2, r0
 1496 04d4 2146     		mov	r1, r4
 1497 04d6 2448     		ldr	r0, .L78+16
 1498 04d8 FFF7FEFF 		bl	HAL_UART_Transmit
 1499              	.LVL62:
 1500 04dc E4E5     		b	.L43
 1501              	.L56:
 556:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 1502              		.loc 1 556 7 is_stmt 1 view .LVU404
 556:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 1503              		.loc 1 556 10 is_stmt 0 view .LVU405
 1504 04de 2849     		ldr	r1, .L78+40
 1505 04e0 1D48     		ldr	r0, .L78
 1506 04e2 FFF7FEFF 		bl	strcmp
 1507              	.LVL63:
 556:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 1508              		.loc 1 556 9 view .LVU406
 1509 04e6 A8B1     		cbz	r0, .L75
 560:Src/state.c   **** 	{
 1510              		.loc 1 560 7 is_stmt 1 view .LVU407
 560:Src/state.c   **** 	{
 1511              		.loc 1 560 11 is_stmt 0 view .LVU408
 1512 04e8 2649     		ldr	r1, .L78+44
 1513 04ea 1B48     		ldr	r0, .L78
 1514 04ec FFF7FEFF 		bl	strcmp
 1515              	.LVL64:
 560:Src/state.c   **** 	{
 1516              		.loc 1 560 10 view .LVU409
 1517 04f0 08BB     		cbnz	r0, .L60
 562:Src/state.c   **** 			"\r\n"
 1518              		.loc 1 562 3 is_stmt 1 view .LVU410
 1519 04f2 1C4C     		ldr	r4, .L78+12
 1520 04f4 40F2EF12 		movw	r2, #495
 1521 04f8 2349     		ldr	r1, .L78+48
 1522 04fa 2046     		mov	r0, r4
 1523 04fc FFF7FEFF 		bl	memcpy
 1524              	.LVL65:
ARM GAS  /tmp/ccBPpXQI.s 			page 47


 571:Src/state.c   **** 	}
 1525              		.loc 1 571 3 view .LVU411
 571:Src/state.c   **** 	}
 1526              		.loc 1 571 51 is_stmt 0 view .LVU412
 1527 0500 2046     		mov	r0, r4
 1528 0502 FFF7FEFF 		bl	strlen
 1529              	.LVL66:
 571:Src/state.c   **** 	}
 1530              		.loc 1 571 3 view .LVU413
 1531 0506 6423     		movs	r3, #100
 1532 0508 82B2     		uxth	r2, r0
 1533 050a 2146     		mov	r1, r4
 1534 050c 1648     		ldr	r0, .L78+16
 1535 050e FFF7FEFF 		bl	HAL_UART_Transmit
 1536              	.LVL67:
 1537 0512 C9E5     		b	.L43
 1538              	.L75:
 557:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 1000);
 1539              		.loc 1 557 3 is_stmt 1 view .LVU414
 1540 0514 134C     		ldr	r4, .L78+12
 1541 0516 1D4A     		ldr	r2, .L78+52
 1542 0518 1D49     		ldr	r1, .L78+56
 1543 051a 2046     		mov	r0, r4
 1544 051c FFF7FEFF 		bl	sprintf
 1545              	.LVL68:
 558:Src/state.c   **** 	}
 1546              		.loc 1 558 3 view .LVU415
 558:Src/state.c   **** 	}
 1547              		.loc 1 558 51 is_stmt 0 view .LVU416
 1548 0520 2046     		mov	r0, r4
 1549 0522 FFF7FEFF 		bl	strlen
 1550              	.LVL69:
 558:Src/state.c   **** 	}
 1551              		.loc 1 558 3 view .LVU417
 1552 0526 4FF47A73 		mov	r3, #1000
 1553 052a 82B2     		uxth	r2, r0
 1554 052c 2146     		mov	r1, r4
 1555 052e 0E48     		ldr	r0, .L78+16
 1556 0530 FFF7FEFF 		bl	HAL_UART_Transmit
 1557              	.LVL70:
 1558 0534 B8E5     		b	.L43
 1559              	.L60:
 575:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 1560              		.loc 1 575 3 is_stmt 1 view .LVU418
 1561 0536 0B4C     		ldr	r4, .L78+12
 1562 0538 074A     		ldr	r2, .L78
 1563 053a 1649     		ldr	r1, .L78+60
 1564 053c 2046     		mov	r0, r4
 1565 053e FFF7FEFF 		bl	sprintf
 1566              	.LVL71:
 576:Src/state.c   **** 	}
 1567              		.loc 1 576 3 view .LVU419
 576:Src/state.c   **** 	}
 1568              		.loc 1 576 51 is_stmt 0 view .LVU420
 1569 0542 2046     		mov	r0, r4
 1570 0544 FFF7FEFF 		bl	strlen
 1571              	.LVL72:
ARM GAS  /tmp/ccBPpXQI.s 			page 48


 576:Src/state.c   **** 	}
 1572              		.loc 1 576 3 view .LVU421
 1573 0548 6423     		movs	r3, #100
 1574 054a 82B2     		uxth	r2, r0
 1575 054c 2146     		mov	r1, r4
 1576 054e 0648     		ldr	r0, .L78+16
 1577 0550 FFF7FEFF 		bl	HAL_UART_Transmit
 1578              	.LVL73:
 1579              		.loc 1 578 1 view .LVU422
 1580 0554 A8E5     		b	.L43
 1581              	.L79:
 1582 0556 00BF     		.align	2
 1583              	.L78:
 1584 0558 00000000 		.word	debug_rx
 1585 055c 00000000 		.word	can1
 1586 0560 1C040000 		.word	.LC18
 1587 0564 00000000 		.word	debug_tx
 1588 0568 00000000 		.word	huart3
 1589 056c 50040000 		.word	.LC20
 1590 0570 00000000 		.word	successfull_opening
 1591 0574 90040000 		.word	.LC22
 1592 0578 00000000 		.word	filename_log
 1593 057c 60040000 		.word	.LC21
 1594 0580 B8040000 		.word	.LC24
 1595 0584 DC040000 		.word	.LC26
 1596 0588 E8040000 		.word	.LC27
 1597 058c 00000000 		.word	log_names
 1598 0590 C0040000 		.word	.LC25
 1599 0594 D8060000 		.word	.LC28
 1600              		.cfi_endproc
 1601              	.LFE149:
 1603              		.section	.rodata.imu_operations.str1.4,"aMS",%progbits,1
 1604              		.align	2
 1605              	.LC29:
 1606 0000 494D5520 		.ascii	"IMU presente\015\012\000"
 1606      70726573 
 1606      656E7465 
 1606      0D0A00
 1607              		.section	.text.imu_operations,"ax",%progbits
 1608              		.align	1
 1609              		.global	imu_operations
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1613              		.fpu fpv5-d16
 1615              	imu_operations:
 1616              	.LFB150:
 579:Src/state.c   **** 
 580:Src/state.c   **** void imu_operations()
 581:Src/state.c   **** {
 1617              		.loc 1 581 1 is_stmt 1 view -0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 0
 1620              		@ frame_needed = 0, uses_anonymous_args = 0
 1621 0000 08B5     		push	{r3, lr}
 1622              	.LCFI8:
 1623              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccBPpXQI.s 			page 49


 1624              		.cfi_offset 3, -8
 1625              		.cfi_offset 14, -4
 582:Src/state.c   **** 	imu_connected = 1; // imu connected true
 1626              		.loc 1 582 2 view .LVU424
 1627              		.loc 1 582 16 is_stmt 0 view .LVU425
 1628 0002 0A4B     		ldr	r3, .L84
 1629 0004 0122     		movs	r2, #1
 1630 0006 1A70     		strb	r2, [r3]
 583:Src/state.c   **** 	if (count_imu == 10 || count_imu == 11)
 1631              		.loc 1 583 2 is_stmt 1 view .LVU426
 1632              		.loc 1 583 22 is_stmt 0 view .LVU427
 1633 0008 094B     		ldr	r3, .L84+4
 1634 000a 1B88     		ldrh	r3, [r3]
 1635 000c 0A3B     		subs	r3, r3, #10
 1636 000e 9BB2     		uxth	r3, r3
 1637              		.loc 1 583 5 view .LVU428
 1638 0010 9342     		cmp	r3, r2
 1639 0012 03D9     		bls	.L83
 1640              	.L81:
 584:Src/state.c   **** 	{
 585:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"IMU presente\r\n",
 586:Src/state.c   **** 						  strlen("IMU presente\r\n"), 10);
 587:Src/state.c   **** 	}
 588:Src/state.c   **** 	count_imu = 0;
 1641              		.loc 1 588 2 is_stmt 1 view .LVU429
 1642              		.loc 1 588 12 is_stmt 0 view .LVU430
 1643 0014 064B     		ldr	r3, .L84+4
 1644 0016 0022     		movs	r2, #0
 1645 0018 1A80     		strh	r2, [r3]	@ movhi
 589:Src/state.c   **** }
 1646              		.loc 1 589 1 view .LVU431
 1647 001a 08BD     		pop	{r3, pc}
 1648              	.L83:
 585:Src/state.c   **** 						  strlen("IMU presente\r\n"), 10);
 1649              		.loc 1 585 3 is_stmt 1 view .LVU432
 1650 001c 0A23     		movs	r3, #10
 1651 001e 0E22     		movs	r2, #14
 1652 0020 0449     		ldr	r1, .L84+8
 1653 0022 0548     		ldr	r0, .L84+12
 1654 0024 FFF7FEFF 		bl	HAL_UART_Transmit
 1655              	.LVL74:
 1656 0028 F4E7     		b	.L81
 1657              	.L85:
 1658 002a 00BF     		.align	2
 1659              	.L84:
 1660 002c 00000000 		.word	imu_connected
 1661 0030 00000000 		.word	count_imu
 1662 0034 00000000 		.word	.LC29
 1663 0038 00000000 		.word	huart3
 1664              		.cfi_endproc
 1665              	.LFE150:
 1667              		.section	.text.atc_pot_operations,"ax",%progbits
 1668              		.align	1
 1669              		.global	atc_pot_operations
 1670              		.syntax unified
 1671              		.thumb
 1672              		.thumb_func
ARM GAS  /tmp/ccBPpXQI.s 			page 50


 1673              		.fpu fpv5-d16
 1675              	atc_pot_operations:
 1676              	.LFB151:
 590:Src/state.c   **** void atc_pot_operations()
 591:Src/state.c   **** {
 1677              		.loc 1 591 1 view -0
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 0
 1680              		@ frame_needed = 0, uses_anonymous_args = 0
 1681              		@ link register save eliminated.
 592:Src/state.c   **** 	atc_connected = 1;
 1682              		.loc 1 592 2 view .LVU434
 1683              		.loc 1 592 16 is_stmt 0 view .LVU435
 1684 0000 034B     		ldr	r3, .L87
 1685 0002 0122     		movs	r2, #1
 1686 0004 1A70     		strb	r2, [r3]
 593:Src/state.c   **** 	count_atc = 0;
 1687              		.loc 1 593 2 is_stmt 1 view .LVU436
 1688              		.loc 1 593 12 is_stmt 0 view .LVU437
 1689 0006 034B     		ldr	r3, .L87+4
 1690 0008 0022     		movs	r2, #0
 1691 000a 1A80     		strh	r2, [r3]	@ movhi
 594:Src/state.c   **** }
 1692              		.loc 1 594 1 view .LVU438
 1693 000c 7047     		bx	lr
 1694              	.L88:
 1695 000e 00BF     		.align	2
 1696              	.L87:
 1697 0010 00000000 		.word	atc_connected
 1698 0014 00000000 		.word	count_atc
 1699              		.cfi_endproc
 1700              	.LFE151:
 1702              		.section	.text.idle,"ax",%progbits
 1703              		.align	1
 1704              		.global	idle
 1705              		.syntax unified
 1706              		.thumb
 1707              		.thumb_func
 1708              		.fpu fpv5-d16
 1710              	idle:
 1711              	.LFB146:
 130:Src/state.c   **** 	/*if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port,USER_BUTTON_Pin) == GPIO_PIN_SET){
 1712              		.loc 1 130 1 is_stmt 1 view -0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 0
 1715              		@ frame_needed = 0, uses_anonymous_args = 0
 1716 0000 08B5     		push	{r3, lr}
 1717              	.LCFI9:
 1718              		.cfi_def_cfa_offset 8
 1719              		.cfi_offset 3, -8
 1720              		.cfi_offset 14, -4
 139:Src/state.c   **** 	{
 1721              		.loc 1 139 2 view .LVU440
 139:Src/state.c   **** 	{
 1722              		.loc 1 139 24 is_stmt 0 view .LVU441
 1723 0002 174B     		ldr	r3, .L97
 1724 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccBPpXQI.s 			page 51


 139:Src/state.c   **** 	{
 1725              		.loc 1 139 5 view .LVU442
 1726 0006 012B     		cmp	r3, #1
 1727 0008 0FD0     		beq	.L96
 1728              	.L90:
 144:Src/state.c   **** 	{
 1729              		.loc 1 144 2 is_stmt 1 view .LVU443
 144:Src/state.c   **** 	{
 1730              		.loc 1 144 6 is_stmt 0 view .LVU444
 1731 000a 1648     		ldr	r0, .L97+4
 1732 000c FFF7FEFF 		bl	fifoRxDataCAN_pop
 1733              	.LVL75:
 144:Src/state.c   **** 	{
 1734              		.loc 1 144 5 view .LVU445
 1735 0010 E8B1     		cbz	r0, .L89
 146:Src/state.c   **** 		{
 1736              		.loc 1 146 3 is_stmt 1 view .LVU446
 146:Src/state.c   **** 		{
 1737              		.loc 1 146 15 is_stmt 0 view .LVU447
 1738 0012 144B     		ldr	r3, .L97+4
 1739 0014 1B6B     		ldr	r3, [r3, #48]
 146:Src/state.c   **** 		{
 1740              		.loc 1 146 3 view .LVU448
 1741 0016 A02B     		cmp	r3, #160
 1742 0018 1AD0     		beq	.L92
 1743 001a 18D8     		bhi	.L89
 1744 001c 102B     		cmp	r3, #16
 1745 001e 0AD0     		beq	.L93
 1746 0020 342B     		cmp	r3, #52
 1747 0022 14D1     		bne	.L89
 185:Src/state.c   **** 			break;
 1748              		.loc 1 185 4 is_stmt 1 view .LVU449
 1749 0024 FFF7FEFF 		bl	atc_pot_operations
 1750              	.LVL76:
 186:Src/state.c   **** 		case ID_ATC_MAX_VAL:
 1751              		.loc 1 186 4 view .LVU450
 193:Src/state.c   **** /*******************************************************************
 1752              		.loc 1 193 1 is_stmt 0 view .LVU451
 1753 0028 11E0     		b	.L89
 1754              	.L96:
 141:Src/state.c   **** 		debug_operations();
 1755              		.loc 1 141 3 is_stmt 1 view .LVU452
 141:Src/state.c   **** 		debug_operations();
 1756              		.loc 1 141 21 is_stmt 0 view .LVU453
 1757 002a 0D4B     		ldr	r3, .L97
 1758 002c 0022     		movs	r2, #0
 1759 002e 1A70     		strb	r2, [r3]
 142:Src/state.c   **** 	}
 1760              		.loc 1 142 3 is_stmt 1 view .LVU454
 1761 0030 FFF7FEFF 		bl	debug_operations
 1762              	.LVL77:
 1763 0034 E9E7     		b	.L90
 1764              	.L93:
 149:Src/state.c   **** 			can1.tx_size = 1;
 1765              		.loc 1 149 4 view .LVU455
 149:Src/state.c   **** 			can1.tx_size = 1;
 1766              		.loc 1 149 19 is_stmt 0 view .LVU456
ARM GAS  /tmp/ccBPpXQI.s 			page 52


 1767 0036 0B48     		ldr	r0, .L97+4
 1768 0038 0B4B     		ldr	r3, .L97+8
 1769 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1770 003c 0373     		strb	r3, [r0, #12]
 150:Src/state.c   **** 			can1.tx_id = ID_ACU_1;
 1771              		.loc 1 150 4 is_stmt 1 view .LVU457
 150:Src/state.c   **** 			can1.tx_id = ID_ACU_1;
 1772              		.loc 1 150 17 is_stmt 0 view .LVU458
 1773 003e 0123     		movs	r3, #1
 1774 0040 0360     		str	r3, [r0]
 151:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 1775              		.loc 1 151 4 is_stmt 1 view .LVU459
 151:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 1776              		.loc 1 151 15 is_stmt 0 view .LVU460
 1777 0042 4FF48073 		mov	r3, #256
 1778 0046 C362     		str	r3, [r0, #44]
 152:Src/state.c   **** 			break;
 1779              		.loc 1 152 4 is_stmt 1 view .LVU461
 1780 0048 0021     		movs	r1, #0
 1781 004a FFF7FEFF 		bl	CAN_Send
 1782              	.LVL78:
 153:Src/state.c   **** 		case ID_ASK_INV_DX:
 1783              		.loc 1 153 4 view .LVU462
 1784              	.L89:
 193:Src/state.c   **** /*******************************************************************
 1785              		.loc 1 193 1 is_stmt 0 view .LVU463
 1786 004e 08BD     		pop	{r3, pc}
 1787              	.L92:
 174:Src/state.c   **** 			{
 1788              		.loc 1 174 4 is_stmt 1 view .LVU464
 174:Src/state.c   **** 			{
 1789              		.loc 1 174 23 is_stmt 0 view .LVU465
 1790 0050 044B     		ldr	r3, .L97+4
 1791 0052 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1792 0054 022B     		cmp	r3, #2
 1793 0056 FAD1     		bne	.L89
 178:Src/state.c   **** 				break;
 1794              		.loc 1 178 5 is_stmt 1 view .LVU466
 178:Src/state.c   **** 				break;
 1795              		.loc 1 178 19 is_stmt 0 view .LVU467
 1796 0058 034B     		ldr	r3, .L97+8
 1797 005a 0222     		movs	r2, #2
 1798 005c 1A70     		strb	r2, [r3]
 179:Src/state.c   **** 			default:
 1799              		.loc 1 179 5 is_stmt 1 view .LVU468
 1800 005e F6E7     		b	.L89
 1801              	.L98:
 1802              		.align	2
 1803              	.L97:
 1804 0060 00000000 		.word	debug_msg_arrived
 1805 0064 00000000 		.word	can1
 1806 0068 00000000 		.word	current_state
 1807              		.cfi_endproc
 1808              	.LFE146:
 1810              		.section	.text.run,"ax",%progbits
 1811              		.align	1
 1812              		.global	run
ARM GAS  /tmp/ccBPpXQI.s 			page 53


 1813              		.syntax unified
 1814              		.thumb
 1815              		.thumb_func
 1816              		.fpu fpv5-d16
 1818              	run:
 1819              	.LFB148:
 404:Src/state.c   **** 	if (fifoRxDataCAN_pop(&can1))
 1820              		.loc 1 404 1 view -0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 0
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824 0000 08B5     		push	{r3, lr}
 1825              	.LCFI10:
 1826              		.cfi_def_cfa_offset 8
 1827              		.cfi_offset 3, -8
 1828              		.cfi_offset 14, -4
 405:Src/state.c   **** 	{
 1829              		.loc 1 405 2 view .LVU470
 405:Src/state.c   **** 	{
 1830              		.loc 1 405 6 is_stmt 0 view .LVU471
 1831 0002 0A48     		ldr	r0, .L103
 1832 0004 FFF7FEFF 		bl	fifoRxDataCAN_pop
 1833              	.LVL79:
 405:Src/state.c   **** 	{
 1834              		.loc 1 405 5 view .LVU472
 1835 0008 78B1     		cbz	r0, .L99
 407:Src/state.c   **** 		{
 1836              		.loc 1 407 3 is_stmt 1 view .LVU473
 407:Src/state.c   **** 		{
 1837              		.loc 1 407 15 is_stmt 0 view .LVU474
 1838 000a 084B     		ldr	r3, .L103
 1839 000c 1B6B     		ldr	r3, [r3, #48]
 407:Src/state.c   **** 		{
 1840              		.loc 1 407 3 view .LVU475
 1841 000e 342B     		cmp	r3, #52
 1842 0010 09D0     		beq	.L101
 1843 0012 A02B     		cmp	r3, #160
 1844 0014 09D1     		bne	.L99
 410:Src/state.c   **** 			{ //----- change state to setup -----//
 1845              		.loc 1 410 4 is_stmt 1 view .LVU476
 410:Src/state.c   **** 			{ //----- change state to setup -----//
 1846              		.loc 1 410 19 is_stmt 0 view .LVU477
 1847 0016 054B     		ldr	r3, .L103
 1848 0018 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 410:Src/state.c   **** 			{ //----- change state to setup -----//
 1849              		.loc 1 410 7 view .LVU478
 1850 001a 062B     		cmp	r3, #6
 1851 001c 05D1     		bne	.L99
 412:Src/state.c   **** 			}
 1852              		.loc 1 412 5 is_stmt 1 view .LVU479
 412:Src/state.c   **** 			}
 1853              		.loc 1 412 19 is_stmt 0 view .LVU480
 1854 001e 044B     		ldr	r3, .L103+4
 1855 0020 0222     		movs	r2, #2
 1856 0022 1A70     		strb	r2, [r3]
 1857 0024 01E0     		b	.L99
 1858              	.L101:
ARM GAS  /tmp/ccBPpXQI.s 			page 54


 416:Src/state.c   **** 			break;
 1859              		.loc 1 416 4 is_stmt 1 view .LVU481
 1860 0026 FFF7FEFF 		bl	atc_pot_operations
 1861              	.LVL80:
 417:Src/state.c   **** 		default:
 1862              		.loc 1 417 4 view .LVU482
 1863              	.L99:
 422:Src/state.c   **** /*******************************************************************
 1864              		.loc 1 422 1 is_stmt 0 view .LVU483
 1865 002a 08BD     		pop	{r3, pc}
 1866              	.L104:
 1867              		.align	2
 1868              	.L103:
 1869 002c 00000000 		.word	can1
 1870 0030 00000000 		.word	current_state
 1871              		.cfi_endproc
 1872              	.LFE148:
 1874              		.global	inv_init_response
 1875              		.global	init_inv_resp
 1876              		.global	init_precharge_start_time
 1877              		.global	init_step_start_time
 1878              		.global	init_step
 1879              		.global	critical_errors
 1880              		.global	setup_init
 1881              		.comm	current_state,1,1
 1882              		.section	.bss.critical_errors,"aw",%nobits
 1883              		.align	2
 1884              		.set	.LANCHOR4,. + 0
 1887              	critical_errors:
 1888 0000 00000000 		.space	4
 1889              		.section	.bss.init_inv_resp,"aw",%nobits
 1890              		.align	2
 1891              		.set	.LANCHOR6,. + 0
 1894              	init_inv_resp:
 1895 0000 00000000 		.space	4
 1896              		.section	.bss.init_precharge_start_time,"aw",%nobits
 1897              		.align	2
 1898              		.set	.LANCHOR5,. + 0
 1901              	init_precharge_start_time:
 1902 0000 00000000 		.space	4
 1903              		.section	.bss.init_step,"aw",%nobits
 1904              		.align	2
 1905              		.set	.LANCHOR0,. + 0
 1908              	init_step:
 1909 0000 00000000 		.space	4
 1910              		.section	.bss.init_step_start_time,"aw",%nobits
 1911              		.align	2
 1912              		.set	.LANCHOR1,. + 0
 1915              	init_step_start_time:
 1916 0000 00000000 		.space	4
 1917              		.section	.bss.inv_init_response,"aw",%nobits
 1918              		.set	.LANCHOR2,. + 0
 1921              	inv_init_response:
 1922 0000 00       		.space	1
 1923              		.section	.bss.setup_init,"aw",%nobits
 1924              		.align	2
 1925              		.set	.LANCHOR3,. + 0
ARM GAS  /tmp/ccBPpXQI.s 			page 55


 1928              	setup_init:
 1929 0000 00000000 		.space	4
 1930              		.text
 1931              	.Letext0:
 1932              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1933              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1934              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1935              		.file 5 "Inc/state.h"
 1936              		.file 6 "Drivers/CMSIS/Include/core_cm7.h"
 1937              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1938              		.file 8 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1939              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1940              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1941              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 1942              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1943              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1944              		.file 14 "Inc/can.h"
 1945              		.file 15 "Middlewares/Third_Party/FatFs/src/integer.h"
 1946              		.file 16 "/usr/arm-none-eabi/include/sys/lock.h"
 1947              		.file 17 "/usr/arm-none-eabi/include/sys/_types.h"
 1948              		.file 18 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 1949              		.file 19 "/usr/arm-none-eabi/include/sys/reent.h"
 1950              		.file 20 "/usr/arm-none-eabi/include/stdlib.h"
 1951              		.file 21 "Middlewares/Third_Party/FatFs/src/ff.h"
 1952              		.file 22 "Middlewares/Third_Party/FatFs/src/diskio.h"
 1953              		.file 23 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 1954              		.file 24 "Inc/sd_diskio.h"
 1955              		.file 25 "Inc/fatfs.h"
 1956              		.file 26 "Inc/global_variables.h"
 1957              		.file 27 "/usr/arm-none-eabi/include/stdio.h"
 1958              		.file 28 "/usr/arm-none-eabi/include/string.h"
 1959              		.file 29 "<built-in>"
ARM GAS  /tmp/ccBPpXQI.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 state.c
     /tmp/ccBPpXQI.s:17     .text.set_bit_uint8:0000000000000000 $t
     /tmp/ccBPpXQI.s:25     .text.set_bit_uint8:0000000000000000 set_bit_uint8
     /tmp/ccBPpXQI.s:73     .text.init:0000000000000000 $t
     /tmp/ccBPpXQI.s:80     .text.init:0000000000000000 init
     /tmp/ccBPpXQI.s:365    .text.init:0000000000000164 $d
                            *COM*:0000000000000001 current_state
     /tmp/ccBPpXQI.s:376    .text.setup:0000000000000000 $t
     /tmp/ccBPpXQI.s:383    .text.setup:0000000000000000 setup
     /tmp/ccBPpXQI.s:626    .text.setup:0000000000000110 $d
     /tmp/ccBPpXQI.s:638    .rodata.debug_operations.str1.4:0000000000000000 $d
     /tmp/ccBPpXQI.s:755    .text.debug_operations:0000000000000000 $t
     /tmp/ccBPpXQI.s:762    .text.debug_operations:0000000000000000 debug_operations
     /tmp/ccBPpXQI.s:1148   .text.debug_operations:000000000000022c $d
     /tmp/ccBPpXQI.s:1192   .text.debug_operations:00000000000002b8 $t
     /tmp/ccBPpXQI.s:1584   .text.debug_operations:0000000000000558 $d
     /tmp/ccBPpXQI.s:1604   .rodata.imu_operations.str1.4:0000000000000000 $d
     /tmp/ccBPpXQI.s:1608   .text.imu_operations:0000000000000000 $t
     /tmp/ccBPpXQI.s:1615   .text.imu_operations:0000000000000000 imu_operations
     /tmp/ccBPpXQI.s:1660   .text.imu_operations:000000000000002c $d
     /tmp/ccBPpXQI.s:1668   .text.atc_pot_operations:0000000000000000 $t
     /tmp/ccBPpXQI.s:1675   .text.atc_pot_operations:0000000000000000 atc_pot_operations
     /tmp/ccBPpXQI.s:1697   .text.atc_pot_operations:0000000000000010 $d
     /tmp/ccBPpXQI.s:1703   .text.idle:0000000000000000 $t
     /tmp/ccBPpXQI.s:1710   .text.idle:0000000000000000 idle
     /tmp/ccBPpXQI.s:1804   .text.idle:0000000000000060 $d
     /tmp/ccBPpXQI.s:1811   .text.run:0000000000000000 $t
     /tmp/ccBPpXQI.s:1818   .text.run:0000000000000000 run
     /tmp/ccBPpXQI.s:1869   .text.run:000000000000002c $d
     /tmp/ccBPpXQI.s:1921   .bss.inv_init_response:0000000000000000 inv_init_response
     /tmp/ccBPpXQI.s:1894   .bss.init_inv_resp:0000000000000000 init_inv_resp
     /tmp/ccBPpXQI.s:1901   .bss.init_precharge_start_time:0000000000000000 init_precharge_start_time
     /tmp/ccBPpXQI.s:1915   .bss.init_step_start_time:0000000000000000 init_step_start_time
     /tmp/ccBPpXQI.s:1908   .bss.init_step:0000000000000000 init_step
     /tmp/ccBPpXQI.s:1887   .bss.critical_errors:0000000000000000 critical_errors
     /tmp/ccBPpXQI.s:1928   .bss.setup_init:0000000000000000 setup_init
     /tmp/ccBPpXQI.s:1883   .bss.critical_errors:0000000000000000 $d
     /tmp/ccBPpXQI.s:1890   .bss.init_inv_resp:0000000000000000 $d
     /tmp/ccBPpXQI.s:1897   .bss.init_precharge_start_time:0000000000000000 $d
     /tmp/ccBPpXQI.s:1904   .bss.init_step:0000000000000000 $d
     /tmp/ccBPpXQI.s:1911   .bss.init_step_start_time:0000000000000000 $d
     /tmp/ccBPpXQI.s:1922   .bss.inv_init_response:0000000000000000 $d
     /tmp/ccBPpXQI.s:1924   .bss.setup_init:0000000000000000 $d

UNDEFINED SYMBOLS
CAN_Send
fifoRxDataCAN_pop
can3
can1
count_ms_abs
atc_connected
strcmp
strncmp
HAL_UART_Transmit
memcpy
strlen
ARM GAS  /tmp/ccBPpXQI.s 			page 57


sprintf
debug_rx
mount_ok
huart3
debug_tx
code_version
count_hour
count_min
count_sec
count_dec
its_connected
imu_connected
canSnifferMode
successfull_opening
filename_log
log_names
count_imu
count_atc
debug_msg_arrived
