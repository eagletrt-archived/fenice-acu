ARM GAS  /tmp/ccQA1u9w.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"state.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.set_bit_uint8,"ax",%progbits
  17              		.align	1
  18              		.global	set_bit_uint8
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	set_bit_uint8:
  26              	.LVL0:
  27              	.LFB144:
  28              		.file 1 "Src/state.c"
   1:Src/state.c   **** #include "state.h"
   2:Src/state.c   **** #include "can.h"
   3:Src/state.c   **** #include "global_variables.h"
   4:Src/state.c   **** #include "stdio.h"
   5:Src/state.c   **** #include "stm32f7xx_hal.h"
   6:Src/state.c   **** #include "string.h"
   7:Src/state.c   **** /*******************************************************************
   8:Src/state.c   ****  *                         USER FUNCTIONS
   9:Src/state.c   ****  *******************************************************************/ 
  10:Src/state.c   **** void set_bit_uint8(uint8_t* _var, uint8_t _nBit, uint8_t _bool){
  29              		.loc 1 10 64 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  11:Src/state.c   **** 	if(_bool == 0 || _bool == 1){
  34              		.loc 1 11 2 view .LVU1
  35              		.loc 1 11 4 is_stmt 0 view .LVU2
  36 0000 012A     		cmp	r2, #1
  37 0002 00D9     		bls	.L7
  38 0004 7047     		bx	lr
  39              	.L7:
  10:Src/state.c   **** 	if(_bool == 0 || _bool == 1){
  40              		.loc 1 10 64 view .LVU3
  41 0006 10B4     		push	{r4}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 4
  44              		.cfi_offset 4, -4
  12:Src/state.c   **** 		(*_var) = ((*_var) & ( 0b11111111 ^ (0b00000001 << _nBit))) | (0b00000000 | (_bool << _nBit));
  45              		.loc 1 12 3 is_stmt 1 view .LVU4
ARM GAS  /tmp/ccQA1u9w.s 			page 2


  46              		.loc 1 12 15 is_stmt 0 view .LVU5
  47 0008 90F90040 		ldrsb	r4, [r0]
  48              		.loc 1 12 51 view .LVU6
  49 000c 0123     		movs	r3, #1
  50 000e 8B40     		lsls	r3, r3, r1
  51              		.loc 1 12 37 view .LVU7
  52 0010 DB43     		mvns	r3, r3
  53 0012 5BB2     		sxtb	r3, r3
  54              		.loc 1 12 22 view .LVU8
  55 0014 2340     		ands	r3, r3, r4
  56              		.loc 1 12 77 view .LVU9
  57 0016 8A40     		lsls	r2, r2, r1
  58              	.LVL1:
  59              		.loc 1 12 63 view .LVU10
  60 0018 1A43     		orrs	r2, r2, r3
  61              		.loc 1 12 11 view .LVU11
  62 001a 0270     		strb	r2, [r0]
  13:Src/state.c   **** 	}
  14:Src/state.c   **** }
  63              		.loc 1 14 1 view .LVU12
  64 001c 5DF8044B 		ldr	r4, [sp], #4
  65              	.LCFI1:
  66              		.cfi_restore 4
  67              		.cfi_def_cfa_offset 0
  68 0020 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE144:
  72              		.section	.text.init,"ax",%progbits
  73              		.align	1
  74              		.global	init
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv5-d16
  80              	init:
  81              	.LFB145:
  15:Src/state.c   **** /*******************************************************************
  16:Src/state.c   ****  *                         STATE VARIABLES
  17:Src/state.c   ****  *******************************************************************/ 
  18:Src/state.c   **** /*** GLOBAL ***/
  19:Src/state.c   **** int setup_init = 0;
  20:Src/state.c   **** int critical_errors = 0;
  21:Src/state.c   **** 
  22:Src/state.c   **** /*** FOR INIT STATE ***/
  23:Src/state.c   **** int init_step = 0;
  24:Src/state.c   **** uint32_t init_step_start_time = 0;
  25:Src/state.c   **** uint32_t init_precharge_start_time = 0;
  26:Src/state.c   **** uint32_t init_inv_resp = 0;
  27:Src/state.c   **** 
  28:Src/state.c   **** uint8_t inv_init_response = 0; // bit 0 = inv R -> 0 = no / 1 = YES ---- bit 1 = inv L -> 0 = no / 
  29:Src/state.c   **** // Default state
  30:Src/state.c   **** // Init variables
  31:Src/state.c   **** /*******************************************************************
  32:Src/state.c   ****  *                         START INIT STATE
  33:Src/state.c   ****  *******************************************************************/
  34:Src/state.c   **** void init()
  35:Src/state.c   **** {
ARM GAS  /tmp/ccQA1u9w.s 			page 3


  82              		.loc 1 35 1 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  87              	.LCFI2:
  88              		.cfi_def_cfa_offset 40
  89              		.cfi_offset 3, -40
  90              		.cfi_offset 4, -36
  91              		.cfi_offset 5, -32
  92              		.cfi_offset 6, -28
  93              		.cfi_offset 7, -24
  94              		.cfi_offset 8, -20
  95              		.cfi_offset 9, -16
  96              		.cfi_offset 10, -12
  97              		.cfi_offset 11, -8
  98              		.cfi_offset 14, -4
  36:Src/state.c   **** 	if(init_step == 0){
  99              		.loc 1 36 2 view .LVU14
 100              		.loc 1 36 15 is_stmt 0 view .LVU15
 101 0004 574B     		ldr	r3, .L22
 102 0006 1B68     		ldr	r3, [r3]
 103              		.loc 1 36 4 view .LVU16
 104 0008 53B1     		cbz	r3, .L17
  37:Src/state.c   **** 		init_step = 1;
  38:Src/state.c   **** 		/* Send inverter L disable */
  39:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_SX;
  40:Src/state.c   **** 		can3.dataTx[0] = 0x51;
  41:Src/state.c   **** 		can3.dataTx[1] = 0x04;
  42:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  43:Src/state.c   **** 		can3.tx_size = 3;
  44:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  45:Src/state.c   **** 
  46:Src/state.c   **** 		/* Send inverter R disable */
  47:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_DX;
  48:Src/state.c   **** 		can3.dataTx[0] = 0x51;
  49:Src/state.c   **** 		can3.dataTx[1] = 0x04;
  50:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  51:Src/state.c   **** 		can3.tx_size = 3;
  52:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  53:Src/state.c   **** 
  54:Src/state.c   **** 		/* Send req to inverter L presence */
  55:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_SX;
  56:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
  57:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
  58:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  59:Src/state.c   **** 		can3.tx_size = 3;
  60:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  61:Src/state.c   **** 
  62:Src/state.c   **** 		/* Send req to inverter R presence */
  63:Src/state.c   **** 		can3.tx_id = ID_ASK_INV_DX;
  64:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
  65:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
  66:Src/state.c   **** 		can3.dataTx[2] = 0x00;
  67:Src/state.c   **** 		can3.tx_size = 3;
  68:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
  69:Src/state.c   **** 
ARM GAS  /tmp/ccQA1u9w.s 			page 4


  70:Src/state.c   **** 		init_step_start_time = count_ms_abs; // save the curret time
  71:Src/state.c   **** 
  72:Src/state.c   **** 	}else if(init_step == 1){
 105              		.loc 1 72 8 is_stmt 1 view .LVU17
 106              		.loc 1 72 10 is_stmt 0 view .LVU18
 107 000a 012B     		cmp	r3, #1
 108 000c 51D0     		beq	.L18
  73:Src/state.c   **** 		if (fifoRxDataCAN_pop(&can1)){
  74:Src/state.c   **** 			switch (can1.rx_id)
  75:Src/state.c   **** 			{
  76:Src/state.c   **** 			case ID_ASK_INV_DX:
  77:Src/state.c   **** 				if(can1.dataRx[0] == 0xE2 && can1.dataRx[1] == 0x01 && can1.dataRx[2] == 0x00 && can1.dataRx[3]
  78:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
  79:Src/state.c   **** 				}
  80:Src/state.c   **** 				break;
  81:Src/state.c   **** 			case ID_ASK_INV_SX:
  82:Src/state.c   **** 				if(can1.dataRx[0] == 0xE2 && can1.dataRx[1] == 0x01 && can1.dataRx[2] == 0x00 && can1.dataRx[3]
  83:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
  84:Src/state.c   **** 				}
  85:Src/state.c   **** 			default:
  86:Src/state.c   **** 				break;
  87:Src/state.c   **** 			}
  88:Src/state.c   **** 		}
  89:Src/state.c   **** 		if(inv_init_response == 3){ // means that each inv has responded
  90:Src/state.c   **** 			init_step = 2;
  91:Src/state.c   **** 		}else{
  92:Src/state.c   **** 			if(count_ms_abs - init_step_start_time > 1000 ){ //if is passed more than 1 second -> go ahead
  93:Src/state.c   **** 				/* Send Error to steer */ 
  94:Src/state.c   **** 
  95:Src/state.c   **** 				//TODO: send errors
  96:Src/state.c   **** 
  97:Src/state.c   **** 				init_step = 3;
  98:Src/state.c   **** 			}
  99:Src/state.c   **** 		}
 100:Src/state.c   **** 	}else if(init_step == 2){
 109              		.loc 1 100 8 is_stmt 1 view .LVU19
 110              		.loc 1 100 10 is_stmt 0 view .LVU20
 111 000e 022B     		cmp	r3, #2
 112 0010 00F08780 		beq	.L19
 101:Src/state.c   **** 		/* Send periodical status inv L */
 102:Src/state.c   **** 		can1.tx_id = ID_ASK_INV_SX;
 103:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 104:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 105:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 106:Src/state.c   **** 		can1.tx_size = 3;
 107:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 108:Src/state.c   **** 
 109:Src/state.c   **** 		/* Send periodical status inv R */
 110:Src/state.c   **** 		can1.tx_id = ID_ASK_INV_DX;
 111:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 112:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 113:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 114:Src/state.c   **** 		can1.tx_size = 3;
 115:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 116:Src/state.c   **** 
 117:Src/state.c   **** 		init_step = 3;
 118:Src/state.c   **** 	}else if(init_step == 3){
ARM GAS  /tmp/ccQA1u9w.s 			page 5


 113              		.loc 1 118 8 is_stmt 1 view .LVU21
 114              		.loc 1 118 10 is_stmt 0 view .LVU22
 115 0014 032B     		cmp	r3, #3
 116 0016 4AD1     		bne	.L8
 119:Src/state.c   **** 		current_state = STATE_IDLE; // Change state to STATE_IDLE
 117              		.loc 1 119 3 is_stmt 1 view .LVU23
 118              		.loc 1 119 17 is_stmt 0 view .LVU24
 119 0018 534B     		ldr	r3, .L22+4
 120 001a 0122     		movs	r2, #1
 121 001c 1A70     		strb	r2, [r3]
 120:Src/state.c   **** 		/* Send msg to steer of changing state */
 121:Src/state.c   **** 	}
 122:Src/state.c   **** }
 122              		.loc 1 122 1 view .LVU25
 123 001e 46E0     		b	.L8
 124              	.L17:
  37:Src/state.c   **** 		/* Send inverter L disable */
 125              		.loc 1 37 3 is_stmt 1 view .LVU26
  37:Src/state.c   **** 		/* Send inverter L disable */
 126              		.loc 1 37 13 is_stmt 0 view .LVU27
 127 0020 504B     		ldr	r3, .L22
 128 0022 0122     		movs	r2, #1
 129 0024 1A60     		str	r2, [r3]
  39:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 130              		.loc 1 39 3 is_stmt 1 view .LVU28
  39:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 131              		.loc 1 39 14 is_stmt 0 view .LVU29
 132 0026 514C     		ldr	r4, .L22+8
 133 0028 40F20128 		movw	r8, #513
 134 002c C4F82C80 		str	r8, [r4, #44]
  40:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 135              		.loc 1 40 3 is_stmt 1 view .LVU30
  40:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 136              		.loc 1 40 18 is_stmt 0 view .LVU31
 137 0030 4FF0510B 		mov	fp, #81
 138 0034 84F80CB0 		strb	fp, [r4, #12]
  41:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 139              		.loc 1 41 3 is_stmt 1 view .LVU32
  41:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 140              		.loc 1 41 18 is_stmt 0 view .LVU33
 141 0038 4FF00409 		mov	r9, #4
 142 003c 84F80D90 		strb	r9, [r4, #13]
  42:Src/state.c   **** 		can3.tx_size = 3;
 143              		.loc 1 42 3 is_stmt 1 view .LVU34
  42:Src/state.c   **** 		can3.tx_size = 3;
 144              		.loc 1 42 18 is_stmt 0 view .LVU35
 145 0040 0025     		movs	r5, #0
 146 0042 A573     		strb	r5, [r4, #14]
  43:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 147              		.loc 1 43 3 is_stmt 1 view .LVU36
  43:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 148              		.loc 1 43 16 is_stmt 0 view .LVU37
 149 0044 0327     		movs	r7, #3
 150 0046 2760     		str	r7, [r4]
  44:Src/state.c   **** 
 151              		.loc 1 44 3 is_stmt 1 view .LVU38
 152 0048 494E     		ldr	r6, .L22+12
ARM GAS  /tmp/ccQA1u9w.s 			page 6


 153 004a 2946     		mov	r1, r5
 154 004c 3046     		mov	r0, r6
 155 004e FFF7FEFF 		bl	CAN_Send
 156              	.LVL2:
  47:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 157              		.loc 1 47 3 view .LVU39
  47:Src/state.c   **** 		can3.dataTx[0] = 0x51;
 158              		.loc 1 47 14 is_stmt 0 view .LVU40
 159 0052 40F2022A 		movw	r10, #514
 160 0056 C4F82CA0 		str	r10, [r4, #44]
  48:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 161              		.loc 1 48 3 is_stmt 1 view .LVU41
  48:Src/state.c   **** 		can3.dataTx[1] = 0x04;
 162              		.loc 1 48 18 is_stmt 0 view .LVU42
 163 005a 84F80CB0 		strb	fp, [r4, #12]
  49:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 164              		.loc 1 49 3 is_stmt 1 view .LVU43
  49:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 165              		.loc 1 49 18 is_stmt 0 view .LVU44
 166 005e 84F80D90 		strb	r9, [r4, #13]
  50:Src/state.c   **** 		can3.tx_size = 3;
 167              		.loc 1 50 3 is_stmt 1 view .LVU45
  50:Src/state.c   **** 		can3.tx_size = 3;
 168              		.loc 1 50 18 is_stmt 0 view .LVU46
 169 0062 A573     		strb	r5, [r4, #14]
  51:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 170              		.loc 1 51 3 is_stmt 1 view .LVU47
  51:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 171              		.loc 1 51 16 is_stmt 0 view .LVU48
 172 0064 2760     		str	r7, [r4]
  52:Src/state.c   **** 
 173              		.loc 1 52 3 is_stmt 1 view .LVU49
 174 0066 2946     		mov	r1, r5
 175 0068 3046     		mov	r0, r6
 176 006a FFF7FEFF 		bl	CAN_Send
 177              	.LVL3:
  55:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 178              		.loc 1 55 3 view .LVU50
  55:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 179              		.loc 1 55 14 is_stmt 0 view .LVU51
 180 006e C4F82C80 		str	r8, [r4, #44]
  56:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 181              		.loc 1 56 3 is_stmt 1 view .LVU52
  56:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 182              		.loc 1 56 18 is_stmt 0 view .LVU53
 183 0072 4FF03D09 		mov	r9, #61
 184 0076 84F80C90 		strb	r9, [r4, #12]
  57:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 185              		.loc 1 57 3 is_stmt 1 view .LVU54
  57:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 186              		.loc 1 57 18 is_stmt 0 view .LVU55
 187 007a 4FF0E208 		mov	r8, #226
 188 007e 84F80D80 		strb	r8, [r4, #13]
  58:Src/state.c   **** 		can3.tx_size = 3;
 189              		.loc 1 58 3 is_stmt 1 view .LVU56
  58:Src/state.c   **** 		can3.tx_size = 3;
 190              		.loc 1 58 18 is_stmt 0 view .LVU57
ARM GAS  /tmp/ccQA1u9w.s 			page 7


 191 0082 A573     		strb	r5, [r4, #14]
  59:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 192              		.loc 1 59 3 is_stmt 1 view .LVU58
  59:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 193              		.loc 1 59 16 is_stmt 0 view .LVU59
 194 0084 2760     		str	r7, [r4]
  60:Src/state.c   **** 
 195              		.loc 1 60 3 is_stmt 1 view .LVU60
 196 0086 2946     		mov	r1, r5
 197 0088 3046     		mov	r0, r6
 198 008a FFF7FEFF 		bl	CAN_Send
 199              	.LVL4:
  63:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 200              		.loc 1 63 3 view .LVU61
  63:Src/state.c   **** 		can3.dataTx[0] = 0x3D;
 201              		.loc 1 63 14 is_stmt 0 view .LVU62
 202 008e C4F82CA0 		str	r10, [r4, #44]
  64:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 203              		.loc 1 64 3 is_stmt 1 view .LVU63
  64:Src/state.c   **** 		can3.dataTx[1] = 0xE2;
 204              		.loc 1 64 18 is_stmt 0 view .LVU64
 205 0092 84F80C90 		strb	r9, [r4, #12]
  65:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 206              		.loc 1 65 3 is_stmt 1 view .LVU65
  65:Src/state.c   **** 		can3.dataTx[2] = 0x00;
 207              		.loc 1 65 18 is_stmt 0 view .LVU66
 208 0096 84F80D80 		strb	r8, [r4, #13]
  66:Src/state.c   **** 		can3.tx_size = 3;
 209              		.loc 1 66 3 is_stmt 1 view .LVU67
  66:Src/state.c   **** 		can3.tx_size = 3;
 210              		.loc 1 66 18 is_stmt 0 view .LVU68
 211 009a A573     		strb	r5, [r4, #14]
  67:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 212              		.loc 1 67 3 is_stmt 1 view .LVU69
  67:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 213              		.loc 1 67 16 is_stmt 0 view .LVU70
 214 009c 2760     		str	r7, [r4]
  68:Src/state.c   **** 
 215              		.loc 1 68 3 is_stmt 1 view .LVU71
 216 009e 2946     		mov	r1, r5
 217 00a0 3046     		mov	r0, r6
 218 00a2 FFF7FEFF 		bl	CAN_Send
 219              	.LVL5:
  70:Src/state.c   **** 
 220              		.loc 1 70 3 view .LVU72
  70:Src/state.c   **** 
 221              		.loc 1 70 24 is_stmt 0 view .LVU73
 222 00a6 334B     		ldr	r3, .L22+16
 223 00a8 1A68     		ldr	r2, [r3]
 224 00aa 334B     		ldr	r3, .L22+20
 225 00ac 1A60     		str	r2, [r3]
 226              	.L8:
 227              		.loc 1 122 1 view .LVU74
 228 00ae BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 229              	.L18:
  73:Src/state.c   **** 			switch (can1.rx_id)
 230              		.loc 1 73 3 is_stmt 1 view .LVU75
ARM GAS  /tmp/ccQA1u9w.s 			page 8


  73:Src/state.c   **** 			switch (can1.rx_id)
 231              		.loc 1 73 7 is_stmt 0 view .LVU76
 232 00b2 2F48     		ldr	r0, .L22+12
 233 00b4 FFF7FEFF 		bl	fifoRxDataCAN_pop
 234              	.LVL6:
  73:Src/state.c   **** 			switch (can1.rx_id)
 235              		.loc 1 73 6 view .LVU77
 236 00b8 70B1     		cbz	r0, .L12
  74:Src/state.c   **** 			{
 237              		.loc 1 74 4 is_stmt 1 view .LVU78
  74:Src/state.c   **** 			{
 238              		.loc 1 74 16 is_stmt 0 view .LVU79
 239 00ba 2D4B     		ldr	r3, .L22+12
 240 00bc 1B6B     		ldr	r3, [r3, #48]
  74:Src/state.c   **** 			{
 241              		.loc 1 74 4 view .LVU80
 242 00be 40F20122 		movw	r2, #513
 243 00c2 9342     		cmp	r3, r2
 244 00c4 1ED0     		beq	.L13
 245 00c6 40F20222 		movw	r2, #514
 246 00ca 9342     		cmp	r3, r2
 247 00cc 04D1     		bne	.L12
  77:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
 248              		.loc 1 77 5 is_stmt 1 view .LVU81
  77:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
 249              		.loc 1 77 83 is_stmt 0 view .LVU82
 250 00ce 284B     		ldr	r3, .L22+12
 251 00d0 5B69     		ldr	r3, [r3, #20]
  77:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 0, 1); //set bit 0 to 1
 252              		.loc 1 77 7 view .LVU83
 253 00d2 B3F5F17F 		cmp	r3, #482
 254 00d6 0FD0     		beq	.L20
 255              	.L12:
  89:Src/state.c   **** 			init_step = 2;
 256              		.loc 1 89 3 is_stmt 1 view .LVU84
  89:Src/state.c   **** 			init_step = 2;
 257              		.loc 1 89 24 is_stmt 0 view .LVU85
 258 00d8 284B     		ldr	r3, .L22+24
 259 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  89:Src/state.c   **** 			init_step = 2;
 260              		.loc 1 89 5 view .LVU86
 261 00dc 032B     		cmp	r3, #3
 262 00de 1CD0     		beq	.L21
  92:Src/state.c   **** 				/* Send Error to steer */ 
 263              		.loc 1 92 4 is_stmt 1 view .LVU87
  92:Src/state.c   **** 				/* Send Error to steer */ 
 264              		.loc 1 92 20 is_stmt 0 view .LVU88
 265 00e0 244B     		ldr	r3, .L22+16
 266 00e2 1B68     		ldr	r3, [r3]
 267 00e4 244A     		ldr	r2, .L22+20
 268 00e6 1268     		ldr	r2, [r2]
 269 00e8 9B1A     		subs	r3, r3, r2
  92:Src/state.c   **** 				/* Send Error to steer */ 
 270              		.loc 1 92 6 view .LVU89
 271 00ea B3F57A7F 		cmp	r3, #1000
 272 00ee DED9     		bls	.L8
  97:Src/state.c   **** 			}
ARM GAS  /tmp/ccQA1u9w.s 			page 9


 273              		.loc 1 97 5 is_stmt 1 view .LVU90
  97:Src/state.c   **** 			}
 274              		.loc 1 97 15 is_stmt 0 view .LVU91
 275 00f0 1C4B     		ldr	r3, .L22
 276 00f2 0322     		movs	r2, #3
 277 00f4 1A60     		str	r2, [r3]
 278 00f6 DAE7     		b	.L8
 279              	.L20:
  78:Src/state.c   **** 				}
 280              		.loc 1 78 6 is_stmt 1 view .LVU92
 281 00f8 0122     		movs	r2, #1
 282 00fa 0021     		movs	r1, #0
 283 00fc 1F48     		ldr	r0, .L22+24
 284 00fe FFF7FEFF 		bl	set_bit_uint8
 285              	.LVL7:
 286 0102 E9E7     		b	.L12
 287              	.L13:
  82:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
 288              		.loc 1 82 5 view .LVU93
  82:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
 289              		.loc 1 82 83 is_stmt 0 view .LVU94
 290 0104 1A4B     		ldr	r3, .L22+12
 291 0106 5B69     		ldr	r3, [r3, #20]
  82:Src/state.c   **** 					set_bit_uint8(&inv_init_response, 1, 1); //set bit 1 to 1
 292              		.loc 1 82 7 view .LVU95
 293 0108 B3F5F17F 		cmp	r3, #482
 294 010c E4D1     		bne	.L12
  83:Src/state.c   **** 				}
 295              		.loc 1 83 6 is_stmt 1 view .LVU96
 296 010e 0122     		movs	r2, #1
 297 0110 1146     		mov	r1, r2
 298 0112 1A48     		ldr	r0, .L22+24
 299 0114 FFF7FEFF 		bl	set_bit_uint8
 300              	.LVL8:
 301 0118 DEE7     		b	.L12
 302              	.L21:
  90:Src/state.c   **** 		}else{
 303              		.loc 1 90 4 view .LVU97
  90:Src/state.c   **** 		}else{
 304              		.loc 1 90 14 is_stmt 0 view .LVU98
 305 011a 124B     		ldr	r3, .L22
 306 011c 0222     		movs	r2, #2
 307 011e 1A60     		str	r2, [r3]
 308 0120 C5E7     		b	.L8
 309              	.L19:
 102:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 310              		.loc 1 102 3 is_stmt 1 view .LVU99
 102:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 311              		.loc 1 102 14 is_stmt 0 view .LVU100
 312 0122 134C     		ldr	r4, .L22+12
 313 0124 40F20123 		movw	r3, #513
 314 0128 E362     		str	r3, [r4, #44]
 103:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 315              		.loc 1 103 3 is_stmt 1 view .LVU101
 103:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 316              		.loc 1 103 18 is_stmt 0 view .LVU102
 317 012a 4FF03D08 		mov	r8, #61
ARM GAS  /tmp/ccQA1u9w.s 			page 10


 318 012e 84F80C80 		strb	r8, [r4, #12]
 104:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 319              		.loc 1 104 3 is_stmt 1 view .LVU103
 104:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 320              		.loc 1 104 18 is_stmt 0 view .LVU104
 321 0132 4027     		movs	r7, #64
 322 0134 6773     		strb	r7, [r4, #13]
 105:Src/state.c   **** 		can1.tx_size = 3;
 323              		.loc 1 105 3 is_stmt 1 view .LVU105
 105:Src/state.c   **** 		can1.tx_size = 3;
 324              		.loc 1 105 18 is_stmt 0 view .LVU106
 325 0136 FA26     		movs	r6, #250
 326 0138 A673     		strb	r6, [r4, #14]
 106:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 327              		.loc 1 106 3 is_stmt 1 view .LVU107
 106:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 328              		.loc 1 106 16 is_stmt 0 view .LVU108
 329 013a 0325     		movs	r5, #3
 330 013c 2560     		str	r5, [r4]
 107:Src/state.c   **** 
 331              		.loc 1 107 3 is_stmt 1 view .LVU109
 332 013e 0021     		movs	r1, #0
 333 0140 2046     		mov	r0, r4
 334 0142 FFF7FEFF 		bl	CAN_Send
 335              	.LVL9:
 110:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 336              		.loc 1 110 3 view .LVU110
 110:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 337              		.loc 1 110 14 is_stmt 0 view .LVU111
 338 0146 40F20223 		movw	r3, #514
 339 014a E362     		str	r3, [r4, #44]
 111:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 340              		.loc 1 111 3 is_stmt 1 view .LVU112
 111:Src/state.c   **** 		can1.dataTx[1] = 0x40;
 341              		.loc 1 111 18 is_stmt 0 view .LVU113
 342 014c 84F80C80 		strb	r8, [r4, #12]
 112:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 343              		.loc 1 112 3 is_stmt 1 view .LVU114
 112:Src/state.c   **** 		can1.dataTx[2] = 0xFA; // each 250ms
 344              		.loc 1 112 18 is_stmt 0 view .LVU115
 345 0150 6773     		strb	r7, [r4, #13]
 113:Src/state.c   **** 		can1.tx_size = 3;
 346              		.loc 1 113 3 is_stmt 1 view .LVU116
 113:Src/state.c   **** 		can1.tx_size = 3;
 347              		.loc 1 113 18 is_stmt 0 view .LVU117
 348 0152 A673     		strb	r6, [r4, #14]
 114:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 349              		.loc 1 114 3 is_stmt 1 view .LVU118
 114:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 350              		.loc 1 114 16 is_stmt 0 view .LVU119
 351 0154 2560     		str	r5, [r4]
 115:Src/state.c   **** 
 352              		.loc 1 115 3 is_stmt 1 view .LVU120
 353 0156 0021     		movs	r1, #0
 354 0158 2046     		mov	r0, r4
 355 015a FFF7FEFF 		bl	CAN_Send
 356              	.LVL10:
ARM GAS  /tmp/ccQA1u9w.s 			page 11


 117:Src/state.c   **** 	}else if(init_step == 3){
 357              		.loc 1 117 3 view .LVU121
 117:Src/state.c   **** 	}else if(init_step == 3){
 358              		.loc 1 117 13 is_stmt 0 view .LVU122
 359 015e 014B     		ldr	r3, .L22
 360 0160 1D60     		str	r5, [r3]
 361 0162 A4E7     		b	.L8
 362              	.L23:
 363              		.align	2
 364              	.L22:
 365 0164 00000000 		.word	.LANCHOR0
 366 0168 00000000 		.word	current_state
 367 016c 00000000 		.word	can3
 368 0170 00000000 		.word	can1
 369 0174 00000000 		.word	count_ms_abs
 370 0178 00000000 		.word	.LANCHOR1
 371 017c 00000000 		.word	.LANCHOR2
 372              		.cfi_endproc
 373              	.LFE145:
 375              		.section	.text.setup,"ax",%progbits
 376              		.align	1
 377              		.global	setup
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 381              		.fpu fpv5-d16
 383              	setup:
 384              	.LFB147:
 123:Src/state.c   **** /*******************************************************************
 124:Src/state.c   ****  *                         END INIT STATE
 125:Src/state.c   ****  *******************************************************************/
 126:Src/state.c   **** /*******************************************************************
 127:Src/state.c   ****  *                        START IDLE STATE
 128:Src/state.c   ****  *******************************************************************/
 129:Src/state.c   **** void idle()
 130:Src/state.c   **** {
 131:Src/state.c   **** 	/*if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port,USER_BUTTON_Pin) == GPIO_PIN_SET){
 132:Src/state.c   **** 		sprintf(txt,"%d\r\n%d\r\n%d\r\n%d\r\n",accel.pot1_val,accel.pot2_val,brake.pot1_val,brake.pot2_va
 133:Src/state.c   **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 134:Src/state.c   **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_ALWAYS | FA_WRITE );
 135:Src/state.c   **** 		f_write(&pot_values_f,(TCHAR const*)&txt,strlen(txt), &byteswritten);
 136:Src/state.c   **** 		f_close(&pot_values_f);
 137:Src/state.c   **** 		HAL_Delay(1000);
 138:Src/state.c   **** 	}*/
 139:Src/state.c   **** 	if (debug_msg_arrived == 1)
 140:Src/state.c   **** 	{
 141:Src/state.c   **** 		debug_msg_arrived = 0; // reset flag
 142:Src/state.c   **** 		debug_operations();
 143:Src/state.c   **** 	}
 144:Src/state.c   **** 	if (fifoRxDataCAN_pop(&can1)) // Check if there are messages on CAN1 fifo
 145:Src/state.c   **** 	{
 146:Src/state.c   **** 		switch (can1.rx_id)
 147:Src/state.c   **** 		{
 148:Src/state.c   **** 		case ID_ASK_STATE:
 149:Src/state.c   **** 			can1.dataTx[0] = (uint8_t)current_state;
 150:Src/state.c   **** 			can1.tx_size = 1;
 151:Src/state.c   **** 			can1.tx_id = ID_ACU_1;
ARM GAS  /tmp/ccQA1u9w.s 			page 12


 152:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 153:Src/state.c   **** 			break;
 154:Src/state.c   **** 		case ID_ASK_INV_DX:
 155:Src/state.c   **** 			break;
 156:Src/state.c   **** 		case ID_ASK_INV_SX:
 157:Src/state.c   **** 			break;
 158:Src/state.c   **** 		case ID_BMS_HV:
 159:Src/state.c   **** 			if (can1.dataRx[0] == 0x03)
 160:Src/state.c   **** 			{
 161:Src/state.c   **** 				// Turn ON tractive system
 162:Src/state.c   **** 				if(critical_errors == 0){
 163:Src/state.c   **** 
 164:Src/state.c   **** 				}
 165:Src/state.c   **** 			}
 166:Src/state.c   **** 			else if (can1.dataRx[0] == 0x04)
 167:Src/state.c   **** 			{
 168:Src/state.c   **** 				// Turn OFF tractive system
 169:Src/state.c   **** 			}
 170:Src/state.c   **** 			break;
 171:Src/state.c   **** 		case ID_BMS_LV:
 172:Src/state.c   **** 			break;
 173:Src/state.c   **** 		case ID_STEERING_WEEL_1:
 174:Src/state.c   **** 			switch (can1.dataRx[0])
 175:Src/state.c   **** 			{
 176:Src/state.c   **** 			case REQUEST_TS_ON:
 177:Src/state.c   **** 				//If req Tractive System ON msg arrives -> go to setup state
 178:Src/state.c   **** 				current_state = STATE_SETUP;
 179:Src/state.c   **** 				break;
 180:Src/state.c   **** 			default:
 181:Src/state.c   **** 				break;
 182:Src/state.c   **** 			}
 183:Src/state.c   **** 			break;
 184:Src/state.c   **** 		case ID_ATC_POT:
 185:Src/state.c   **** 			atc_pot_operations();
 186:Src/state.c   **** 			break;
 187:Src/state.c   **** 		default:
 188:Src/state.c   **** 			break;
 189:Src/state.c   **** 		}
 190:Src/state.c   **** 	}
 191:Src/state.c   **** }
 192:Src/state.c   **** /*******************************************************************
 193:Src/state.c   ****  *                         END IDLE STATE
 194:Src/state.c   ****  *******************************************************************/
 195:Src/state.c   **** /*******************************************************************
 196:Src/state.c   ****  *                        START SETUP STATE
 197:Src/state.c   ****  *******************************************************************/
 198:Src/state.c   **** void setup()
 199:Src/state.c   **** {
 385              		.loc 1 199 1 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 200:Src/state.c   **** 	if(setup_init == 0){
 389              		.loc 1 200 2 view .LVU124
 390              		.loc 1 200 16 is_stmt 0 view .LVU125
 391 0000 434B     		ldr	r3, .L41
 392 0002 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccQA1u9w.s 			page 13


 393              		.loc 1 200 4 view .LVU126
 394 0004 73B9     		cbnz	r3, .L25
 201:Src/state.c   **** 		setup_init = 1; //set that setup procedure is started
 395              		.loc 1 201 3 is_stmt 1 view .LVU127
 396              		.loc 1 201 14 is_stmt 0 view .LVU128
 397 0006 424B     		ldr	r3, .L41
 398 0008 0122     		movs	r2, #1
 399 000a 1A60     		str	r2, [r3]
 202:Src/state.c   **** 		if((atc_connected == 1) && (critical_errors = 0)){
 400              		.loc 1 202 3 is_stmt 1 view .LVU129
 401              		.loc 1 202 21 is_stmt 0 view .LVU130
 402 000c 414B     		ldr	r3, .L41+4
 403 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 404              		.loc 1 202 5 view .LVU131
 405 0010 9342     		cmp	r3, r2
 406 0012 03D0     		beq	.L36
 407              	.L26:
 203:Src/state.c   **** 			//If Analog to CAN device is connected, brake is pressed and there aren't critical erros -> 
 204:Src/state.c   **** 				//-> send pre-charge request to HV
 205:Src/state.c   **** 			can1.tx_id = ID_REQ_PRCH;
 206:Src/state.c   **** 			can1.dataTx[0] = 1;
 207:Src/state.c   **** 			can1.tx_size = 1;
 208:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 209:Src/state.c   **** 			init_precharge_start_time = count_ms_abs; //take the time when the pre-charge is sent
 210:Src/state.c   **** 		}else{
 211:Src/state.c   **** 			//Can't turn on TS caused by some errors
 212:Src/state.c   **** 			current_state = STATE_IDLE; //return to idle state
 408              		.loc 1 212 4 is_stmt 1 view .LVU132
 409              		.loc 1 212 18 is_stmt 0 view .LVU133
 410 0014 404B     		ldr	r3, .L41+8
 411 0016 0122     		movs	r2, #1
 412 0018 1A70     		strb	r2, [r3]
 413 001a 7047     		bx	lr
 414              	.L36:
 202:Src/state.c   **** 		if((atc_connected == 1) && (critical_errors = 0)){
 415              		.loc 1 202 47 discriminator 1 view .LVU134
 416 001c 3F4B     		ldr	r3, .L41+12
 417 001e 0022     		movs	r2, #0
 418 0020 1A60     		str	r2, [r3]
 419 0022 F7E7     		b	.L26
 420              	.L25:
 199:Src/state.c   **** 	if(setup_init == 0){
 421              		.loc 1 199 1 view .LVU135
 422 0024 70B5     		push	{r4, r5, r6, lr}
 423              	.LCFI3:
 424              		.cfi_def_cfa_offset 16
 425              		.cfi_offset 4, -16
 426              		.cfi_offset 5, -12
 427              		.cfi_offset 6, -8
 428              		.cfi_offset 14, -4
 213:Src/state.c   **** 			// TODO: report error to steer
 214:Src/state.c   **** 		}
 215:Src/state.c   **** 	}else if(setup_init == 1){
 429              		.loc 1 215 8 is_stmt 1 view .LVU136
 430              		.loc 1 215 10 is_stmt 0 view .LVU137
 431 0026 012B     		cmp	r3, #1
 432 0028 04D0     		beq	.L37
ARM GAS  /tmp/ccQA1u9w.s 			page 14


 216:Src/state.c   **** 		if(count_ms_abs - init_precharge_start_time > 5000){
 217:Src/state.c   **** 			// report error
 218:Src/state.c   **** 			current_state = STATE_IDLE;
 219:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 220:Src/state.c   **** 			switch(can1.rx_id){
 221:Src/state.c   **** 				case ID_BMS_HV:
 222:Src/state.c   **** 					if(can1.dataRx[0] == 1){ //Pre-cherge ended sucessfully
 223:Src/state.c   **** 						setup_init = 2;
 224:Src/state.c   **** 					}else{ //Pre-charge failed
 225:Src/state.c   **** 						current_state = STATE_IDLE;
 226:Src/state.c   **** 						//TODO: send error to steer
 227:Src/state.c   **** 					}
 228:Src/state.c   **** 			}
 229:Src/state.c   **** 		}
 230:Src/state.c   **** 	}else if(setup_init == 2){
 433              		.loc 1 230 8 is_stmt 1 view .LVU138
 434              		.loc 1 230 10 is_stmt 0 view .LVU139
 435 002a 022B     		cmp	r3, #2
 436 002c 24D0     		beq	.L38
 231:Src/state.c   **** 		//send command inverter enable
 232:Src/state.c   **** 		can1.tx_id = ID_REQ_INV_DX;
 233:Src/state.c   **** 		can1.dataTx[0] = 0x51;
 234:Src/state.c   **** 		can1.dataTx[1] = 0x00;
 235:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 236:Src/state.c   **** 		can1.tx_size = 3;
 237:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 238:Src/state.c   **** 
 239:Src/state.c   **** 		//send request inverter enable
 240:Src/state.c   **** 		can1.tx_id = ID_ASK_INV_DX;
 241:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 242:Src/state.c   **** 		can1.dataTx[1] = 0xE8;
 243:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 244:Src/state.c   **** 		can1.tx_size = 3;
 245:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 246:Src/state.c   **** 
 247:Src/state.c   **** 		setup_init = 3;
 248:Src/state.c   **** 
 249:Src/state.c   **** 		init_inv_resp = count_ms_abs;
 250:Src/state.c   **** 	}else if(setup_init == 3){
 437              		.loc 1 250 8 is_stmt 1 view .LVU140
 438              		.loc 1 250 10 is_stmt 0 view .LVU141
 439 002e 032B     		cmp	r3, #3
 440 0030 45D0     		beq	.L39
 441              	.L24:
 251:Src/state.c   **** 		if(count_ms_abs - init_inv_resp > 10000){
 252:Src/state.c   **** 			// report error
 253:Src/state.c   **** 			//send pre-charge OFF req
 254:Src/state.c   **** 			can1.tx_id = ID_REQ_PRCH;
 255:Src/state.c   **** 			can1.dataTx[0] = 0x00;
 256:Src/state.c   **** 			can1.tx_size = 1;
 257:Src/state.c   **** 			CAN_Send(&can1, highPriority);
 258:Src/state.c   **** 			current_state = STATE_IDLE;
 259:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 260:Src/state.c   **** 			switch(can1.rx_id){
 261:Src/state.c   **** 				case ID_REQ_INV_DX:
 262:Src/state.c   **** 					if(can1.dataRx[0] == 0xE0 && can1.dataRx[1] == 0x01 && can1.dataRx[2] == 0x00 && can1.dataRx[3
 263:Src/state.c   **** 						setup_init = 4;
ARM GAS  /tmp/ccQA1u9w.s 			page 15


 264:Src/state.c   **** 					}
 265:Src/state.c   **** 			}			
 266:Src/state.c   **** 		}
 267:Src/state.c   **** 	}else if(setup_init == 4){
 268:Src/state.c   **** 		// In this state all is ready for run //
 269:Src/state.c   **** 		// Waiting for run signal from steer //
 270:Src/state.c   **** 		
 271:Src/state.c   **** 	}
 272:Src/state.c   **** 	/*if (fifoRxDataCAN_pop(&can1))
 273:Src/state.c   **** 	{
 274:Src/state.c   **** 		switch (can1.rx_id)
 275:Src/state.c   **** 		{
 276:Src/state.c   **** 		case ID_STEERING_WEEL_1:
 277:Src/state.c   **** 			switch (can1.dataRx[0])
 278:Src/state.c   **** 			{
 279:Src/state.c   **** 			//----- change state to run -----//
 280:Src/state.c   **** 			case 5:
 281:Src/state.c   **** 				// If inverter are ON and Brake is Pressed
 282:Src/state.c   **** 				current_state = STATE_RUN;
 283:Src/state.c   **** 				can1.tx_id = ID_ACU_2;
 284:Src/state.c   **** 				can1.dataRx[0] = 5;
 285:Src/state.c   **** 				can1.tx_size = 1;
 286:Src/state.c   **** 				CAN_Send(&can1, normalPriority);
 287:Src/state.c   **** 				break;
 288:Src/state.c   **** 			// Turn On inverter Dx
 289:Src/state.c   **** 			case 8:
 290:Src/state.c   **** 				// If Inverter Temp < 80
 291:Src/state.c   **** 				break;
 292:Src/state.c   **** 			// Turn On inverter Sx
 293:Src/state.c   **** 			case 9:
 294:Src/state.c   **** 				// if Iverter Temp < 80
 295:Src/state.c   **** 				break;
 296:Src/state.c   **** 			default:
 297:Src/state.c   **** 				break;
 298:Src/state.c   **** 			}
 299:Src/state.c   **** 			break;
 300:Src/state.c   **** 		case ID_BMS_HV:
 301:Src/state.c   **** 			switch (can1.dataRx[0])
 302:Src/state.c   **** 			{
 303:Src/state.c   **** 			case 4:
 304:Src/state.c   **** 				// Shutdown Confirmed
 305:Src/state.c   **** 				break;
 306:Src/state.c   **** 			case 8:
 307:Src/state.c   **** 				// Shutdown from Error
 308:Src/state.c   **** 				break;
 309:Src/state.c   **** 			}
 310:Src/state.c   **** 			break;
 311:Src/state.c   **** 		case ID_ATC_POT:
 312:Src/state.c   **** 			atc_pot_operations();
 313:Src/state.c   **** 			break;
 314:Src/state.c   **** 		case ID_REQ_INV_DX:
 315:Src/state.c   **** 			switch (can1.dataRx[0])
 316:Src/state.c   **** 			{
 317:Src/state.c   **** 			case 0x4A:
 318:Src/state.c   **** 				// Update Inverter Dx Temp = (can1.RxData[2] * 256 + can1.RxData[1] - 15797) / 112.1182
 319:Src/state.c   **** 				break;
 320:Src/state.c   **** 			case 0xD8:
ARM GAS  /tmp/ccQA1u9w.s 			page 16


 321:Src/state.c   **** 				if (can1.dataRx[2] == 0x0C  && request of shutdown == false)
 322:Src/state.c   **** 				{
 323:Src/state.c   **** 					can1.dataTx[0] = 0x09;
 324:Src/state.c   **** 					can1.dataTx[1] = 0;
 325:Src/state.c   **** 					can1.dataTx[2] = 0;
 326:Src/state.c   **** 					can1.dataTx[3] = 0;
 327:Src/state.c   **** 					can1.dataTx[4] = 0;
 328:Src/state.c   **** 					can1.dataTx[5] = 0;
 329:Src/state.c   **** 					can1.dataTx[6] = 0;
 330:Src/state.c   **** 					can1.dataTx[7] = 0;
 331:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 332:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 333:Src/state.c   **** 					// Inverter Dx true
 334:Src/state.c   **** 				}
 335:Src/state.c   **** 				else
 336:Src/state.c   **** 				{
 337:Src/state.c   **** 					can1.dataTx[0] = 0xD0;
 338:Src/state.c   **** 					can1.dataTx[1] = 0;
 339:Src/state.c   **** 					can1.dataTx[2] = 0;
 340:Src/state.c   **** 					can1.dataTx[3] = 0;
 341:Src/state.c   **** 					can1.dataTx[4] = 0;
 342:Src/state.c   **** 					can1.dataTx[5] = 0;
 343:Src/state.c   **** 					can1.dataTx[6] = 0;
 344:Src/state.c   **** 					can1.dataTx[7] = 0;
 345:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 346:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 347:Src/state.c   **** 					// Inverter Dx false
 348:Src/state.c   **** 				}
 349:Src/state.c   **** 				break;
 350:Src/state.c   **** 			}
 351:Src/state.c   **** 			break;
 352:Src/state.c   **** 		case ID_REQ_INV_SX:
 353:Src/state.c   **** 			switch (can1.dataRx[0])
 354:Src/state.c   **** 			{
 355:Src/state.c   **** 			case 0x4A:
 356:Src/state.c   **** 				// Update Inverter Sx Temp = (can1.RxData[2] * 256 + can1.RxData[1] - 15797) / 112.1182
 357:Src/state.c   **** 				break;
 358:Src/state.c   **** 			case 0xD8:
 359:Src/state.c   **** 				if (can1.dataRx[2] == 0x0C  && request of shutdown == false)
 360:Src/state.c   **** 				{
 361:Src/state.c   **** 					can1.dataTx[0] = 0x08;
 362:Src/state.c   **** 					can1.dataTx[1] = 0;
 363:Src/state.c   **** 					can1.dataTx[2] = 0;
 364:Src/state.c   **** 					can1.dataTx[3] = 0;
 365:Src/state.c   **** 					can1.dataTx[4] = 0;
 366:Src/state.c   **** 					can1.dataTx[5] = 0;
 367:Src/state.c   **** 					can1.dataTx[6] = 0;
 368:Src/state.c   **** 					can1.dataTx[7] = 0;
 369:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 370:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 371:Src/state.c   **** 					// Inverter Sx true
 372:Src/state.c   **** 				}
 373:Src/state.c   **** 				else
 374:Src/state.c   **** 				{
 375:Src/state.c   **** 					can1.dataTx[0] = 0x0C;
 376:Src/state.c   **** 					can1.dataTx[1] = 0;
 377:Src/state.c   **** 					can1.dataTx[2] = 0;
ARM GAS  /tmp/ccQA1u9w.s 			page 17


 378:Src/state.c   **** 					can1.dataTx[3] = 0;
 379:Src/state.c   **** 					can1.dataTx[4] = 0;
 380:Src/state.c   **** 					can1.dataTx[5] = 0;
 381:Src/state.c   **** 					can1.dataTx[6] = 0;
 382:Src/state.c   **** 					can1.dataTx[7] = 0;
 383:Src/state.c   **** 					can1.tx_id = ID_ACU_1;
 384:Src/state.c   **** 					CAN_Send(&can1, normalPriority);
 385:Src/state.c   **** 					// Inverter Sx false
 386:Src/state.c   **** 				}
 387:Src/state.c   **** 				break;
 388:Src/state.c   **** 			}
 389:Src/state.c   **** 			break;
 390:Src/state.c   **** 		default:
 391:Src/state.c   **** 			break;
 392:Src/state.c   **** 		}
 393:Src/state.c   **** 	}*/
 394:Src/state.c   **** }
 442              		.loc 1 394 1 view .LVU142
 443 0032 70BD     		pop	{r4, r5, r6, pc}
 444              	.L37:
 216:Src/state.c   **** 			// report error
 445              		.loc 1 216 3 is_stmt 1 view .LVU143
 216:Src/state.c   **** 			// report error
 446              		.loc 1 216 19 is_stmt 0 view .LVU144
 447 0034 3A4B     		ldr	r3, .L41+16
 448 0036 1B68     		ldr	r3, [r3]
 449 0038 3A4A     		ldr	r2, .L41+20
 450 003a 1268     		ldr	r2, [r2]
 451 003c 9B1A     		subs	r3, r3, r2
 216:Src/state.c   **** 			// report error
 452              		.loc 1 216 5 view .LVU145
 453 003e 41F28832 		movw	r2, #5000
 454 0042 9342     		cmp	r3, r2
 455 0044 03D9     		bls	.L29
 218:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 456              		.loc 1 218 4 is_stmt 1 view .LVU146
 218:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 457              		.loc 1 218 18 is_stmt 0 view .LVU147
 458 0046 344B     		ldr	r3, .L41+8
 459 0048 0122     		movs	r2, #1
 460 004a 1A70     		strb	r2, [r3]
 461 004c F1E7     		b	.L24
 462              	.L29:
 219:Src/state.c   **** 			switch(can1.rx_id){
 463              		.loc 1 219 9 is_stmt 1 view .LVU148
 219:Src/state.c   **** 			switch(can1.rx_id){
 464              		.loc 1 219 13 is_stmt 0 view .LVU149
 465 004e 3648     		ldr	r0, .L41+24
 466 0050 FFF7FEFF 		bl	fifoRxDataCAN_pop
 467              	.LVL11:
 219:Src/state.c   **** 			switch(can1.rx_id){
 468              		.loc 1 219 12 view .LVU150
 469 0054 0028     		cmp	r0, #0
 470 0056 ECD0     		beq	.L24
 220:Src/state.c   **** 				case ID_BMS_HV:
 471              		.loc 1 220 4 is_stmt 1 view .LVU151
 220:Src/state.c   **** 				case ID_BMS_HV:
ARM GAS  /tmp/ccQA1u9w.s 			page 18


 472              		.loc 1 220 15 is_stmt 0 view .LVU152
 473 0058 334B     		ldr	r3, .L41+24
 474 005a 1B6B     		ldr	r3, [r3, #48]
 220:Src/state.c   **** 				case ID_BMS_HV:
 475              		.loc 1 220 4 view .LVU153
 476 005c AA2B     		cmp	r3, #170
 477 005e E8D1     		bne	.L24
 222:Src/state.c   **** 						setup_init = 2;
 478              		.loc 1 222 6 is_stmt 1 view .LVU154
 222:Src/state.c   **** 						setup_init = 2;
 479              		.loc 1 222 20 is_stmt 0 view .LVU155
 480 0060 314B     		ldr	r3, .L41+24
 481 0062 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 222:Src/state.c   **** 						setup_init = 2;
 482              		.loc 1 222 8 view .LVU156
 483 0064 012B     		cmp	r3, #1
 484 0066 03D0     		beq	.L40
 225:Src/state.c   **** 						//TODO: send error to steer
 485              		.loc 1 225 7 is_stmt 1 view .LVU157
 225:Src/state.c   **** 						//TODO: send error to steer
 486              		.loc 1 225 21 is_stmt 0 view .LVU158
 487 0068 2B4B     		ldr	r3, .L41+8
 488 006a 0122     		movs	r2, #1
 489 006c 1A70     		strb	r2, [r3]
 490 006e E0E7     		b	.L24
 491              	.L40:
 223:Src/state.c   **** 					}else{ //Pre-charge failed
 492              		.loc 1 223 7 is_stmt 1 view .LVU159
 223:Src/state.c   **** 					}else{ //Pre-charge failed
 493              		.loc 1 223 18 is_stmt 0 view .LVU160
 494 0070 274B     		ldr	r3, .L41
 495 0072 0222     		movs	r2, #2
 496 0074 1A60     		str	r2, [r3]
 497 0076 DCE7     		b	.L24
 498              	.L38:
 232:Src/state.c   **** 		can1.dataTx[0] = 0x51;
 499              		.loc 1 232 3 is_stmt 1 view .LVU161
 232:Src/state.c   **** 		can1.dataTx[0] = 0x51;
 500              		.loc 1 232 14 is_stmt 0 view .LVU162
 501 0078 2B4C     		ldr	r4, .L41+24
 502 007a 4FF4C173 		mov	r3, #386
 503 007e E362     		str	r3, [r4, #44]
 233:Src/state.c   **** 		can1.dataTx[1] = 0x00;
 504              		.loc 1 233 3 is_stmt 1 view .LVU163
 233:Src/state.c   **** 		can1.dataTx[1] = 0x00;
 505              		.loc 1 233 18 is_stmt 0 view .LVU164
 506 0080 5123     		movs	r3, #81
 507 0082 2373     		strb	r3, [r4, #12]
 234:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 508              		.loc 1 234 3 is_stmt 1 view .LVU165
 234:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 509              		.loc 1 234 18 is_stmt 0 view .LVU166
 510 0084 0025     		movs	r5, #0
 511 0086 6573     		strb	r5, [r4, #13]
 235:Src/state.c   **** 		can1.tx_size = 3;
 512              		.loc 1 235 3 is_stmt 1 view .LVU167
 235:Src/state.c   **** 		can1.tx_size = 3;
ARM GAS  /tmp/ccQA1u9w.s 			page 19


 513              		.loc 1 235 18 is_stmt 0 view .LVU168
 514 0088 A573     		strb	r5, [r4, #14]
 236:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 515              		.loc 1 236 3 is_stmt 1 view .LVU169
 236:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 516              		.loc 1 236 16 is_stmt 0 view .LVU170
 517 008a 0326     		movs	r6, #3
 518 008c 2660     		str	r6, [r4]
 237:Src/state.c   **** 
 519              		.loc 1 237 3 is_stmt 1 view .LVU171
 520 008e 2946     		mov	r1, r5
 521 0090 2046     		mov	r0, r4
 522 0092 FFF7FEFF 		bl	CAN_Send
 523              	.LVL12:
 240:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 524              		.loc 1 240 3 view .LVU172
 240:Src/state.c   **** 		can1.dataTx[0] = 0x3D;
 525              		.loc 1 240 14 is_stmt 0 view .LVU173
 526 0096 40F20223 		movw	r3, #514
 527 009a E362     		str	r3, [r4, #44]
 241:Src/state.c   **** 		can1.dataTx[1] = 0xE8;
 528              		.loc 1 241 3 is_stmt 1 view .LVU174
 241:Src/state.c   **** 		can1.dataTx[1] = 0xE8;
 529              		.loc 1 241 18 is_stmt 0 view .LVU175
 530 009c 3D23     		movs	r3, #61
 531 009e 2373     		strb	r3, [r4, #12]
 242:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 532              		.loc 1 242 3 is_stmt 1 view .LVU176
 242:Src/state.c   **** 		can1.dataTx[2] = 0x00;
 533              		.loc 1 242 18 is_stmt 0 view .LVU177
 534 00a0 E823     		movs	r3, #232
 535 00a2 6373     		strb	r3, [r4, #13]
 243:Src/state.c   **** 		can1.tx_size = 3;
 536              		.loc 1 243 3 is_stmt 1 view .LVU178
 243:Src/state.c   **** 		can1.tx_size = 3;
 537              		.loc 1 243 18 is_stmt 0 view .LVU179
 538 00a4 A573     		strb	r5, [r4, #14]
 244:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 539              		.loc 1 244 3 is_stmt 1 view .LVU180
 244:Src/state.c   **** 		CAN_Send(&can1, normalPriority);
 540              		.loc 1 244 16 is_stmt 0 view .LVU181
 541 00a6 2660     		str	r6, [r4]
 245:Src/state.c   **** 
 542              		.loc 1 245 3 is_stmt 1 view .LVU182
 543 00a8 2946     		mov	r1, r5
 544 00aa 2046     		mov	r0, r4
 545 00ac FFF7FEFF 		bl	CAN_Send
 546              	.LVL13:
 247:Src/state.c   **** 
 547              		.loc 1 247 3 view .LVU183
 247:Src/state.c   **** 
 548              		.loc 1 247 14 is_stmt 0 view .LVU184
 549 00b0 174B     		ldr	r3, .L41
 550 00b2 1E60     		str	r6, [r3]
 249:Src/state.c   **** 	}else if(setup_init == 3){
 551              		.loc 1 249 3 is_stmt 1 view .LVU185
 249:Src/state.c   **** 	}else if(setup_init == 3){
ARM GAS  /tmp/ccQA1u9w.s 			page 20


 552              		.loc 1 249 17 is_stmt 0 view .LVU186
 553 00b4 1A4B     		ldr	r3, .L41+16
 554 00b6 1A68     		ldr	r2, [r3]
 555 00b8 1C4B     		ldr	r3, .L41+28
 556 00ba 1A60     		str	r2, [r3]
 557 00bc B9E7     		b	.L24
 558              	.L39:
 251:Src/state.c   **** 			// report error
 559              		.loc 1 251 3 is_stmt 1 view .LVU187
 251:Src/state.c   **** 			// report error
 560              		.loc 1 251 19 is_stmt 0 view .LVU188
 561 00be 184B     		ldr	r3, .L41+16
 562 00c0 1B68     		ldr	r3, [r3]
 563 00c2 1A4A     		ldr	r2, .L41+28
 564 00c4 1268     		ldr	r2, [r2]
 565 00c6 9B1A     		subs	r3, r3, r2
 251:Src/state.c   **** 			// report error
 566              		.loc 1 251 5 view .LVU189
 567 00c8 42F21072 		movw	r2, #10000
 568 00cc 9342     		cmp	r3, r2
 569 00ce 0CD9     		bls	.L32
 254:Src/state.c   **** 			can1.dataTx[0] = 0x00;
 570              		.loc 1 254 4 is_stmt 1 view .LVU190
 254:Src/state.c   **** 			can1.dataTx[0] = 0x00;
 571              		.loc 1 254 15 is_stmt 0 view .LVU191
 572 00d0 1548     		ldr	r0, .L41+24
 573 00d2 B423     		movs	r3, #180
 574 00d4 C362     		str	r3, [r0, #44]
 255:Src/state.c   **** 			can1.tx_size = 1;
 575              		.loc 1 255 4 is_stmt 1 view .LVU192
 255:Src/state.c   **** 			can1.tx_size = 1;
 576              		.loc 1 255 19 is_stmt 0 view .LVU193
 577 00d6 0023     		movs	r3, #0
 578 00d8 0373     		strb	r3, [r0, #12]
 256:Src/state.c   **** 			CAN_Send(&can1, highPriority);
 579              		.loc 1 256 4 is_stmt 1 view .LVU194
 256:Src/state.c   **** 			CAN_Send(&can1, highPriority);
 580              		.loc 1 256 17 is_stmt 0 view .LVU195
 581 00da 0124     		movs	r4, #1
 582 00dc 0460     		str	r4, [r0]
 257:Src/state.c   **** 			current_state = STATE_IDLE;
 583              		.loc 1 257 4 is_stmt 1 view .LVU196
 584 00de 2146     		mov	r1, r4
 585 00e0 FFF7FEFF 		bl	CAN_Send
 586              	.LVL14:
 258:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 587              		.loc 1 258 4 view .LVU197
 258:Src/state.c   **** 		}else if (fifoRxDataCAN_pop(&can1)){
 588              		.loc 1 258 18 is_stmt 0 view .LVU198
 589 00e4 0C4B     		ldr	r3, .L41+8
 590 00e6 1C70     		strb	r4, [r3]
 591 00e8 A3E7     		b	.L24
 592              	.L32:
 259:Src/state.c   **** 			switch(can1.rx_id){
 593              		.loc 1 259 9 is_stmt 1 view .LVU199
 259:Src/state.c   **** 			switch(can1.rx_id){
 594              		.loc 1 259 13 is_stmt 0 view .LVU200
ARM GAS  /tmp/ccQA1u9w.s 			page 21


 595 00ea 0F48     		ldr	r0, .L41+24
 596 00ec FFF7FEFF 		bl	fifoRxDataCAN_pop
 597              	.LVL15:
 259:Src/state.c   **** 			switch(can1.rx_id){
 598              		.loc 1 259 12 view .LVU201
 599 00f0 0028     		cmp	r0, #0
 600 00f2 9ED0     		beq	.L24
 260:Src/state.c   **** 				case ID_REQ_INV_DX:
 601              		.loc 1 260 4 is_stmt 1 view .LVU202
 260:Src/state.c   **** 				case ID_REQ_INV_DX:
 602              		.loc 1 260 15 is_stmt 0 view .LVU203
 603 00f4 0C4B     		ldr	r3, .L41+24
 604 00f6 1B6B     		ldr	r3, [r3, #48]
 260:Src/state.c   **** 				case ID_REQ_INV_DX:
 605              		.loc 1 260 4 view .LVU204
 606 00f8 B3F5C17F 		cmp	r3, #386
 607 00fc 99D1     		bne	.L24
 262:Src/state.c   **** 						setup_init = 4;
 608              		.loc 1 262 6 is_stmt 1 view .LVU205
 262:Src/state.c   **** 						setup_init = 4;
 609              		.loc 1 262 84 is_stmt 0 view .LVU206
 610 00fe 0A4B     		ldr	r3, .L41+24
 611 0100 5B69     		ldr	r3, [r3, #20]
 262:Src/state.c   **** 						setup_init = 4;
 612              		.loc 1 262 8 view .LVU207
 613 0102 B3F5F07F 		cmp	r3, #480
 614 0106 94D1     		bne	.L24
 263:Src/state.c   **** 					}
 615              		.loc 1 263 7 is_stmt 1 view .LVU208
 263:Src/state.c   **** 					}
 616              		.loc 1 263 18 is_stmt 0 view .LVU209
 617 0108 014B     		ldr	r3, .L41
 618 010a 0422     		movs	r2, #4
 619 010c 1A60     		str	r2, [r3]
 271:Src/state.c   **** 	/*if (fifoRxDataCAN_pop(&can1))
 620              		.loc 1 271 2 is_stmt 1 view .LVU210
 621              		.loc 1 394 1 is_stmt 0 view .LVU211
 622 010e 90E7     		b	.L24
 623              	.L42:
 624              		.align	2
 625              	.L41:
 626 0110 00000000 		.word	.LANCHOR3
 627 0114 00000000 		.word	atc_connected
 628 0118 00000000 		.word	current_state
 629 011c 00000000 		.word	.LANCHOR4
 630 0120 00000000 		.word	count_ms_abs
 631 0124 00000000 		.word	.LANCHOR5
 632 0128 00000000 		.word	can1
 633 012c 00000000 		.word	.LANCHOR6
 634              		.cfi_endproc
 635              	.LFE147:
 637              		.section	.rodata.debug_operations.str1.4,"aMS",%progbits,1
 638              		.align	2
 639              	.LC0:
 640 0000 68656C70 		.ascii	"help\000"
 640      00
 641 0005 000000   		.align	2
ARM GAS  /tmp/ccQA1u9w.s 			page 22


 642              	.LC1:
 643 0008 0D0A2A2A 		.ascii	"\015\012***********ECU HELP***********\015\012Avaia"
 643      2A2A2A2A 
 643      2A2A2A2A 
 643      2A454355 
 643      2048454C 
 644 002f 626C6520 		.ascii	"ble msg are:\015\012\011-- status -> print ECU stat"
 644      6D736720 
 644      6172653A 
 644      0D0A092D 
 644      2D207374 
 645 0059 75730D0A 		.ascii	"us\015\012\011-- sd status -> print SD status and t"
 645      092D2D20 
 645      73642073 
 645      74617475 
 645      73202D3E 
 646 0083 6865206E 		.ascii	"he name of file inside\015\012\011-- sd file -> pri"
 646      616D6520 
 646      6F662066 
 646      696C6520 
 646      696E7369 
 647 00ad 6E742066 		.ascii	"nt files inside the SD\015\012\011-- time -> print "
 647      696C6573 
 647      20696E73 
 647      69646520 
 647      74686520 
 648 00d7 61637469 		.ascii	"activity time\015\012\011-- codev  -> print code ve"
 648      76697479 
 648      2074696D 
 648      650D0A09 
 648      2D2D2063 
 649 0101 7273696F 		.ascii	"rsion\015\012\000"
 649      6E0D0A00 
 650 0109 000000   		.align	2
 651              	.LC2:
 652 010c 636F6465 		.ascii	"codev\000"
 652      7600
 653 0112 0000     		.align	2
 654              	.LC3:
 655 0114 74696D65 		.ascii	"time\000"
 655      00
 656 0119 000000   		.align	2
 657              	.LC4:
 658 011c 0D0A5469 		.ascii	"\015\012Time: %d hours : %d min : %d sec : %d dec\015"
 658      6D653A20 
 658      25642068 
 658      6F757273 
 658      203A2025 
 659 0148 0A00     		.ascii	"\012\000"
 660 014a 0000     		.align	2
 661              	.LC5:
 662 014c 73746174 		.ascii	"status\000"
 662      757300
 663 0153 00       		.align	2
 664              	.LC6:
 665 0154 0D0A0A74 		.ascii	"\015\012\012type of status:\015\012\011 0 = OK\015\012"
 665      79706520 
ARM GAS  /tmp/ccQA1u9w.s 			page 23


 665      6F662073 
 665      74617475 
 665      733A0D0A 
 666 0172 09203120 		.ascii	"\011 1 = ERROR\015\012\011 2 = BUSY\015\012\011 3 ="
 666      3D204552 
 666      524F520D 
 666      0A092032 
 666      203D2042 
 667 0190 2054494D 		.ascii	" TIMEOUT\015\012\012CAN1 status:\015\012\011CAN1 co"
 667      454F5554 
 667      0D0A0A43 
 667      414E3120 
 667      73746174 
 668 01b1 6E666967 		.ascii	"nfig status: %d \015\012\011CAN1 notification statu"
 668      20737461 
 668      7475733A 
 668      20256420 
 668      0D0A0943 
 669 01db 733A2025 		.ascii	"s: %d\015\012\011CAN1 start status: %d\015\012\000"
 669      640D0A09 
 669      43414E31 
 669      20737461 
 669      72742073 
 670 01fb 00       		.align	2
 671              	.LC7:
 672 01fc 43414E33 		.ascii	"CAN3 status:\015\012\011CAN3 config status: %d \015"
 672      20737461 
 672      7475733A 
 672      0D0A0943 
 672      414E3320 
 673 0223 0A094341 		.ascii	"\012\011CAN3 notification status: %d\015\012\011CAN"
 673      4E33206E 
 673      6F746966 
 673      69636174 
 673      696F6E20 
 674 0247 33207374 		.ascii	"3 start status: %d\015\012\000"
 674      61727420 
 674      73746174 
 674      75733A20 
 674      25640D0A 
 675              		.align	2
 676              	.LC8:
 677 025c 0D0A4375 		.ascii	"\015\012Current state: STATE_INIT\015\012\000"
 677      7272656E 
 677      74207374 
 677      6174653A 
 677      20535441 
 678 027a 0000     		.align	2
 679              	.LC9:
 680 027c 0D0A4375 		.ascii	"\015\012Current state: STATE_IDLE\015\012\000"
 680      7272656E 
 680      74207374 
 680      6174653A 
 680      20535441 
 681 029a 0000     		.align	2
 682              	.LC10:
 683 029c 0D0A4375 		.ascii	"\015\012Current state: STATE_SETUP\015\012\000"
ARM GAS  /tmp/ccQA1u9w.s 			page 24


 683      7272656E 
 683      74207374 
 683      6174653A 
 683      20535441 
 684 02bb 00       		.align	2
 685              	.LC11:
 686 02bc 0D0A4375 		.ascii	"\015\012Current state: STATE_RUN\015\012\000"
 686      7272656E 
 686      74207374 
 686      6174653A 
 686      20535441 
 687 02d9 000000   		.align	2
 688              	.LC12:
 689 02dc 0D0A4465 		.ascii	"\015\012Device connected : (0 = no, 1 = yes (for ea"
 689      76696365 
 689      20636F6E 
 689      6E656374 
 689      6564203A 
 690 0309 63682062 		.ascii	"ch bit))\015\012\011 IMU -> %d\015\012\011 ITS -> %"
 690      69742929 
 690      0D0A0920 
 690      494D5520 
 690      2D3E2025 
 691 032a 640D0A00 		.ascii	"d\015\012\000"
 692 032e 0000     		.align	2
 693              	.LC13:
 694 0330 73642073 		.ascii	"sd status\000"
 694      74617475 
 694      7300
 695 033a 0000     		.align	2
 696              	.LC14:
 697 033c 0D0A5364 		.ascii	"\015\012Sd mounted \000"
 697      206D6F75 
 697      6E746564 
 697      2000
 698 034a 0000     		.align	2
 699              	.LC15:
 700 034c 53642073 		.ascii	"Sd successfully opened and created file: %s\015\012"
 700      75636365 
 700      73736675 
 700      6C6C7920 
 700      6F70656E 
 701 0379 00       		.ascii	"\000"
 702 037a 0000     		.align	2
 703              	.LC16:
 704 037c 5364206F 		.ascii	"Sd open FAILED\015\012\000"
 704      70656E20 
 704      4641494C 
 704      45440D0A 
 704      00
 705 038d 000000   		.align	2
 706              	.LC17:
 707 0390 0D0A5364 		.ascii	"\015\012Sd NOT mounted \000"
 707      204E4F54 
 707      206D6F75 
 707      6E746564 
 707      2000
ARM GAS  /tmp/ccQA1u9w.s 			page 25


 708 03a2 0000     		.align	2
 709              	.LC18:
 710 03a4 73642066 		.ascii	"sd file\000"
 710      696C6500 
 711              		.align	2
 712              	.LC19:
 713 03ac 0D0A4669 		.ascii	"\015\012Files inside sd are:\015\012%s\000"
 713      6C657320 
 713      696E7369 
 713      64652073 
 713      64206172 
 714 03c7 00       		.align	2
 715              	.LC20:
 716 03c8 67617900 		.ascii	"gay\000"
 717              		.align	2
 718              	.LC21:
 719 03cc 0D0A2020 		.ascii	"\015\012          $\015\012        $   $\015\012   "
 719      20202020 
 719      20202020 
 719      240D0A20 
 719      20202020 
 720 03ed 20202020 		.ascii	"    $     $\015\012       $$$$$$$\015\012       $$$"
 720      24202020 
 720      2020240D 
 720      0A202020 
 720      20202020 
 721 0414 24242424 		.ascii	"$$$$\015\012       $$$$$$$\015\012       $$$$$$$\015"
 721      0D0A2020 
 721      20202020 
 721      20242424 
 721      24242424 
 722 0439 0A202024 		.ascii	"\012  $$$$$$     $$$$$$\015\012 $$$$$$$$   $$$$$$$$"
 722      24242424 
 722      24202020 
 722      20202424 
 722      24242424 
 723 0463 0D0A2424 		.ascii	"\015\012$$$$$$$$$$$$$$$$$$$$\015\012 $$$$$$$$   $$$"
 723      24242424 
 723      24242424 
 723      24242424 
 723      24242424 
 724 048a 24242424 		.ascii	"$$$$$\015\012  $$$$$$     $$$$$$\015\012\000"
 724      240D0A20 
 724      20242424 
 724      24242420 
 724      20202020 
 725 04a7 00       		.align	2
 726              	.LC22:
 727 04a8 0D0A4552 		.ascii	"\015\012ERROR : msg %s doesn't exist\015\012\000"
 727      524F5220 
 727      3A206D73 
 727      67202573 
 727      20646F65 
 728              		.section	.text.debug_operations,"ax",%progbits
 729              		.align	1
 730              		.global	debug_operations
 731              		.syntax unified
ARM GAS  /tmp/ccQA1u9w.s 			page 26


 732              		.thumb
 733              		.thumb_func
 734              		.fpu fpv5-d16
 736              	debug_operations:
 737              	.LFB149:
 395:Src/state.c   **** /*******************************************************************
 396:Src/state.c   ****  *                         END SETUP STATE
 397:Src/state.c   ****  *******************************************************************/
 398:Src/state.c   **** /*******************************************************************
 399:Src/state.c   ****  *                         START RUN STATE
 400:Src/state.c   ****  *******************************************************************/
 401:Src/state.c   **** void run()
 402:Src/state.c   **** {
 403:Src/state.c   **** 	if (fifoRxDataCAN_pop(&can1))
 404:Src/state.c   **** 	{
 405:Src/state.c   **** 		switch (can1.rx_id)
 406:Src/state.c   **** 		{
 407:Src/state.c   **** 		case ID_STEERING_WEEL_1:
 408:Src/state.c   **** 			if (can1.dataRx[0] == 6)
 409:Src/state.c   **** 			{ //----- change state to setup -----//
 410:Src/state.c   **** 				current_state = STATE_SETUP;
 411:Src/state.c   **** 			}
 412:Src/state.c   **** 			break;
 413:Src/state.c   **** 		case ID_ATC_POT:
 414:Src/state.c   **** 			atc_pot_operations();
 415:Src/state.c   **** 			break;
 416:Src/state.c   **** 		default:
 417:Src/state.c   **** 			break;
 418:Src/state.c   **** 		}
 419:Src/state.c   **** 	}
 420:Src/state.c   **** }
 421:Src/state.c   **** /*******************************************************************
 422:Src/state.c   ****  *                         END RUN STATE
 423:Src/state.c   ****  *******************************************************************/
 424:Src/state.c   **** 
 425:Src/state.c   **** void debug_operations()
 426:Src/state.c   **** {
 738              		.loc 1 426 1 is_stmt 1 view -0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742 0000 30B5     		push	{r4, r5, lr}
 743              	.LCFI4:
 744              		.cfi_def_cfa_offset 12
 745              		.cfi_offset 4, -12
 746              		.cfi_offset 5, -8
 747              		.cfi_offset 14, -4
 748 0002 83B0     		sub	sp, sp, #12
 749              	.LCFI5:
 750              		.cfi_def_cfa_offset 24
 427:Src/state.c   **** 	if (strcmp(debug_rx, "help") == 0)
 751              		.loc 1 427 2 view .LVU213
 752              		.loc 1 427 6 is_stmt 0 view .LVU214
 753 0004 8F49     		ldr	r1, .L70
 754 0006 9048     		ldr	r0, .L70+4
 755 0008 FFF7FEFF 		bl	strcmp
 756              	.LVL16:
ARM GAS  /tmp/ccQA1u9w.s 			page 27


 757              		.loc 1 427 5 view .LVU215
 758 000c 20B3     		cbz	r0, .L59
 428:Src/state.c   **** 	{
 429:Src/state.c   **** 		sprintf(debug_tx,
 430:Src/state.c   **** 				"\r\n***********ECU HELP***********\r\n"
 431:Src/state.c   **** 				"Avaiable msg are:\r\n"
 432:Src/state.c   **** 				"\t-- status -> print ECU status\r\n"
 433:Src/state.c   **** 				"\t-- sd status -> print SD status and the name of file inside\r\n"
 434:Src/state.c   **** 				"\t-- sd file -> print files inside the SD\r\n"
 435:Src/state.c   **** 				"\t-- time -> print activity time\r\n"
 436:Src/state.c   **** 				"\t-- codev  -> print code version\r\n");
 437:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 438:Src/state.c   **** 	}
 439:Src/state.c   **** 	else if (strcmp(debug_rx, "codev") == 0)
 759              		.loc 1 439 7 is_stmt 1 view .LVU216
 760              		.loc 1 439 11 is_stmt 0 view .LVU217
 761 000e 8F49     		ldr	r1, .L70+8
 762 0010 8D48     		ldr	r0, .L70+4
 763 0012 FFF7FEFF 		bl	strcmp
 764              	.LVL17:
 765              		.loc 1 439 10 view .LVU218
 766 0016 0028     		cmp	r0, #0
 767 0018 30D0     		beq	.L60
 440:Src/state.c   **** 	{
 441:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)code_version, strlen(code_version),
 442:Src/state.c   **** 						  100);
 443:Src/state.c   **** 	}
 444:Src/state.c   **** 	else if (strcmp(debug_rx, "time") == 0)
 768              		.loc 1 444 7 is_stmt 1 view .LVU219
 769              		.loc 1 444 11 is_stmt 0 view .LVU220
 770 001a 8D49     		ldr	r1, .L70+12
 771 001c 8A48     		ldr	r0, .L70+4
 772 001e FFF7FEFF 		bl	strcmp
 773              	.LVL18:
 774              		.loc 1 444 10 view .LVU221
 775 0022 0028     		cmp	r0, #0
 776 0024 35D0     		beq	.L61
 445:Src/state.c   **** 	{
 446:Src/state.c   **** 		sprintf(debug_tx, "\r\nTime: %d hours : %d min : %d sec : %d dec\r\n",
 447:Src/state.c   **** 				count_hour, count_min, count_sec, count_dec);
 448:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 449:Src/state.c   **** 	}
 450:Src/state.c   **** 	else if (strcmp(debug_rx, "status") == 0)
 777              		.loc 1 450 7 is_stmt 1 view .LVU222
 778              		.loc 1 450 11 is_stmt 0 view .LVU223
 779 0026 8B49     		ldr	r1, .L70+16
 780 0028 8748     		ldr	r0, .L70+4
 781 002a FFF7FEFF 		bl	strcmp
 782              	.LVL19:
 783              		.loc 1 450 10 view .LVU224
 784 002e 0028     		cmp	r0, #0
 785 0030 48D0     		beq	.L62
 451:Src/state.c   **** 	{
 452:Src/state.c   **** 		sprintf(debug_tx,
 453:Src/state.c   **** 				"\r\n\ntype of status:\r\n"
 454:Src/state.c   **** 				"\t 0 = OK\r\n"
 455:Src/state.c   **** 				"\t 1 = ERROR\r\n"
ARM GAS  /tmp/ccQA1u9w.s 			page 28


 456:Src/state.c   **** 				"\t 2 = BUSY\r\n"
 457:Src/state.c   **** 				"\t 3 = TIMEOUT\r\n\n"
 458:Src/state.c   **** 				"CAN1 status:\r\n"
 459:Src/state.c   **** 				"\tCAN1 config status: %d \r\n"
 460:Src/state.c   **** 				"\tCAN1 notification status: %d\r\n"
 461:Src/state.c   **** 				"\tCAN1 start status: %d\r\n",
 462:Src/state.c   **** 				can1.configFilter_status, can1.activateNotif_status,
 463:Src/state.c   **** 				can1.canStart_status);
 464:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 465:Src/state.c   **** 		sprintf(debug_tx,
 466:Src/state.c   **** 				"CAN3 status:\r\n"
 467:Src/state.c   **** 				"\tCAN3 config status: %d \r\n"
 468:Src/state.c   **** 				"\tCAN3 notification status: %d\r\n"
 469:Src/state.c   **** 				"\tCAN3 start status: %d\r\n",
 470:Src/state.c   **** 				can3.configFilter_status, can3.activateNotif_status,
 471:Src/state.c   **** 				can3.canStart_status);
 472:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 473:Src/state.c   **** 		if (current_state == STATE_INIT)
 474:Src/state.c   **** 		{
 475:Src/state.c   **** 			HAL_UART_Transmit(&huart3,
 476:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_INIT\r\n",
 477:Src/state.c   **** 							  strlen("\r\nCurrent state: STATE_INIT\r\n"), 100);
 478:Src/state.c   **** 		}
 479:Src/state.c   **** 		else if (current_state == STATE_IDLE)
 480:Src/state.c   **** 		{
 481:Src/state.c   **** 			HAL_UART_Transmit(&huart3,
 482:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_IDLE\r\n",
 483:Src/state.c   **** 							  strlen("\r\nCurrent state: STATE_IDLE\r\n"), 100);
 484:Src/state.c   **** 		}
 485:Src/state.c   **** 		else if (current_state == STATE_SETUP)
 486:Src/state.c   **** 		{
 487:Src/state.c   **** 			HAL_UART_Transmit(
 488:Src/state.c   **** 				&huart3, (uint8_t *)"\r\nCurrent state: STATE_SETUP\r\n",
 489:Src/state.c   **** 				strlen("\r\nCurrent state: STATE_SETUP\r\n"), 100);
 490:Src/state.c   **** 		}
 491:Src/state.c   **** 		else if (current_state == STATE_RUN)
 492:Src/state.c   **** 		{
 493:Src/state.c   **** 			HAL_UART_Transmit(&huart3,
 494:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_RUN\r\n",
 495:Src/state.c   **** 							  strlen("\r\nCurrent state: STATE_RUN\r\n"), 100);
 496:Src/state.c   **** 		}
 497:Src/state.c   **** 		sprintf(debug_tx,
 498:Src/state.c   **** 				"\r\n"
 499:Src/state.c   **** 				"Device connected : (0 = no, 1 = yes (for each bit))\r\n"
 500:Src/state.c   **** 				"\t IMU -> %d\r\n"
 501:Src/state.c   **** 				"\t ITS -> %d\r\n",
 502:Src/state.c   **** 				imu_connected, its_connected);
 503:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 504:Src/state.c   **** 	}
 505:Src/state.c   **** 	else if (strcmp(debug_rx, "sd status") == 0){
 786              		.loc 1 505 7 is_stmt 1 view .LVU225
 787              		.loc 1 505 11 is_stmt 0 view .LVU226
 788 0032 8949     		ldr	r1, .L70+20
 789 0034 8448     		ldr	r0, .L70+4
 790 0036 FFF7FEFF 		bl	strcmp
 791              	.LVL20:
 792              		.loc 1 505 10 view .LVU227
ARM GAS  /tmp/ccQA1u9w.s 			page 29


 793 003a 0028     		cmp	r0, #0
 794 003c 40F0C780 		bne	.L53
 506:Src/state.c   **** 		if(mount_ok == 1){
 795              		.loc 1 506 3 is_stmt 1 view .LVU228
 796              		.loc 1 506 15 is_stmt 0 view .LVU229
 797 0040 864B     		ldr	r3, .L70+24
 798 0042 1B68     		ldr	r3, [r3]
 799              		.loc 1 506 5 view .LVU230
 800 0044 012B     		cmp	r3, #1
 801 0046 00F0A180 		beq	.L63
 507:Src/state.c   **** 			HAL_UART_Transmit(&huart3, (uint8_t *)"\r\nSd mounted ", strlen("\r\nSd mounted "), 100);
 508:Src/state.c   **** 			if(successfull_opening == 1){
 509:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 510:Src/state.c   **** 				HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 511:Src/state.c   **** 			}else{
 512:Src/state.c   **** 				HAL_UART_Transmit(&huart3, (uint8_t *)"Sd open FAILED\r\n", strlen("Sd open FAILED\r\n"), 100);
 513:Src/state.c   **** 			}
 514:Src/state.c   **** 		}else{
 515:Src/state.c   **** 			HAL_UART_Transmit(&huart3, (uint8_t *)"\r\nSd NOT mounted ", strlen("\r\nSd NOT mounted "), 100)
 802              		.loc 1 515 4 is_stmt 1 view .LVU231
 803 004a 6423     		movs	r3, #100
 804 004c 1122     		movs	r2, #17
 805 004e 8449     		ldr	r1, .L70+28
 806 0050 8448     		ldr	r0, .L70+32
 807 0052 FFF7FEFF 		bl	HAL_UART_Transmit
 808              	.LVL21:
 809 0056 0FE0     		b	.L43
 810              	.L59:
 429:Src/state.c   **** 				"\r\n***********ECU HELP***********\r\n"
 811              		.loc 1 429 3 view .LVU232
 812 0058 834C     		ldr	r4, .L70+36
 813 005a 40F20112 		movw	r2, #257
 814 005e 8349     		ldr	r1, .L70+40
 815 0060 2046     		mov	r0, r4
 816 0062 FFF7FEFF 		bl	memcpy
 817              	.LVL22:
 437:Src/state.c   **** 	}
 818              		.loc 1 437 3 view .LVU233
 437:Src/state.c   **** 	}
 819              		.loc 1 437 51 is_stmt 0 view .LVU234
 820 0066 2046     		mov	r0, r4
 821 0068 FFF7FEFF 		bl	strlen
 822              	.LVL23:
 437:Src/state.c   **** 	}
 823              		.loc 1 437 3 view .LVU235
 824 006c 6423     		movs	r3, #100
 825 006e 82B2     		uxth	r2, r0
 826 0070 2146     		mov	r1, r4
 827 0072 7C48     		ldr	r0, .L70+32
 828 0074 FFF7FEFF 		bl	HAL_UART_Transmit
 829              	.LVL24:
 830              	.L43:
 516:Src/state.c   **** 		}
 517:Src/state.c   **** 	}
 518:Src/state.c   **** 	else if(strcmp(debug_rx, "sd file") == 0){
 519:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 520:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 1000);
ARM GAS  /tmp/ccQA1u9w.s 			page 30


 521:Src/state.c   **** 	}
 522:Src/state.c   **** 	else if (strcmp(debug_rx, "gay") == 0)
 523:Src/state.c   **** 	{
 524:Src/state.c   **** 		sprintf(debug_tx,
 525:Src/state.c   **** 				"\r\n"
 526:Src/state.c   **** 				"          $\r\n"
 527:Src/state.c   **** 				"        $   $\r\n"
 528:Src/state.c   **** 				"       $     $\r\n"
 529:Src/state.c   **** 				"       $$$$$$$\r\n"
 530:Src/state.c   **** 				"       $$$$$$$\r\n"
 531:Src/state.c   **** 				"       $$$$$$$\r\n"
 532:Src/state.c   **** 				"       $$$$$$$\r\n"
 533:Src/state.c   **** 				"  $$$$$$     $$$$$$\r\n"
 534:Src/state.c   **** 				" $$$$$$$$   $$$$$$$$\r\n"
 535:Src/state.c   **** 				"$$$$$$$$$$$$$$$$$$$$\r\n"
 536:Src/state.c   **** 				" $$$$$$$$   $$$$$$$$\r\n"
 537:Src/state.c   **** 				"  $$$$$$     $$$$$$\r\n");
 538:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 539:Src/state.c   **** 	}
 540:Src/state.c   **** 	else
 541:Src/state.c   **** 	{
 542:Src/state.c   **** 		sprintf(debug_tx, "\r\nERROR : msg %s doesn't exist\r\n", debug_rx);
 543:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 544:Src/state.c   **** 	}
 545:Src/state.c   **** }
 831              		.loc 1 545 1 view .LVU236
 832 0078 03B0     		add	sp, sp, #12
 833              	.LCFI6:
 834              		.cfi_remember_state
 835              		.cfi_def_cfa_offset 12
 836              		@ sp needed
 837 007a 30BD     		pop	{r4, r5, pc}
 838              	.L60:
 839              	.LCFI7:
 840              		.cfi_restore_state
 441:Src/state.c   **** 						  100);
 841              		.loc 1 441 3 is_stmt 1 view .LVU237
 441:Src/state.c   **** 						  100);
 842              		.loc 1 441 55 is_stmt 0 view .LVU238
 843 007c 7C4C     		ldr	r4, .L70+44
 844 007e 2046     		mov	r0, r4
 845 0080 FFF7FEFF 		bl	strlen
 846              	.LVL25:
 441:Src/state.c   **** 						  100);
 847              		.loc 1 441 3 view .LVU239
 848 0084 6423     		movs	r3, #100
 849 0086 82B2     		uxth	r2, r0
 850 0088 2146     		mov	r1, r4
 851 008a 7648     		ldr	r0, .L70+32
 852 008c FFF7FEFF 		bl	HAL_UART_Transmit
 853              	.LVL26:
 854 0090 F2E7     		b	.L43
 855              	.L61:
 446:Src/state.c   **** 				count_hour, count_min, count_sec, count_dec);
 856              		.loc 1 446 3 is_stmt 1 view .LVU240
 857 0092 784B     		ldr	r3, .L70+48
 858 0094 1A88     		ldrh	r2, [r3]
ARM GAS  /tmp/ccQA1u9w.s 			page 31


 859 0096 784B     		ldr	r3, .L70+52
 860 0098 1B88     		ldrh	r3, [r3]
 861 009a 7849     		ldr	r1, .L70+56
 862 009c 0988     		ldrh	r1, [r1]
 863 009e 7848     		ldr	r0, .L70+60
 864 00a0 0088     		ldrh	r0, [r0]
 865 00a2 714C     		ldr	r4, .L70+36
 866 00a4 0190     		str	r0, [sp, #4]
 867 00a6 0091     		str	r1, [sp]
 868 00a8 7649     		ldr	r1, .L70+64
 869 00aa 2046     		mov	r0, r4
 870 00ac FFF7FEFF 		bl	sprintf
 871              	.LVL27:
 448:Src/state.c   **** 	}
 872              		.loc 1 448 3 view .LVU241
 448:Src/state.c   **** 	}
 873              		.loc 1 448 51 is_stmt 0 view .LVU242
 874 00b0 2046     		mov	r0, r4
 875 00b2 FFF7FEFF 		bl	strlen
 876              	.LVL28:
 448:Src/state.c   **** 	}
 877              		.loc 1 448 3 view .LVU243
 878 00b6 6423     		movs	r3, #100
 879 00b8 82B2     		uxth	r2, r0
 880 00ba 2146     		mov	r1, r4
 881 00bc 6948     		ldr	r0, .L70+32
 882 00be FFF7FEFF 		bl	HAL_UART_Transmit
 883              	.LVL29:
 884 00c2 D9E7     		b	.L43
 885              	.L62:
 452:Src/state.c   **** 				"\r\n\ntype of status:\r\n"
 886              		.loc 1 452 3 is_stmt 1 view .LVU244
 462:Src/state.c   **** 				can1.canStart_status);
 887              		.loc 1 462 9 is_stmt 0 view .LVU245
 888 00c4 704A     		ldr	r2, .L70+68
 463:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 889              		.loc 1 463 9 view .LVU246
 890 00c6 92F86E30 		ldrb	r3, [r2, #110]	@ zero_extendqisi2
 452:Src/state.c   **** 				"\r\n\ntype of status:\r\n"
 891              		.loc 1 452 3 view .LVU247
 892 00ca 674C     		ldr	r4, .L70+36
 893 00cc 0093     		str	r3, [sp]
 894 00ce 92F86D30 		ldrb	r3, [r2, #109]	@ zero_extendqisi2
 895 00d2 92F86C20 		ldrb	r2, [r2, #108]	@ zero_extendqisi2
 896 00d6 6D49     		ldr	r1, .L70+72
 897 00d8 2046     		mov	r0, r4
 898 00da FFF7FEFF 		bl	sprintf
 899              	.LVL30:
 464:Src/state.c   **** 		sprintf(debug_tx,
 900              		.loc 1 464 3 is_stmt 1 view .LVU248
 464:Src/state.c   **** 		sprintf(debug_tx,
 901              		.loc 1 464 51 is_stmt 0 view .LVU249
 902 00de 2046     		mov	r0, r4
 903 00e0 FFF7FEFF 		bl	strlen
 904              	.LVL31:
 464:Src/state.c   **** 		sprintf(debug_tx,
 905              		.loc 1 464 3 view .LVU250
ARM GAS  /tmp/ccQA1u9w.s 			page 32


 906 00e4 5F4D     		ldr	r5, .L70+32
 907 00e6 6423     		movs	r3, #100
 908 00e8 82B2     		uxth	r2, r0
 909 00ea 2146     		mov	r1, r4
 910 00ec 2846     		mov	r0, r5
 911 00ee FFF7FEFF 		bl	HAL_UART_Transmit
 912              	.LVL32:
 465:Src/state.c   **** 				"CAN3 status:\r\n"
 913              		.loc 1 465 3 is_stmt 1 view .LVU251
 470:Src/state.c   **** 				can3.canStart_status);
 914              		.loc 1 470 9 is_stmt 0 view .LVU252
 915 00f2 674A     		ldr	r2, .L70+76
 471:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 916              		.loc 1 471 9 view .LVU253
 917 00f4 92F86E30 		ldrb	r3, [r2, #110]	@ zero_extendqisi2
 465:Src/state.c   **** 				"CAN3 status:\r\n"
 918              		.loc 1 465 3 view .LVU254
 919 00f8 0093     		str	r3, [sp]
 920 00fa 92F86D30 		ldrb	r3, [r2, #109]	@ zero_extendqisi2
 921 00fe 92F86C20 		ldrb	r2, [r2, #108]	@ zero_extendqisi2
 922 0102 6449     		ldr	r1, .L70+80
 923 0104 2046     		mov	r0, r4
 924 0106 FFF7FEFF 		bl	sprintf
 925              	.LVL33:
 472:Src/state.c   **** 		if (current_state == STATE_INIT)
 926              		.loc 1 472 3 is_stmt 1 view .LVU255
 472:Src/state.c   **** 		if (current_state == STATE_INIT)
 927              		.loc 1 472 51 is_stmt 0 view .LVU256
 928 010a 2046     		mov	r0, r4
 929 010c FFF7FEFF 		bl	strlen
 930              	.LVL34:
 472:Src/state.c   **** 		if (current_state == STATE_INIT)
 931              		.loc 1 472 3 view .LVU257
 932 0110 6423     		movs	r3, #100
 933 0112 82B2     		uxth	r2, r0
 934 0114 2146     		mov	r1, r4
 935 0116 2846     		mov	r0, r5
 936 0118 FFF7FEFF 		bl	HAL_UART_Transmit
 937              	.LVL35:
 473:Src/state.c   **** 		{
 938              		.loc 1 473 3 is_stmt 1 view .LVU258
 473:Src/state.c   **** 		{
 939              		.loc 1 473 21 is_stmt 0 view .LVU259
 940 011c 5E4B     		ldr	r3, .L70+84
 941 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 473:Src/state.c   **** 		{
 942              		.loc 1 473 6 view .LVU260
 943 0120 C3B1     		cbz	r3, .L64
 479:Src/state.c   **** 		{
 944              		.loc 1 479 8 is_stmt 1 view .LVU261
 479:Src/state.c   **** 		{
 945              		.loc 1 479 11 is_stmt 0 view .LVU262
 946 0122 012B     		cmp	r3, #1
 947 0124 1DD0     		beq	.L65
 485:Src/state.c   **** 		{
 948              		.loc 1 485 8 is_stmt 1 view .LVU263
 485:Src/state.c   **** 		{
ARM GAS  /tmp/ccQA1u9w.s 			page 33


 949              		.loc 1 485 11 is_stmt 0 view .LVU264
 950 0126 022B     		cmp	r3, #2
 951 0128 22D0     		beq	.L66
 491:Src/state.c   **** 		{
 952              		.loc 1 491 8 is_stmt 1 view .LVU265
 491:Src/state.c   **** 		{
 953              		.loc 1 491 11 is_stmt 0 view .LVU266
 954 012a 032B     		cmp	r3, #3
 955 012c 27D0     		beq	.L67
 956              	.L50:
 497:Src/state.c   **** 				"\r\n"
 957              		.loc 1 497 3 is_stmt 1 view .LVU267
 958 012e 4E4C     		ldr	r4, .L70+36
 959 0130 5A4B     		ldr	r3, .L70+88
 960 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 961 0134 5A4A     		ldr	r2, .L70+92
 962 0136 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 963 0138 5A49     		ldr	r1, .L70+96
 964 013a 2046     		mov	r0, r4
 965 013c FFF7FEFF 		bl	sprintf
 966              	.LVL36:
 503:Src/state.c   **** 	}
 967              		.loc 1 503 3 view .LVU268
 503:Src/state.c   **** 	}
 968              		.loc 1 503 51 is_stmt 0 view .LVU269
 969 0140 2046     		mov	r0, r4
 970 0142 FFF7FEFF 		bl	strlen
 971              	.LVL37:
 503:Src/state.c   **** 	}
 972              		.loc 1 503 3 view .LVU270
 973 0146 6423     		movs	r3, #100
 974 0148 82B2     		uxth	r2, r0
 975 014a 2146     		mov	r1, r4
 976 014c 4548     		ldr	r0, .L70+32
 977 014e FFF7FEFF 		bl	HAL_UART_Transmit
 978              	.LVL38:
 979 0152 91E7     		b	.L43
 980              	.L64:
 475:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_INIT\r\n",
 981              		.loc 1 475 4 is_stmt 1 view .LVU271
 982 0154 6423     		movs	r3, #100
 983 0156 1D22     		movs	r2, #29
 984 0158 5349     		ldr	r1, .L70+100
 985 015a 2846     		mov	r0, r5
 986 015c FFF7FEFF 		bl	HAL_UART_Transmit
 987              	.LVL39:
 988 0160 E5E7     		b	.L50
 989              	.L65:
 481:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_IDLE\r\n",
 990              		.loc 1 481 4 view .LVU272
 991 0162 6423     		movs	r3, #100
 992 0164 1D22     		movs	r2, #29
 993 0166 5149     		ldr	r1, .L70+104
 994 0168 3E48     		ldr	r0, .L70+32
 995 016a FFF7FEFF 		bl	HAL_UART_Transmit
 996              	.LVL40:
 997 016e DEE7     		b	.L50
ARM GAS  /tmp/ccQA1u9w.s 			page 34


 998              	.L66:
 487:Src/state.c   **** 				&huart3, (uint8_t *)"\r\nCurrent state: STATE_SETUP\r\n",
 999              		.loc 1 487 4 view .LVU273
 1000 0170 6423     		movs	r3, #100
 1001 0172 1E22     		movs	r2, #30
 1002 0174 4E49     		ldr	r1, .L70+108
 1003 0176 3B48     		ldr	r0, .L70+32
 1004 0178 FFF7FEFF 		bl	HAL_UART_Transmit
 1005              	.LVL41:
 1006 017c D7E7     		b	.L50
 1007              	.L67:
 493:Src/state.c   **** 							  (uint8_t *)"\r\nCurrent state: STATE_RUN\r\n",
 1008              		.loc 1 493 4 view .LVU274
 1009 017e 6423     		movs	r3, #100
 1010 0180 1C22     		movs	r2, #28
 1011 0182 4C49     		ldr	r1, .L70+112
 1012 0184 3748     		ldr	r0, .L70+32
 1013 0186 FFF7FEFF 		bl	HAL_UART_Transmit
 1014              	.LVL42:
 1015 018a D0E7     		b	.L50
 1016              	.L63:
 507:Src/state.c   **** 			if(successfull_opening == 1){
 1017              		.loc 1 507 4 view .LVU275
 1018 018c 6423     		movs	r3, #100
 1019 018e 0D22     		movs	r2, #13
 1020 0190 4949     		ldr	r1, .L70+116
 1021 0192 3448     		ldr	r0, .L70+32
 1022 0194 FFF7FEFF 		bl	HAL_UART_Transmit
 1023              	.LVL43:
 508:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 1024              		.loc 1 508 4 view .LVU276
 508:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 1025              		.loc 1 508 27 is_stmt 0 view .LVU277
 1026 0198 484B     		ldr	r3, .L70+120
 1027 019a 1B68     		ldr	r3, [r3]
 508:Src/state.c   **** 				sprintf(debug_tx,"Sd successfully opened and created file: %s\r\n",filename_log);
 1028              		.loc 1 508 6 view .LVU278
 1029 019c 012B     		cmp	r3, #1
 1030 019e 06D0     		beq	.L68
 512:Src/state.c   **** 			}
 1031              		.loc 1 512 5 is_stmt 1 view .LVU279
 1032 01a0 6423     		movs	r3, #100
 1033 01a2 1022     		movs	r2, #16
 1034 01a4 4649     		ldr	r1, .L70+124
 1035 01a6 2F48     		ldr	r0, .L70+32
 1036 01a8 FFF7FEFF 		bl	HAL_UART_Transmit
 1037              	.LVL44:
 1038 01ac 64E7     		b	.L43
 1039              	.L68:
 509:Src/state.c   **** 				HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 1040              		.loc 1 509 5 view .LVU280
 1041 01ae 2E4C     		ldr	r4, .L70+36
 1042 01b0 444A     		ldr	r2, .L70+128
 1043 01b2 4549     		ldr	r1, .L70+132
 1044 01b4 2046     		mov	r0, r4
 1045 01b6 FFF7FEFF 		bl	sprintf
 1046              	.LVL45:
ARM GAS  /tmp/ccQA1u9w.s 			page 35


 510:Src/state.c   **** 			}else{
 1047              		.loc 1 510 5 view .LVU281
 510:Src/state.c   **** 			}else{
 1048              		.loc 1 510 53 is_stmt 0 view .LVU282
 1049 01ba 2046     		mov	r0, r4
 1050 01bc FFF7FEFF 		bl	strlen
 1051              	.LVL46:
 510:Src/state.c   **** 			}else{
 1052              		.loc 1 510 5 view .LVU283
 1053 01c0 6423     		movs	r3, #100
 1054 01c2 82B2     		uxth	r2, r0
 1055 01c4 2146     		mov	r1, r4
 1056 01c6 2748     		ldr	r0, .L70+32
 1057 01c8 FFF7FEFF 		bl	HAL_UART_Transmit
 1058              	.LVL47:
 1059 01cc 54E7     		b	.L43
 1060              	.L53:
 518:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 1061              		.loc 1 518 7 is_stmt 1 view .LVU284
 518:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 1062              		.loc 1 518 10 is_stmt 0 view .LVU285
 1063 01ce 3F49     		ldr	r1, .L70+136
 1064 01d0 1D48     		ldr	r0, .L70+4
 1065 01d2 FFF7FEFF 		bl	strcmp
 1066              	.LVL48:
 518:Src/state.c   **** 		sprintf(debug_tx,"\r\nFiles inside sd are:\r\n%s",log_names);
 1067              		.loc 1 518 9 view .LVU286
 1068 01d6 A0B1     		cbz	r0, .L69
 522:Src/state.c   **** 	{
 1069              		.loc 1 522 7 is_stmt 1 view .LVU287
 522:Src/state.c   **** 	{
 1070              		.loc 1 522 11 is_stmt 0 view .LVU288
 1071 01d8 3D49     		ldr	r1, .L70+140
 1072 01da 1B48     		ldr	r0, .L70+4
 1073 01dc FFF7FEFF 		bl	strcmp
 1074              	.LVL49:
 522:Src/state.c   **** 	{
 1075              		.loc 1 522 10 view .LVU289
 1076 01e0 00BB     		cbnz	r0, .L57
 524:Src/state.c   **** 				"\r\n"
 1077              		.loc 1 524 3 is_stmt 1 view .LVU290
 1078 01e2 214C     		ldr	r4, .L70+36
 1079 01e4 DB22     		movs	r2, #219
 1080 01e6 3B49     		ldr	r1, .L70+144
 1081 01e8 2046     		mov	r0, r4
 1082 01ea FFF7FEFF 		bl	memcpy
 1083              	.LVL50:
 538:Src/state.c   **** 	}
 1084              		.loc 1 538 3 view .LVU291
 538:Src/state.c   **** 	}
 1085              		.loc 1 538 51 is_stmt 0 view .LVU292
 1086 01ee 2046     		mov	r0, r4
 1087 01f0 FFF7FEFF 		bl	strlen
 1088              	.LVL51:
 538:Src/state.c   **** 	}
 1089              		.loc 1 538 3 view .LVU293
 1090 01f4 6423     		movs	r3, #100
ARM GAS  /tmp/ccQA1u9w.s 			page 36


 1091 01f6 82B2     		uxth	r2, r0
 1092 01f8 2146     		mov	r1, r4
 1093 01fa 1A48     		ldr	r0, .L70+32
 1094 01fc FFF7FEFF 		bl	HAL_UART_Transmit
 1095              	.LVL52:
 1096 0200 3AE7     		b	.L43
 1097              	.L69:
 519:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 1000);
 1098              		.loc 1 519 3 is_stmt 1 view .LVU294
 1099 0202 194C     		ldr	r4, .L70+36
 1100 0204 344A     		ldr	r2, .L70+148
 1101 0206 3549     		ldr	r1, .L70+152
 1102 0208 2046     		mov	r0, r4
 1103 020a FFF7FEFF 		bl	sprintf
 1104              	.LVL53:
 520:Src/state.c   **** 	}
 1105              		.loc 1 520 3 view .LVU295
 520:Src/state.c   **** 	}
 1106              		.loc 1 520 51 is_stmt 0 view .LVU296
 1107 020e 2046     		mov	r0, r4
 1108 0210 FFF7FEFF 		bl	strlen
 1109              	.LVL54:
 520:Src/state.c   **** 	}
 1110              		.loc 1 520 3 view .LVU297
 1111 0214 4FF47A73 		mov	r3, #1000
 1112 0218 82B2     		uxth	r2, r0
 1113 021a 2146     		mov	r1, r4
 1114 021c 1148     		ldr	r0, .L70+32
 1115 021e FFF7FEFF 		bl	HAL_UART_Transmit
 1116              	.LVL55:
 1117 0222 29E7     		b	.L43
 1118              	.L57:
 542:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)debug_tx, strlen(debug_tx), 100);
 1119              		.loc 1 542 3 is_stmt 1 view .LVU298
 1120 0224 104C     		ldr	r4, .L70+36
 1121 0226 084A     		ldr	r2, .L70+4
 1122 0228 2D49     		ldr	r1, .L70+156
 1123 022a 2046     		mov	r0, r4
 1124 022c FFF7FEFF 		bl	sprintf
 1125              	.LVL56:
 543:Src/state.c   **** 	}
 1126              		.loc 1 543 3 view .LVU299
 543:Src/state.c   **** 	}
 1127              		.loc 1 543 51 is_stmt 0 view .LVU300
 1128 0230 2046     		mov	r0, r4
 1129 0232 FFF7FEFF 		bl	strlen
 1130              	.LVL57:
 543:Src/state.c   **** 	}
 1131              		.loc 1 543 3 view .LVU301
 1132 0236 6423     		movs	r3, #100
 1133 0238 82B2     		uxth	r2, r0
 1134 023a 2146     		mov	r1, r4
 1135 023c 0948     		ldr	r0, .L70+32
 1136 023e FFF7FEFF 		bl	HAL_UART_Transmit
 1137              	.LVL58:
 1138              		.loc 1 545 1 view .LVU302
 1139 0242 19E7     		b	.L43
ARM GAS  /tmp/ccQA1u9w.s 			page 37


 1140              	.L71:
 1141              		.align	2
 1142              	.L70:
 1143 0244 00000000 		.word	.LC0
 1144 0248 00000000 		.word	debug_rx
 1145 024c 0C010000 		.word	.LC2
 1146 0250 14010000 		.word	.LC3
 1147 0254 4C010000 		.word	.LC5
 1148 0258 30030000 		.word	.LC13
 1149 025c 00000000 		.word	mount_ok
 1150 0260 90030000 		.word	.LC17
 1151 0264 00000000 		.word	huart3
 1152 0268 00000000 		.word	debug_tx
 1153 026c 08000000 		.word	.LC1
 1154 0270 00000000 		.word	code_version
 1155 0274 00000000 		.word	count_hour
 1156 0278 00000000 		.word	count_min
 1157 027c 00000000 		.word	count_sec
 1158 0280 00000000 		.word	count_dec
 1159 0284 1C010000 		.word	.LC4
 1160 0288 00000000 		.word	can1
 1161 028c 54010000 		.word	.LC6
 1162 0290 00000000 		.word	can3
 1163 0294 FC010000 		.word	.LC7
 1164 0298 00000000 		.word	current_state
 1165 029c 00000000 		.word	its_connected
 1166 02a0 00000000 		.word	imu_connected
 1167 02a4 DC020000 		.word	.LC12
 1168 02a8 5C020000 		.word	.LC8
 1169 02ac 7C020000 		.word	.LC9
 1170 02b0 9C020000 		.word	.LC10
 1171 02b4 BC020000 		.word	.LC11
 1172 02b8 3C030000 		.word	.LC14
 1173 02bc 00000000 		.word	successfull_opening
 1174 02c0 7C030000 		.word	.LC16
 1175 02c4 00000000 		.word	filename_log
 1176 02c8 4C030000 		.word	.LC15
 1177 02cc A4030000 		.word	.LC18
 1178 02d0 C8030000 		.word	.LC20
 1179 02d4 CC030000 		.word	.LC21
 1180 02d8 00000000 		.word	log_names
 1181 02dc AC030000 		.word	.LC19
 1182 02e0 A8040000 		.word	.LC22
 1183              		.cfi_endproc
 1184              	.LFE149:
 1186              		.section	.rodata.imu_operations.str1.4,"aMS",%progbits,1
 1187              		.align	2
 1188              	.LC23:
 1189 0000 494D5520 		.ascii	"IMU presente\015\012\000"
 1189      70726573 
 1189      656E7465 
 1189      0D0A00
 1190              		.section	.text.imu_operations,"ax",%progbits
 1191              		.align	1
 1192              		.global	imu_operations
 1193              		.syntax unified
 1194              		.thumb
ARM GAS  /tmp/ccQA1u9w.s 			page 38


 1195              		.thumb_func
 1196              		.fpu fpv5-d16
 1198              	imu_operations:
 1199              	.LFB150:
 546:Src/state.c   **** 
 547:Src/state.c   **** void imu_operations()
 548:Src/state.c   **** {
 1200              		.loc 1 548 1 is_stmt 1 view -0
 1201              		.cfi_startproc
 1202              		@ args = 0, pretend = 0, frame = 0
 1203              		@ frame_needed = 0, uses_anonymous_args = 0
 1204 0000 08B5     		push	{r3, lr}
 1205              	.LCFI8:
 1206              		.cfi_def_cfa_offset 8
 1207              		.cfi_offset 3, -8
 1208              		.cfi_offset 14, -4
 549:Src/state.c   **** 	imu_connected = 1; // imu connected true
 1209              		.loc 1 549 2 view .LVU304
 1210              		.loc 1 549 16 is_stmt 0 view .LVU305
 1211 0002 0A4B     		ldr	r3, .L76
 1212 0004 0122     		movs	r2, #1
 1213 0006 1A70     		strb	r2, [r3]
 550:Src/state.c   **** 	if (count_imu == 10 || count_imu == 11)
 1214              		.loc 1 550 2 is_stmt 1 view .LVU306
 1215              		.loc 1 550 22 is_stmt 0 view .LVU307
 1216 0008 094B     		ldr	r3, .L76+4
 1217 000a 1B88     		ldrh	r3, [r3]
 1218 000c 0A3B     		subs	r3, r3, #10
 1219 000e 9BB2     		uxth	r3, r3
 1220              		.loc 1 550 5 view .LVU308
 1221 0010 9342     		cmp	r3, r2
 1222 0012 03D9     		bls	.L75
 1223              	.L73:
 551:Src/state.c   **** 	{
 552:Src/state.c   **** 		HAL_UART_Transmit(&huart3, (uint8_t *)"IMU presente\r\n",
 553:Src/state.c   **** 						  strlen("IMU presente\r\n"), 10);
 554:Src/state.c   **** 	}
 555:Src/state.c   **** 	count_imu = 0;
 1224              		.loc 1 555 2 is_stmt 1 view .LVU309
 1225              		.loc 1 555 12 is_stmt 0 view .LVU310
 1226 0014 064B     		ldr	r3, .L76+4
 1227 0016 0022     		movs	r2, #0
 1228 0018 1A80     		strh	r2, [r3]	@ movhi
 556:Src/state.c   **** }
 1229              		.loc 1 556 1 view .LVU311
 1230 001a 08BD     		pop	{r3, pc}
 1231              	.L75:
 552:Src/state.c   **** 						  strlen("IMU presente\r\n"), 10);
 1232              		.loc 1 552 3 is_stmt 1 view .LVU312
 1233 001c 0A23     		movs	r3, #10
 1234 001e 0E22     		movs	r2, #14
 1235 0020 0449     		ldr	r1, .L76+8
 1236 0022 0548     		ldr	r0, .L76+12
 1237 0024 FFF7FEFF 		bl	HAL_UART_Transmit
 1238              	.LVL59:
 1239 0028 F4E7     		b	.L73
 1240              	.L77:
ARM GAS  /tmp/ccQA1u9w.s 			page 39


 1241 002a 00BF     		.align	2
 1242              	.L76:
 1243 002c 00000000 		.word	imu_connected
 1244 0030 00000000 		.word	count_imu
 1245 0034 00000000 		.word	.LC23
 1246 0038 00000000 		.word	huart3
 1247              		.cfi_endproc
 1248              	.LFE150:
 1250              		.section	.text.atc_pot_operations,"ax",%progbits
 1251              		.align	1
 1252              		.global	atc_pot_operations
 1253              		.syntax unified
 1254              		.thumb
 1255              		.thumb_func
 1256              		.fpu fpv5-d16
 1258              	atc_pot_operations:
 1259              	.LFB151:
 557:Src/state.c   **** void atc_pot_operations()
 558:Src/state.c   **** {
 1260              		.loc 1 558 1 view -0
 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 0
 1263              		@ frame_needed = 0, uses_anonymous_args = 0
 1264              		@ link register save eliminated.
 559:Src/state.c   **** 	atc_connected = 1;
 1265              		.loc 1 559 2 view .LVU314
 1266              		.loc 1 559 16 is_stmt 0 view .LVU315
 1267 0000 034B     		ldr	r3, .L79
 1268 0002 0122     		movs	r2, #1
 1269 0004 1A70     		strb	r2, [r3]
 560:Src/state.c   **** 	count_atc = 0;
 1270              		.loc 1 560 2 is_stmt 1 view .LVU316
 1271              		.loc 1 560 12 is_stmt 0 view .LVU317
 1272 0006 034B     		ldr	r3, .L79+4
 1273 0008 0022     		movs	r2, #0
 1274 000a 1A80     		strh	r2, [r3]	@ movhi
 561:Src/state.c   **** }
 1275              		.loc 1 561 1 view .LVU318
 1276 000c 7047     		bx	lr
 1277              	.L80:
 1278 000e 00BF     		.align	2
 1279              	.L79:
 1280 0010 00000000 		.word	atc_connected
 1281 0014 00000000 		.word	count_atc
 1282              		.cfi_endproc
 1283              	.LFE151:
 1285              		.section	.text.idle,"ax",%progbits
 1286              		.align	1
 1287              		.global	idle
 1288              		.syntax unified
 1289              		.thumb
 1290              		.thumb_func
 1291              		.fpu fpv5-d16
 1293              	idle:
 1294              	.LFB146:
 130:Src/state.c   **** 	/*if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port,USER_BUTTON_Pin) == GPIO_PIN_SET){
 1295              		.loc 1 130 1 is_stmt 1 view -0
ARM GAS  /tmp/ccQA1u9w.s 			page 40


 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 0
 1298              		@ frame_needed = 0, uses_anonymous_args = 0
 1299 0000 08B5     		push	{r3, lr}
 1300              	.LCFI9:
 1301              		.cfi_def_cfa_offset 8
 1302              		.cfi_offset 3, -8
 1303              		.cfi_offset 14, -4
 139:Src/state.c   **** 	{
 1304              		.loc 1 139 2 view .LVU320
 139:Src/state.c   **** 	{
 1305              		.loc 1 139 24 is_stmt 0 view .LVU321
 1306 0002 174B     		ldr	r3, .L89
 1307 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139:Src/state.c   **** 	{
 1308              		.loc 1 139 5 view .LVU322
 1309 0006 012B     		cmp	r3, #1
 1310 0008 0FD0     		beq	.L88
 1311              	.L82:
 144:Src/state.c   **** 	{
 1312              		.loc 1 144 2 is_stmt 1 view .LVU323
 144:Src/state.c   **** 	{
 1313              		.loc 1 144 6 is_stmt 0 view .LVU324
 1314 000a 1648     		ldr	r0, .L89+4
 1315 000c FFF7FEFF 		bl	fifoRxDataCAN_pop
 1316              	.LVL60:
 144:Src/state.c   **** 	{
 1317              		.loc 1 144 5 view .LVU325
 1318 0010 E8B1     		cbz	r0, .L81
 146:Src/state.c   **** 		{
 1319              		.loc 1 146 3 is_stmt 1 view .LVU326
 146:Src/state.c   **** 		{
 1320              		.loc 1 146 15 is_stmt 0 view .LVU327
 1321 0012 144B     		ldr	r3, .L89+4
 1322 0014 1B6B     		ldr	r3, [r3, #48]
 146:Src/state.c   **** 		{
 1323              		.loc 1 146 3 view .LVU328
 1324 0016 A02B     		cmp	r3, #160
 1325 0018 1AD0     		beq	.L84
 1326 001a 18D8     		bhi	.L81
 1327 001c 102B     		cmp	r3, #16
 1328 001e 0AD0     		beq	.L85
 1329 0020 342B     		cmp	r3, #52
 1330 0022 14D1     		bne	.L81
 185:Src/state.c   **** 			break;
 1331              		.loc 1 185 4 is_stmt 1 view .LVU329
 1332 0024 FFF7FEFF 		bl	atc_pot_operations
 1333              	.LVL61:
 186:Src/state.c   **** 		default:
 1334              		.loc 1 186 4 view .LVU330
 191:Src/state.c   **** /*******************************************************************
 1335              		.loc 1 191 1 is_stmt 0 view .LVU331
 1336 0028 11E0     		b	.L81
 1337              	.L88:
 141:Src/state.c   **** 		debug_operations();
 1338              		.loc 1 141 3 is_stmt 1 view .LVU332
 141:Src/state.c   **** 		debug_operations();
ARM GAS  /tmp/ccQA1u9w.s 			page 41


 1339              		.loc 1 141 21 is_stmt 0 view .LVU333
 1340 002a 0D4B     		ldr	r3, .L89
 1341 002c 0022     		movs	r2, #0
 1342 002e 1A70     		strb	r2, [r3]
 142:Src/state.c   **** 	}
 1343              		.loc 1 142 3 is_stmt 1 view .LVU334
 1344 0030 FFF7FEFF 		bl	debug_operations
 1345              	.LVL62:
 1346 0034 E9E7     		b	.L82
 1347              	.L85:
 149:Src/state.c   **** 			can1.tx_size = 1;
 1348              		.loc 1 149 4 view .LVU335
 149:Src/state.c   **** 			can1.tx_size = 1;
 1349              		.loc 1 149 19 is_stmt 0 view .LVU336
 1350 0036 0B48     		ldr	r0, .L89+4
 1351 0038 0B4B     		ldr	r3, .L89+8
 1352 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1353 003c 0373     		strb	r3, [r0, #12]
 150:Src/state.c   **** 			can1.tx_id = ID_ACU_1;
 1354              		.loc 1 150 4 is_stmt 1 view .LVU337
 150:Src/state.c   **** 			can1.tx_id = ID_ACU_1;
 1355              		.loc 1 150 17 is_stmt 0 view .LVU338
 1356 003e 0123     		movs	r3, #1
 1357 0040 0360     		str	r3, [r0]
 151:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 1358              		.loc 1 151 4 is_stmt 1 view .LVU339
 151:Src/state.c   **** 			CAN_Send(&can1, normalPriority);
 1359              		.loc 1 151 15 is_stmt 0 view .LVU340
 1360 0042 4FF48073 		mov	r3, #256
 1361 0046 C362     		str	r3, [r0, #44]
 152:Src/state.c   **** 			break;
 1362              		.loc 1 152 4 is_stmt 1 view .LVU341
 1363 0048 0021     		movs	r1, #0
 1364 004a FFF7FEFF 		bl	CAN_Send
 1365              	.LVL63:
 153:Src/state.c   **** 		case ID_ASK_INV_DX:
 1366              		.loc 1 153 4 view .LVU342
 1367              	.L81:
 191:Src/state.c   **** /*******************************************************************
 1368              		.loc 1 191 1 is_stmt 0 view .LVU343
 1369 004e 08BD     		pop	{r3, pc}
 1370              	.L84:
 174:Src/state.c   **** 			{
 1371              		.loc 1 174 4 is_stmt 1 view .LVU344
 174:Src/state.c   **** 			{
 1372              		.loc 1 174 23 is_stmt 0 view .LVU345
 1373 0050 044B     		ldr	r3, .L89+4
 1374 0052 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1375 0054 022B     		cmp	r3, #2
 1376 0056 FAD1     		bne	.L81
 178:Src/state.c   **** 				break;
 1377              		.loc 1 178 5 is_stmt 1 view .LVU346
 178:Src/state.c   **** 				break;
 1378              		.loc 1 178 19 is_stmt 0 view .LVU347
 1379 0058 034B     		ldr	r3, .L89+8
 1380 005a 0222     		movs	r2, #2
 1381 005c 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccQA1u9w.s 			page 42


 179:Src/state.c   **** 			default:
 1382              		.loc 1 179 5 is_stmt 1 view .LVU348
 1383 005e F6E7     		b	.L81
 1384              	.L90:
 1385              		.align	2
 1386              	.L89:
 1387 0060 00000000 		.word	debug_msg_arrived
 1388 0064 00000000 		.word	can1
 1389 0068 00000000 		.word	current_state
 1390              		.cfi_endproc
 1391              	.LFE146:
 1393              		.section	.text.run,"ax",%progbits
 1394              		.align	1
 1395              		.global	run
 1396              		.syntax unified
 1397              		.thumb
 1398              		.thumb_func
 1399              		.fpu fpv5-d16
 1401              	run:
 1402              	.LFB148:
 402:Src/state.c   **** 	if (fifoRxDataCAN_pop(&can1))
 1403              		.loc 1 402 1 view -0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407 0000 08B5     		push	{r3, lr}
 1408              	.LCFI10:
 1409              		.cfi_def_cfa_offset 8
 1410              		.cfi_offset 3, -8
 1411              		.cfi_offset 14, -4
 403:Src/state.c   **** 	{
 1412              		.loc 1 403 2 view .LVU350
 403:Src/state.c   **** 	{
 1413              		.loc 1 403 6 is_stmt 0 view .LVU351
 1414 0002 0A48     		ldr	r0, .L95
 1415 0004 FFF7FEFF 		bl	fifoRxDataCAN_pop
 1416              	.LVL64:
 403:Src/state.c   **** 	{
 1417              		.loc 1 403 5 view .LVU352
 1418 0008 78B1     		cbz	r0, .L91
 405:Src/state.c   **** 		{
 1419              		.loc 1 405 3 is_stmt 1 view .LVU353
 405:Src/state.c   **** 		{
 1420              		.loc 1 405 15 is_stmt 0 view .LVU354
 1421 000a 084B     		ldr	r3, .L95
 1422 000c 1B6B     		ldr	r3, [r3, #48]
 405:Src/state.c   **** 		{
 1423              		.loc 1 405 3 view .LVU355
 1424 000e 342B     		cmp	r3, #52
 1425 0010 09D0     		beq	.L93
 1426 0012 A02B     		cmp	r3, #160
 1427 0014 09D1     		bne	.L91
 408:Src/state.c   **** 			{ //----- change state to setup -----//
 1428              		.loc 1 408 4 is_stmt 1 view .LVU356
 408:Src/state.c   **** 			{ //----- change state to setup -----//
 1429              		.loc 1 408 19 is_stmt 0 view .LVU357
 1430 0016 054B     		ldr	r3, .L95
ARM GAS  /tmp/ccQA1u9w.s 			page 43


 1431 0018 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 408:Src/state.c   **** 			{ //----- change state to setup -----//
 1432              		.loc 1 408 7 view .LVU358
 1433 001a 062B     		cmp	r3, #6
 1434 001c 05D1     		bne	.L91
 410:Src/state.c   **** 			}
 1435              		.loc 1 410 5 is_stmt 1 view .LVU359
 410:Src/state.c   **** 			}
 1436              		.loc 1 410 19 is_stmt 0 view .LVU360
 1437 001e 044B     		ldr	r3, .L95+4
 1438 0020 0222     		movs	r2, #2
 1439 0022 1A70     		strb	r2, [r3]
 1440 0024 01E0     		b	.L91
 1441              	.L93:
 414:Src/state.c   **** 			break;
 1442              		.loc 1 414 4 is_stmt 1 view .LVU361
 1443 0026 FFF7FEFF 		bl	atc_pot_operations
 1444              	.LVL65:
 415:Src/state.c   **** 		default:
 1445              		.loc 1 415 4 view .LVU362
 1446              	.L91:
 420:Src/state.c   **** /*******************************************************************
 1447              		.loc 1 420 1 is_stmt 0 view .LVU363
 1448 002a 08BD     		pop	{r3, pc}
 1449              	.L96:
 1450              		.align	2
 1451              	.L95:
 1452 002c 00000000 		.word	can1
 1453 0030 00000000 		.word	current_state
 1454              		.cfi_endproc
 1455              	.LFE148:
 1457              		.global	inv_init_response
 1458              		.global	init_inv_resp
 1459              		.global	init_precharge_start_time
 1460              		.global	init_step_start_time
 1461              		.global	init_step
 1462              		.global	critical_errors
 1463              		.global	setup_init
 1464              		.comm	current_state,1,1
 1465              		.section	.bss.critical_errors,"aw",%nobits
 1466              		.align	2
 1467              		.set	.LANCHOR4,. + 0
 1470              	critical_errors:
 1471 0000 00000000 		.space	4
 1472              		.section	.bss.init_inv_resp,"aw",%nobits
 1473              		.align	2
 1474              		.set	.LANCHOR6,. + 0
 1477              	init_inv_resp:
 1478 0000 00000000 		.space	4
 1479              		.section	.bss.init_precharge_start_time,"aw",%nobits
 1480              		.align	2
 1481              		.set	.LANCHOR5,. + 0
 1484              	init_precharge_start_time:
 1485 0000 00000000 		.space	4
 1486              		.section	.bss.init_step,"aw",%nobits
 1487              		.align	2
 1488              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/ccQA1u9w.s 			page 44


 1491              	init_step:
 1492 0000 00000000 		.space	4
 1493              		.section	.bss.init_step_start_time,"aw",%nobits
 1494              		.align	2
 1495              		.set	.LANCHOR1,. + 0
 1498              	init_step_start_time:
 1499 0000 00000000 		.space	4
 1500              		.section	.bss.inv_init_response,"aw",%nobits
 1501              		.set	.LANCHOR2,. + 0
 1504              	inv_init_response:
 1505 0000 00       		.space	1
 1506              		.section	.bss.setup_init,"aw",%nobits
 1507              		.align	2
 1508              		.set	.LANCHOR3,. + 0
 1511              	setup_init:
 1512 0000 00000000 		.space	4
 1513              		.text
 1514              	.Letext0:
 1515              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1516              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1517              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1518              		.file 5 "Inc/state.h"
 1519              		.file 6 "Drivers/CMSIS/Include/core_cm7.h"
 1520              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1521              		.file 8 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1522              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1523              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1524              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 1525              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1526              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1527              		.file 14 "Inc/can.h"
 1528              		.file 15 "Middlewares/Third_Party/FatFs/src/integer.h"
 1529              		.file 16 "/usr/arm-none-eabi/include/sys/lock.h"
 1530              		.file 17 "/usr/arm-none-eabi/include/sys/_types.h"
 1531              		.file 18 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 1532              		.file 19 "/usr/arm-none-eabi/include/sys/reent.h"
 1533              		.file 20 "/usr/arm-none-eabi/include/stdlib.h"
 1534              		.file 21 "Middlewares/Third_Party/FatFs/src/ff.h"
 1535              		.file 22 "Middlewares/Third_Party/FatFs/src/diskio.h"
 1536              		.file 23 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 1537              		.file 24 "Inc/sd_diskio.h"
 1538              		.file 25 "Inc/fatfs.h"
 1539              		.file 26 "Inc/global_variables.h"
 1540              		.file 27 "/usr/arm-none-eabi/include/string.h"
 1541              		.file 28 "/usr/arm-none-eabi/include/stdio.h"
 1542              		.file 29 "<built-in>"
ARM GAS  /tmp/ccQA1u9w.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 state.c
     /tmp/ccQA1u9w.s:17     .text.set_bit_uint8:0000000000000000 $t
     /tmp/ccQA1u9w.s:25     .text.set_bit_uint8:0000000000000000 set_bit_uint8
     /tmp/ccQA1u9w.s:73     .text.init:0000000000000000 $t
     /tmp/ccQA1u9w.s:80     .text.init:0000000000000000 init
     /tmp/ccQA1u9w.s:365    .text.init:0000000000000164 $d
                            *COM*:0000000000000001 current_state
     /tmp/ccQA1u9w.s:376    .text.setup:0000000000000000 $t
     /tmp/ccQA1u9w.s:383    .text.setup:0000000000000000 setup
     /tmp/ccQA1u9w.s:626    .text.setup:0000000000000110 $d
     /tmp/ccQA1u9w.s:638    .rodata.debug_operations.str1.4:0000000000000000 $d
     /tmp/ccQA1u9w.s:729    .text.debug_operations:0000000000000000 $t
     /tmp/ccQA1u9w.s:736    .text.debug_operations:0000000000000000 debug_operations
     /tmp/ccQA1u9w.s:1143   .text.debug_operations:0000000000000244 $d
     /tmp/ccQA1u9w.s:1187   .rodata.imu_operations.str1.4:0000000000000000 $d
     /tmp/ccQA1u9w.s:1191   .text.imu_operations:0000000000000000 $t
     /tmp/ccQA1u9w.s:1198   .text.imu_operations:0000000000000000 imu_operations
     /tmp/ccQA1u9w.s:1243   .text.imu_operations:000000000000002c $d
     /tmp/ccQA1u9w.s:1251   .text.atc_pot_operations:0000000000000000 $t
     /tmp/ccQA1u9w.s:1258   .text.atc_pot_operations:0000000000000000 atc_pot_operations
     /tmp/ccQA1u9w.s:1280   .text.atc_pot_operations:0000000000000010 $d
     /tmp/ccQA1u9w.s:1286   .text.idle:0000000000000000 $t
     /tmp/ccQA1u9w.s:1293   .text.idle:0000000000000000 idle
     /tmp/ccQA1u9w.s:1387   .text.idle:0000000000000060 $d
     /tmp/ccQA1u9w.s:1394   .text.run:0000000000000000 $t
     /tmp/ccQA1u9w.s:1401   .text.run:0000000000000000 run
     /tmp/ccQA1u9w.s:1452   .text.run:000000000000002c $d
     /tmp/ccQA1u9w.s:1504   .bss.inv_init_response:0000000000000000 inv_init_response
     /tmp/ccQA1u9w.s:1477   .bss.init_inv_resp:0000000000000000 init_inv_resp
     /tmp/ccQA1u9w.s:1484   .bss.init_precharge_start_time:0000000000000000 init_precharge_start_time
     /tmp/ccQA1u9w.s:1498   .bss.init_step_start_time:0000000000000000 init_step_start_time
     /tmp/ccQA1u9w.s:1491   .bss.init_step:0000000000000000 init_step
     /tmp/ccQA1u9w.s:1470   .bss.critical_errors:0000000000000000 critical_errors
     /tmp/ccQA1u9w.s:1511   .bss.setup_init:0000000000000000 setup_init
     /tmp/ccQA1u9w.s:1466   .bss.critical_errors:0000000000000000 $d
     /tmp/ccQA1u9w.s:1473   .bss.init_inv_resp:0000000000000000 $d
     /tmp/ccQA1u9w.s:1480   .bss.init_precharge_start_time:0000000000000000 $d
     /tmp/ccQA1u9w.s:1487   .bss.init_step:0000000000000000 $d
     /tmp/ccQA1u9w.s:1494   .bss.init_step_start_time:0000000000000000 $d
     /tmp/ccQA1u9w.s:1505   .bss.inv_init_response:0000000000000000 $d
     /tmp/ccQA1u9w.s:1507   .bss.setup_init:0000000000000000 $d

UNDEFINED SYMBOLS
CAN_Send
fifoRxDataCAN_pop
can3
can1
count_ms_abs
atc_connected
strcmp
HAL_UART_Transmit
memcpy
strlen
sprintf
debug_rx
mount_ok
ARM GAS  /tmp/ccQA1u9w.s 			page 46


huart3
debug_tx
code_version
count_hour
count_min
count_sec
count_dec
its_connected
imu_connected
successfull_opening
filename_log
log_names
count_imu
count_atc
debug_msg_arrived
