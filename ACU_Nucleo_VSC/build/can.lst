ARM GAS  /tmp/ccYPZlzD.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"can.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.CAN_Send_IT,"ax",%progbits
  17              		.align	1
  18              		.global	CAN_Send_IT
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	CAN_Send_IT:
  25              	.LFB144:
  26              		.file 1 "Src/can.c"
   1:Src/can.c     **** #include "can.h"
   2:Src/can.c     **** #include "main.h"
   3:Src/can.c     **** #include "stdio.h"
   4:Src/can.c     **** #include "stm32f7xx_hal_can.h"
   5:Src/can.c     **** #include "string.h"
   6:Src/can.c     **** 
   7:Src/can.c     **** // extern CAN_HandleTypeDef hcan1;
   8:Src/can.c     **** extern CAN_HandleTypeDef hcan1;
   9:Src/can.c     **** extern UART_HandleTypeDef huart3;
  10:Src/can.c     **** canStruct can1, can3;
  11:Src/can.c     **** char txt[100];
  12:Src/can.c     **** void can_init()
  13:Src/can.c     **** {
  14:Src/can.c     **** 	if (CAN_initialization(&can1))
  15:Src/can.c     **** 	{
  16:Src/can.c     **** 		report_error_can1();
  17:Src/can.c     **** 	}
  18:Src/can.c     **** 	/*
  19:Src/can.c     **** 	if(CAN_initialization(&can3)){
  20:Src/can.c     **** 		report_error_can3();
  21:Src/can.c     **** 	}*/
  22:Src/can.c     **** }
  23:Src/can.c     **** 
  24:Src/can.c     **** uint8_t CAN_Send(canStruct *can, fifoPriority _fifoPriority)
  25:Src/can.c     **** {
  26:Src/can.c     **** 	if (HAL_CAN_GetTxMailboxesFreeLevel(can->hcan) != 0)
  27:Src/can.c     **** 	{
  28:Src/can.c     **** 		if (CAN_Send_IT(can) == 0)
  29:Src/can.c     **** 		{
  30:Src/can.c     **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("Cagato fuori dal
  31:Src/can.c     **** 			// vaso\r\n"), strlen("Cagato fuori dal vaso\r\n"), 10);
  32:Src/can.c     **** 			return 0;
ARM GAS  /tmp/ccYPZlzD.s 			page 2


  33:Src/can.c     **** 		}
  34:Src/can.c     **** 		else
  35:Src/can.c     **** 		{
  36:Src/can.c     **** 			// sprintf(txt, "id: %d\r\n", (int)can->id);
  37:Src/can.c     **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)(txt), strlen(txt), 10);
  38:Src/can.c     **** 			// HAL_UART_Transmit(&huart3,(uint8_t*)("sent\r\n"),
  39:Src/can.c     **** 			// strlen("sent\r\n"), 10);
  40:Src/can.c     **** 		}
  41:Src/can.c     **** 	}
  42:Src/can.c     **** 	else
  43:Src/can.c     **** 	{
  44:Src/can.c     **** 		// HAL_UART_Transmit(&huart3,(uint8_t*)("Metto in coda\r\n"),
  45:Src/can.c     **** 		// strlen("Metto in coda\r\n"), 10);
  46:Src/can.c     **** 		if (_fifoPriority == normalPriority)
  47:Src/can.c     **** 		{
  48:Src/can.c     **** 			if (can->hcan == &hcan1)
  49:Src/can.c     **** 			{
  50:Src/can.c     **** 				if (fifoTxDataCAN_normal_push(can) == 0)
  51:Src/can.c     **** 				{
  52:Src/can.c     **** 					HAL_UART_Transmit(
  53:Src/can.c     **** 						&huart3, (uint8_t *)("Error while normal push\r\n"),
  54:Src/can.c     **** 						strlen("Error while normal push\r\n"), 10);
  55:Src/can.c     **** 					return 0;
  56:Src/can.c     **** 				}
  57:Src/can.c     **** 			}
  58:Src/can.c     **** 			/*else{
  59:Src/can.c     **** 				if(fifoTxDataCAN3_normal_push(&fifoCAN3, &fifodata) == 0){
  60:Src/can.c     **** 					//TODO: implementare errore
  61:Src/can.c     **** 					return 0;
  62:Src/can.c     **** 				}*/
  63:Src/can.c     **** 			//}
  64:Src/can.c     **** 		}
  65:Src/can.c     **** 		else
  66:Src/can.c     **** 		{ 
  67:Src/can.c     **** 			if (can->hcan == &hcan1)
  68:Src/can.c     **** 			{
  69:Src/can.c     **** 				if (fifoTxDataCAN_high_push(can) == 0)
  70:Src/can.c     **** 				{
  71:Src/can.c     **** 					// TODO: implementare errore
  72:Src/can.c     **** 					return 0;
  73:Src/can.c     **** 				}
  74:Src/can.c     **** 			}
  75:Src/can.c     **** 			/*else{
  76:Src/can.c     **** 				if(fifoTxDataCAN3_high_push(&fifoCAN3, &fifodata) == 0){
  77:Src/can.c     **** 					//TODO: implementare errore
  78:Src/can.c     **** 					return 0;
  79:Src/can.c     **** 				}*/
  80:Src/can.c     **** 			//}
  81:Src/can.c     **** 		}
  82:Src/can.c     **** 	}
  83:Src/can.c     **** 	return 1;
  84:Src/can.c     **** }
  85:Src/can.c     **** 
  86:Src/can.c     **** uint8_t CAN_Send_IT(canStruct *can)
  87:Src/can.c     **** {
  27              		.loc 1 87 0
  28              		.cfi_startproc
ARM GAS  /tmp/ccYPZlzD.s 			page 3


  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
  88:Src/can.c     **** 	uint32_t mailbox = 0;
  39              		.loc 1 88 0
  40 0004 0023     		movs	r3, #0
  41 0006 0793     		str	r3, [sp, #28]
  42              	.LVL1:
  43              	.LBB2:
  89:Src/can.c     **** 	// CAN_TxMailBox_TypeDef mailbox;
  90:Src/can.c     **** 	// mailbox.TIR = 0; //set to mailbox 0
  91:Src/can.c     **** 
  92:Src/can.c     **** 	for (int i = 0; i < 8; i++)
  44              		.loc 1 92 0
  45 0008 04E0     		b	.L2
  46              	.LVL2:
  47              	.L3:
  93:Src/can.c     **** 	{
  94:Src/can.c     **** 		can->dataTxBck[i] = can->dataTx[i];
  48              		.loc 1 94 0 discriminator 3
  49 000a C218     		adds	r2, r0, r3
  50 000c 117B     		ldrb	r1, [r2, #12]	@ zero_extendqisi2
  51 000e 82F82410 		strb	r1, [r2, #36]
  92:Src/can.c     **** 	{
  52              		.loc 1 92 0 discriminator 3
  53 0012 0133     		adds	r3, r3, #1
  54              	.LVL3:
  55              	.L2:
  92:Src/can.c     **** 	{
  56              		.loc 1 92 0 is_stmt 0 discriminator 1
  57 0014 072B     		cmp	r3, #7
  58 0016 F8DD     		ble	.L3
  59              	.LBE2:
  95:Src/can.c     **** 	}
  96:Src/can.c     **** 	can->idBck = can->tx_id;
  60              		.loc 1 96 0 is_stmt 1
  61 0018 C36A     		ldr	r3, [r0, #44]
  62              	.LVL4:
  63 001a 8363     		str	r3, [r0, #56]
  97:Src/can.c     **** 	can->sizeBck = can->tx_size;
  64              		.loc 1 97 0
  65 001c 0268     		ldr	r2, [r0]
  66 001e C263     		str	r2, [r0, #60]
  67              	.LVL5:
  98:Src/can.c     **** 
  99:Src/can.c     **** 	uint8_t flag = 0; // error
 100:Src/can.c     **** 
 101:Src/can.c     **** 	CAN_TxHeaderTypeDef TxHeader;
 102:Src/can.c     **** 	TxHeader.StdId = can->tx_id;
  68              		.loc 1 102 0
ARM GAS  /tmp/ccYPZlzD.s 			page 4


  69 0020 0193     		str	r3, [sp, #4]
 103:Src/can.c     **** 	TxHeader.IDE = CAN_ID_STD;
  70              		.loc 1 103 0
  71 0022 0023     		movs	r3, #0
  72 0024 0393     		str	r3, [sp, #12]
 104:Src/can.c     **** 	TxHeader.RTR = CAN_RTR_DATA;
  73              		.loc 1 104 0
  74 0026 0493     		str	r3, [sp, #16]
 105:Src/can.c     **** 	TxHeader.DLC = can->tx_size;
  75              		.loc 1 105 0
  76 0028 0592     		str	r2, [sp, #20]
 106:Src/can.c     **** 	TxHeader.TransmitGlobalTime = DISABLE;
  77              		.loc 1 106 0
  78 002a 8DF81830 		strb	r3, [sp, #24]
 107:Src/can.c     **** 
 108:Src/can.c     **** 	if (HAL_CAN_AddTxMessage(can->hcan, &TxHeader, can->dataTx, &mailbox) ==
  79              		.loc 1 108 0
  80 002e 07AB     		add	r3, sp, #28
  81 0030 00F10C02 		add	r2, r0, #12
  82 0034 01A9     		add	r1, sp, #4
  83 0036 006C     		ldr	r0, [r0, #64]
  84              	.LVL6:
  85 0038 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
  86              	.LVL7:
  87 003c 18B9     		cbnz	r0, .L7
 109:Src/can.c     **** 		HAL_OK)
 110:Src/can.c     **** 	{
 111:Src/can.c     **** 		flag = 1; // ok
  88              		.loc 1 111 0
  89 003e 0120     		movs	r0, #1
  90              	.L4:
  91              	.LVL8:
 112:Src/can.c     **** 	}
 113:Src/can.c     **** 
 114:Src/can.c     **** 	return flag;
 115:Src/can.c     **** }
  92              		.loc 1 115 0
  93 0040 09B0     		add	sp, sp, #36
  94              	.LCFI2:
  95              		.cfi_remember_state
  96              		.cfi_def_cfa_offset 4
  97              		@ sp needed
  98 0042 5DF804FB 		ldr	pc, [sp], #4
  99              	.LVL9:
 100              	.L7:
 101              	.LCFI3:
 102              		.cfi_restore_state
  99:Src/can.c     **** 
 103              		.loc 1 99 0
 104 0046 0020     		movs	r0, #0
 105 0048 FAE7     		b	.L4
 106              		.cfi_endproc
 107              	.LFE144:
 109              		.section	.text.CAN_Send_Bck,"ax",%progbits
 110              		.align	1
 111              		.global	CAN_Send_Bck
 112              		.syntax unified
ARM GAS  /tmp/ccYPZlzD.s 			page 5


 113              		.thumb
 114              		.thumb_func
 115              		.fpu fpv5-d16
 117              	CAN_Send_Bck:
 118              	.LFB145:
 116:Src/can.c     **** 
 117:Src/can.c     **** uint8_t CAN_Send_Bck(canStruct *can)
 118:Src/can.c     **** {
 119              		.loc 1 118 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 24
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              	.LVL10:
 124 0000 00B5     		push	{lr}
 125              	.LCFI4:
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 14, -4
 128 0002 87B0     		sub	sp, sp, #28
 129              	.LCFI5:
 130              		.cfi_def_cfa_offset 32
 131              	.LVL11:
 119:Src/can.c     **** 	uint8_t flag = 0; // error
 120:Src/can.c     **** 
 121:Src/can.c     **** 	CAN_TxHeaderTypeDef TxHeader;
 122:Src/can.c     **** 	TxHeader.StdId = can->idBck;
 132              		.loc 1 122 0
 133 0004 836B     		ldr	r3, [r0, #56]
 134 0006 0093     		str	r3, [sp]
 123:Src/can.c     **** 	TxHeader.IDE = CAN_ID_STD;
 135              		.loc 1 123 0
 136 0008 0023     		movs	r3, #0
 137 000a 0293     		str	r3, [sp, #8]
 124:Src/can.c     **** 	TxHeader.RTR = CAN_RTR_DATA;
 138              		.loc 1 124 0
 139 000c 0393     		str	r3, [sp, #12]
 125:Src/can.c     **** 	TxHeader.DLC = can->sizeBck;
 140              		.loc 1 125 0
 141 000e C26B     		ldr	r2, [r0, #60]
 142 0010 0492     		str	r2, [sp, #16]
 126:Src/can.c     **** 	TxHeader.TransmitGlobalTime = DISABLE;
 143              		.loc 1 126 0
 144 0012 8DF81430 		strb	r3, [sp, #20]
 127:Src/can.c     **** 
 128:Src/can.c     **** 	if (HAL_CAN_AddTxMessage(can->hcan, &TxHeader, can->dataTxBck,
 145              		.loc 1 128 0
 146 0016 0123     		movs	r3, #1
 147 0018 00F12402 		add	r2, r0, #36
 148 001c 6946     		mov	r1, sp
 149 001e 006C     		ldr	r0, [r0, #64]
 150              	.LVL12:
 151 0020 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 152              	.LVL13:
 153 0024 18B9     		cbnz	r0, .L12
 129:Src/can.c     **** 							 (uint32_t *)CAN_TX_MAILBOX0) == HAL_OK)
 130:Src/can.c     **** 	{
 131:Src/can.c     **** 		flag = 1; // ok
 154              		.loc 1 131 0
ARM GAS  /tmp/ccYPZlzD.s 			page 6


 155 0026 0120     		movs	r0, #1
 156              	.L9:
 157              	.LVL14:
 132:Src/can.c     **** 	}
 133:Src/can.c     **** 
 134:Src/can.c     **** 	return flag;
 135:Src/can.c     **** }
 158              		.loc 1 135 0
 159 0028 07B0     		add	sp, sp, #28
 160              	.LCFI6:
 161              		.cfi_remember_state
 162              		.cfi_def_cfa_offset 4
 163              		@ sp needed
 164 002a 5DF804FB 		ldr	pc, [sp], #4
 165              	.LVL15:
 166              	.L12:
 167              	.LCFI7:
 168              		.cfi_restore_state
 119:Src/can.c     **** 
 169              		.loc 1 119 0
 170 002e 0020     		movs	r0, #0
 171 0030 FAE7     		b	.L9
 172              		.cfi_endproc
 173              	.LFE145:
 175              		.section	.text.CAN_initialization,"ax",%progbits
 176              		.align	1
 177              		.global	CAN_initialization
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv5-d16
 183              	CAN_initialization:
 184              	.LFB146:
 136:Src/can.c     **** 
 137:Src/can.c     **** uint8_t CAN_initialization(canStruct *can)
 138:Src/can.c     **** {
 185              		.loc 1 138 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              	.LVL16:
 190 0000 38B5     		push	{r3, r4, r5, lr}
 191              	.LCFI8:
 192              		.cfi_def_cfa_offset 16
 193              		.cfi_offset 3, -16
 194              		.cfi_offset 4, -12
 195              		.cfi_offset 5, -8
 196              		.cfi_offset 14, -4
 197 0002 0446     		mov	r4, r0
 139:Src/can.c     **** 	// CAN filter initialization
 140:Src/can.c     **** 	can->canFilter.FilterMode = CAN_FILTERMODE_IDMASK;
 198              		.loc 1 140 0
 199 0004 0025     		movs	r5, #0
 200 0006 C565     		str	r5, [r0, #92]
 141:Src/can.c     **** 	can->canFilter.FilterIdLow = 0;
 201              		.loc 1 141 0
 202 0008 8564     		str	r5, [r0, #72]
ARM GAS  /tmp/ccYPZlzD.s 			page 7


 142:Src/can.c     **** 	can->canFilter.FilterIdHigh = 0;
 203              		.loc 1 142 0
 204 000a 4564     		str	r5, [r0, #68]
 143:Src/can.c     **** 	can->canFilter.FilterMaskIdHigh = 0;
 205              		.loc 1 143 0
 206 000c C564     		str	r5, [r0, #76]
 144:Src/can.c     **** 	can->canFilter.FilterMaskIdLow = 0;
 207              		.loc 1 144 0
 208 000e 0565     		str	r5, [r0, #80]
 145:Src/can.c     **** 	can->canFilter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 209              		.loc 1 145 0
 210 0010 4565     		str	r5, [r0, #84]
 146:Src/can.c     **** 	can->canFilter.FilterBank = 0;
 211              		.loc 1 146 0
 212 0012 8565     		str	r5, [r0, #88]
 147:Src/can.c     **** 	can->canFilter.FilterScale = CAN_FILTERSCALE_16BIT;
 213              		.loc 1 147 0
 214 0014 0566     		str	r5, [r0, #96]
 148:Src/can.c     **** 	can->canFilter.FilterActivation = ENABLE;
 215              		.loc 1 148 0
 216 0016 0123     		movs	r3, #1
 217 0018 4366     		str	r3, [r0, #100]
 149:Src/can.c     **** 
 150:Src/can.c     **** 	// CAN filter configuration
 151:Src/can.c     **** 	can->configFilter_status = HAL_CAN_ConfigFilter(can->hcan, &can->canFilter);
 218              		.loc 1 151 0
 219 001a 00F14401 		add	r1, r0, #68
 220 001e 006C     		ldr	r0, [r0, #64]
 221              	.LVL17:
 222 0020 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 223              	.LVL18:
 224 0024 84F86C00 		strb	r0, [r4, #108]
 152:Src/can.c     **** 
 153:Src/can.c     **** 	can->activateNotif_status =
 154:Src/can.c     **** 		HAL_CAN_ActivateNotification(can->hcan, can->rx0_interrupt);
 225              		.loc 1 154 0
 226 0028 94F9981D 		ldrsb	r1, [r4, #3480]
 227 002c 206C     		ldr	r0, [r4, #64]
 228 002e FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 229              	.LVL19:
 153:Src/can.c     **** 		HAL_CAN_ActivateNotification(can->hcan, can->rx0_interrupt);
 230              		.loc 1 153 0
 231 0032 84F86D00 		strb	r0, [r4, #109]
 155:Src/can.c     **** 	can->activateNotif_status =
 156:Src/can.c     **** 		HAL_CAN_ActivateNotification(can->hcan, can->tx_interrupt);
 232              		.loc 1 156 0
 233 0036 94F9991D 		ldrsb	r1, [r4, #3481]
 234 003a 206C     		ldr	r0, [r4, #64]
 235 003c FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 236              	.LVL20:
 155:Src/can.c     **** 	can->activateNotif_status =
 237              		.loc 1 155 0
 238 0040 84F86D00 		strb	r0, [r4, #109]
 157:Src/can.c     **** 
 158:Src/can.c     **** 	can->fifo.rxHead = 0;
 239              		.loc 1 158 0
 240 0044 84F87050 		strb	r5, [r4, #112]
ARM GAS  /tmp/ccYPZlzD.s 			page 8


 159:Src/can.c     **** 	can->fifo.rxTail = 0;
 241              		.loc 1 159 0
 242 0048 84F87150 		strb	r5, [r4, #113]
 160:Src/can.c     **** 	can->fifo.txHeadHigh = 0;
 243              		.loc 1 160 0
 244 004c 84F87450 		strb	r5, [r4, #116]
 161:Src/can.c     **** 	can->fifo.txHeadNormal = 0;
 245              		.loc 1 161 0
 246 0050 84F87250 		strb	r5, [r4, #114]
 162:Src/can.c     **** 	can->fifo.txTailHigh = 0;
 247              		.loc 1 162 0
 248 0054 84F87550 		strb	r5, [r4, #117]
 163:Src/can.c     **** 	can->fifo.txTailNormal = 0;
 249              		.loc 1 163 0
 250 0058 84F87350 		strb	r5, [r4, #115]
 164:Src/can.c     **** 
 165:Src/can.c     **** 	// CAN start
 166:Src/can.c     **** 	can->canStart_status = HAL_CAN_Start(can->hcan);
 251              		.loc 1 166 0
 252 005c 206C     		ldr	r0, [r4, #64]
 253 005e FFF7FEFF 		bl	HAL_CAN_Start
 254              	.LVL21:
 255 0062 84F86E00 		strb	r0, [r4, #110]
 167:Src/can.c     **** 
 168:Src/can.c     **** 	if (can->configFilter_status == HAL_OK &&
 169:Src/can.c     **** 		can->activateNotif_status == HAL_OK && can->canStart_status == HAL_OK)
 256              		.loc 1 169 0
 257 0066 E36E     		ldr	r3, [r4, #108]
 168:Src/can.c     **** 		can->activateNotif_status == HAL_OK && can->canStart_status == HAL_OK)
 258              		.loc 1 168 0
 259 0068 33F07F43 		bics	r3, r3, #-16777216
 260 006c 01D0     		beq	.L17
 170:Src/can.c     **** 		return 0; // no errors occurred
 171:Src/can.c     **** 	else
 172:Src/can.c     **** 		return 1;
 261              		.loc 1 172 0
 262 006e 0120     		movs	r0, #1
 173:Src/can.c     **** }
 263              		.loc 1 173 0
 264 0070 38BD     		pop	{r3, r4, r5, pc}
 265              	.LVL22:
 266              	.L17:
 170:Src/can.c     **** 		return 0; // no errors occurred
 267              		.loc 1 170 0
 268 0072 2846     		mov	r0, r5
 269 0074 38BD     		pop	{r3, r4, r5, pc}
 270              		.cfi_endproc
 271              	.LFE146:
 273              		.section	.text.can_init,"ax",%progbits
 274              		.align	1
 275              		.global	can_init
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv5-d16
 281              	can_init:
 282              	.LFB142:
ARM GAS  /tmp/ccYPZlzD.s 			page 9


  13:Src/can.c     **** 	if (CAN_initialization(&can1))
 283              		.loc 1 13 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287 0000 08B5     		push	{r3, lr}
 288              	.LCFI9:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 3, -8
 291              		.cfi_offset 14, -4
  14:Src/can.c     **** 	{
 292              		.loc 1 14 0
 293 0002 0248     		ldr	r0, .L20
 294 0004 FFF7FEFF 		bl	CAN_initialization
 295              	.LVL23:
 296 0008 08BD     		pop	{r3, pc}
 297              	.L21:
 298 000a 00BF     		.align	2
 299              	.L20:
 300 000c 00000000 		.word	can1
 301              		.cfi_endproc
 302              	.LFE142:
 304              		.section	.text.report_error_can1,"ax",%progbits
 305              		.align	1
 306              		.global	report_error_can1
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	report_error_can1:
 313              	.LFB147:
 174:Src/can.c     **** 
 175:Src/can.c     **** void report_error_can1()
 176:Src/can.c     **** {
 314              		.loc 1 176 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319 0000 7047     		bx	lr
 320              		.cfi_endproc
 321              	.LFE147:
 323              		.section	.text.report_error_can3,"ax",%progbits
 324              		.align	1
 325              		.global	report_error_can3
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu fpv5-d16
 331              	report_error_can3:
 332              	.LFB148:
 177:Src/can.c     **** 	// HAL_GPIO_TogglePin(USER_LED_3_GPIO_Port, USER_LED_3_Pin);
 178:Src/can.c     **** }
 179:Src/can.c     **** void report_error_can3() {}
 333              		.loc 1 179 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccYPZlzD.s 			page 10


 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338 0000 7047     		bx	lr
 339              		.cfi_endproc
 340              	.LFE148:
 342              		.section	.text.fifoRxDataCAN_pop,"ax",%progbits
 343              		.align	1
 344              		.global	fifoRxDataCAN_pop
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 348              		.fpu fpv5-d16
 350              	fifoRxDataCAN_pop:
 351              	.LFB149:
 180:Src/can.c     **** 
 181:Src/can.c     **** uint8_t fifoRxDataCAN_pop(canStruct *can)
 182:Src/can.c     **** {
 352              		.loc 1 182 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357              	.LVL24:
 358              		.loc 1 182 0
 359 0000 70B4     		push	{r4, r5, r6}
 360              	.LCFI10:
 361              		.cfi_def_cfa_offset 12
 362              		.cfi_offset 4, -12
 363              		.cfi_offset 5, -8
 364              		.cfi_offset 6, -4
 183:Src/can.c     **** 	if (can->fifo.rxHead == can->fifo.rxTail)
 365              		.loc 1 183 0
 366 0002 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 367 0006 90F87160 		ldrb	r6, [r0, #113]	@ zero_extendqisi2
 368 000a B342     		cmp	r3, r6
 369 000c 22D0     		beq	.L28
 184:Src/can.c     **** 	{
 185:Src/can.c     **** 		return 0;
 186:Src/can.c     **** 	}
 187:Src/can.c     **** 	else
 188:Src/can.c     **** 	{
 189:Src/can.c     **** 		can->rx_id = can->fifo.rx[can->fifo.rxTail].id;
 370              		.loc 1 189 0
 371 000e 3546     		mov	r5, r6
 372 0010 00EB0613 		add	r3, r0, r6, lsl #4
 373 0014 9A6F     		ldr	r2, [r3, #120]
 374 0016 0263     		str	r2, [r0, #48]
 190:Src/can.c     **** 		can->rx_size = can->fifo.rx[can->fifo.rxTail].size;
 375              		.loc 1 190 0
 376 0018 DC6F     		ldr	r4, [r3, #124]
 377 001a 4460     		str	r4, [r0, #4]
 378              	.LVL25:
 379              	.LBB3:
 191:Src/can.c     **** 		for (uint8_t i = 0; i < can->rx_size; i++)
 380              		.loc 1 191 0
 381 001c 0023     		movs	r3, #0
 382 001e 08E0     		b	.L26
ARM GAS  /tmp/ccYPZlzD.s 			page 11


 383              	.LVL26:
 384              	.L27:
 192:Src/can.c     **** 		{
 193:Src/can.c     **** 			can->dataRx[i] = can->fifo.rx[can->fifo.rxTail].data[i];
 385              		.loc 1 193 0 discriminator 3
 386 0020 00EB0512 		add	r2, r0, r5, lsl #4
 387 0024 1A44     		add	r2, r2, r3
 388 0026 92F88010 		ldrb	r1, [r2, #128]	@ zero_extendqisi2
 389 002a C218     		adds	r2, r0, r3
 390 002c 1175     		strb	r1, [r2, #20]
 191:Src/can.c     **** 		for (uint8_t i = 0; i < can->rx_size; i++)
 391              		.loc 1 191 0 discriminator 3
 392 002e 0133     		adds	r3, r3, #1
 393              	.LVL27:
 394 0030 DBB2     		uxtb	r3, r3
 395              	.LVL28:
 396              	.L26:
 191:Src/can.c     **** 		for (uint8_t i = 0; i < can->rx_size; i++)
 397              		.loc 1 191 0 is_stmt 0 discriminator 1
 398 0032 9C42     		cmp	r4, r3
 399 0034 F4DC     		bgt	.L27
 400              	.LBE3:
 194:Src/can.c     **** 		}
 195:Src/can.c     **** 		can->fifo.rxTail = (can->fifo.rxTail + 1) % fifoLengthN;
 401              		.loc 1 195 0 is_stmt 1
 402 0036 0136     		adds	r6, r6, #1
 403 0038 074A     		ldr	r2, .L30
 404 003a 82FB0632 		smull	r3, r2, r2, r6
 405              	.LVL29:
 406 003e F317     		asrs	r3, r6, #31
 407 0040 C3EB6213 		rsb	r3, r3, r2, asr #5
 408 0044 6422     		movs	r2, #100
 409 0046 02FB1363 		mls	r3, r2, r3, r6
 410 004a 80F87130 		strb	r3, [r0, #113]
 196:Src/can.c     **** 		return 1;
 411              		.loc 1 196 0
 412 004e 0120     		movs	r0, #1
 413              	.LVL30:
 414              	.L25:
 197:Src/can.c     **** 	}
 198:Src/can.c     **** }
 415              		.loc 1 198 0
 416 0050 70BC     		pop	{r4, r5, r6}
 417              	.LCFI11:
 418              		.cfi_remember_state
 419              		.cfi_restore 6
 420              		.cfi_restore 5
 421              		.cfi_restore 4
 422              		.cfi_def_cfa_offset 0
 423 0052 7047     		bx	lr
 424              	.LVL31:
 425              	.L28:
 426              	.LCFI12:
 427              		.cfi_restore_state
 185:Src/can.c     **** 	}
 428              		.loc 1 185 0
 429 0054 0020     		movs	r0, #0
ARM GAS  /tmp/ccYPZlzD.s 			page 12


 430              	.LVL32:
 431 0056 FBE7     		b	.L25
 432              	.L31:
 433              		.align	2
 434              	.L30:
 435 0058 1F85EB51 		.word	1374389535
 436              		.cfi_endproc
 437              	.LFE149:
 439              		.section	.text.fifoRxDataCAN_push,"ax",%progbits
 440              		.align	1
 441              		.global	fifoRxDataCAN_push
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 445              		.fpu fpv5-d16
 447              	fifoRxDataCAN_push:
 448              	.LFB150:
 199:Src/can.c     **** 
 200:Src/can.c     **** uint8_t fifoRxDataCAN_push(canStruct *can)
 201:Src/can.c     **** {
 449              		.loc 1 201 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454              	.LVL33:
 455 0000 70B4     		push	{r4, r5, r6}
 456              	.LCFI13:
 457              		.cfi_def_cfa_offset 12
 458              		.cfi_offset 4, -12
 459              		.cfi_offset 5, -8
 460              		.cfi_offset 6, -4
 202:Src/can.c     **** 	if ((can->fifo.rxHead + 1) % fifoLengthN == can->fifo.rxTail)
 461              		.loc 1 202 0
 462 0002 90F87040 		ldrb	r4, [r0, #112]	@ zero_extendqisi2
 463 0006 631C     		adds	r3, r4, #1
 464 0008 134A     		ldr	r2, .L38
 465 000a 82FB0312 		smull	r1, r2, r2, r3
 466 000e DE17     		asrs	r6, r3, #31
 467 0010 C6EB6216 		rsb	r6, r6, r2, asr #5
 468 0014 6422     		movs	r2, #100
 469 0016 02FB1636 		mls	r6, r2, r6, r3
 470 001a 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 471 001e 9E42     		cmp	r6, r3
 472 0020 17D0     		beq	.L36
 203:Src/can.c     **** 	{
 204:Src/can.c     **** 		return 0;
 205:Src/can.c     **** 	}
 206:Src/can.c     **** 	else
 207:Src/can.c     **** 	{
 208:Src/can.c     **** 		can->fifo.rx[can->fifo.rxHead].id = can->rx_id_int;
 473              		.loc 1 208 0
 474 0022 426B     		ldr	r2, [r0, #52]
 475 0024 00EB0413 		add	r3, r0, r4, lsl #4
 476 0028 9A67     		str	r2, [r3, #120]
 209:Src/can.c     **** 		can->fifo.rx[can->fifo.rxHead].size = can->rx_size_int;
 477              		.loc 1 209 0
ARM GAS  /tmp/ccYPZlzD.s 			page 13


 478 002a 8568     		ldr	r5, [r0, #8]
 479 002c DD67     		str	r5, [r3, #124]
 480              	.LVL34:
 481              	.LBB4:
 210:Src/can.c     **** 		for (uint8_t i = 0; i < can->rx_size_int; i++)
 482              		.loc 1 210 0
 483 002e 0023     		movs	r3, #0
 484 0030 08E0     		b	.L34
 485              	.LVL35:
 486              	.L35:
 211:Src/can.c     **** 		{
 212:Src/can.c     **** 			can->fifo.rx[can->fifo.rxHead].data[i] = can->dataRX_int[i];
 487              		.loc 1 212 0 discriminator 3
 488 0032 C218     		adds	r2, r0, r3
 489 0034 117F     		ldrb	r1, [r2, #28]	@ zero_extendqisi2
 490 0036 00EB0412 		add	r2, r0, r4, lsl #4
 491 003a 1A44     		add	r2, r2, r3
 492 003c 82F88010 		strb	r1, [r2, #128]
 210:Src/can.c     **** 		for (uint8_t i = 0; i < can->rx_size_int; i++)
 493              		.loc 1 210 0 discriminator 3
 494 0040 0133     		adds	r3, r3, #1
 495              	.LVL36:
 496 0042 DBB2     		uxtb	r3, r3
 497              	.LVL37:
 498              	.L34:
 210:Src/can.c     **** 		for (uint8_t i = 0; i < can->rx_size_int; i++)
 499              		.loc 1 210 0 is_stmt 0 discriminator 1
 500 0044 9D42     		cmp	r5, r3
 501 0046 F4DC     		bgt	.L35
 502              	.LBE4:
 213:Src/can.c     **** 		}
 214:Src/can.c     **** 		can->fifo.rxHead = (can->fifo.rxHead + 1) % fifoLengthN;
 503              		.loc 1 214 0 is_stmt 1
 504 0048 80F87060 		strb	r6, [r0, #112]
 215:Src/can.c     **** 		return 1;
 505              		.loc 1 215 0
 506 004c 0120     		movs	r0, #1
 507              	.LVL38:
 508              	.L33:
 216:Src/can.c     **** 	}
 217:Src/can.c     **** }
 509              		.loc 1 217 0
 510 004e 70BC     		pop	{r4, r5, r6}
 511              	.LCFI14:
 512              		.cfi_remember_state
 513              		.cfi_restore 6
 514              		.cfi_restore 5
 515              		.cfi_restore 4
 516              		.cfi_def_cfa_offset 0
 517 0050 7047     		bx	lr
 518              	.LVL39:
 519              	.L36:
 520              	.LCFI15:
 521              		.cfi_restore_state
 204:Src/can.c     **** 	}
 522              		.loc 1 204 0
 523 0052 0020     		movs	r0, #0
ARM GAS  /tmp/ccYPZlzD.s 			page 14


 524              	.LVL40:
 525 0054 FBE7     		b	.L33
 526              	.L39:
 527 0056 00BF     		.align	2
 528              	.L38:
 529 0058 1F85EB51 		.word	1374389535
 530              		.cfi_endproc
 531              	.LFE150:
 533              		.section	.text.fifoTxDataCAN_normal_pop,"ax",%progbits
 534              		.align	1
 535              		.global	fifoTxDataCAN_normal_pop
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 539              		.fpu fpv5-d16
 541              	fifoTxDataCAN_normal_pop:
 542              	.LFB151:
 218:Src/can.c     **** 
 219:Src/can.c     **** uint8_t fifoTxDataCAN_normal_pop(canStruct *can)
 220:Src/can.c     **** {
 543              		.loc 1 220 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548              	.LVL41:
 549 0000 70B4     		push	{r4, r5, r6}
 550              	.LCFI16:
 551              		.cfi_def_cfa_offset 12
 552              		.cfi_offset 4, -12
 553              		.cfi_offset 5, -8
 554              		.cfi_offset 6, -4
 221:Src/can.c     **** 	if (can->fifo.txHeadNormal == can->fifo.txTailNormal)
 555              		.loc 1 221 0
 556 0002 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 557 0006 90F87360 		ldrb	r6, [r0, #115]	@ zero_extendqisi2
 558 000a B342     		cmp	r3, r6
 559 000c 24D0     		beq	.L44
 222:Src/can.c     **** 	{
 223:Src/can.c     **** 		return 0;
 224:Src/can.c     **** 	}
 225:Src/can.c     **** 	else
 226:Src/can.c     **** 	{
 227:Src/can.c     **** 		can->tx_id = can->fifo.txNormal[can->fifo.txTailNormal].id;
 560              		.loc 1 227 0
 561 000e 3546     		mov	r5, r6
 562 0010 00EB0613 		add	r3, r0, r6, lsl #4
 563 0014 D3F8B826 		ldr	r2, [r3, #1720]
 564 0018 C262     		str	r2, [r0, #44]
 228:Src/can.c     **** 		can->tx_size = can->fifo.txNormal[can->fifo.txTailNormal].size;
 565              		.loc 1 228 0
 566 001a D3F8BC46 		ldr	r4, [r3, #1724]
 567 001e 0460     		str	r4, [r0]
 568              	.LVL42:
 569              	.LBB5:
 229:Src/can.c     **** 		for (uint8_t i = 0; i < can->tx_size; i++)
 570              		.loc 1 229 0
ARM GAS  /tmp/ccYPZlzD.s 			page 15


 571 0020 0023     		movs	r3, #0
 572 0022 08E0     		b	.L42
 573              	.LVL43:
 574              	.L43:
 230:Src/can.c     **** 		{
 231:Src/can.c     **** 			can->dataTx[i] = can->fifo.txNormal[can->fifo.txTailNormal].data[i];
 575              		.loc 1 231 0 discriminator 3
 576 0024 00EB0512 		add	r2, r0, r5, lsl #4
 577 0028 1A44     		add	r2, r2, r3
 578 002a 92F8C016 		ldrb	r1, [r2, #1728]	@ zero_extendqisi2
 579 002e C218     		adds	r2, r0, r3
 580 0030 1173     		strb	r1, [r2, #12]
 229:Src/can.c     **** 		for (uint8_t i = 0; i < can->tx_size; i++)
 581              		.loc 1 229 0 discriminator 3
 582 0032 0133     		adds	r3, r3, #1
 583              	.LVL44:
 584 0034 DBB2     		uxtb	r3, r3
 585              	.LVL45:
 586              	.L42:
 229:Src/can.c     **** 		for (uint8_t i = 0; i < can->tx_size; i++)
 587              		.loc 1 229 0 is_stmt 0 discriminator 1
 588 0036 9C42     		cmp	r4, r3
 589 0038 F4DC     		bgt	.L43
 590              	.LBE5:
 232:Src/can.c     **** 		}
 233:Src/can.c     **** 		can->fifo.txTailNormal = (can->fifo.txTailNormal + 1) % fifoLengthN;
 591              		.loc 1 233 0 is_stmt 1
 592 003a 0136     		adds	r6, r6, #1
 593 003c 074A     		ldr	r2, .L46
 594 003e 82FB0632 		smull	r3, r2, r2, r6
 595              	.LVL46:
 596 0042 F317     		asrs	r3, r6, #31
 597 0044 C3EB6213 		rsb	r3, r3, r2, asr #5
 598 0048 6422     		movs	r2, #100
 599 004a 02FB1363 		mls	r3, r2, r3, r6
 600 004e 80F87330 		strb	r3, [r0, #115]
 234:Src/can.c     **** 		return 1;
 601              		.loc 1 234 0
 602 0052 0120     		movs	r0, #1
 603              	.LVL47:
 604              	.L41:
 235:Src/can.c     **** 	}
 236:Src/can.c     **** }
 605              		.loc 1 236 0
 606 0054 70BC     		pop	{r4, r5, r6}
 607              	.LCFI17:
 608              		.cfi_remember_state
 609              		.cfi_restore 6
 610              		.cfi_restore 5
 611              		.cfi_restore 4
 612              		.cfi_def_cfa_offset 0
 613 0056 7047     		bx	lr
 614              	.LVL48:
 615              	.L44:
 616              	.LCFI18:
 617              		.cfi_restore_state
 223:Src/can.c     **** 	}
ARM GAS  /tmp/ccYPZlzD.s 			page 16


 618              		.loc 1 223 0
 619 0058 0020     		movs	r0, #0
 620              	.LVL49:
 621 005a FBE7     		b	.L41
 622              	.L47:
 623              		.align	2
 624              	.L46:
 625 005c 1F85EB51 		.word	1374389535
 626              		.cfi_endproc
 627              	.LFE151:
 629              		.section	.text.fifoTxDataCAN_high_pop,"ax",%progbits
 630              		.align	1
 631              		.global	fifoTxDataCAN_high_pop
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 635              		.fpu fpv5-d16
 637              	fifoTxDataCAN_high_pop:
 638              	.LFB152:
 237:Src/can.c     **** uint8_t fifoTxDataCAN_high_pop(canStruct *can)
 238:Src/can.c     **** {
 639              		.loc 1 238 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 644              	.LVL50:
 645 0000 70B4     		push	{r4, r5, r6}
 646              	.LCFI19:
 647              		.cfi_def_cfa_offset 12
 648              		.cfi_offset 4, -12
 649              		.cfi_offset 5, -8
 650              		.cfi_offset 6, -4
 239:Src/can.c     **** 	if (can->fifo.txHeadHigh == can->fifo.txTailHigh)
 651              		.loc 1 239 0
 652 0002 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 653 0006 90F87560 		ldrb	r6, [r0, #117]	@ zero_extendqisi2
 654 000a B342     		cmp	r3, r6
 655 000c 25D0     		beq	.L52
 240:Src/can.c     **** 	{
 241:Src/can.c     **** 		return 0;
 242:Src/can.c     **** 	}
 243:Src/can.c     **** 	else
 244:Src/can.c     **** 	{
 245:Src/can.c     **** 		can->tx_id = can->fifo.txHigh[can->fifo.txTailHigh].id;
 656              		.loc 1 245 0
 657 000e 3546     		mov	r5, r6
 658 0010 00EB0613 		add	r3, r0, r6, lsl #4
 659 0014 D3F8F82C 		ldr	r2, [r3, #3320]
 660 0018 C262     		str	r2, [r0, #44]
 246:Src/can.c     **** 		can->tx_size = can->fifo.txHigh[can->fifo.txTailHigh].size;
 661              		.loc 1 246 0
 662 001a D3F8FC4C 		ldr	r4, [r3, #3324]
 663 001e 0460     		str	r4, [r0]
 664              	.LVL51:
 665              	.LBB6:
 247:Src/can.c     **** 		for (uint8_t i = 0; i < can->tx_size; i++)
ARM GAS  /tmp/ccYPZlzD.s 			page 17


 666              		.loc 1 247 0
 667 0020 0023     		movs	r3, #0
 668 0022 08E0     		b	.L50
 669              	.LVL52:
 670              	.L51:
 248:Src/can.c     **** 		{
 249:Src/can.c     **** 			can->dataTx[i] = can->fifo.txHigh[can->fifo.txTailHigh].data[i];
 671              		.loc 1 249 0 discriminator 3
 672 0024 00EB0512 		add	r2, r0, r5, lsl #4
 673 0028 1A44     		add	r2, r2, r3
 674 002a 92F8001D 		ldrb	r1, [r2, #3328]	@ zero_extendqisi2
 675 002e C218     		adds	r2, r0, r3
 676 0030 1173     		strb	r1, [r2, #12]
 247:Src/can.c     **** 		for (uint8_t i = 0; i < can->tx_size; i++)
 677              		.loc 1 247 0 discriminator 3
 678 0032 0133     		adds	r3, r3, #1
 679              	.LVL53:
 680 0034 DBB2     		uxtb	r3, r3
 681              	.LVL54:
 682              	.L50:
 247:Src/can.c     **** 		for (uint8_t i = 0; i < can->tx_size; i++)
 683              		.loc 1 247 0 is_stmt 0 discriminator 1
 684 0036 9C42     		cmp	r4, r3
 685 0038 F4DC     		bgt	.L51
 686              	.LBE6:
 250:Src/can.c     **** 		}
 251:Src/can.c     **** 		can->fifo.txTailHigh = (can->fifo.txTailHigh + 1) % fifoLengthH;
 687              		.loc 1 251 0 is_stmt 1
 688 003a 0136     		adds	r6, r6, #1
 689 003c 084A     		ldr	r2, .L54
 690 003e 82FB0632 		smull	r3, r2, r2, r6
 691              	.LVL55:
 692 0042 F317     		asrs	r3, r6, #31
 693 0044 C3EBA203 		rsb	r3, r3, r2, asr #2
 694 0048 03EB8303 		add	r3, r3, r3, lsl #2
 695 004c 5A00     		lsls	r2, r3, #1
 696 004e B31A     		subs	r3, r6, r2
 697 0050 80F87530 		strb	r3, [r0, #117]
 252:Src/can.c     **** 		return 1;
 698              		.loc 1 252 0
 699 0054 0120     		movs	r0, #1
 700              	.LVL56:
 701              	.L49:
 253:Src/can.c     **** 	}
 254:Src/can.c     **** }
 702              		.loc 1 254 0
 703 0056 70BC     		pop	{r4, r5, r6}
 704              	.LCFI20:
 705              		.cfi_remember_state
 706              		.cfi_restore 6
 707              		.cfi_restore 5
 708              		.cfi_restore 4
 709              		.cfi_def_cfa_offset 0
 710 0058 7047     		bx	lr
 711              	.LVL57:
 712              	.L52:
 713              	.LCFI21:
ARM GAS  /tmp/ccYPZlzD.s 			page 18


 714              		.cfi_restore_state
 241:Src/can.c     **** 	}
 715              		.loc 1 241 0
 716 005a 0020     		movs	r0, #0
 717              	.LVL58:
 718 005c FBE7     		b	.L49
 719              	.L55:
 720 005e 00BF     		.align	2
 721              	.L54:
 722 0060 67666666 		.word	1717986919
 723              		.cfi_endproc
 724              	.LFE152:
 726              		.section	.text.fifoTxDataCAN_normal_push,"ax",%progbits
 727              		.align	1
 728              		.global	fifoTxDataCAN_normal_push
 729              		.syntax unified
 730              		.thumb
 731              		.thumb_func
 732              		.fpu fpv5-d16
 734              	fifoTxDataCAN_normal_push:
 735              	.LFB153:
 255:Src/can.c     **** uint8_t fifoTxDataCAN_normal_push(canStruct *can)
 256:Src/can.c     **** {
 736              		.loc 1 256 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740              		@ link register save eliminated.
 741              	.LVL59:
 742 0000 70B4     		push	{r4, r5, r6}
 743              	.LCFI22:
 744              		.cfi_def_cfa_offset 12
 745              		.cfi_offset 4, -12
 746              		.cfi_offset 5, -8
 747              		.cfi_offset 6, -4
 257:Src/can.c     **** 	if ((can->fifo.txHeadNormal + 1) % fifoLengthN == can->fifo.txTailNormal)
 748              		.loc 1 257 0
 749 0002 90F87240 		ldrb	r4, [r0, #114]	@ zero_extendqisi2
 750 0006 631C     		adds	r3, r4, #1
 751 0008 144A     		ldr	r2, .L62
 752 000a 82FB0312 		smull	r1, r2, r2, r3
 753 000e DE17     		asrs	r6, r3, #31
 754 0010 C6EB6216 		rsb	r6, r6, r2, asr #5
 755 0014 6422     		movs	r2, #100
 756 0016 02FB1636 		mls	r6, r2, r6, r3
 757 001a 90F87330 		ldrb	r3, [r0, #115]	@ zero_extendqisi2
 758 001e 9E42     		cmp	r6, r3
 759 0020 19D0     		beq	.L60
 258:Src/can.c     **** 	{
 259:Src/can.c     **** 		return 0;
 260:Src/can.c     **** 	}
 261:Src/can.c     **** 	else
 262:Src/can.c     **** 	{
 263:Src/can.c     **** 		can->fifo.txNormal[can->fifo.txHeadNormal].id = can->tx_id;
 760              		.loc 1 263 0
 761 0022 C26A     		ldr	r2, [r0, #44]
 762 0024 00EB0413 		add	r3, r0, r4, lsl #4
ARM GAS  /tmp/ccYPZlzD.s 			page 19


 763 0028 C3F8B826 		str	r2, [r3, #1720]
 264:Src/can.c     **** 		can->fifo.txNormal[can->fifo.txHeadNormal].size = can->tx_size;
 764              		.loc 1 264 0
 765 002c 0568     		ldr	r5, [r0]
 766 002e C3F8BC56 		str	r5, [r3, #1724]
 767              	.LVL60:
 768              	.LBB7:
 265:Src/can.c     **** 		for (uint8_t i = 0; i < can->tx_size; i++)
 769              		.loc 1 265 0
 770 0032 0023     		movs	r3, #0
 771 0034 08E0     		b	.L58
 772              	.LVL61:
 773              	.L59:
 266:Src/can.c     **** 		{
 267:Src/can.c     **** 			can->fifo.txNormal[can->fifo.txHeadNormal].data[i] = can->dataTx[i];
 774              		.loc 1 267 0 discriminator 3
 775 0036 C218     		adds	r2, r0, r3
 776 0038 117B     		ldrb	r1, [r2, #12]	@ zero_extendqisi2
 777 003a 00EB0412 		add	r2, r0, r4, lsl #4
 778 003e 1A44     		add	r2, r2, r3
 779 0040 82F8C016 		strb	r1, [r2, #1728]
 265:Src/can.c     **** 		for (uint8_t i = 0; i < can->tx_size; i++)
 780              		.loc 1 265 0 discriminator 3
 781 0044 0133     		adds	r3, r3, #1
 782              	.LVL62:
 783 0046 DBB2     		uxtb	r3, r3
 784              	.LVL63:
 785              	.L58:
 265:Src/can.c     **** 		for (uint8_t i = 0; i < can->tx_size; i++)
 786              		.loc 1 265 0 is_stmt 0 discriminator 1
 787 0048 9D42     		cmp	r5, r3
 788 004a F4DC     		bgt	.L59
 789              	.LBE7:
 268:Src/can.c     **** 		}
 269:Src/can.c     **** 		can->fifo.txHeadNormal = (can->fifo.txHeadNormal + 1) % fifoLengthN;
 790              		.loc 1 269 0 is_stmt 1
 791 004c 80F87260 		strb	r6, [r0, #114]
 270:Src/can.c     **** 		return 1;
 792              		.loc 1 270 0
 793 0050 0120     		movs	r0, #1
 794              	.LVL64:
 795              	.L57:
 271:Src/can.c     **** 	}
 272:Src/can.c     **** }
 796              		.loc 1 272 0
 797 0052 70BC     		pop	{r4, r5, r6}
 798              	.LCFI23:
 799              		.cfi_remember_state
 800              		.cfi_restore 6
 801              		.cfi_restore 5
 802              		.cfi_restore 4
 803              		.cfi_def_cfa_offset 0
 804 0054 7047     		bx	lr
 805              	.LVL65:
 806              	.L60:
 807              	.LCFI24:
 808              		.cfi_restore_state
ARM GAS  /tmp/ccYPZlzD.s 			page 20


 259:Src/can.c     **** 	}
 809              		.loc 1 259 0
 810 0056 0020     		movs	r0, #0
 811              	.LVL66:
 812 0058 FBE7     		b	.L57
 813              	.L63:
 814 005a 00BF     		.align	2
 815              	.L62:
 816 005c 1F85EB51 		.word	1374389535
 817              		.cfi_endproc
 818              	.LFE153:
 820              		.section	.text.fifoTxDataCAN_high_push,"ax",%progbits
 821              		.align	1
 822              		.global	fifoTxDataCAN_high_push
 823              		.syntax unified
 824              		.thumb
 825              		.thumb_func
 826              		.fpu fpv5-d16
 828              	fifoTxDataCAN_high_push:
 829              	.LFB154:
 273:Src/can.c     **** uint8_t fifoTxDataCAN_high_push(canStruct *can)
 274:Src/can.c     **** {
 830              		.loc 1 274 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		@ link register save eliminated.
 835              	.LVL67:
 836 0000 70B4     		push	{r4, r5, r6}
 837              	.LCFI25:
 838              		.cfi_def_cfa_offset 12
 839              		.cfi_offset 4, -12
 840              		.cfi_offset 5, -8
 841              		.cfi_offset 6, -4
 275:Src/can.c     **** 	if ((can->fifo.txHeadHigh + 1) % fifoLengthH == can->fifo.txTailHigh)
 842              		.loc 1 275 0
 843 0002 90F87440 		ldrb	r4, [r0, #116]	@ zero_extendqisi2
 844 0006 631C     		adds	r3, r4, #1
 845 0008 144A     		ldr	r2, .L70
 846 000a 82FB0312 		smull	r1, r2, r2, r3
 847 000e DD17     		asrs	r5, r3, #31
 848 0010 C5EBA205 		rsb	r5, r5, r2, asr #2
 849 0014 05EB8505 		add	r5, r5, r5, lsl #2
 850 0018 6A00     		lsls	r2, r5, #1
 851 001a 9D1A     		subs	r5, r3, r2
 852 001c 90F87530 		ldrb	r3, [r0, #117]	@ zero_extendqisi2
 853 0020 9D42     		cmp	r5, r3
 854 0022 19D0     		beq	.L68
 276:Src/can.c     **** 	{
 277:Src/can.c     **** 		return 0;
 278:Src/can.c     **** 	}
 279:Src/can.c     **** 	else
 280:Src/can.c     **** 	{
 281:Src/can.c     **** 		can->fifo.txHigh[can->fifo.txHeadHigh].id = can->tx_id;
 855              		.loc 1 281 0
 856 0024 C26A     		ldr	r2, [r0, #44]
 857 0026 00EB0413 		add	r3, r0, r4, lsl #4
ARM GAS  /tmp/ccYPZlzD.s 			page 21


 858 002a C3F8F82C 		str	r2, [r3, #3320]
 282:Src/can.c     **** 		can->fifo.txHigh[can->fifo.txHeadHigh].size = can->tx_size;
 859              		.loc 1 282 0
 860 002e 0668     		ldr	r6, [r0]
 861 0030 C3F8FC6C 		str	r6, [r3, #3324]
 862              	.LVL68:
 863              	.LBB8:
 283:Src/can.c     **** 		for (uint8_t i = 0; i < can->tx_size; i++)
 864              		.loc 1 283 0
 865 0034 0023     		movs	r3, #0
 866 0036 08E0     		b	.L66
 867              	.LVL69:
 868              	.L67:
 284:Src/can.c     **** 		{
 285:Src/can.c     **** 			can->fifo.txHigh[can->fifo.txHeadHigh].data[i] = can->dataTx[i];
 869              		.loc 1 285 0 discriminator 3
 870 0038 C218     		adds	r2, r0, r3
 871 003a 117B     		ldrb	r1, [r2, #12]	@ zero_extendqisi2
 872 003c 00EB0412 		add	r2, r0, r4, lsl #4
 873 0040 1A44     		add	r2, r2, r3
 874 0042 82F8001D 		strb	r1, [r2, #3328]
 283:Src/can.c     **** 		for (uint8_t i = 0; i < can->tx_size; i++)
 875              		.loc 1 283 0 discriminator 3
 876 0046 0133     		adds	r3, r3, #1
 877              	.LVL70:
 878 0048 DBB2     		uxtb	r3, r3
 879              	.LVL71:
 880              	.L66:
 283:Src/can.c     **** 		for (uint8_t i = 0; i < can->tx_size; i++)
 881              		.loc 1 283 0 is_stmt 0 discriminator 1
 882 004a 9E42     		cmp	r6, r3
 883 004c F4DC     		bgt	.L67
 884              	.LBE8:
 286:Src/can.c     **** 		}
 287:Src/can.c     **** 		can->fifo.txHeadHigh = (can->fifo.txHeadHigh + 1) % fifoLengthH;
 885              		.loc 1 287 0 is_stmt 1
 886 004e 80F87450 		strb	r5, [r0, #116]
 288:Src/can.c     **** 		return 1;
 887              		.loc 1 288 0
 888 0052 0120     		movs	r0, #1
 889              	.LVL72:
 890              	.L65:
 289:Src/can.c     **** 	}
 290:Src/can.c     **** }
 891              		.loc 1 290 0
 892 0054 70BC     		pop	{r4, r5, r6}
 893              	.LCFI26:
 894              		.cfi_remember_state
 895              		.cfi_restore 6
 896              		.cfi_restore 5
 897              		.cfi_restore 4
 898              		.cfi_def_cfa_offset 0
 899 0056 7047     		bx	lr
 900              	.LVL73:
 901              	.L68:
 902              	.LCFI27:
 903              		.cfi_restore_state
ARM GAS  /tmp/ccYPZlzD.s 			page 22


 277:Src/can.c     **** 	}
 904              		.loc 1 277 0
 905 0058 0020     		movs	r0, #0
 906              	.LVL74:
 907 005a FBE7     		b	.L65
 908              	.L71:
 909              		.align	2
 910              	.L70:
 911 005c 67666666 		.word	1717986919
 912              		.cfi_endproc
 913              	.LFE154:
 915              		.section	.text.CAN_Send,"ax",%progbits
 916              		.align	1
 917              		.global	CAN_Send
 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 921              		.fpu fpv5-d16
 923              	CAN_Send:
 924              	.LFB143:
  25:Src/can.c     **** 	if (HAL_CAN_GetTxMailboxesFreeLevel(can->hcan) != 0)
 925              		.loc 1 25 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              	.LVL75:
 930 0000 38B5     		push	{r3, r4, r5, lr}
 931              	.LCFI28:
 932              		.cfi_def_cfa_offset 16
 933              		.cfi_offset 3, -16
 934              		.cfi_offset 4, -12
 935              		.cfi_offset 5, -8
 936              		.cfi_offset 14, -4
 937 0002 0446     		mov	r4, r0
 938 0004 0D46     		mov	r5, r1
  26:Src/can.c     **** 	{
 939              		.loc 1 26 0
 940 0006 006C     		ldr	r0, [r0, #64]
 941              	.LVL76:
 942 0008 FFF7FEFF 		bl	HAL_CAN_GetTxMailboxesFreeLevel
 943              	.LVL77:
 944 000c 38B9     		cbnz	r0, .L82
  46:Src/can.c     **** 		{
 945              		.loc 1 46 0
 946 000e E5B9     		cbnz	r5, .L75
  48:Src/can.c     **** 			{
 947              		.loc 1 48 0
 948 0010 226C     		ldr	r2, [r4, #64]
 949 0012 154B     		ldr	r3, .L86
 950 0014 9A42     		cmp	r2, r3
 951 0016 0AD0     		beq	.L83
  83:Src/can.c     **** }
 952              		.loc 1 83 0
 953 0018 0124     		movs	r4, #1
 954              	.LVL78:
 955              	.L74:
  84:Src/can.c     **** 
ARM GAS  /tmp/ccYPZlzD.s 			page 23


 956              		.loc 1 84 0
 957 001a 2046     		mov	r0, r4
 958 001c 38BD     		pop	{r3, r4, r5, pc}
 959              	.LVL79:
 960              	.L82:
  28:Src/can.c     **** 		{
 961              		.loc 1 28 0
 962 001e 2046     		mov	r0, r4
 963 0020 FFF7FEFF 		bl	CAN_Send_IT
 964              	.LVL80:
 965 0024 0446     		mov	r4, r0
 966              	.LVL81:
 967 0026 0028     		cmp	r0, #0
 968 0028 F7D0     		beq	.L74
  83:Src/can.c     **** }
 969              		.loc 1 83 0
 970 002a 0124     		movs	r4, #1
 971 002c F5E7     		b	.L74
 972              	.LVL82:
 973              	.L83:
  50:Src/can.c     **** 				{
 974              		.loc 1 50 0
 975 002e 2046     		mov	r0, r4
 976 0030 FFF7FEFF 		bl	fifoTxDataCAN_normal_push
 977              	.LVL83:
 978 0034 0446     		mov	r4, r0
 979              	.LVL84:
 980 0036 08B1     		cbz	r0, .L84
  83:Src/can.c     **** }
 981              		.loc 1 83 0
 982 0038 0124     		movs	r4, #1
 983 003a EEE7     		b	.L74
 984              	.L84:
  52:Src/can.c     **** 						&huart3, (uint8_t *)("Error while normal push\r\n"),
 985              		.loc 1 52 0
 986 003c 0A23     		movs	r3, #10
 987 003e 1922     		movs	r2, #25
 988 0040 0A49     		ldr	r1, .L86+4
 989 0042 0B48     		ldr	r0, .L86+8
 990 0044 FFF7FEFF 		bl	HAL_UART_Transmit
 991              	.LVL85:
  55:Src/can.c     **** 				}
 992              		.loc 1 55 0
 993 0048 E7E7     		b	.L74
 994              	.LVL86:
 995              	.L75:
  67:Src/can.c     **** 			{
 996              		.loc 1 67 0
 997 004a 226C     		ldr	r2, [r4, #64]
 998 004c 064B     		ldr	r3, .L86
 999 004e 9A42     		cmp	r2, r3
 1000 0050 01D0     		beq	.L85
  83:Src/can.c     **** }
 1001              		.loc 1 83 0
 1002 0052 0124     		movs	r4, #1
 1003              	.LVL87:
 1004 0054 E1E7     		b	.L74
ARM GAS  /tmp/ccYPZlzD.s 			page 24


 1005              	.LVL88:
 1006              	.L85:
  69:Src/can.c     **** 				{
 1007              		.loc 1 69 0
 1008 0056 2046     		mov	r0, r4
 1009 0058 FFF7FEFF 		bl	fifoTxDataCAN_high_push
 1010              	.LVL89:
 1011 005c 0446     		mov	r4, r0
 1012              	.LVL90:
 1013 005e 0028     		cmp	r0, #0
 1014 0060 DBD0     		beq	.L74
  83:Src/can.c     **** }
 1015              		.loc 1 83 0
 1016 0062 0124     		movs	r4, #1
 1017 0064 D9E7     		b	.L74
 1018              	.L87:
 1019 0066 00BF     		.align	2
 1020              	.L86:
 1021 0068 00000000 		.word	hcan1
 1022 006c 00000000 		.word	.LC0
 1023 0070 00000000 		.word	huart3
 1024              		.cfi_endproc
 1025              	.LFE143:
 1027              		.comm	txt,100,4
 1028              		.comm	can3,3484,4
 1029              		.comm	can1,3484,4
 1030              		.section	.rodata.CAN_Send.str1.4,"aMS",%progbits,1
 1031              		.align	2
 1032              	.LC0:
 1033 0000 4572726F 		.ascii	"Error while normal push\015\012\000"
 1033      72207768 
 1033      696C6520 
 1033      6E6F726D 
 1033      616C2070 
 1034              		.text
 1035              	.Letext0:
 1036              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1037              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 1038              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 1039              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 1040              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1041              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1042              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1043              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1044              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 1045              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1046              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1047              		.file 13 "Inc/can.h"
 1048              		.file 14 "/usr/include/newlib/sys/lock.h"
 1049              		.file 15 "/usr/include/newlib/sys/_types.h"
 1050              		.file 16 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1051              		.file 17 "/usr/include/newlib/sys/reent.h"
ARM GAS  /tmp/ccYPZlzD.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can.c
     /tmp/ccYPZlzD.s:17     .text.CAN_Send_IT:0000000000000000 $t
     /tmp/ccYPZlzD.s:24     .text.CAN_Send_IT:0000000000000000 CAN_Send_IT
     /tmp/ccYPZlzD.s:110    .text.CAN_Send_Bck:0000000000000000 $t
     /tmp/ccYPZlzD.s:117    .text.CAN_Send_Bck:0000000000000000 CAN_Send_Bck
     /tmp/ccYPZlzD.s:176    .text.CAN_initialization:0000000000000000 $t
     /tmp/ccYPZlzD.s:183    .text.CAN_initialization:0000000000000000 CAN_initialization
     /tmp/ccYPZlzD.s:274    .text.can_init:0000000000000000 $t
     /tmp/ccYPZlzD.s:281    .text.can_init:0000000000000000 can_init
     /tmp/ccYPZlzD.s:300    .text.can_init:000000000000000c $d
                            *COM*:0000000000000d9c can1
     /tmp/ccYPZlzD.s:305    .text.report_error_can1:0000000000000000 $t
     /tmp/ccYPZlzD.s:312    .text.report_error_can1:0000000000000000 report_error_can1
     /tmp/ccYPZlzD.s:324    .text.report_error_can3:0000000000000000 $t
     /tmp/ccYPZlzD.s:331    .text.report_error_can3:0000000000000000 report_error_can3
     /tmp/ccYPZlzD.s:343    .text.fifoRxDataCAN_pop:0000000000000000 $t
     /tmp/ccYPZlzD.s:350    .text.fifoRxDataCAN_pop:0000000000000000 fifoRxDataCAN_pop
     /tmp/ccYPZlzD.s:435    .text.fifoRxDataCAN_pop:0000000000000058 $d
     /tmp/ccYPZlzD.s:440    .text.fifoRxDataCAN_push:0000000000000000 $t
     /tmp/ccYPZlzD.s:447    .text.fifoRxDataCAN_push:0000000000000000 fifoRxDataCAN_push
     /tmp/ccYPZlzD.s:529    .text.fifoRxDataCAN_push:0000000000000058 $d
     /tmp/ccYPZlzD.s:534    .text.fifoTxDataCAN_normal_pop:0000000000000000 $t
     /tmp/ccYPZlzD.s:541    .text.fifoTxDataCAN_normal_pop:0000000000000000 fifoTxDataCAN_normal_pop
     /tmp/ccYPZlzD.s:625    .text.fifoTxDataCAN_normal_pop:000000000000005c $d
     /tmp/ccYPZlzD.s:630    .text.fifoTxDataCAN_high_pop:0000000000000000 $t
     /tmp/ccYPZlzD.s:637    .text.fifoTxDataCAN_high_pop:0000000000000000 fifoTxDataCAN_high_pop
     /tmp/ccYPZlzD.s:722    .text.fifoTxDataCAN_high_pop:0000000000000060 $d
     /tmp/ccYPZlzD.s:727    .text.fifoTxDataCAN_normal_push:0000000000000000 $t
     /tmp/ccYPZlzD.s:734    .text.fifoTxDataCAN_normal_push:0000000000000000 fifoTxDataCAN_normal_push
     /tmp/ccYPZlzD.s:816    .text.fifoTxDataCAN_normal_push:000000000000005c $d
     /tmp/ccYPZlzD.s:821    .text.fifoTxDataCAN_high_push:0000000000000000 $t
     /tmp/ccYPZlzD.s:828    .text.fifoTxDataCAN_high_push:0000000000000000 fifoTxDataCAN_high_push
     /tmp/ccYPZlzD.s:911    .text.fifoTxDataCAN_high_push:000000000000005c $d
     /tmp/ccYPZlzD.s:916    .text.CAN_Send:0000000000000000 $t
     /tmp/ccYPZlzD.s:923    .text.CAN_Send:0000000000000000 CAN_Send
     /tmp/ccYPZlzD.s:1021   .text.CAN_Send:0000000000000068 $d
                            *COM*:0000000000000064 txt
                            *COM*:0000000000000d9c can3
     /tmp/ccYPZlzD.s:1031   .rodata.CAN_Send.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_CAN_AddTxMessage
HAL_CAN_ConfigFilter
HAL_CAN_ActivateNotification
HAL_CAN_Start
HAL_CAN_GetTxMailboxesFreeLevel
HAL_UART_Transmit
hcan1
huart3
