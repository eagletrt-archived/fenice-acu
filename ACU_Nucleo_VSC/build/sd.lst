ARM GAS  /tmp/ccN3vLYJ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"sd.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.rodata.init_sd.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC0:
  19 0000 6D6F756E 		.ascii	"mounted, opened\015\012\000"
  19      7465642C 
  19      206F7065 
  19      6E65640D 
  19      0A00
  20 0012 0000     		.align	2
  21              	.LC1:
  22 0014 46494C45 		.ascii	"FILENAME RES VAL: %d\000"
  22      4E414D45 
  22      20524553 
  22      2056414C 
  22      3A202564 
  23 0029 000000   		.align	2
  24              	.LC2:
  25 002c 6C6F675F 		.ascii	"log_%d \000"
  25      25642000 
  26              		.align	2
  27              	.LC3:
  28 0034 64656661 		.ascii	"default.txt\000"
  28      756C742E 
  28      74787400 
  29              		.align	2
  30              	.LC4:
  31 0040 63726561 		.ascii	"created -> default.txt\015\012\000"
  31      74656420 
  31      2D3E2064 
  31      65666175 
  31      6C742E74 
  32 0059 000000   		.align	2
  33              	.LC5:
  34 005c 6C6F675F 		.ascii	"log_0 \015\012\000"
  34      30200D0A 
  34      00
  35 0065 000000   		.align	2
  36              	.LC6:
  37 0068 4C6F675F 		.ascii	"Log_0.txt\000"
  37      302E7478 
  37      7400
  38 0072 0000     		.align	2
ARM GAS  /tmp/ccN3vLYJ.s 			page 2


  39              	.LC7:
  40 0074 0D0A6372 		.ascii	"\015\012created -> Log_0\015\012\000"
  40      65617465 
  40      64202D3E 
  40      204C6F67 
  40      5F300D0A 
  41 0089 000000   		.align	2
  42              	.LC8:
  43 008c 6C6F675F 		.ascii	"log_%d \015\012\000"
  43      2564200D 
  43      0A00
  44 0096 0000     		.align	2
  45              	.LC9:
  46 0098 4C6F675F 		.ascii	"Log_%d.txt\000"
  46      25642E74 
  46      787400
  47 00a3 00       		.align	2
  48              	.LC10:
  49 00a4 0D0A6372 		.ascii	"\015\012created -> \000"
  49      65617465 
  49      64202D3E 
  49      2000
  50 00b2 0000     		.align	2
  51              	.LC11:
  52 00b4 0D0A00   		.ascii	"\015\012\000"
  53 00b7 00       		.align	2
  54              	.LC12:
  55 00b8 66696C65 		.ascii	"files closed\015\012\000"
  55      7320636C 
  55      6F736564 
  55      0D0A00
  56 00c7 00       		.align	2
  57              	.LC13:
  58 00c8 504F5420 		.ascii	"POT FILE VAL: %d\015\012\000"
  58      46494C45 
  58      2056414C 
  58      3A202564 
  58      0D0A00
  59 00db 00       		.align	2
  60              	.LC14:
  61 00dc 504F5420 		.ascii	"POT FILE VAL2: %d\015\012\000"
  61      46494C45 
  61      2056414C 
  61      323A2025 
  61      640D0A00 
  62              		.align	2
  63              	.LC15:
  64 00f0 30303030 		.ascii	"0000\015\0124096\015\0120000\015\0124096\000"
  64      0D0A3430 
  64      39360D0A 
  64      30303030 
  64      0D0A3430 
  65              		.section	.text.init_sd,"ax",%progbits
  66              		.align	1
  67              		.global	init_sd
  68              		.arch armv7e-m
  69              		.syntax unified
ARM GAS  /tmp/ccN3vLYJ.s 			page 3


  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv5-d16
  74              	init_sd:
  75              	.LFB144:
  76              		.file 1 "Src/sd.c"
   1:Src/sd.c      **** #include "global_variables.h"
   2:Src/sd.c      **** #include "fatfs.h"
   3:Src/sd.c      **** #include "string.h"
   4:Src/sd.c      **** #include "stdio.h"
   5:Src/sd.c      **** #include "sd.h"
   6:Src/sd.c      **** 
   7:Src/sd.c      **** 
   8:Src/sd.c      **** //--- RESULT VARIABLES FOR SD ---//
   9:Src/sd.c      **** FRESULT res_open;
  10:Src/sd.c      **** FRESULT res_mount;
  11:Src/sd.c      **** 
  12:Src/sd.c      **** //--- FILE OBJECT FOR SD ---//
  13:Src/sd.c      **** FIL loggingFile;
  14:Src/sd.c      **** FIL pot_values_f;
  15:Src/sd.c      **** FIL log_names_f;
  16:Src/sd.c      **** 
  17:Src/sd.c      **** TCHAR message[256];
  18:Src/sd.c      **** char name_txt[] = "name.txt";
  19:Src/sd.c      **** char filename_log[50];
  20:Src/sd.c      **** char filename_pot[] = "potV.txt";
  21:Src/sd.c      **** char txt[2000];
  22:Src/sd.c      **** 
  23:Src/sd.c      **** int max_files = 100;
  24:Src/sd.c      **** UINT byteswritten;
  25:Src/sd.c      **** int mount_ok = 0;
  26:Src/sd.c      **** int msg_counter = 0;
  27:Src/sd.c      **** int msg_index = 0;
  28:Src/sd.c      **** 
  29:Src/sd.c      **** int bytes_read;
  30:Src/sd.c      **** 
  31:Src/sd.c      **** char *pointer;
  32:Src/sd.c      **** char log_names[1100];
  33:Src/sd.c      **** 
  34:Src/sd.c      **** uint8_t pot_values_loaded = 0;
  35:Src/sd.c      **** 
  36:Src/sd.c      **** int successfull_opening = 0;
  37:Src/sd.c      **** 
  38:Src/sd.c      **** //----------------------------------------//
  39:Src/sd.c      **** //------------- FUNCTIONS ----------------//
  40:Src/sd.c      **** //----------------------------------------//
  41:Src/sd.c      **** 
  42:Src/sd.c      **** void init_sd(){
  77              		.loc 1 42 15 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 280
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81 0000 70B5     		push	{r4, r5, r6, lr}
  82              	.LCFI0:
  83              		.cfi_def_cfa_offset 16
  84              		.cfi_offset 4, -16
  85              		.cfi_offset 5, -12
ARM GAS  /tmp/ccN3vLYJ.s 			page 4


  86              		.cfi_offset 6, -8
  87              		.cfi_offset 14, -4
  88 0002 C6B0     		sub	sp, sp, #280
  89              	.LCFI1:
  90              		.cfi_def_cfa_offset 296
  43:Src/sd.c      ****     res_mount = f_mount(&SDFatFS, (TCHAR const*)SDPath, 1); //try to mount sd card
  91              		.loc 1 43 5 view .LVU1
  92              		.loc 1 43 17 is_stmt 0 view .LVU2
  93 0004 0122     		movs	r2, #1
  94 0006 9949     		ldr	r1, .L18
  95 0008 9948     		ldr	r0, .L18+4
  96 000a FFF7FEFF 		bl	f_mount
  97              	.LVL0:
  98              		.loc 1 43 15 view .LVU3
  99 000e 994B     		ldr	r3, .L18+8
 100 0010 1870     		strb	r0, [r3]
  44:Src/sd.c      **** 
  45:Src/sd.c      **** 	if (res_mount == FR_OK) {
 101              		.loc 1 45 2 is_stmt 1 view .LVU4
 102              		.loc 1 45 5 is_stmt 0 view .LVU5
 103 0012 20B1     		cbz	r0, .L13
  46:Src/sd.c      **** 		res_open = f_open(&log_names_f, (TCHAR const*)&name_txt, FA_OPEN_ALWAYS | FA_READ ); //open "name
  47:Src/sd.c      **** 		if(res_open == 0)f_read(&log_names_f, log_names, 1099, (void*)&bytes_read); //read into file "nam
  48:Src/sd.c      **** 
  49:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"mounted, opened\r\n",strlen("mounted, opened\r\n"),10);
  50:Src/sd.c      **** 
  51:Src/sd.c      **** 		sprintf(txt, "FILENAME RES VAL: %d",(int)res_open);
  52:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
  53:Src/sd.c      **** 		/*sprintf(txt, "%s\r\n", log_names);
  54:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);*/
  55:Src/sd.c      **** 
  56:Src/sd.c      **** 		char name[256];
  57:Src/sd.c      **** 
  58:Src/sd.c      **** 		f_close(&log_names_f); // close the file
  59:Src/sd.c      **** 		f_open(&log_names_f, (TCHAR const*)&name_txt, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_WRITE );
  60:Src/sd.c      **** 
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
  62:Src/sd.c      **** 
  63:Src/sd.c      **** 			sprintf(name, "log_%d ", i);
  64:Src/sd.c      **** 
  65:Src/sd.c      **** 			pointer = strstr(log_names, name);
  66:Src/sd.c      **** 
  67:Src/sd.c      **** 			if(i == max_files){
  68:Src/sd.c      **** 
  69:Src/sd.c      **** 				sprintf(filename_log,"default.txt");
  70:Src/sd.c      **** 
  71:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename_log, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | F
  72:Src/sd.c      **** 				f_close(&loggingFile);
  73:Src/sd.c      **** 				//f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_
  74:Src/sd.c      **** 
  75:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"created -> default.txt\r\n",strlen("created -> default.txt
  76:Src/sd.c      **** 
  77:Src/sd.c      **** 				successfull_opening = 1;
  78:Src/sd.c      **** 
  79:Src/sd.c      **** 				break;
  80:Src/sd.c      **** 			}
  81:Src/sd.c      **** 
ARM GAS  /tmp/ccN3vLYJ.s 			page 5


  82:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
  83:Src/sd.c      **** 
  84:Src/sd.c      **** 				sprintf(filename_log, "log_0 \r\n");
  85:Src/sd.c      **** 
  86:Src/sd.c      **** 				f_write(&log_names_f, filename_log, strlen(filename_log), &byteswritten);
  87:Src/sd.c      **** 				f_close(&log_names_f);
  88:Src/sd.c      **** 
  89:Src/sd.c      **** 				sprintf(filename_log, "Log_0.txt");
  90:Src/sd.c      **** 
  91:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename_log, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | F
  92:Src/sd.c      **** 				f_close(&loggingFile);
  93:Src/sd.c      **** 				//f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_
  94:Src/sd.c      **** 
  95:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> Log_0\r\n",strlen("\r\ncreated -> Log_0\r\n
  96:Src/sd.c      **** 
  97:Src/sd.c      **** 				successfull_opening = 1;
  98:Src/sd.c      **** 
  99:Src/sd.c      **** 				break;
 100:Src/sd.c      **** 			}
 101:Src/sd.c      **** 			if(pointer == NULL){
 102:Src/sd.c      **** 
 103:Src/sd.c      **** 				sprintf(filename_log, "log_%d \r\n", i);
 104:Src/sd.c      **** 
 105:Src/sd.c      **** 				f_write(&log_names_f, filename_log, strlen(filename_log), (void*)&byteswritten);
 106:Src/sd.c      **** 				f_close(&log_names_f);
 107:Src/sd.c      **** 
 108:Src/sd.c      **** 				sprintf(filename_log, "Log_%d.txt", i);
 109:Src/sd.c      **** 
 110:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename_log, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | F
 111:Src/sd.c      **** 				f_close(&loggingFile);
 112:Src/sd.c      **** 				//f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_
 113:Src/sd.c      **** 
 114:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> ",strlen("\r\ncreated -> "),10);
 115:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename_log, strlen(filename_log), 10);
 116:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) "\r\n", strlen("\r\n"),10);
 117:Src/sd.c      **** 
 118:Src/sd.c      **** 				successfull_opening = 1;
 119:Src/sd.c      **** 
 120:Src/sd.c      **** 				break;
 121:Src/sd.c      **** 			}
 122:Src/sd.c      **** 		}
 123:Src/sd.c      **** 
 124:Src/sd.c      **** 		mount_ok = 1;
 125:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"files closed\r\n",strlen("files closed\r\n"),10);
 126:Src/sd.c      **** 
 127:Src/sd.c      **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_EXISTING | FA_READ ); //ope
 128:Src/sd.c      **** 		char pot_values[100];
 129:Src/sd.c      **** 		sprintf(txt, "POT FILE VAL: %d\r\n",(int)res_open);
 130:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 131:Src/sd.c      **** 		if(res_open == FR_OK){
 132:Src/sd.c      **** 			
 133:Src/sd.c      **** 			/*HAL_UART_Transmit(&huart3,(uint8_t*)"\r\nPOT FILE OPEND\r\n",strlen("\r\nPOT FILE OPEND\r\n"),
 134:Src/sd.c      **** 			f_read(&pot_values_f, pot_values, 100, (void*)&bytes_read); //read into file "pot_values.txt" an
 135:Src/sd.c      **** 			char val_pot[6];
 136:Src/sd.c      **** 			val_pot[5] = '\0';
 137:Src/sd.c      **** 			for(int i=0; i<5 ; i++){
 138:Src/sd.c      **** 				val_pot[i] = pot_values[i];
ARM GAS  /tmp/ccN3vLYJ.s 			page 6


 139:Src/sd.c      **** 			}
 140:Src/sd.c      **** 			//accel.max_val = atoi(val_pot);
 141:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 142:Src/sd.c      **** 				val_pot[i] = pot_values[i+7];
 143:Src/sd.c      **** 			}
 144:Src/sd.c      **** 			//accel.min_val = atoi(val_pot);
 145:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 146:Src/sd.c      **** 				val_pot[i] = pot_values[i+14];
 147:Src/sd.c      **** 			}
 148:Src/sd.c      **** 			//brake.max_val = atoi(pot_values);
 149:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 150:Src/sd.c      **** 				val_pot[i] = pot_values[i+21];
 151:Src/sd.c      **** 			}
 152:Src/sd.c      **** 			//brake.min_val = atoi(pot_values);
 153:Src/sd.c      **** 			
 154:Src/sd.c      **** 			pot_values_loaded = 1;*/
 155:Src/sd.c      **** 
 156:Src/sd.c      **** 		}else if(res_open == FR_NO_FILE){
 157:Src/sd.c      **** 			res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_CREATE_NEW | FA_WRITE );
 158:Src/sd.c      **** 			sprintf(txt, "POT FILE VAL2: %d\r\n",(int)res_open);
 159:Src/sd.c      **** 			HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 160:Src/sd.c      **** 			if(res_open == FR_OK){
 161:Src/sd.c      **** 
 162:Src/sd.c      **** 				char local_txt[] = "0000\r\n4096\r\n0000\r\n4096";
 163:Src/sd.c      **** 				f_write(&pot_values_f,(TCHAR const*)&local_txt,strlen(local_txt), &byteswritten);
 164:Src/sd.c      **** 				f_close(&pot_values_f);
 165:Src/sd.c      **** 			}
 166:Src/sd.c      **** 		}
 167:Src/sd.c      **** 		f_close(&pot_values_f);
 168:Src/sd.c      **** 		
 169:Src/sd.c      **** 	}else {
 170:Src/sd.c      **** 		mount_ok = 0;
 104              		.loc 1 170 3 is_stmt 1 view .LVU6
 105              		.loc 1 170 12 is_stmt 0 view .LVU7
 106 0014 984B     		ldr	r3, .L18+12
 107 0016 0022     		movs	r2, #0
 108 0018 1A60     		str	r2, [r3]
 109              	.L1:
 171:Src/sd.c      **** 	}
 172:Src/sd.c      **** }...
 110              		.loc 1 172 1 view .LVU8
 111 001a 46B0     		add	sp, sp, #280
 112              	.LCFI2:
 113              		.cfi_remember_state
 114              		.cfi_def_cfa_offset 16
 115              		@ sp needed
 116 001c 70BD     		pop	{r4, r5, r6, pc}
 117              	.L13:
 118              	.LCFI3:
 119              		.cfi_restore_state
 120              	.LBB2:
  46:Src/sd.c      **** 		res_open = f_open(&log_names_f, (TCHAR const*)&name_txt, FA_OPEN_ALWAYS | FA_READ ); //open "name
 121              		.loc 1 46 3 is_stmt 1 view .LVU9
  46:Src/sd.c      **** 		res_open = f_open(&log_names_f, (TCHAR const*)&name_txt, FA_OPEN_ALWAYS | FA_READ ); //open "name
 122              		.loc 1 46 14 is_stmt 0 view .LVU10
 123 001e 1122     		movs	r2, #17
 124 0020 9649     		ldr	r1, .L18+16
ARM GAS  /tmp/ccN3vLYJ.s 			page 7


 125 0022 9748     		ldr	r0, .L18+20
 126 0024 FFF7FEFF 		bl	f_open
 127              	.LVL1:
  46:Src/sd.c      **** 		res_open = f_open(&log_names_f, (TCHAR const*)&name_txt, FA_OPEN_ALWAYS | FA_READ ); //open "name
 128              		.loc 1 46 12 view .LVU11
 129 0028 964B     		ldr	r3, .L18+24
 130 002a 1870     		strb	r0, [r3]
  47:Src/sd.c      **** 		if(res_open == 0)f_read(&log_names_f, log_names, 1099, (void*)&bytes_read); //read into file "nam
 131              		.loc 1 47 3 is_stmt 1 view .LVU12
  47:Src/sd.c      **** 		if(res_open == 0)f_read(&log_names_f, log_names, 1099, (void*)&bytes_read); //read into file "nam
 132              		.loc 1 47 5 is_stmt 0 view .LVU13
 133 002c 08B3     		cbz	r0, .L14
 134              	.L3:
  49:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"mounted, opened\r\n",strlen("mounted, opened\r\n"),10);
 135              		.loc 1 49 3 is_stmt 1 view .LVU14
 136 002e 964D     		ldr	r5, .L18+28
 137 0030 0A23     		movs	r3, #10
 138 0032 1122     		movs	r2, #17
 139 0034 9549     		ldr	r1, .L18+32
 140 0036 2846     		mov	r0, r5
 141 0038 FFF7FEFF 		bl	HAL_UART_Transmit
 142              	.LVL2:
  51:Src/sd.c      **** 		sprintf(txt, "FILENAME RES VAL: %d",(int)res_open);
 143              		.loc 1 51 3 view .LVU15
 144 003c 944C     		ldr	r4, .L18+36
 145 003e 914B     		ldr	r3, .L18+24
 146 0040 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 147 0042 9449     		ldr	r1, .L18+40
 148 0044 2046     		mov	r0, r4
 149 0046 FFF7FEFF 		bl	sprintf
 150              	.LVL3:
  52:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 151              		.loc 1 52 3 view .LVU16
  52:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 152              		.loc 1 52 43 is_stmt 0 view .LVU17
 153 004a 2046     		mov	r0, r4
 154 004c FFF7FEFF 		bl	strlen
 155              	.LVL4:
  52:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 156              		.loc 1 52 3 view .LVU18
 157 0050 6423     		movs	r3, #100
 158 0052 82B2     		uxth	r2, r0
 159 0054 2146     		mov	r1, r4
 160 0056 2846     		mov	r0, r5
 161 0058 FFF7FEFF 		bl	HAL_UART_Transmit
 162              	.LVL5:
  56:Src/sd.c      **** 		char name[256];
 163              		.loc 1 56 3 is_stmt 1 view .LVU19
  58:Src/sd.c      **** 		f_close(&log_names_f); // close the file
 164              		.loc 1 58 3 view .LVU20
 165 005c 884C     		ldr	r4, .L18+20
 166 005e 2046     		mov	r0, r4
 167 0060 FFF7FEFF 		bl	f_close
 168              	.LVL6:
  59:Src/sd.c      **** 		f_open(&log_names_f, (TCHAR const*)&name_txt, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_WRITE );
 169              		.loc 1 59 3 view .LVU21
 170 0064 3222     		movs	r2, #50
ARM GAS  /tmp/ccN3vLYJ.s 			page 8


 171 0066 8549     		ldr	r1, .L18+16
 172 0068 2046     		mov	r0, r4
 173 006a FFF7FEFF 		bl	f_open
 174              	.LVL7:
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 175              		.loc 1 61 3 view .LVU22
 176              	.LBB3:
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 177              		.loc 1 61 7 view .LVU23
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 178              		.loc 1 61 11 is_stmt 0 view .LVU24
 179 006e 0024     		movs	r4, #0
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 180              		.loc 1 61 3 view .LVU25
 181 0070 4BE0     		b	.L4
 182              	.LVL8:
 183              	.L14:
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 184              		.loc 1 61 3 view .LVU26
 185              	.LBE3:
  47:Src/sd.c      **** 		if(res_open == 0)f_read(&log_names_f, log_names, 1099, (void*)&bytes_read); //read into file "nam
 186              		.loc 1 47 20 is_stmt 1 discriminator 1 view .LVU27
 187 0072 894B     		ldr	r3, .L18+44
 188 0074 40F24B42 		movw	r2, #1099
 189 0078 8849     		ldr	r1, .L18+48
 190 007a 8148     		ldr	r0, .L18+20
 191 007c FFF7FEFF 		bl	f_read
 192              	.LVL9:
 193 0080 D5E7     		b	.L3
 194              	.LVL10:
 195              	.L17:
 196              	.LBB4:
  69:Src/sd.c      **** 				sprintf(filename_log,"default.txt");
 197              		.loc 1 69 5 view .LVU28
 198 0082 874C     		ldr	r4, .L18+52
 199              	.LVL11:
  69:Src/sd.c      **** 				sprintf(filename_log,"default.txt");
 200              		.loc 1 69 5 is_stmt 0 view .LVU29
 201 0084 874B     		ldr	r3, .L18+56
 202 0086 07CB     		ldmia	r3!, {r0, r1, r2}
 203 0088 2060     		str	r0, [r4]	@ unaligned
 204 008a 6160     		str	r1, [r4, #4]	@ unaligned
 205 008c A260     		str	r2, [r4, #8]	@ unaligned
  71:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename_log, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | F
 206              		.loc 1 71 5 is_stmt 1 view .LVU30
 207 008e 864D     		ldr	r5, .L18+60
 208 0090 3322     		movs	r2, #51
 209 0092 2146     		mov	r1, r4
 210 0094 2846     		mov	r0, r5
 211 0096 FFF7FEFF 		bl	f_open
 212              	.LVL12:
  72:Src/sd.c      **** 				f_close(&loggingFile);
 213              		.loc 1 72 5 view .LVU31
 214 009a 2846     		mov	r0, r5
 215 009c FFF7FEFF 		bl	f_close
 216              	.LVL13:
  75:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"created -> default.txt\r\n",strlen("created -> default.txt
ARM GAS  /tmp/ccN3vLYJ.s 			page 9


 217              		.loc 1 75 5 view .LVU32
 218 00a0 0A23     		movs	r3, #10
 219 00a2 1822     		movs	r2, #24
 220 00a4 8149     		ldr	r1, .L18+64
 221 00a6 7848     		ldr	r0, .L18+28
 222 00a8 FFF7FEFF 		bl	HAL_UART_Transmit
 223              	.LVL14:
  77:Src/sd.c      **** 				successfull_opening = 1;
 224              		.loc 1 77 5 view .LVU33
  77:Src/sd.c      **** 				successfull_opening = 1;
 225              		.loc 1 77 25 is_stmt 0 view .LVU34
 226 00ac 804B     		ldr	r3, .L18+68
 227 00ae 0122     		movs	r2, #1
 228 00b0 1A60     		str	r2, [r3]
  79:Src/sd.c      **** 				break;
 229              		.loc 1 79 5 is_stmt 1 view .LVU35
 230              	.L6:
 231              	.LBE4:
 124:Src/sd.c      **** 		mount_ok = 1;
 232              		.loc 1 124 3 view .LVU36
 124:Src/sd.c      **** 		mount_ok = 1;
 233              		.loc 1 124 12 is_stmt 0 view .LVU37
 234 00b2 0124     		movs	r4, #1
 235 00b4 704B     		ldr	r3, .L18+12
 236 00b6 1C60     		str	r4, [r3]
 125:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"files closed\r\n",strlen("files closed\r\n"),10);
 237              		.loc 1 125 3 is_stmt 1 view .LVU38
 238 00b8 734E     		ldr	r6, .L18+28
 239 00ba 0A23     		movs	r3, #10
 240 00bc 0E22     		movs	r2, #14
 241 00be 7D49     		ldr	r1, .L18+72
 242 00c0 3046     		mov	r0, r6
 243 00c2 FFF7FEFF 		bl	HAL_UART_Transmit
 244              	.LVL15:
 127:Src/sd.c      **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_EXISTING | FA_READ ); //ope
 245              		.loc 1 127 3 view .LVU39
 127:Src/sd.c      **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_EXISTING | FA_READ ); //ope
 246              		.loc 1 127 14 is_stmt 0 view .LVU40
 247 00c6 2246     		mov	r2, r4
 248 00c8 7B49     		ldr	r1, .L18+76
 249 00ca 7C48     		ldr	r0, .L18+80
 250 00cc FFF7FEFF 		bl	f_open
 251              	.LVL16:
 252 00d0 0246     		mov	r2, r0
 127:Src/sd.c      **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_EXISTING | FA_READ ); //ope
 253              		.loc 1 127 12 view .LVU41
 254 00d2 6C4D     		ldr	r5, .L18+24
 255 00d4 2870     		strb	r0, [r5]
 128:Src/sd.c      **** 		char pot_values[100];
 256              		.loc 1 128 3 is_stmt 1 view .LVU42
 129:Src/sd.c      **** 		sprintf(txt, "POT FILE VAL: %d\r\n",(int)res_open);
 257              		.loc 1 129 3 view .LVU43
 258 00d6 6E4C     		ldr	r4, .L18+36
 259 00d8 7949     		ldr	r1, .L18+84
 260 00da 2046     		mov	r0, r4
 261 00dc FFF7FEFF 		bl	sprintf
 262              	.LVL17:
ARM GAS  /tmp/ccN3vLYJ.s 			page 10


 130:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 263              		.loc 1 130 3 view .LVU44
 130:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 264              		.loc 1 130 43 is_stmt 0 view .LVU45
 265 00e0 2046     		mov	r0, r4
 266 00e2 FFF7FEFF 		bl	strlen
 267              	.LVL18:
 130:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 268              		.loc 1 130 3 view .LVU46
 269 00e6 6423     		movs	r3, #100
 270 00e8 82B2     		uxth	r2, r0
 271 00ea 2146     		mov	r1, r4
 272 00ec 3046     		mov	r0, r6
 273 00ee FFF7FEFF 		bl	HAL_UART_Transmit
 274              	.LVL19:
 131:Src/sd.c      **** 		if(res_open == FR_OK){
 275              		.loc 1 131 3 is_stmt 1 view .LVU47
 131:Src/sd.c      **** 		if(res_open == FR_OK){
 276              		.loc 1 131 15 is_stmt 0 view .LVU48
 277 00f2 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 131:Src/sd.c      **** 		if(res_open == FR_OK){
 278              		.loc 1 131 5 view .LVU49
 279 00f4 13B1     		cbz	r3, .L10
 156:Src/sd.c      **** 		}else if(res_open == FR_NO_FILE){
 280              		.loc 1 156 9 is_stmt 1 view .LVU50
 156:Src/sd.c      **** 		}else if(res_open == FR_NO_FILE){
 281              		.loc 1 156 11 is_stmt 0 view .LVU51
 282 00f6 042B     		cmp	r3, #4
 283 00f8 00F08680 		beq	.L15
 284              	.L10:
 167:Src/sd.c      **** 		f_close(&pot_values_f);
 285              		.loc 1 167 3 is_stmt 1 discriminator 1 view .LVU52
 286 00fc 6F48     		ldr	r0, .L18+80
 287 00fe FFF7FEFF 		bl	f_close
 288              	.LVL20:
 289              	.LBE2:
 290 0102 8AE7     		b	.L1
 291              	.LVL21:
 292              	.L7:
 293              	.LBB7:
 294              	.LBB5:
 101:Src/sd.c      **** 			if(pointer == NULL){
 295              		.loc 1 101 4 view .LVU53
 101:Src/sd.c      **** 			if(pointer == NULL){
 296              		.loc 1 101 6 is_stmt 0 view .LVU54
 297 0104 0028     		cmp	r0, #0
 298 0106 44D0     		beq	.L16
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 299              		.loc 1 61 33 is_stmt 1 discriminator 2 view .LVU55
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 300              		.loc 1 61 34 is_stmt 0 discriminator 2 view .LVU56
 301 0108 0134     		adds	r4, r4, #1
 302              	.LVL22:
 303              	.L4:
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 304              		.loc 1 61 18 is_stmt 1 discriminator 1 view .LVU57
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
ARM GAS  /tmp/ccN3vLYJ.s 			page 11


 305              		.loc 1 61 20 is_stmt 0 discriminator 1 view .LVU58
 306 010a 6E4B     		ldr	r3, .L18+88
 307 010c 1B68     		ldr	r3, [r3]
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 308              		.loc 1 61 3 discriminator 1 view .LVU59
 309 010e A342     		cmp	r3, r4
 310 0110 CFDD     		ble	.L6
  63:Src/sd.c      **** 			sprintf(name, "log_%d ", i);
 311              		.loc 1 63 4 is_stmt 1 view .LVU60
 312 0112 2246     		mov	r2, r4
 313 0114 6C49     		ldr	r1, .L18+92
 314 0116 06A8     		add	r0, sp, #24
 315 0118 FFF7FEFF 		bl	sprintf
 316              	.LVL23:
  65:Src/sd.c      **** 			pointer = strstr(log_names, name);
 317              		.loc 1 65 4 view .LVU61
  65:Src/sd.c      **** 			pointer = strstr(log_names, name);
 318              		.loc 1 65 14 is_stmt 0 view .LVU62
 319 011c 06A9     		add	r1, sp, #24
 320 011e 5F48     		ldr	r0, .L18+48
 321 0120 FFF7FEFF 		bl	strstr
 322              	.LVL24:
  65:Src/sd.c      **** 			pointer = strstr(log_names, name);
 323              		.loc 1 65 12 view .LVU63
 324 0124 694B     		ldr	r3, .L18+96
 325 0126 1860     		str	r0, [r3]
  67:Src/sd.c      **** 			if(i == max_files){
 326              		.loc 1 67 4 is_stmt 1 view .LVU64
  67:Src/sd.c      **** 			if(i == max_files){
 327              		.loc 1 67 9 is_stmt 0 view .LVU65
 328 0128 664B     		ldr	r3, .L18+88
 329 012a 1B68     		ldr	r3, [r3]
  67:Src/sd.c      **** 			if(i == max_files){
 330              		.loc 1 67 6 view .LVU66
 331 012c A342     		cmp	r3, r4
 332 012e A8D0     		beq	.L17
  82:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
 333              		.loc 1 82 4 is_stmt 1 view .LVU67
  82:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
 334              		.loc 1 82 6 is_stmt 0 view .LVU68
 335 0130 002C     		cmp	r4, #0
 336 0132 E7D1     		bne	.L7
  82:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
 337              		.loc 1 82 14 discriminator 1 view .LVU69
 338 0134 0028     		cmp	r0, #0
 339 0136 E5D1     		bne	.L7
  84:Src/sd.c      **** 				sprintf(filename_log, "log_0 \r\n");
 340              		.loc 1 84 5 is_stmt 1 view .LVU70
 341 0138 594C     		ldr	r4, .L18+52
 342              	.LVL25:
  84:Src/sd.c      **** 				sprintf(filename_log, "log_0 \r\n");
 343              		.loc 1 84 5 is_stmt 0 view .LVU71
 344 013a 654B     		ldr	r3, .L18+100
 345 013c 03CB     		ldmia	r3!, {r0, r1}
 346 013e 2060     		str	r0, [r4]	@ unaligned
 347 0140 6160     		str	r1, [r4, #4]	@ unaligned
 348 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccN3vLYJ.s 			page 12


 349 0144 2372     		strb	r3, [r4, #8]
  86:Src/sd.c      **** 				f_write(&log_names_f, filename_log, strlen(filename_log), &byteswritten);
 350              		.loc 1 86 5 is_stmt 1 view .LVU72
 351 0146 2046     		mov	r0, r4
 352 0148 FFF7FEFF 		bl	strlen
 353              	.LVL26:
 354 014c 0246     		mov	r2, r0
 355 014e 4C4D     		ldr	r5, .L18+20
 356 0150 604B     		ldr	r3, .L18+104
 357 0152 2146     		mov	r1, r4
 358 0154 2846     		mov	r0, r5
 359 0156 FFF7FEFF 		bl	f_write
 360              	.LVL27:
  87:Src/sd.c      **** 				f_close(&log_names_f);
 361              		.loc 1 87 5 view .LVU73
 362 015a 2846     		mov	r0, r5
 363 015c FFF7FEFF 		bl	f_close
 364              	.LVL28:
  89:Src/sd.c      **** 				sprintf(filename_log, "Log_0.txt");
 365              		.loc 1 89 5 view .LVU74
 366 0160 5D4B     		ldr	r3, .L18+108
 367 0162 03CB     		ldmia	r3!, {r0, r1}
 368 0164 2060     		str	r0, [r4]	@ unaligned
 369 0166 6160     		str	r1, [r4, #4]	@ unaligned
 370 0168 1B88     		ldrh	r3, [r3]	@ unaligned
 371 016a 2381     		strh	r3, [r4, #8]	@ unaligned
  91:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename_log, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | F
 372              		.loc 1 91 5 view .LVU75
 373 016c 4E4D     		ldr	r5, .L18+60
 374 016e 3322     		movs	r2, #51
 375 0170 2146     		mov	r1, r4
 376 0172 2846     		mov	r0, r5
 377 0174 FFF7FEFF 		bl	f_open
 378              	.LVL29:
  92:Src/sd.c      **** 				f_close(&loggingFile);
 379              		.loc 1 92 5 view .LVU76
 380 0178 2846     		mov	r0, r5
 381 017a FFF7FEFF 		bl	f_close
 382              	.LVL30:
  95:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> Log_0\r\n",strlen("\r\ncreated -> Log_0\r\n
 383              		.loc 1 95 5 view .LVU77
 384 017e 0A23     		movs	r3, #10
 385 0180 1422     		movs	r2, #20
 386 0182 5649     		ldr	r1, .L18+112
 387 0184 4048     		ldr	r0, .L18+28
 388 0186 FFF7FEFF 		bl	HAL_UART_Transmit
 389              	.LVL31:
  97:Src/sd.c      **** 				successfull_opening = 1;
 390              		.loc 1 97 5 view .LVU78
  97:Src/sd.c      **** 				successfull_opening = 1;
 391              		.loc 1 97 25 is_stmt 0 view .LVU79
 392 018a 494B     		ldr	r3, .L18+68
 393 018c 0122     		movs	r2, #1
 394 018e 1A60     		str	r2, [r3]
  99:Src/sd.c      **** 				break;
 395              		.loc 1 99 5 is_stmt 1 view .LVU80
 396 0190 8FE7     		b	.L6
ARM GAS  /tmp/ccN3vLYJ.s 			page 13


 397              	.LVL32:
 398              	.L16:
 103:Src/sd.c      **** 				sprintf(filename_log, "log_%d \r\n", i);
 399              		.loc 1 103 5 view .LVU81
 400 0192 434D     		ldr	r5, .L18+52
 401 0194 2246     		mov	r2, r4
 402 0196 5249     		ldr	r1, .L18+116
 403 0198 2846     		mov	r0, r5
 404 019a FFF7FEFF 		bl	sprintf
 405              	.LVL33:
 105:Src/sd.c      **** 				f_write(&log_names_f, filename_log, strlen(filename_log), (void*)&byteswritten);
 406              		.loc 1 105 5 view .LVU82
 407 019e 2846     		mov	r0, r5
 408 01a0 FFF7FEFF 		bl	strlen
 409              	.LVL34:
 410 01a4 0246     		mov	r2, r0
 411 01a6 364E     		ldr	r6, .L18+20
 412 01a8 4A4B     		ldr	r3, .L18+104
 413 01aa 2946     		mov	r1, r5
 414 01ac 3046     		mov	r0, r6
 415 01ae FFF7FEFF 		bl	f_write
 416              	.LVL35:
 106:Src/sd.c      **** 				f_close(&log_names_f);
 417              		.loc 1 106 5 view .LVU83
 418 01b2 3046     		mov	r0, r6
 419 01b4 FFF7FEFF 		bl	f_close
 420              	.LVL36:
 108:Src/sd.c      **** 				sprintf(filename_log, "Log_%d.txt", i);
 421              		.loc 1 108 5 view .LVU84
 422 01b8 2246     		mov	r2, r4
 423 01ba 4A49     		ldr	r1, .L18+120
 424 01bc 2846     		mov	r0, r5
 425 01be FFF7FEFF 		bl	sprintf
 426              	.LVL37:
 110:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename_log, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | F
 427              		.loc 1 110 5 view .LVU85
 428 01c2 394C     		ldr	r4, .L18+60
 429              	.LVL38:
 110:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename_log, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | F
 430              		.loc 1 110 5 is_stmt 0 view .LVU86
 431 01c4 3322     		movs	r2, #51
 432 01c6 2946     		mov	r1, r5
 433 01c8 2046     		mov	r0, r4
 434 01ca FFF7FEFF 		bl	f_open
 435              	.LVL39:
 111:Src/sd.c      **** 				f_close(&loggingFile);
 436              		.loc 1 111 5 is_stmt 1 view .LVU87
 437 01ce 2046     		mov	r0, r4
 438 01d0 FFF7FEFF 		bl	f_close
 439              	.LVL40:
 114:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> ",strlen("\r\ncreated -> "),10);
 440              		.loc 1 114 5 view .LVU88
 441 01d4 2C4C     		ldr	r4, .L18+28
 442 01d6 0A23     		movs	r3, #10
 443 01d8 0D22     		movs	r2, #13
 444 01da 4349     		ldr	r1, .L18+124
 445 01dc 2046     		mov	r0, r4
ARM GAS  /tmp/ccN3vLYJ.s 			page 14


 446 01de FFF7FEFF 		bl	HAL_UART_Transmit
 447              	.LVL41:
 115:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename_log, strlen(filename_log), 10);
 448              		.loc 1 115 5 view .LVU89
 115:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename_log, strlen(filename_log), 10);
 449              		.loc 1 115 56 is_stmt 0 view .LVU90
 450 01e2 2846     		mov	r0, r5
 451 01e4 FFF7FEFF 		bl	strlen
 452              	.LVL42:
 115:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename_log, strlen(filename_log), 10);
 453              		.loc 1 115 5 view .LVU91
 454 01e8 0A23     		movs	r3, #10
 455 01ea 82B2     		uxth	r2, r0
 456 01ec 2946     		mov	r1, r5
 457 01ee 2046     		mov	r0, r4
 458 01f0 FFF7FEFF 		bl	HAL_UART_Transmit
 459              	.LVL43:
 116:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) "\r\n", strlen("\r\n"),10);
 460              		.loc 1 116 5 is_stmt 1 view .LVU92
 461 01f4 0A23     		movs	r3, #10
 462 01f6 0222     		movs	r2, #2
 463 01f8 3C49     		ldr	r1, .L18+128
 464 01fa 2046     		mov	r0, r4
 465 01fc FFF7FEFF 		bl	HAL_UART_Transmit
 466              	.LVL44:
 118:Src/sd.c      **** 				successfull_opening = 1;
 467              		.loc 1 118 5 view .LVU93
 118:Src/sd.c      **** 				successfull_opening = 1;
 468              		.loc 1 118 25 is_stmt 0 view .LVU94
 469 0200 2B4B     		ldr	r3, .L18+68
 470 0202 0122     		movs	r2, #1
 471 0204 1A60     		str	r2, [r3]
 120:Src/sd.c      **** 				break;
 472              		.loc 1 120 5 is_stmt 1 view .LVU95
 473 0206 54E7     		b	.L6
 474              	.L15:
 120:Src/sd.c      **** 				break;
 475              		.loc 1 120 5 is_stmt 0 view .LVU96
 476              	.LBE5:
 157:Src/sd.c      **** 			res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_CREATE_NEW | FA_WRITE );
 477              		.loc 1 157 4 is_stmt 1 view .LVU97
 157:Src/sd.c      **** 			res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_CREATE_NEW | FA_WRITE );
 478              		.loc 1 157 15 is_stmt 0 view .LVU98
 479 0208 0622     		movs	r2, #6
 480 020a 2B49     		ldr	r1, .L18+76
 481 020c 2B48     		ldr	r0, .L18+80
 482 020e FFF7FEFF 		bl	f_open
 483              	.LVL45:
 484 0212 0246     		mov	r2, r0
 157:Src/sd.c      **** 			res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_CREATE_NEW | FA_WRITE );
 485              		.loc 1 157 13 view .LVU99
 486 0214 2870     		strb	r0, [r5]
 158:Src/sd.c      **** 			sprintf(txt, "POT FILE VAL2: %d\r\n",(int)res_open);
 487              		.loc 1 158 4 is_stmt 1 view .LVU100
 488 0216 3649     		ldr	r1, .L18+132
 489 0218 2046     		mov	r0, r4
 490 021a FFF7FEFF 		bl	sprintf
ARM GAS  /tmp/ccN3vLYJ.s 			page 15


 491              	.LVL46:
 159:Src/sd.c      **** 			HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 492              		.loc 1 159 4 view .LVU101
 159:Src/sd.c      **** 			HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 493              		.loc 1 159 44 is_stmt 0 view .LVU102
 494 021e 2046     		mov	r0, r4
 495 0220 FFF7FEFF 		bl	strlen
 496              	.LVL47:
 159:Src/sd.c      **** 			HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 497              		.loc 1 159 4 view .LVU103
 498 0224 6423     		movs	r3, #100
 499 0226 82B2     		uxth	r2, r0
 500 0228 2146     		mov	r1, r4
 501 022a 3046     		mov	r0, r6
 502 022c FFF7FEFF 		bl	HAL_UART_Transmit
 503              	.LVL48:
 160:Src/sd.c      **** 			if(res_open == FR_OK){
 504              		.loc 1 160 4 is_stmt 1 view .LVU104
 160:Src/sd.c      **** 			if(res_open == FR_OK){
 505              		.loc 1 160 16 is_stmt 0 view .LVU105
 506 0230 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 160:Src/sd.c      **** 			if(res_open == FR_OK){
 507              		.loc 1 160 6 view .LVU106
 508 0232 002B     		cmp	r3, #0
 509 0234 7FF462AF 		bne	.L10
 510              	.LBB6:
 162:Src/sd.c      **** 				char local_txt[] = "0000\r\n4096\r\n0000\r\n4096";
 511              		.loc 1 162 5 is_stmt 1 discriminator 2 view .LVU107
 162:Src/sd.c      **** 				char local_txt[] = "0000\r\n4096\r\n0000\r\n4096";
 512              		.loc 1 162 10 is_stmt 0 discriminator 2 view .LVU108
 513 0238 6C46     		mov	r4, sp
 514 023a 2E4D     		ldr	r5, .L18+136
 515 023c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 516 023e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 517 0240 95E80300 		ldm	r5, {r0, r1}
 518 0244 44F8040B 		str	r0, [r4], #4
 519 0248 24F8021B 		strh	r1, [r4], #2	@ movhi
 520 024c 090C     		lsrs	r1, r1, #16
 521 024e 2170     		strb	r1, [r4]
 163:Src/sd.c      **** 				f_write(&pot_values_f,(TCHAR const*)&local_txt,strlen(local_txt), &byteswritten);
 522              		.loc 1 163 5 is_stmt 1 discriminator 2 view .LVU109
 523 0250 6846     		mov	r0, sp
 524 0252 FFF7FEFF 		bl	strlen
 525              	.LVL49:
 526 0256 0246     		mov	r2, r0
 527 0258 184C     		ldr	r4, .L18+80
 528 025a 1E4B     		ldr	r3, .L18+104
 529 025c 6946     		mov	r1, sp
 530 025e 2046     		mov	r0, r4
 531 0260 FFF7FEFF 		bl	f_write
 532              	.LVL50:
 164:Src/sd.c      **** 				f_close(&pot_values_f);
 533              		.loc 1 164 5 discriminator 2 view .LVU110
 534 0264 2046     		mov	r0, r4
 535 0266 FFF7FEFF 		bl	f_close
 536              	.LVL51:
 537 026a 47E7     		b	.L10
ARM GAS  /tmp/ccN3vLYJ.s 			page 16


 538              	.L19:
 539              		.align	2
 540              	.L18:
 541 026c 00000000 		.word	SDPath
 542 0270 00000000 		.word	SDFatFS
 543 0274 00000000 		.word	res_mount
 544 0278 00000000 		.word	.LANCHOR3
 545 027c 00000000 		.word	.LANCHOR0
 546 0280 00000000 		.word	log_names_f
 547 0284 00000000 		.word	res_open
 548 0288 00000000 		.word	huart3
 549 028c 00000000 		.word	.LC0
 550 0290 00000000 		.word	txt
 551 0294 14000000 		.word	.LC1
 552 0298 00000000 		.word	bytes_read
 553 029c 00000000 		.word	log_names
 554 02a0 00000000 		.word	filename_log
 555 02a4 34000000 		.word	.LC3
 556 02a8 00000000 		.word	loggingFile
 557 02ac 40000000 		.word	.LC4
 558 02b0 00000000 		.word	.LANCHOR2
 559 02b4 B8000000 		.word	.LC12
 560 02b8 00000000 		.word	.LANCHOR4
 561 02bc 00000000 		.word	pot_values_f
 562 02c0 C8000000 		.word	.LC13
 563 02c4 00000000 		.word	.LANCHOR1
 564 02c8 2C000000 		.word	.LC2
 565 02cc 00000000 		.word	pointer
 566 02d0 5C000000 		.word	.LC5
 567 02d4 00000000 		.word	byteswritten
 568 02d8 68000000 		.word	.LC6
 569 02dc 74000000 		.word	.LC7
 570 02e0 8C000000 		.word	.LC8
 571 02e4 98000000 		.word	.LC9
 572 02e8 A4000000 		.word	.LC10
 573 02ec B4000000 		.word	.LC11
 574 02f0 DC000000 		.word	.LC14
 575 02f4 F0000000 		.word	.LC15
 576              	.LBE6:
 577              	.LBE7:
 578              		.cfi_endproc
 579              	.LFE144:
 581              		.global	successfull_opening
 582              		.global	pot_values_loaded
 583              		.comm	log_names,1100,4
 584              		.comm	pointer,4,4
 585              		.comm	bytes_read,4,4
 586              		.global	msg_index
 587              		.global	msg_counter
 588              		.global	mount_ok
 589              		.comm	byteswritten,4,4
 590              		.global	max_files
 591              		.comm	txt,2000,4
 592              		.global	filename_pot
 593              		.comm	filename_log,50,4
 594              		.global	name_txt
 595              		.comm	message,256,4
ARM GAS  /tmp/ccN3vLYJ.s 			page 17


 596              		.comm	log_names_f,560,4
 597              		.comm	pot_values_f,560,4
 598              		.comm	loggingFile,560,4
 599              		.comm	res_mount,1,1
 600              		.comm	res_open,1,1
 601              		.section	.bss.mount_ok,"aw",%nobits
 602              		.align	2
 603              		.set	.LANCHOR3,. + 0
 606              	mount_ok:
 607 0000 00000000 		.space	4
 608              		.section	.bss.msg_counter,"aw",%nobits
 609              		.align	2
 612              	msg_counter:
 613 0000 00000000 		.space	4
 614              		.section	.bss.msg_index,"aw",%nobits
 615              		.align	2
 618              	msg_index:
 619 0000 00000000 		.space	4
 620              		.section	.bss.pot_values_loaded,"aw",%nobits
 623              	pot_values_loaded:
 624 0000 00       		.space	1
 625              		.section	.bss.successfull_opening,"aw",%nobits
 626              		.align	2
 627              		.set	.LANCHOR2,. + 0
 630              	successfull_opening:
 631 0000 00000000 		.space	4
 632              		.section	.data.filename_pot,"aw"
 633              		.align	2
 634              		.set	.LANCHOR4,. + 0
 637              	filename_pot:
 638 0000 706F7456 		.ascii	"potV.txt\000"
 638      2E747874 
 638      00
 639              		.section	.data.max_files,"aw"
 640              		.align	2
 641              		.set	.LANCHOR1,. + 0
 644              	max_files:
 645 0000 64000000 		.word	100
 646              		.section	.data.name_txt,"aw"
 647              		.align	2
 648              		.set	.LANCHOR0,. + 0
 651              	name_txt:
 652 0000 6E616D65 		.ascii	"name.txt\000"
 652      2E747874 
 652      00
 653              		.text
 654              	.Letext0:
 655              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 656              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 657              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 658              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 659              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 660              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 661              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 662              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 663              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 664              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
ARM GAS  /tmp/ccN3vLYJ.s 			page 18


 665              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 666              		.file 13 "Inc/can.h"
 667              		.file 14 "Middlewares/Third_Party/FatFs/src/integer.h"
 668              		.file 15 "/usr/arm-none-eabi/include/sys/lock.h"
 669              		.file 16 "/usr/arm-none-eabi/include/sys/_types.h"
 670              		.file 17 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 671              		.file 18 "/usr/arm-none-eabi/include/sys/reent.h"
 672              		.file 19 "/usr/arm-none-eabi/include/stdlib.h"
 673              		.file 20 "Middlewares/Third_Party/FatFs/src/ff.h"
 674              		.file 21 "Middlewares/Third_Party/FatFs/src/diskio.h"
 675              		.file 22 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 676              		.file 23 "Inc/sd_diskio.h"
 677              		.file 24 "Inc/fatfs.h"
 678              		.file 25 "Inc/global_variables.h"
 679              		.file 26 "/usr/arm-none-eabi/include/stdio.h"
 680              		.file 27 "/usr/arm-none-eabi/include/string.h"
ARM GAS  /tmp/ccN3vLYJ.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sd.c
     /tmp/ccN3vLYJ.s:17     .rodata.init_sd.str1.4:0000000000000000 $d
     /tmp/ccN3vLYJ.s:66     .text.init_sd:0000000000000000 $t
     /tmp/ccN3vLYJ.s:74     .text.init_sd:0000000000000000 init_sd
     /tmp/ccN3vLYJ.s:541    .text.init_sd:000000000000026c $d
                            *COM*:0000000000000001 res_mount
                            *COM*:0000000000000230 log_names_f
                            *COM*:0000000000000001 res_open
                            *COM*:00000000000007d0 txt
                            *COM*:0000000000000004 bytes_read
                            *COM*:000000000000044c log_names
                            *COM*:0000000000000032 filename_log
                            *COM*:0000000000000230 loggingFile
                            *COM*:0000000000000230 pot_values_f
                            *COM*:0000000000000004 pointer
                            *COM*:0000000000000004 byteswritten
     /tmp/ccN3vLYJ.s:630    .bss.successfull_opening:0000000000000000 successfull_opening
     /tmp/ccN3vLYJ.s:623    .bss.pot_values_loaded:0000000000000000 pot_values_loaded
     /tmp/ccN3vLYJ.s:618    .bss.msg_index:0000000000000000 msg_index
     /tmp/ccN3vLYJ.s:612    .bss.msg_counter:0000000000000000 msg_counter
     /tmp/ccN3vLYJ.s:606    .bss.mount_ok:0000000000000000 mount_ok
     /tmp/ccN3vLYJ.s:644    .data.max_files:0000000000000000 max_files
     /tmp/ccN3vLYJ.s:637    .data.filename_pot:0000000000000000 filename_pot
     /tmp/ccN3vLYJ.s:651    .data.name_txt:0000000000000000 name_txt
                            *COM*:0000000000000100 message
     /tmp/ccN3vLYJ.s:602    .bss.mount_ok:0000000000000000 $d
     /tmp/ccN3vLYJ.s:609    .bss.msg_counter:0000000000000000 $d
     /tmp/ccN3vLYJ.s:615    .bss.msg_index:0000000000000000 $d
     /tmp/ccN3vLYJ.s:624    .bss.pot_values_loaded:0000000000000000 $d
     /tmp/ccN3vLYJ.s:626    .bss.successfull_opening:0000000000000000 $d
     /tmp/ccN3vLYJ.s:633    .data.filename_pot:0000000000000000 $d
     /tmp/ccN3vLYJ.s:640    .data.max_files:0000000000000000 $d
     /tmp/ccN3vLYJ.s:647    .data.name_txt:0000000000000000 $d

UNDEFINED SYMBOLS
f_mount
f_open
HAL_UART_Transmit
sprintf
strlen
f_close
f_read
strstr
f_write
SDPath
SDFatFS
huart3
