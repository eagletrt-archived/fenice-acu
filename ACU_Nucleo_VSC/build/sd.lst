ARM GAS  /tmp/ccFObcB0.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"sd.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.rodata.init_sd.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC0:
  19 0000 2D2D2D6D 		.ascii	"---mounting---\015\012\000"
  19      6F756E74 
  19      696E672D 
  19      2D2D0D0A 
  19      00
  20 0011 000000   		.align	2
  21              	.LC1:
  22 0014 6E616D65 		.ascii	"name.txt\000"
  22      2E747874 
  22      00
  23 001d 000000   		.align	2
  24              	.LC2:
  25 0020 6D6F756E 		.ascii	"mounted, opened\015\012\000"
  25      7465642C 
  25      206F7065 
  25      6E65640D 
  25      0A00
  26 0032 0000     		.align	2
  27              	.LC3:
  28 0034 25730D0A 		.ascii	"%s\015\012\000"
  28      00
  29 0039 000000   		.align	2
  30              	.LC4:
  31 003c 6C6F675F 		.ascii	"log_%d \000"
  31      25642000 
  32              		.align	2
  33              	.LC5:
  34 0044 64656661 		.ascii	"default.txt\000"
  34      756C742E 
  34      74787400 
  35              		.align	2
  36              	.LC6:
  37 0050 63726561 		.ascii	"created -> default.txt\015\012\000"
  37      74656420 
  37      2D3E2064 
  37      65666175 
  37      6C742E74 
  38 0069 000000   		.align	2
  39              	.LC7:
ARM GAS  /tmp/ccFObcB0.s 			page 2


  40 006c 6C6F675F 		.ascii	"log_0 \011\015\012\000"
  40      3020090D 
  40      0A00
  41 0076 0000     		.align	2
  42              	.LC8:
  43 0078 4C6F675F 		.ascii	"Log_0.txt\000"
  43      302E7478 
  43      7400
  44 0082 0000     		.align	2
  45              	.LC9:
  46 0084 0D0A6372 		.ascii	"\015\012created -> Log_0\015\012\000"
  46      65617465 
  46      64202D3E 
  46      204C6F67 
  46      5F300D0A 
  47 0099 000000   		.align	2
  48              	.LC10:
  49 009c 6C6F675F 		.ascii	"log_%d \011\015\012\000"
  49      25642009 
  49      0D0A00
  50 00a7 00       		.align	2
  51              	.LC11:
  52 00a8 4C6F675F 		.ascii	"Log_%d.txt\000"
  52      25642E74 
  52      787400
  53 00b3 00       		.align	2
  54              	.LC12:
  55 00b4 0D0A6372 		.ascii	"\015\012created -> \000"
  55      65617465 
  55      64202D3E 
  55      2000
  56 00c2 0000     		.align	2
  57              	.LC13:
  58 00c4 0D0A00   		.ascii	"\015\012\000"
  59 00c7 00       		.align	2
  60              	.LC14:
  61 00c8 66696C65 		.ascii	"files closed\015\012\000"
  61      7320636C 
  61      6F736564 
  61      0D0A00
  62              		.section	.text.init_sd,"ax",%progbits
  63              		.align	1
  64              		.global	init_sd
  65              		.arch armv7e-m
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv5-d16
  71              	init_sd:
  72              	.LFB141:
  73              		.file 1 "Src/sd.c"
   1:Src/sd.c      **** #include "global_variables.h"
   2:Src/sd.c      **** #include "fatfs.h"
   3:Src/sd.c      **** void init_sd(){
  74              		.loc 1 3 15 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 256
ARM GAS  /tmp/ccFObcB0.s 			page 3


  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  79              	.LCFI0:
  80              		.cfi_def_cfa_offset 24
  81              		.cfi_offset 4, -24
  82              		.cfi_offset 5, -20
  83              		.cfi_offset 6, -16
  84              		.cfi_offset 7, -12
  85              		.cfi_offset 8, -8
  86              		.cfi_offset 14, -4
  87 0004 C0B0     		sub	sp, sp, #256
  88              	.LCFI1:
  89              		.cfi_def_cfa_offset 280
   4:Src/sd.c      **** 	if(res_mount != FR_OK){
  90              		.loc 1 4 2 view .LVU1
  91              		.loc 1 4 15 is_stmt 0 view .LVU2
  92 0006 924B     		ldr	r3, .L16
  93 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  94              		.loc 1 4 4 view .LVU3
  95 000a 43B9     		cbnz	r3, .L12
  96              	.L2:
   5:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"---mounting---\r\n",strlen("---mounting---\r\n"), 10);
   6:Src/sd.c      **** 		res_mount = f_mount(&SDFatFS, (TCHAR const*)SDPath, 0);
   7:Src/sd.c      **** 	}
   8:Src/sd.c      **** 	if (res_mount == FR_OK) {
  97              		.loc 1 8 2 is_stmt 1 view .LVU4
  98              		.loc 1 8 16 is_stmt 0 view .LVU5
  99 000c 904B     		ldr	r3, .L16
 100 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 101              		.loc 1 8 5 view .LVU6
 102 0010 9BB1     		cbz	r3, .L13
   9:Src/sd.c      **** 		sprintf(filename_1, "name.txt");
  10:Src/sd.c      **** 		res_open=f_open(&log_names_f, (TCHAR const*)&filename_1, FA_OPEN_ALWAYS | FA_READ | FA_WRITE );
  11:Src/sd.c      **** 		f_read(&log_names_f, log_names, 256, (void*)&bytes_read);
  12:Src/sd.c      **** 
  13:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"mounted, opened\r\n",strlen("mounted, opened\r\n"),10);
  14:Src/sd.c      **** 
  15:Src/sd.c      **** 		sprintf(txt, "%s\r\n", log_names);
  16:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
  17:Src/sd.c      **** 
  18:Src/sd.c      **** 		char name[256];
  19:Src/sd.c      **** 
  20:Src/sd.c      **** 		f_close(&log_names_f);
  21:Src/sd.c      **** 		f_open(&log_names_f, (TCHAR const*)&filename_1, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
  22:Src/sd.c      **** 
  23:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
  24:Src/sd.c      **** 
  25:Src/sd.c      **** 			sprintf(name, "log_%d ", i);
  26:Src/sd.c      **** 
  27:Src/sd.c      **** 			pointer = strstr(log_names, name);
  28:Src/sd.c      **** 
  29:Src/sd.c      **** 			if(i == max_files){
  30:Src/sd.c      **** 				sprintf(filename,"default.txt");
  31:Src/sd.c      **** 
  32:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
  33:Src/sd.c      **** 				f_write(&loggingFile, buffer, strlen(buffer), (void*)&byteswritten);
  34:Src/sd.c      **** 				f_close(&loggingFile);
ARM GAS  /tmp/ccFObcB0.s 			page 4


  35:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
  36:Src/sd.c      **** 
  37:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"created -> default.txt\r\n",strlen("created -> default.txt
  38:Src/sd.c      **** 
  39:Src/sd.c      **** 				successfull_opening = 1;
  40:Src/sd.c      **** 
  41:Src/sd.c      **** 				break;
  42:Src/sd.c      **** 			}
  43:Src/sd.c      **** 
  44:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
  45:Src/sd.c      **** 
  46:Src/sd.c      **** 				sprintf(filename, "log_0 \t\r\n");
  47:Src/sd.c      **** 
  48:Src/sd.c      **** 				f_write(&log_names_f, filename, strlen(filename), (void*)&byteswritten);
  49:Src/sd.c      **** 				f_close(&log_names_f);
  50:Src/sd.c      **** 
  51:Src/sd.c      **** 				sprintf(filename, "Log_0.txt");
  52:Src/sd.c      **** 
  53:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
  54:Src/sd.c      **** 				f_write(&loggingFile, buffer, strlen(buffer), (void*)&byteswritten);
  55:Src/sd.c      **** 				f_close(&loggingFile);
  56:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
  57:Src/sd.c      **** 
  58:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> Log_0\r\n",strlen("\r\ncreated -> Log_0\r\n
  59:Src/sd.c      **** 
  60:Src/sd.c      **** 				successfull_opening = 1;
  61:Src/sd.c      **** 
  62:Src/sd.c      **** 				break;
  63:Src/sd.c      **** 			}
  64:Src/sd.c      **** 			if(pointer == NULL){
  65:Src/sd.c      **** 				sprintf(filename, "log_%d \t\r\n", i);
  66:Src/sd.c      **** 
  67:Src/sd.c      **** 				f_write(&log_names_f, filename, strlen(filename), (void*)&byteswritten);
  68:Src/sd.c      **** 				f_close(&log_names_f);
  69:Src/sd.c      **** 
  70:Src/sd.c      **** 				sprintf(filename, "Log_%d.txt", i);
  71:Src/sd.c      **** 
  72:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
  73:Src/sd.c      **** 				f_write(&loggingFile, buffer, strlen(buffer), (void*)&byteswritten);
  74:Src/sd.c      **** 				f_close(&loggingFile);
  75:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
  76:Src/sd.c      **** 
  77:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> ",strlen("\r\ncreated -> "),10);
  78:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename, strlen(filename), 10);
  79:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) "\r\n", strlen("\r\n"),10);
  80:Src/sd.c      **** 
  81:Src/sd.c      **** 				successfull_opening = 1;
  82:Src/sd.c      **** 
  83:Src/sd.c      **** 				break;
  84:Src/sd.c      **** 			}
  85:Src/sd.c      **** 		}
  86:Src/sd.c      **** 
  87:Src/sd.c      **** 		mount_ok = 1;
  88:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"files closed\r\n",strlen("files closed\r\n"),10);
  89:Src/sd.c      **** 	}else {
  90:Src/sd.c      **** 		mount_ok = 0;
 103              		.loc 1 90 3 is_stmt 1 view .LVU7
ARM GAS  /tmp/ccFObcB0.s 			page 5


 104              		.loc 1 90 12 is_stmt 0 view .LVU8
 105 0012 904B     		ldr	r3, .L16+4
 106 0014 0022     		movs	r2, #0
 107 0016 1A60     		str	r2, [r3]
 108              	.L1:
  91:Src/sd.c      **** 	}
  92:Src/sd.c      **** }...
 109              		.loc 1 92 1 view .LVU9
 110 0018 40B0     		add	sp, sp, #256
 111              	.LCFI2:
 112              		.cfi_remember_state
 113              		.cfi_def_cfa_offset 24
 114              		@ sp needed
 115 001a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 116              	.L12:
 117              	.LCFI3:
 118              		.cfi_restore_state
 119              	.LBB2:
   5:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"---mounting---\r\n",strlen("---mounting---\r\n"), 10);
 120              		.loc 1 5 3 is_stmt 1 view .LVU10
 121 001e 0A23     		movs	r3, #10
 122 0020 1022     		movs	r2, #16
 123 0022 8D49     		ldr	r1, .L16+8
 124 0024 8D48     		ldr	r0, .L16+12
 125 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 126              	.LVL0:
   6:Src/sd.c      **** 		res_mount = f_mount(&SDFatFS, (TCHAR const*)SDPath, 0);
 127              		.loc 1 6 3 view .LVU11
   6:Src/sd.c      **** 		res_mount = f_mount(&SDFatFS, (TCHAR const*)SDPath, 0);
 128              		.loc 1 6 15 is_stmt 0 view .LVU12
 129 002a 0022     		movs	r2, #0
 130 002c 8C49     		ldr	r1, .L16+16
 131 002e 8D48     		ldr	r0, .L16+20
 132 0030 FFF7FEFF 		bl	f_mount
 133              	.LVL1:
   6:Src/sd.c      **** 		res_mount = f_mount(&SDFatFS, (TCHAR const*)SDPath, 0);
 134              		.loc 1 6 13 view .LVU13
 135 0034 864B     		ldr	r3, .L16
 136 0036 1870     		strb	r0, [r3]
 137 0038 E8E7     		b	.L2
 138              	.L13:
 139              	.LBE2:
 140              	.LBB3:
   9:Src/sd.c      **** 		sprintf(filename_1, "name.txt");
 141              		.loc 1 9 3 is_stmt 1 view .LVU14
 142 003a 8B4C     		ldr	r4, .L16+24
 143 003c 8B4B     		ldr	r3, .L16+28
 144 003e 03CB     		ldmia	r3!, {r0, r1}
 145 0040 2060     		str	r0, [r4]	@ unaligned
 146 0042 6160     		str	r1, [r4, #4]	@ unaligned
 147 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 148 0046 2372     		strb	r3, [r4, #8]
  10:Src/sd.c      **** 		res_open=f_open(&log_names_f, (TCHAR const*)&filename_1, FA_OPEN_ALWAYS | FA_READ | FA_WRITE );
 149              		.loc 1 10 3 view .LVU15
  10:Src/sd.c      **** 		res_open=f_open(&log_names_f, (TCHAR const*)&filename_1, FA_OPEN_ALWAYS | FA_READ | FA_WRITE );
 150              		.loc 1 10 12 is_stmt 0 view .LVU16
 151 0048 894D     		ldr	r5, .L16+32
ARM GAS  /tmp/ccFObcB0.s 			page 6


 152 004a 1322     		movs	r2, #19
 153 004c 2146     		mov	r1, r4
 154 004e 2846     		mov	r0, r5
 155 0050 FFF7FEFF 		bl	f_open
 156              	.LVL2:
  10:Src/sd.c      **** 		res_open=f_open(&log_names_f, (TCHAR const*)&filename_1, FA_OPEN_ALWAYS | FA_READ | FA_WRITE );
 157              		.loc 1 10 11 view .LVU17
 158 0054 874B     		ldr	r3, .L16+36
 159 0056 1870     		strb	r0, [r3]
  11:Src/sd.c      **** 		f_read(&log_names_f, log_names, 256, (void*)&bytes_read);
 160              		.loc 1 11 3 is_stmt 1 view .LVU18
 161 0058 DFF85482 		ldr	r8, .L16+96
 162 005c 864B     		ldr	r3, .L16+40
 163 005e 4FF48072 		mov	r2, #256
 164 0062 4146     		mov	r1, r8
 165 0064 2846     		mov	r0, r5
 166 0066 FFF7FEFF 		bl	f_read
 167              	.LVL3:
  13:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"mounted, opened\r\n",strlen("mounted, opened\r\n"),10);
 168              		.loc 1 13 3 view .LVU19
 169 006a 7C4F     		ldr	r7, .L16+12
 170 006c 0A23     		movs	r3, #10
 171 006e 1122     		movs	r2, #17
 172 0070 8249     		ldr	r1, .L16+44
 173 0072 3846     		mov	r0, r7
 174 0074 FFF7FEFF 		bl	HAL_UART_Transmit
 175              	.LVL4:
  15:Src/sd.c      **** 		sprintf(txt, "%s\r\n", log_names);
 176              		.loc 1 15 3 view .LVU20
 177 0078 814E     		ldr	r6, .L16+48
 178 007a 4246     		mov	r2, r8
 179 007c 8149     		ldr	r1, .L16+52
 180 007e 3046     		mov	r0, r6
 181 0080 FFF7FEFF 		bl	sprintf
 182              	.LVL5:
  16:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 183              		.loc 1 16 3 view .LVU21
  16:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 184              		.loc 1 16 43 is_stmt 0 view .LVU22
 185 0084 3046     		mov	r0, r6
 186 0086 FFF7FEFF 		bl	strlen
 187              	.LVL6:
  16:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 188              		.loc 1 16 3 view .LVU23
 189 008a 0A23     		movs	r3, #10
 190 008c 82B2     		uxth	r2, r0
 191 008e 3146     		mov	r1, r6
 192 0090 3846     		mov	r0, r7
 193 0092 FFF7FEFF 		bl	HAL_UART_Transmit
 194              	.LVL7:
  18:Src/sd.c      **** 		char name[256];
 195              		.loc 1 18 3 is_stmt 1 view .LVU24
  20:Src/sd.c      **** 		f_close(&log_names_f);
 196              		.loc 1 20 3 view .LVU25
 197 0096 2846     		mov	r0, r5
 198 0098 FFF7FEFF 		bl	f_close
 199              	.LVL8:
ARM GAS  /tmp/ccFObcB0.s 			page 7


  21:Src/sd.c      **** 		f_open(&log_names_f, (TCHAR const*)&filename_1, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 200              		.loc 1 21 3 view .LVU26
 201 009c 3322     		movs	r2, #51
 202 009e 2146     		mov	r1, r4
 203 00a0 2846     		mov	r0, r5
 204 00a2 FFF7FEFF 		bl	f_open
 205              	.LVL9:
  23:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 206              		.loc 1 23 3 view .LVU27
 207              	.LBB4:
  23:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 208              		.loc 1 23 7 view .LVU28
  23:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 209              		.loc 1 23 11 is_stmt 0 view .LVU29
 210 00a6 0024     		movs	r4, #0
  23:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 211              		.loc 1 23 3 view .LVU30
 212 00a8 33E0     		b	.L4
 213              	.LVL10:
 214              	.L15:
 215              	.LBB5:
  30:Src/sd.c      **** 				sprintf(filename,"default.txt");
 216              		.loc 1 30 5 is_stmt 1 view .LVU31
 217 00aa 774C     		ldr	r4, .L16+56
 218              	.LVL11:
  30:Src/sd.c      **** 				sprintf(filename,"default.txt");
 219              		.loc 1 30 5 is_stmt 0 view .LVU32
 220 00ac 774B     		ldr	r3, .L16+60
 221 00ae 07CB     		ldmia	r3!, {r0, r1, r2}
 222 00b0 2060     		str	r0, [r4]	@ unaligned
 223 00b2 6160     		str	r1, [r4, #4]	@ unaligned
 224 00b4 A260     		str	r2, [r4, #8]	@ unaligned
  32:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 225              		.loc 1 32 5 is_stmt 1 view .LVU33
 226 00b6 764D     		ldr	r5, .L16+64
 227 00b8 3322     		movs	r2, #51
 228 00ba 2146     		mov	r1, r4
 229 00bc 2846     		mov	r0, r5
 230 00be FFF7FEFF 		bl	f_open
 231              	.LVL12:
  33:Src/sd.c      **** 				f_write(&loggingFile, buffer, strlen(buffer), (void*)&byteswritten);
 232              		.loc 1 33 5 view .LVU34
 233 00c2 744E     		ldr	r6, .L16+68
 234 00c4 3046     		mov	r0, r6
 235 00c6 FFF7FEFF 		bl	strlen
 236              	.LVL13:
 237 00ca 0246     		mov	r2, r0
 238 00cc 724B     		ldr	r3, .L16+72
 239 00ce 3146     		mov	r1, r6
 240 00d0 2846     		mov	r0, r5
 241 00d2 FFF7FEFF 		bl	f_write
 242              	.LVL14:
  34:Src/sd.c      **** 				f_close(&loggingFile);
 243              		.loc 1 34 5 view .LVU35
 244 00d6 2846     		mov	r0, r5
 245 00d8 FFF7FEFF 		bl	f_close
 246              	.LVL15:
ARM GAS  /tmp/ccFObcB0.s 			page 8


  35:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 247              		.loc 1 35 5 view .LVU36
 248 00dc 3322     		movs	r2, #51
 249 00de 2146     		mov	r1, r4
 250 00e0 2846     		mov	r0, r5
 251 00e2 FFF7FEFF 		bl	f_open
 252              	.LVL16:
  37:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"created -> default.txt\r\n",strlen("created -> default.txt
 253              		.loc 1 37 5 view .LVU37
 254 00e6 0A23     		movs	r3, #10
 255 00e8 1822     		movs	r2, #24
 256 00ea 6C49     		ldr	r1, .L16+76
 257 00ec 5B48     		ldr	r0, .L16+12
 258 00ee FFF7FEFF 		bl	HAL_UART_Transmit
 259              	.LVL17:
  39:Src/sd.c      **** 				successfull_opening = 1;
 260              		.loc 1 39 5 view .LVU38
  39:Src/sd.c      **** 				successfull_opening = 1;
 261              		.loc 1 39 25 is_stmt 0 view .LVU39
 262 00f2 6B4B     		ldr	r3, .L16+80
 263 00f4 0122     		movs	r2, #1
 264 00f6 1A60     		str	r2, [r3]
  41:Src/sd.c      **** 				break;
 265              		.loc 1 41 5 is_stmt 1 view .LVU40
 266              	.L6:
 267              	.LBE5:
 268              	.LBE4:
  87:Src/sd.c      **** 		mount_ok = 1;
 269              		.loc 1 87 3 view .LVU41
  87:Src/sd.c      **** 		mount_ok = 1;
 270              		.loc 1 87 12 is_stmt 0 view .LVU42
 271 00f8 564B     		ldr	r3, .L16+4
 272 00fa 0122     		movs	r2, #1
 273 00fc 1A60     		str	r2, [r3]
  88:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"files closed\r\n",strlen("files closed\r\n"),10);
 274              		.loc 1 88 3 is_stmt 1 view .LVU43
 275 00fe 0A23     		movs	r3, #10
 276 0100 0E22     		movs	r2, #14
 277 0102 6849     		ldr	r1, .L16+84
 278 0104 5548     		ldr	r0, .L16+12
 279 0106 FFF7FEFF 		bl	HAL_UART_Transmit
 280              	.LVL18:
 281              	.LBE3:
 282 010a 85E7     		b	.L1
 283              	.LVL19:
 284              	.L7:
 285              	.LBB9:
 286              	.LBB8:
 287              	.LBB6:
  64:Src/sd.c      **** 			if(pointer == NULL){
 288              		.loc 1 64 4 view .LVU44
  64:Src/sd.c      **** 			if(pointer == NULL){
 289              		.loc 1 64 6 is_stmt 0 view .LVU45
 290 010c 0028     		cmp	r0, #0
 291 010e 54D0     		beq	.L14
 292              	.LBE6:
  23:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
ARM GAS  /tmp/ccFObcB0.s 			page 9


 293              		.loc 1 23 33 is_stmt 1 discriminator 2 view .LVU46
  23:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 294              		.loc 1 23 34 is_stmt 0 discriminator 2 view .LVU47
 295 0110 0134     		adds	r4, r4, #1
 296              	.LVL20:
 297              	.L4:
  23:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 298              		.loc 1 23 18 is_stmt 1 discriminator 1 view .LVU48
  23:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 299              		.loc 1 23 20 is_stmt 0 discriminator 1 view .LVU49
 300 0112 654B     		ldr	r3, .L16+88
 301 0114 1B68     		ldr	r3, [r3]
  23:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 302              		.loc 1 23 3 discriminator 1 view .LVU50
 303 0116 A342     		cmp	r3, r4
 304 0118 EEDD     		ble	.L6
 305              	.LBB7:
  25:Src/sd.c      **** 			sprintf(name, "log_%d ", i);
 306              		.loc 1 25 4 is_stmt 1 view .LVU51
 307 011a 2246     		mov	r2, r4
 308 011c 6349     		ldr	r1, .L16+92
 309 011e 6846     		mov	r0, sp
 310 0120 FFF7FEFF 		bl	sprintf
 311              	.LVL21:
  27:Src/sd.c      **** 			pointer = strstr(log_names, name);
 312              		.loc 1 27 4 view .LVU52
  27:Src/sd.c      **** 			pointer = strstr(log_names, name);
 313              		.loc 1 27 14 is_stmt 0 view .LVU53
 314 0124 6946     		mov	r1, sp
 315 0126 6248     		ldr	r0, .L16+96
 316 0128 FFF7FEFF 		bl	strstr
 317              	.LVL22:
  27:Src/sd.c      **** 			pointer = strstr(log_names, name);
 318              		.loc 1 27 12 view .LVU54
 319 012c 614B     		ldr	r3, .L16+100
 320 012e 1860     		str	r0, [r3]
  29:Src/sd.c      **** 			if(i == max_files){
 321              		.loc 1 29 4 is_stmt 1 view .LVU55
  29:Src/sd.c      **** 			if(i == max_files){
 322              		.loc 1 29 9 is_stmt 0 view .LVU56
 323 0130 5D4B     		ldr	r3, .L16+88
 324 0132 1B68     		ldr	r3, [r3]
  29:Src/sd.c      **** 			if(i == max_files){
 325              		.loc 1 29 6 view .LVU57
 326 0134 A342     		cmp	r3, r4
 327 0136 B8D0     		beq	.L15
  44:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
 328              		.loc 1 44 4 is_stmt 1 view .LVU58
  44:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
 329              		.loc 1 44 6 is_stmt 0 view .LVU59
 330 0138 002C     		cmp	r4, #0
 331 013a E7D1     		bne	.L7
  44:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
 332              		.loc 1 44 14 discriminator 1 view .LVU60
 333 013c 0028     		cmp	r0, #0
 334 013e E5D1     		bne	.L7
  46:Src/sd.c      **** 				sprintf(filename, "log_0 \t\r\n");
ARM GAS  /tmp/ccFObcB0.s 			page 10


 335              		.loc 1 46 5 is_stmt 1 view .LVU61
 336 0140 514C     		ldr	r4, .L16+56
 337              	.LVL23:
  46:Src/sd.c      **** 				sprintf(filename, "log_0 \t\r\n");
 338              		.loc 1 46 5 is_stmt 0 view .LVU62
 339 0142 5D4B     		ldr	r3, .L16+104
 340 0144 03CB     		ldmia	r3!, {r0, r1}
 341 0146 2060     		str	r0, [r4]	@ unaligned
 342 0148 6160     		str	r1, [r4, #4]	@ unaligned
 343 014a 1B88     		ldrh	r3, [r3]	@ unaligned
 344 014c 2381     		strh	r3, [r4, #8]	@ unaligned
  48:Src/sd.c      **** 				f_write(&log_names_f, filename, strlen(filename), (void*)&byteswritten);
 345              		.loc 1 48 5 is_stmt 1 view .LVU63
 346 014e 2046     		mov	r0, r4
 347 0150 FFF7FEFF 		bl	strlen
 348              	.LVL24:
 349 0154 0246     		mov	r2, r0
 350 0156 504F     		ldr	r7, .L16+72
 351 0158 454D     		ldr	r5, .L16+32
 352 015a 3B46     		mov	r3, r7
 353 015c 2146     		mov	r1, r4
 354 015e 2846     		mov	r0, r5
 355 0160 FFF7FEFF 		bl	f_write
 356              	.LVL25:
  49:Src/sd.c      **** 				f_close(&log_names_f);
 357              		.loc 1 49 5 view .LVU64
 358 0164 2846     		mov	r0, r5
 359 0166 FFF7FEFF 		bl	f_close
 360              	.LVL26:
  51:Src/sd.c      **** 				sprintf(filename, "Log_0.txt");
 361              		.loc 1 51 5 view .LVU65
 362 016a 544B     		ldr	r3, .L16+108
 363 016c 03CB     		ldmia	r3!, {r0, r1}
 364 016e 2060     		str	r0, [r4]	@ unaligned
 365 0170 6160     		str	r1, [r4, #4]	@ unaligned
 366 0172 1B88     		ldrh	r3, [r3]	@ unaligned
 367 0174 2381     		strh	r3, [r4, #8]	@ unaligned
  53:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 368              		.loc 1 53 5 view .LVU66
 369 0176 464D     		ldr	r5, .L16+64
 370 0178 3322     		movs	r2, #51
 371 017a 2146     		mov	r1, r4
 372 017c 2846     		mov	r0, r5
 373 017e FFF7FEFF 		bl	f_open
 374              	.LVL27:
  54:Src/sd.c      **** 				f_write(&loggingFile, buffer, strlen(buffer), (void*)&byteswritten);
 375              		.loc 1 54 5 view .LVU67
 376 0182 444E     		ldr	r6, .L16+68
 377 0184 3046     		mov	r0, r6
 378 0186 FFF7FEFF 		bl	strlen
 379              	.LVL28:
 380 018a 0246     		mov	r2, r0
 381 018c 3B46     		mov	r3, r7
 382 018e 3146     		mov	r1, r6
 383 0190 2846     		mov	r0, r5
 384 0192 FFF7FEFF 		bl	f_write
 385              	.LVL29:
ARM GAS  /tmp/ccFObcB0.s 			page 11


  55:Src/sd.c      **** 				f_close(&loggingFile);
 386              		.loc 1 55 5 view .LVU68
 387 0196 2846     		mov	r0, r5
 388 0198 FFF7FEFF 		bl	f_close
 389              	.LVL30:
  56:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 390              		.loc 1 56 5 view .LVU69
 391 019c 3322     		movs	r2, #51
 392 019e 2146     		mov	r1, r4
 393 01a0 2846     		mov	r0, r5
 394 01a2 FFF7FEFF 		bl	f_open
 395              	.LVL31:
  58:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> Log_0\r\n",strlen("\r\ncreated -> Log_0\r\n
 396              		.loc 1 58 5 view .LVU70
 397 01a6 0A23     		movs	r3, #10
 398 01a8 1422     		movs	r2, #20
 399 01aa 4549     		ldr	r1, .L16+112
 400 01ac 2B48     		ldr	r0, .L16+12
 401 01ae FFF7FEFF 		bl	HAL_UART_Transmit
 402              	.LVL32:
  60:Src/sd.c      **** 				successfull_opening = 1;
 403              		.loc 1 60 5 view .LVU71
  60:Src/sd.c      **** 				successfull_opening = 1;
 404              		.loc 1 60 25 is_stmt 0 view .LVU72
 405 01b2 3B4B     		ldr	r3, .L16+80
 406 01b4 0122     		movs	r2, #1
 407 01b6 1A60     		str	r2, [r3]
  62:Src/sd.c      **** 				break;
 408              		.loc 1 62 5 is_stmt 1 view .LVU73
 409 01b8 9EE7     		b	.L6
 410              	.LVL33:
 411              	.L14:
  65:Src/sd.c      **** 				sprintf(filename, "log_%d \t\r\n", i);
 412              		.loc 1 65 5 view .LVU74
 413 01ba 334D     		ldr	r5, .L16+56
 414 01bc 2246     		mov	r2, r4
 415 01be 4149     		ldr	r1, .L16+116
 416 01c0 2846     		mov	r0, r5
 417 01c2 FFF7FEFF 		bl	sprintf
 418              	.LVL34:
  67:Src/sd.c      **** 				f_write(&log_names_f, filename, strlen(filename), (void*)&byteswritten);
 419              		.loc 1 67 5 view .LVU75
 420 01c6 2846     		mov	r0, r5
 421 01c8 FFF7FEFF 		bl	strlen
 422              	.LVL35:
 423 01cc 0246     		mov	r2, r0
 424 01ce 324F     		ldr	r7, .L16+72
 425 01d0 274E     		ldr	r6, .L16+32
 426 01d2 3B46     		mov	r3, r7
 427 01d4 2946     		mov	r1, r5
 428 01d6 3046     		mov	r0, r6
 429 01d8 FFF7FEFF 		bl	f_write
 430              	.LVL36:
  68:Src/sd.c      **** 				f_close(&log_names_f);
 431              		.loc 1 68 5 view .LVU76
 432 01dc 3046     		mov	r0, r6
 433 01de FFF7FEFF 		bl	f_close
ARM GAS  /tmp/ccFObcB0.s 			page 12


 434              	.LVL37:
  70:Src/sd.c      **** 				sprintf(filename, "Log_%d.txt", i);
 435              		.loc 1 70 5 view .LVU77
 436 01e2 2246     		mov	r2, r4
 437 01e4 3849     		ldr	r1, .L16+120
 438 01e6 2846     		mov	r0, r5
 439 01e8 FFF7FEFF 		bl	sprintf
 440              	.LVL38:
  72:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 441              		.loc 1 72 5 view .LVU78
 442 01ec 284C     		ldr	r4, .L16+64
 443              	.LVL39:
  72:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 444              		.loc 1 72 5 is_stmt 0 view .LVU79
 445 01ee 3322     		movs	r2, #51
 446 01f0 2946     		mov	r1, r5
 447 01f2 2046     		mov	r0, r4
 448 01f4 FFF7FEFF 		bl	f_open
 449              	.LVL40:
  73:Src/sd.c      **** 				f_write(&loggingFile, buffer, strlen(buffer), (void*)&byteswritten);
 450              		.loc 1 73 5 is_stmt 1 view .LVU80
 451 01f8 264E     		ldr	r6, .L16+68
 452 01fa 3046     		mov	r0, r6
 453 01fc FFF7FEFF 		bl	strlen
 454              	.LVL41:
 455 0200 0246     		mov	r2, r0
 456 0202 3B46     		mov	r3, r7
 457 0204 3146     		mov	r1, r6
 458 0206 2046     		mov	r0, r4
 459 0208 FFF7FEFF 		bl	f_write
 460              	.LVL42:
  74:Src/sd.c      **** 				f_close(&loggingFile);
 461              		.loc 1 74 5 view .LVU81
 462 020c 2046     		mov	r0, r4
 463 020e FFF7FEFF 		bl	f_close
 464              	.LVL43:
  75:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 465              		.loc 1 75 5 view .LVU82
 466 0212 3322     		movs	r2, #51
 467 0214 2946     		mov	r1, r5
 468 0216 2046     		mov	r0, r4
 469 0218 FFF7FEFF 		bl	f_open
 470              	.LVL44:
  77:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> ",strlen("\r\ncreated -> "),10);
 471              		.loc 1 77 5 view .LVU83
 472 021c 0F4C     		ldr	r4, .L16+12
 473 021e 0A23     		movs	r3, #10
 474 0220 0D22     		movs	r2, #13
 475 0222 2A49     		ldr	r1, .L16+124
 476 0224 2046     		mov	r0, r4
 477 0226 FFF7FEFF 		bl	HAL_UART_Transmit
 478              	.LVL45:
  78:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename, strlen(filename), 10);
 479              		.loc 1 78 5 view .LVU84
  78:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename, strlen(filename), 10);
 480              		.loc 1 78 52 is_stmt 0 view .LVU85
 481 022a 2846     		mov	r0, r5
ARM GAS  /tmp/ccFObcB0.s 			page 13


 482 022c FFF7FEFF 		bl	strlen
 483              	.LVL46:
  78:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename, strlen(filename), 10);
 484              		.loc 1 78 5 view .LVU86
 485 0230 0A23     		movs	r3, #10
 486 0232 82B2     		uxth	r2, r0
 487 0234 2946     		mov	r1, r5
 488 0236 2046     		mov	r0, r4
 489 0238 FFF7FEFF 		bl	HAL_UART_Transmit
 490              	.LVL47:
  79:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) "\r\n", strlen("\r\n"),10);
 491              		.loc 1 79 5 is_stmt 1 view .LVU87
 492 023c 0A23     		movs	r3, #10
 493 023e 0222     		movs	r2, #2
 494 0240 2349     		ldr	r1, .L16+128
 495 0242 2046     		mov	r0, r4
 496 0244 FFF7FEFF 		bl	HAL_UART_Transmit
 497              	.LVL48:
  81:Src/sd.c      **** 				successfull_opening = 1;
 498              		.loc 1 81 5 view .LVU88
  81:Src/sd.c      **** 				successfull_opening = 1;
 499              		.loc 1 81 25 is_stmt 0 view .LVU89
 500 0248 154B     		ldr	r3, .L16+80
 501 024a 0122     		movs	r2, #1
 502 024c 1A60     		str	r2, [r3]
  83:Src/sd.c      **** 				break;
 503              		.loc 1 83 5 is_stmt 1 view .LVU90
 504 024e 53E7     		b	.L6
 505              	.L17:
 506              		.align	2
 507              	.L16:
 508 0250 00000000 		.word	res_mount
 509 0254 00000000 		.word	mount_ok
 510 0258 00000000 		.word	.LC0
 511 025c 00000000 		.word	huart3
 512 0260 00000000 		.word	SDPath
 513 0264 00000000 		.word	SDFatFS
 514 0268 00000000 		.word	filename_1
 515 026c 14000000 		.word	.LC1
 516 0270 00000000 		.word	log_names_f
 517 0274 00000000 		.word	res_open
 518 0278 00000000 		.word	bytes_read
 519 027c 20000000 		.word	.LC2
 520 0280 00000000 		.word	txt
 521 0284 34000000 		.word	.LC3
 522 0288 00000000 		.word	filename
 523 028c 44000000 		.word	.LC5
 524 0290 00000000 		.word	loggingFile
 525 0294 00000000 		.word	buffer
 526 0298 00000000 		.word	byteswritten
 527 029c 50000000 		.word	.LC6
 528 02a0 00000000 		.word	successfull_opening
 529 02a4 C8000000 		.word	.LC14
 530 02a8 00000000 		.word	max_files
 531 02ac 3C000000 		.word	.LC4
 532 02b0 00000000 		.word	log_names
 533 02b4 00000000 		.word	pointer
ARM GAS  /tmp/ccFObcB0.s 			page 14


 534 02b8 6C000000 		.word	.LC7
 535 02bc 78000000 		.word	.LC8
 536 02c0 84000000 		.word	.LC9
 537 02c4 9C000000 		.word	.LC10
 538 02c8 A8000000 		.word	.LC11
 539 02cc B4000000 		.word	.LC12
 540 02d0 C4000000 		.word	.LC13
 541              	.LBE7:
 542              	.LBE8:
 543              	.LBE9:
 544              		.cfi_endproc
 545              	.LFE141:
 547              		.text
 548              	.Letext0:
 549              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 550              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 551              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 552              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 553              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 554              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 555              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 556              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 557              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 558              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 559              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 560              		.file 13 "Inc/can.h"
 561              		.file 14 "Inc/id.h"
 562              		.file 15 "Middlewares/Third_Party/FatFs/src/integer.h"
 563              		.file 16 "/usr/arm-none-eabi/include/sys/lock.h"
 564              		.file 17 "/usr/arm-none-eabi/include/sys/_types.h"
 565              		.file 18 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 566              		.file 19 "/usr/arm-none-eabi/include/sys/reent.h"
 567              		.file 20 "/usr/arm-none-eabi/include/stdlib.h"
 568              		.file 21 "Middlewares/Third_Party/FatFs/src/ff.h"
 569              		.file 22 "Middlewares/Third_Party/FatFs/src/diskio.h"
 570              		.file 23 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 571              		.file 24 "Inc/sd_diskio.h"
 572              		.file 25 "Inc/fatfs.h"
 573              		.file 26 "Inc/global_variables.h"
 574              		.file 27 "<built-in>"
ARM GAS  /tmp/ccFObcB0.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sd.c
     /tmp/ccFObcB0.s:17     .rodata.init_sd.str1.4:0000000000000000 $d
     /tmp/ccFObcB0.s:63     .text.init_sd:0000000000000000 $t
     /tmp/ccFObcB0.s:71     .text.init_sd:0000000000000000 init_sd
     /tmp/ccFObcB0.s:508    .text.init_sd:0000000000000250 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
f_mount
f_open
f_read
sprintf
strlen
f_close
f_write
strstr
res_mount
mount_ok
huart3
SDPath
SDFatFS
filename_1
log_names_f
res_open
bytes_read
txt
filename
loggingFile
buffer
byteswritten
successfull_opening
max_files
log_names
pointer
