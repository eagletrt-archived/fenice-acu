ARM GAS  /tmp/cc1PNSdQ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"sd.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.rodata.init_sd.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC0:
  19 0000 6E616D65 		.ascii	"name.txt\000"
  19      2E747874 
  19      00
  20 0009 000000   		.align	2
  21              	.LC1:
  22 000c 6D6F756E 		.ascii	"mounted, opened\015\012\000"
  22      7465642C 
  22      206F7065 
  22      6E65640D 
  22      0A00
  23 001e 0000     		.align	2
  24              	.LC2:
  25 0020 25730D0A 		.ascii	"%s\015\012\000"
  25      00
  26 0025 000000   		.align	2
  27              	.LC3:
  28 0028 6C6F675F 		.ascii	"log_%d \000"
  28      25642000 
  29              		.align	2
  30              	.LC4:
  31 0030 64656661 		.ascii	"default.txt\000"
  31      756C742E 
  31      74787400 
  32              		.align	2
  33              	.LC5:
  34 003c 63726561 		.ascii	"created -> default.txt\015\012\000"
  34      74656420 
  34      2D3E2064 
  34      65666175 
  34      6C742E74 
  35 0055 000000   		.align	2
  36              	.LC6:
  37 0058 6C6F675F 		.ascii	"log_0 \011\015\012\000"
  37      3020090D 
  37      0A00
  38 0062 0000     		.align	2
  39              	.LC7:
  40 0064 4C6F675F 		.ascii	"Log_0.txt\000"
  40      302E7478 
ARM GAS  /tmp/cc1PNSdQ.s 			page 2


  40      7400
  41 006e 0000     		.align	2
  42              	.LC8:
  43 0070 0D0A6372 		.ascii	"\015\012created -> Log_0\015\012\000"
  43      65617465 
  43      64202D3E 
  43      204C6F67 
  43      5F300D0A 
  44 0085 000000   		.align	2
  45              	.LC9:
  46 0088 6C6F675F 		.ascii	"log_%d \011\015\012\000"
  46      25642009 
  46      0D0A00
  47 0093 00       		.align	2
  48              	.LC10:
  49 0094 4C6F675F 		.ascii	"Log_%d.txt\000"
  49      25642E74 
  49      787400
  50 009f 00       		.align	2
  51              	.LC11:
  52 00a0 0D0A6372 		.ascii	"\015\012created -> \000"
  52      65617465 
  52      64202D3E 
  52      2000
  53 00ae 0000     		.align	2
  54              	.LC12:
  55 00b0 0D0A00   		.ascii	"\015\012\000"
  56 00b3 00       		.align	2
  57              	.LC13:
  58 00b4 66696C65 		.ascii	"files closed\015\012\000"
  58      7320636C 
  58      6F736564 
  58      0D0A00
  59              		.section	.text.init_sd,"ax",%progbits
  60              		.align	1
  61              		.global	init_sd
  62              		.arch armv7e-m
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv5-d16
  68              	init_sd:
  69              	.LFB144:
  70              		.file 1 "Src/sd.c"
   1:Src/sd.c      **** #include "global_variables.h"
   2:Src/sd.c      **** #include "fatfs.h"
   3:Src/sd.c      **** #include "string.h"
   4:Src/sd.c      **** #include "stdio.h"
   5:Src/sd.c      **** #include "sd.h"
   6:Src/sd.c      **** 
   7:Src/sd.c      **** 
   8:Src/sd.c      **** //--- RESULT VARIABLES FOR SD ---//
   9:Src/sd.c      **** FRESULT res_open;
  10:Src/sd.c      **** FRESULT res_mount;
  11:Src/sd.c      **** 
  12:Src/sd.c      **** //--- FILE OBJECT FOR SD ---//
  13:Src/sd.c      **** FIL loggingFile;
ARM GAS  /tmp/cc1PNSdQ.s 			page 3


  14:Src/sd.c      **** FIL pot_values_f;
  15:Src/sd.c      **** FIL log_names_f;
  16:Src/sd.c      **** 
  17:Src/sd.c      **** TCHAR message[256];
  18:Src/sd.c      **** char filename[256] = "abcabc.txt";
  19:Src/sd.c      **** char filename_1[256]="log_names.txt";
  20:Src/sd.c      **** char filename_pot[14] = "pot_values.txt";
  21:Src/sd.c      **** char txt[1000];
  22:Src/sd.c      **** 
  23:Src/sd.c      **** int max_files = 100;
  24:Src/sd.c      **** int byteswritten;
  25:Src/sd.c      **** int mount_ok = 0;
  26:Src/sd.c      **** int msg_counter = 0;
  27:Src/sd.c      **** int msg_index = 0;
  28:Src/sd.c      **** 
  29:Src/sd.c      **** char buffer[256]="Starting Antenna Logging\r\n";
  30:Src/sd.c      **** int bytes_read;
  31:Src/sd.c      **** 
  32:Src/sd.c      **** char *pointer;
  33:Src/sd.c      **** char log_names[900];
  34:Src/sd.c      **** 
  35:Src/sd.c      **** uint8_t pot_values_loaded = 0;
  36:Src/sd.c      **** 
  37:Src/sd.c      **** int successfull_opening = 0;
  38:Src/sd.c      **** 
  39:Src/sd.c      **** //----------------------------------------//
  40:Src/sd.c      **** //------------- FUNCTIONS ----------------//
  41:Src/sd.c      **** //----------------------------------------//
  42:Src/sd.c      **** 
  43:Src/sd.c      **** void init_sd(){
  71              		.loc 1 43 15 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 360
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 20
  78              		.cfi_offset 4, -20
  79              		.cfi_offset 5, -16
  80              		.cfi_offset 6, -12
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 DBB0     		sub	sp, sp, #364
  84              	.LCFI1:
  85              		.cfi_def_cfa_offset 384
  44:Src/sd.c      ****     res_mount = f_mount(&SDFatFS, (TCHAR const*)SDPath, 1); //try to mount sd card
  86              		.loc 1 44 5 view .LVU1
  87              		.loc 1 44 17 is_stmt 0 view .LVU2
  88 0004 0122     		movs	r2, #1
  89 0006 9649     		ldr	r1, .L29
  90 0008 9648     		ldr	r0, .L29+4
  91 000a FFF7FEFF 		bl	f_mount
  92              	.LVL0:
  93              		.loc 1 44 15 view .LVU3
  94 000e 964B     		ldr	r3, .L29+8
  95 0010 1870     		strb	r0, [r3]
  45:Src/sd.c      **** 
ARM GAS  /tmp/cc1PNSdQ.s 			page 4


  46:Src/sd.c      **** 	if (res_mount == FR_OK) {
  96              		.loc 1 46 2 is_stmt 1 view .LVU4
  97              		.loc 1 46 5 is_stmt 0 view .LVU5
  98 0012 20B1     		cbz	r0, .L21
  47:Src/sd.c      **** 		sprintf(filename_1, "name.txt");
  48:Src/sd.c      **** 		res_open = f_open(&log_names_f, (TCHAR const*)&filename_1, FA_OPEN_ALWAYS | FA_READ ); //open "na
  49:Src/sd.c      **** 		if(res_open == 0)f_read(&log_names_f, log_names, 1000, (void*)&bytes_read); //read into file "nam
  50:Src/sd.c      **** 
  51:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"mounted, opened\r\n",strlen("mounted, opened\r\n"),10);
  52:Src/sd.c      **** 
  53:Src/sd.c      **** 		sprintf(txt, "%s\r\n", log_names);
  54:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
  55:Src/sd.c      **** 
  56:Src/sd.c      **** 		char name[256];
  57:Src/sd.c      **** 
  58:Src/sd.c      **** 		f_close(&log_names_f); // close the file
  59:Src/sd.c      **** 		f_open(&log_names_f, (TCHAR const*)&filename_1, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
  60:Src/sd.c      **** 
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
  62:Src/sd.c      **** 
  63:Src/sd.c      **** 			sprintf(name, "log_%d ", i);
  64:Src/sd.c      **** 
  65:Src/sd.c      **** 			pointer = strstr(log_names, name);
  66:Src/sd.c      **** 
  67:Src/sd.c      **** 			if(i == max_files){
  68:Src/sd.c      **** 				sprintf(filename,"default.txt");
  69:Src/sd.c      **** 
  70:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
  71:Src/sd.c      **** 				f_write(&loggingFile, buffer, strlen(buffer), (void*)&byteswritten);
  72:Src/sd.c      **** 				f_close(&loggingFile);
  73:Src/sd.c      **** 				//f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_
  74:Src/sd.c      **** 
  75:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"created -> default.txt\r\n",strlen("created -> default.txt
  76:Src/sd.c      **** 
  77:Src/sd.c      **** 				successfull_opening = 1;
  78:Src/sd.c      **** 
  79:Src/sd.c      **** 				break;
  80:Src/sd.c      **** 			}
  81:Src/sd.c      **** 
  82:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
  83:Src/sd.c      **** 
  84:Src/sd.c      **** 				sprintf(filename, "log_0 \t\r\n");
  85:Src/sd.c      **** 
  86:Src/sd.c      **** 				f_write(&log_names_f, filename, strlen(filename), (void*)&byteswritten);
  87:Src/sd.c      **** 				f_close(&log_names_f);
  88:Src/sd.c      **** 
  89:Src/sd.c      **** 				sprintf(filename, "Log_0.txt");
  90:Src/sd.c      **** 
  91:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
  92:Src/sd.c      **** 				f_write(&loggingFile, buffer, strlen(buffer), (void*)&byteswritten);
  93:Src/sd.c      **** 				f_close(&loggingFile);
  94:Src/sd.c      **** 				//f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_
  95:Src/sd.c      **** 
  96:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> Log_0\r\n",strlen("\r\ncreated -> Log_0\r\n
  97:Src/sd.c      **** 
  98:Src/sd.c      **** 				successfull_opening = 1;
  99:Src/sd.c      **** 
ARM GAS  /tmp/cc1PNSdQ.s 			page 5


 100:Src/sd.c      **** 				break;
 101:Src/sd.c      **** 			}
 102:Src/sd.c      **** 			if(pointer == NULL){
 103:Src/sd.c      **** 				sprintf(filename, "log_%d \t\r\n", i);
 104:Src/sd.c      **** 
 105:Src/sd.c      **** 				f_write(&log_names_f, filename, strlen(filename), (void*)&byteswritten);
 106:Src/sd.c      **** 				f_close(&log_names_f);
 107:Src/sd.c      **** 
 108:Src/sd.c      **** 				sprintf(filename, "Log_%d.txt", i);
 109:Src/sd.c      **** 
 110:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 111:Src/sd.c      **** 				f_write(&loggingFile, buffer, strlen(buffer), (void*)&byteswritten);
 112:Src/sd.c      **** 				f_close(&loggingFile);
 113:Src/sd.c      **** 				//f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_
 114:Src/sd.c      **** 
 115:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> ",strlen("\r\ncreated -> "),10);
 116:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename, strlen(filename), 10);
 117:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) "\r\n", strlen("\r\n"),10);
 118:Src/sd.c      **** 
 119:Src/sd.c      **** 				successfull_opening = 1;
 120:Src/sd.c      **** 
 121:Src/sd.c      **** 				break;
 122:Src/sd.c      **** 			}
 123:Src/sd.c      **** 		}
 124:Src/sd.c      **** 
 125:Src/sd.c      **** 		mount_ok = 1;
 126:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"files closed\r\n",strlen("files closed\r\n"),10);
 127:Src/sd.c      **** 
 128:Src/sd.c      **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_ALWAYS | FA_READ ); //open 
 129:Src/sd.c      **** 		char pot_values[100];
 130:Src/sd.c      **** 		if(res_open == 0){
 131:Src/sd.c      **** 			f_read(&pot_values_f, pot_values, 100, (void*)&bytes_read); //read into file "pot_values.txt" an
 132:Src/sd.c      **** 			char val_pot[6];
 133:Src/sd.c      **** 			val_pot[5] = '\0';
 134:Src/sd.c      **** 			for(int i=0; i<5 ; i++){
 135:Src/sd.c      **** 				val_pot[i] = pot_values[i];
 136:Src/sd.c      **** 			}
 137:Src/sd.c      **** 			//accel.max_val = atoi(val_pot);
 138:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 139:Src/sd.c      **** 				val_pot[i] = pot_values[i+7];
 140:Src/sd.c      **** 			}
 141:Src/sd.c      **** 			//accel.min_val = atoi(val_pot);
 142:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 143:Src/sd.c      **** 				val_pot[i] = pot_values[i+14];
 144:Src/sd.c      **** 			}
 145:Src/sd.c      **** 			//brake.max_val = atoi(pot_values);
 146:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 147:Src/sd.c      **** 				val_pot[i] = pot_values[i+21];
 148:Src/sd.c      **** 			}
 149:Src/sd.c      **** 			//brake.min_val = atoi(pot_values);
 150:Src/sd.c      **** 			
 151:Src/sd.c      **** 			pot_values_loaded = 1;
 152:Src/sd.c      **** 
 153:Src/sd.c      **** 		}
 154:Src/sd.c      **** 		
 155:Src/sd.c      **** 	}else {
 156:Src/sd.c      **** 		mount_ok = 0;
ARM GAS  /tmp/cc1PNSdQ.s 			page 6


  99              		.loc 1 156 3 is_stmt 1 view .LVU6
 100              		.loc 1 156 12 is_stmt 0 view .LVU7
 101 0014 954B     		ldr	r3, .L29+12
 102 0016 0022     		movs	r2, #0
 103 0018 1A60     		str	r2, [r3]
 104              	.L1:
 157:Src/sd.c      **** 	}
 158:Src/sd.c      **** }...
 105              		.loc 1 158 1 view .LVU8
 106 001a 5BB0     		add	sp, sp, #364
 107              	.LCFI2:
 108              		.cfi_remember_state
 109              		.cfi_def_cfa_offset 20
 110              		@ sp needed
 111 001c F0BD     		pop	{r4, r5, r6, r7, pc}
 112              	.L21:
 113              	.LCFI3:
 114              		.cfi_restore_state
 115              	.LBB2:
  47:Src/sd.c      **** 		sprintf(filename_1, "name.txt");
 116              		.loc 1 47 3 is_stmt 1 view .LVU9
 117 001e 944C     		ldr	r4, .L29+16
 118 0020 944A     		ldr	r2, .L29+20
 119 0022 2346     		mov	r3, r4
 120 0024 07CA     		ldm	r2, {r0, r1, r2}
 121 0026 03C3     		stmia	r3!, {r0, r1}
 122 0028 1A70     		strb	r2, [r3]
  48:Src/sd.c      **** 		res_open = f_open(&log_names_f, (TCHAR const*)&filename_1, FA_OPEN_ALWAYS | FA_READ ); //open "na
 123              		.loc 1 48 3 view .LVU10
  48:Src/sd.c      **** 		res_open = f_open(&log_names_f, (TCHAR const*)&filename_1, FA_OPEN_ALWAYS | FA_READ ); //open "na
 124              		.loc 1 48 14 is_stmt 0 view .LVU11
 125 002a 1122     		movs	r2, #17
 126 002c 2146     		mov	r1, r4
 127 002e 9248     		ldr	r0, .L29+24
 128 0030 FFF7FEFF 		bl	f_open
 129              	.LVL1:
  48:Src/sd.c      **** 		res_open = f_open(&log_names_f, (TCHAR const*)&filename_1, FA_OPEN_ALWAYS | FA_READ ); //open "na
 130              		.loc 1 48 12 view .LVU12
 131 0034 914B     		ldr	r3, .L29+28
 132 0036 1870     		strb	r0, [r3]
  49:Src/sd.c      **** 		if(res_open == 0)f_read(&log_names_f, log_names, 1000, (void*)&bytes_read); //read into file "nam
 133              		.loc 1 49 3 is_stmt 1 view .LVU13
  49:Src/sd.c      **** 		if(res_open == 0)f_read(&log_names_f, log_names, 1000, (void*)&bytes_read); //read into file "nam
 134              		.loc 1 49 5 is_stmt 0 view .LVU14
 135 0038 00B3     		cbz	r0, .L22
 136              	.L3:
  51:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"mounted, opened\r\n",strlen("mounted, opened\r\n"),10);
 137              		.loc 1 51 3 is_stmt 1 view .LVU15
 138 003a 914D     		ldr	r5, .L29+32
 139 003c 0A23     		movs	r3, #10
 140 003e 1122     		movs	r2, #17
 141 0040 9049     		ldr	r1, .L29+36
 142 0042 2846     		mov	r0, r5
 143 0044 FFF7FEFF 		bl	HAL_UART_Transmit
 144              	.LVL2:
  53:Src/sd.c      **** 		sprintf(txt, "%s\r\n", log_names);
 145              		.loc 1 53 3 view .LVU16
ARM GAS  /tmp/cc1PNSdQ.s 			page 7


 146 0048 8F4C     		ldr	r4, .L29+40
 147 004a 904A     		ldr	r2, .L29+44
 148 004c 9049     		ldr	r1, .L29+48
 149 004e 2046     		mov	r0, r4
 150 0050 FFF7FEFF 		bl	sprintf
 151              	.LVL3:
  54:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 152              		.loc 1 54 3 view .LVU17
  54:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 153              		.loc 1 54 43 is_stmt 0 view .LVU18
 154 0054 2046     		mov	r0, r4
 155 0056 FFF7FEFF 		bl	strlen
 156              	.LVL4:
  54:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 157              		.loc 1 54 3 view .LVU19
 158 005a 6423     		movs	r3, #100
 159 005c 82B2     		uxth	r2, r0
 160 005e 2146     		mov	r1, r4
 161 0060 2846     		mov	r0, r5
 162 0062 FFF7FEFF 		bl	HAL_UART_Transmit
 163              	.LVL5:
  56:Src/sd.c      **** 		char name[256];
 164              		.loc 1 56 3 is_stmt 1 view .LVU20
  58:Src/sd.c      **** 		f_close(&log_names_f); // close the file
 165              		.loc 1 58 3 view .LVU21
 166 0066 844C     		ldr	r4, .L29+24
 167 0068 2046     		mov	r0, r4
 168 006a FFF7FEFF 		bl	f_close
 169              	.LVL6:
  59:Src/sd.c      **** 		f_open(&log_names_f, (TCHAR const*)&filename_1, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 170              		.loc 1 59 3 view .LVU22
 171 006e 3322     		movs	r2, #51
 172 0070 7F49     		ldr	r1, .L29+16
 173 0072 2046     		mov	r0, r4
 174 0074 FFF7FEFF 		bl	f_open
 175              	.LVL7:
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 176              		.loc 1 61 3 view .LVU23
 177              	.LBB3:
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 178              		.loc 1 61 7 view .LVU24
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 179              		.loc 1 61 11 is_stmt 0 view .LVU25
 180 0078 0024     		movs	r4, #0
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 181              		.loc 1 61 3 view .LVU26
 182 007a 49E0     		b	.L4
 183              	.LVL8:
 184              	.L22:
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 185              		.loc 1 61 3 view .LVU27
 186              	.LBE3:
  49:Src/sd.c      **** 		if(res_open == 0)f_read(&log_names_f, log_names, 1000, (void*)&bytes_read); //read into file "nam
 187              		.loc 1 49 20 is_stmt 1 discriminator 1 view .LVU28
 188 007c 854B     		ldr	r3, .L29+52
 189 007e 4FF47A72 		mov	r2, #1000
 190 0082 8249     		ldr	r1, .L29+44
ARM GAS  /tmp/cc1PNSdQ.s 			page 8


 191 0084 7C48     		ldr	r0, .L29+24
 192 0086 FFF7FEFF 		bl	f_read
 193              	.LVL9:
 194 008a D6E7     		b	.L3
 195              	.LVL10:
 196              	.L25:
 197              	.LBB4:
  68:Src/sd.c      **** 				sprintf(filename,"default.txt");
 198              		.loc 1 68 5 view .LVU29
 199 008c 824B     		ldr	r3, .L29+56
 200 008e 834A     		ldr	r2, .L29+60
 201 0090 07CA     		ldm	r2, {r0, r1, r2}
 202 0092 83E80700 		stm	r3, {r0, r1, r2}
  70:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 203              		.loc 1 70 5 view .LVU30
 204 0096 824C     		ldr	r4, .L29+64
 205              	.LVL11:
  70:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 206              		.loc 1 70 5 is_stmt 0 view .LVU31
 207 0098 3322     		movs	r2, #51
 208 009a 1946     		mov	r1, r3
 209 009c 2046     		mov	r0, r4
 210 009e FFF7FEFF 		bl	f_open
 211              	.LVL12:
  71:Src/sd.c      **** 				f_write(&loggingFile, buffer, strlen(buffer), (void*)&byteswritten);
 212              		.loc 1 71 5 is_stmt 1 view .LVU32
 213 00a2 804D     		ldr	r5, .L29+68
 214 00a4 2846     		mov	r0, r5
 215 00a6 FFF7FEFF 		bl	strlen
 216              	.LVL13:
 217 00aa 0246     		mov	r2, r0
 218 00ac 7E4B     		ldr	r3, .L29+72
 219 00ae 2946     		mov	r1, r5
 220 00b0 2046     		mov	r0, r4
 221 00b2 FFF7FEFF 		bl	f_write
 222              	.LVL14:
  72:Src/sd.c      **** 				f_close(&loggingFile);
 223              		.loc 1 72 5 view .LVU33
 224 00b6 2046     		mov	r0, r4
 225 00b8 FFF7FEFF 		bl	f_close
 226              	.LVL15:
  75:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"created -> default.txt\r\n",strlen("created -> default.txt
 227              		.loc 1 75 5 view .LVU34
 228 00bc 0A23     		movs	r3, #10
 229 00be 1822     		movs	r2, #24
 230 00c0 7A49     		ldr	r1, .L29+76
 231 00c2 6F48     		ldr	r0, .L29+32
 232 00c4 FFF7FEFF 		bl	HAL_UART_Transmit
 233              	.LVL16:
  77:Src/sd.c      **** 				successfull_opening = 1;
 234              		.loc 1 77 5 view .LVU35
  77:Src/sd.c      **** 				successfull_opening = 1;
 235              		.loc 1 77 25 is_stmt 0 view .LVU36
 236 00c8 794B     		ldr	r3, .L29+80
 237 00ca 0122     		movs	r2, #1
 238 00cc 1A60     		str	r2, [r3]
  79:Src/sd.c      **** 				break;
ARM GAS  /tmp/cc1PNSdQ.s 			page 9


 239              		.loc 1 79 5 is_stmt 1 view .LVU37
 240              	.L6:
 241              	.LBE4:
 125:Src/sd.c      **** 		mount_ok = 1;
 242              		.loc 1 125 3 view .LVU38
 125:Src/sd.c      **** 		mount_ok = 1;
 243              		.loc 1 125 12 is_stmt 0 view .LVU39
 244 00ce 674B     		ldr	r3, .L29+12
 245 00d0 0122     		movs	r2, #1
 246 00d2 1A60     		str	r2, [r3]
 126:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"files closed\r\n",strlen("files closed\r\n"),10);
 247              		.loc 1 126 3 is_stmt 1 view .LVU40
 248 00d4 0A23     		movs	r3, #10
 249 00d6 0E22     		movs	r2, #14
 250 00d8 7649     		ldr	r1, .L29+84
 251 00da 6948     		ldr	r0, .L29+32
 252 00dc FFF7FEFF 		bl	HAL_UART_Transmit
 253              	.LVL17:
 128:Src/sd.c      **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_ALWAYS | FA_READ ); //open 
 254              		.loc 1 128 3 view .LVU41
 128:Src/sd.c      **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_ALWAYS | FA_READ ); //open 
 255              		.loc 1 128 14 is_stmt 0 view .LVU42
 256 00e0 1122     		movs	r2, #17
 257 00e2 7549     		ldr	r1, .L29+88
 258 00e4 7548     		ldr	r0, .L29+92
 259 00e6 FFF7FEFF 		bl	f_open
 260              	.LVL18:
 128:Src/sd.c      **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_ALWAYS | FA_READ ); //open 
 261              		.loc 1 128 12 view .LVU43
 262 00ea 644B     		ldr	r3, .L29+28
 263 00ec 1870     		strb	r0, [r3]
 129:Src/sd.c      **** 		char pot_values[100];
 264              		.loc 1 129 3 is_stmt 1 view .LVU44
 130:Src/sd.c      **** 		if(res_open == 0){
 265              		.loc 1 130 3 view .LVU45
 130:Src/sd.c      **** 		if(res_open == 0){
 266              		.loc 1 130 5 is_stmt 0 view .LVU46
 267 00ee 0028     		cmp	r0, #0
 268 00f0 93D1     		bne	.L1
 269              	.LBB5:
 131:Src/sd.c      **** 			f_read(&pot_values_f, pot_values, 100, (void*)&bytes_read); //read into file "pot_values.txt" an
 270              		.loc 1 131 4 is_stmt 1 view .LVU47
 271 00f2 684B     		ldr	r3, .L29+52
 272 00f4 6422     		movs	r2, #100
 273 00f6 01A9     		add	r1, sp, #4
 274 00f8 7048     		ldr	r0, .L29+92
 275 00fa FFF7FEFF 		bl	f_read
 276              	.LVL19:
 132:Src/sd.c      **** 			char val_pot[6];
 277              		.loc 1 132 4 view .LVU48
 133:Src/sd.c      **** 			val_pot[5] = '\0';
 278              		.loc 1 133 4 view .LVU49
 134:Src/sd.c      **** 			for(int i=0; i<5 ; i++){
 279              		.loc 1 134 4 view .LVU50
 280              	.LBB6:
 134:Src/sd.c      **** 			for(int i=0; i<5 ; i++){
 281              		.loc 1 134 8 view .LVU51
ARM GAS  /tmp/cc1PNSdQ.s 			page 10


 134:Src/sd.c      **** 			for(int i=0; i<5 ; i++){
 282              		.loc 1 134 12 is_stmt 0 view .LVU52
 283 00fe 0023     		movs	r3, #0
 284              	.LVL20:
 285              	.L11:
 134:Src/sd.c      **** 			for(int i=0; i<5 ; i++){
 286              		.loc 1 134 17 is_stmt 1 discriminator 1 view .LVU53
 134:Src/sd.c      **** 			for(int i=0; i<5 ; i++){
 287              		.loc 1 134 4 is_stmt 0 discriminator 1 view .LVU54
 288 0100 042B     		cmp	r3, #4
 289 0102 00F39980 		bgt	.L23
 135:Src/sd.c      **** 				val_pot[i] = pot_values[i];
 290              		.loc 1 135 5 is_stmt 1 discriminator 3 view .LVU55
 134:Src/sd.c      **** 			for(int i=0; i<5 ; i++){
 291              		.loc 1 134 23 discriminator 3 view .LVU56
 134:Src/sd.c      **** 			for(int i=0; i<5 ; i++){
 292              		.loc 1 134 24 is_stmt 0 discriminator 3 view .LVU57
 293 0106 0133     		adds	r3, r3, #1
 294              	.LVL21:
 134:Src/sd.c      **** 			for(int i=0; i<5 ; i++){
 295              		.loc 1 134 24 discriminator 3 view .LVU58
 296 0108 FAE7     		b	.L11
 297              	.LVL22:
 298              	.L7:
 134:Src/sd.c      **** 			for(int i=0; i<5 ; i++){
 299              		.loc 1 134 24 discriminator 3 view .LVU59
 300              	.LBE6:
 301              	.LBE5:
 302              	.LBB10:
 102:Src/sd.c      **** 			if(pointer == NULL){
 303              		.loc 1 102 4 is_stmt 1 view .LVU60
 102:Src/sd.c      **** 			if(pointer == NULL){
 304              		.loc 1 102 6 is_stmt 0 view .LVU61
 305 010a 0028     		cmp	r0, #0
 306 010c 4ED0     		beq	.L24
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 307              		.loc 1 61 33 is_stmt 1 discriminator 2 view .LVU62
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 308              		.loc 1 61 34 is_stmt 0 discriminator 2 view .LVU63
 309 010e 0134     		adds	r4, r4, #1
 310              	.LVL23:
 311              	.L4:
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 312              		.loc 1 61 18 is_stmt 1 discriminator 1 view .LVU64
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 313              		.loc 1 61 20 is_stmt 0 discriminator 1 view .LVU65
 314 0110 6B4B     		ldr	r3, .L29+96
 315 0112 1B68     		ldr	r3, [r3]
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 316              		.loc 1 61 3 discriminator 1 view .LVU66
 317 0114 A342     		cmp	r3, r4
 318 0116 DADD     		ble	.L6
  63:Src/sd.c      **** 			sprintf(name, "log_%d ", i);
 319              		.loc 1 63 4 is_stmt 1 view .LVU67
 320 0118 2246     		mov	r2, r4
 321 011a 6A49     		ldr	r1, .L29+100
 322 011c 1AA8     		add	r0, sp, #104
ARM GAS  /tmp/cc1PNSdQ.s 			page 11


 323 011e FFF7FEFF 		bl	sprintf
 324              	.LVL24:
  65:Src/sd.c      **** 			pointer = strstr(log_names, name);
 325              		.loc 1 65 4 view .LVU68
  65:Src/sd.c      **** 			pointer = strstr(log_names, name);
 326              		.loc 1 65 14 is_stmt 0 view .LVU69
 327 0122 1AA9     		add	r1, sp, #104
 328 0124 5948     		ldr	r0, .L29+44
 329 0126 FFF7FEFF 		bl	strstr
 330              	.LVL25:
  65:Src/sd.c      **** 			pointer = strstr(log_names, name);
 331              		.loc 1 65 12 view .LVU70
 332 012a 674B     		ldr	r3, .L29+104
 333 012c 1860     		str	r0, [r3]
  67:Src/sd.c      **** 			if(i == max_files){
 334              		.loc 1 67 4 is_stmt 1 view .LVU71
  67:Src/sd.c      **** 			if(i == max_files){
 335              		.loc 1 67 9 is_stmt 0 view .LVU72
 336 012e 644B     		ldr	r3, .L29+96
 337 0130 1B68     		ldr	r3, [r3]
  67:Src/sd.c      **** 			if(i == max_files){
 338              		.loc 1 67 6 view .LVU73
 339 0132 A342     		cmp	r3, r4
 340 0134 AAD0     		beq	.L25
  82:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
 341              		.loc 1 82 4 is_stmt 1 view .LVU74
  82:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
 342              		.loc 1 82 6 is_stmt 0 view .LVU75
 343 0136 002C     		cmp	r4, #0
 344 0138 E7D1     		bne	.L7
  82:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
 345              		.loc 1 82 14 discriminator 1 view .LVU76
 346 013a 0028     		cmp	r0, #0
 347 013c E5D1     		bne	.L7
  84:Src/sd.c      **** 				sprintf(filename, "log_0 \t\r\n");
 348              		.loc 1 84 5 is_stmt 1 view .LVU77
 349 013e 564D     		ldr	r5, .L29+56
 350 0140 624B     		ldr	r3, .L29+108
 351 0142 2C46     		mov	r4, r5
 352              	.LVL26:
  84:Src/sd.c      **** 				sprintf(filename, "log_0 \t\r\n");
 353              		.loc 1 84 5 is_stmt 0 view .LVU78
 354 0144 93E80700 		ldm	r3, {r0, r1, r2}
 355 0148 03C4     		stmia	r4!, {r0, r1}
 356 014a 2280     		strh	r2, [r4]	@ movhi
  86:Src/sd.c      **** 				f_write(&log_names_f, filename, strlen(filename), (void*)&byteswritten);
 357              		.loc 1 86 5 is_stmt 1 view .LVU79
 358 014c 2846     		mov	r0, r5
 359 014e FFF7FEFF 		bl	strlen
 360              	.LVL27:
 361 0152 0246     		mov	r2, r0
 362 0154 544E     		ldr	r6, .L29+72
 363 0156 484F     		ldr	r7, .L29+24
 364 0158 3346     		mov	r3, r6
 365 015a 2946     		mov	r1, r5
 366 015c 3846     		mov	r0, r7
 367 015e FFF7FEFF 		bl	f_write
ARM GAS  /tmp/cc1PNSdQ.s 			page 12


 368              	.LVL28:
  87:Src/sd.c      **** 				f_close(&log_names_f);
 369              		.loc 1 87 5 view .LVU80
 370 0162 3846     		mov	r0, r7
 371 0164 FFF7FEFF 		bl	f_close
 372              	.LVL29:
  89:Src/sd.c      **** 				sprintf(filename, "Log_0.txt");
 373              		.loc 1 89 5 view .LVU81
 374 0168 594A     		ldr	r2, .L29+112
 375 016a 2B46     		mov	r3, r5
 376 016c 07CA     		ldm	r2, {r0, r1, r2}
 377 016e 03C3     		stmia	r3!, {r0, r1}
 378 0170 2280     		strh	r2, [r4]	@ movhi
  91:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 379              		.loc 1 91 5 view .LVU82
 380 0172 4B4C     		ldr	r4, .L29+64
 381 0174 3322     		movs	r2, #51
 382 0176 2946     		mov	r1, r5
 383 0178 2046     		mov	r0, r4
 384 017a FFF7FEFF 		bl	f_open
 385              	.LVL30:
  92:Src/sd.c      **** 				f_write(&loggingFile, buffer, strlen(buffer), (void*)&byteswritten);
 386              		.loc 1 92 5 view .LVU83
 387 017e 494D     		ldr	r5, .L29+68
 388 0180 2846     		mov	r0, r5
 389 0182 FFF7FEFF 		bl	strlen
 390              	.LVL31:
 391 0186 0246     		mov	r2, r0
 392 0188 3346     		mov	r3, r6
 393 018a 2946     		mov	r1, r5
 394 018c 2046     		mov	r0, r4
 395 018e FFF7FEFF 		bl	f_write
 396              	.LVL32:
  93:Src/sd.c      **** 				f_close(&loggingFile);
 397              		.loc 1 93 5 view .LVU84
 398 0192 2046     		mov	r0, r4
 399 0194 FFF7FEFF 		bl	f_close
 400              	.LVL33:
  96:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> Log_0\r\n",strlen("\r\ncreated -> Log_0\r\n
 401              		.loc 1 96 5 view .LVU85
 402 0198 0A23     		movs	r3, #10
 403 019a 1422     		movs	r2, #20
 404 019c 4D49     		ldr	r1, .L29+116
 405 019e 3848     		ldr	r0, .L29+32
 406 01a0 FFF7FEFF 		bl	HAL_UART_Transmit
 407              	.LVL34:
  98:Src/sd.c      **** 				successfull_opening = 1;
 408              		.loc 1 98 5 view .LVU86
  98:Src/sd.c      **** 				successfull_opening = 1;
 409              		.loc 1 98 25 is_stmt 0 view .LVU87
 410 01a4 424B     		ldr	r3, .L29+80
 411 01a6 0122     		movs	r2, #1
 412 01a8 1A60     		str	r2, [r3]
 100:Src/sd.c      **** 				break;
 413              		.loc 1 100 5 is_stmt 1 view .LVU88
 414 01aa 90E7     		b	.L6
 415              	.LVL35:
ARM GAS  /tmp/cc1PNSdQ.s 			page 13


 416              	.L24:
 103:Src/sd.c      **** 				sprintf(filename, "log_%d \t\r\n", i);
 417              		.loc 1 103 5 view .LVU89
 418 01ac 3A4D     		ldr	r5, .L29+56
 419 01ae 2246     		mov	r2, r4
 420 01b0 4949     		ldr	r1, .L29+120
 421 01b2 2846     		mov	r0, r5
 422 01b4 FFF7FEFF 		bl	sprintf
 423              	.LVL36:
 105:Src/sd.c      **** 				f_write(&log_names_f, filename, strlen(filename), (void*)&byteswritten);
 424              		.loc 1 105 5 view .LVU90
 425 01b8 2846     		mov	r0, r5
 426 01ba FFF7FEFF 		bl	strlen
 427              	.LVL37:
 428 01be 0246     		mov	r2, r0
 429 01c0 394F     		ldr	r7, .L29+72
 430 01c2 2D4E     		ldr	r6, .L29+24
 431 01c4 3B46     		mov	r3, r7
 432 01c6 2946     		mov	r1, r5
 433 01c8 3046     		mov	r0, r6
 434 01ca FFF7FEFF 		bl	f_write
 435              	.LVL38:
 106:Src/sd.c      **** 				f_close(&log_names_f);
 436              		.loc 1 106 5 view .LVU91
 437 01ce 3046     		mov	r0, r6
 438 01d0 FFF7FEFF 		bl	f_close
 439              	.LVL39:
 108:Src/sd.c      **** 				sprintf(filename, "Log_%d.txt", i);
 440              		.loc 1 108 5 view .LVU92
 441 01d4 2246     		mov	r2, r4
 442 01d6 4149     		ldr	r1, .L29+124
 443 01d8 2846     		mov	r0, r5
 444 01da FFF7FEFF 		bl	sprintf
 445              	.LVL40:
 110:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 446              		.loc 1 110 5 view .LVU93
 447 01de 304C     		ldr	r4, .L29+64
 448              	.LVL41:
 110:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_WR
 449              		.loc 1 110 5 is_stmt 0 view .LVU94
 450 01e0 3322     		movs	r2, #51
 451 01e2 2946     		mov	r1, r5
 452 01e4 2046     		mov	r0, r4
 453 01e6 FFF7FEFF 		bl	f_open
 454              	.LVL42:
 111:Src/sd.c      **** 				f_write(&loggingFile, buffer, strlen(buffer), (void*)&byteswritten);
 455              		.loc 1 111 5 is_stmt 1 view .LVU95
 456 01ea 2E4E     		ldr	r6, .L29+68
 457 01ec 3046     		mov	r0, r6
 458 01ee FFF7FEFF 		bl	strlen
 459              	.LVL43:
 460 01f2 0246     		mov	r2, r0
 461 01f4 3B46     		mov	r3, r7
 462 01f6 3146     		mov	r1, r6
 463 01f8 2046     		mov	r0, r4
 464 01fa FFF7FEFF 		bl	f_write
 465              	.LVL44:
ARM GAS  /tmp/cc1PNSdQ.s 			page 14


 112:Src/sd.c      **** 				f_close(&loggingFile);
 466              		.loc 1 112 5 view .LVU96
 467 01fe 2046     		mov	r0, r4
 468 0200 FFF7FEFF 		bl	f_close
 469              	.LVL45:
 115:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> ",strlen("\r\ncreated -> "),10);
 470              		.loc 1 115 5 view .LVU97
 471 0204 1E4C     		ldr	r4, .L29+32
 472 0206 0A23     		movs	r3, #10
 473 0208 0D22     		movs	r2, #13
 474 020a 3549     		ldr	r1, .L29+128
 475 020c 2046     		mov	r0, r4
 476 020e FFF7FEFF 		bl	HAL_UART_Transmit
 477              	.LVL46:
 116:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename, strlen(filename), 10);
 478              		.loc 1 116 5 view .LVU98
 116:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename, strlen(filename), 10);
 479              		.loc 1 116 52 is_stmt 0 view .LVU99
 480 0212 2846     		mov	r0, r5
 481 0214 FFF7FEFF 		bl	strlen
 482              	.LVL47:
 116:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename, strlen(filename), 10);
 483              		.loc 1 116 5 view .LVU100
 484 0218 0A23     		movs	r3, #10
 485 021a 82B2     		uxth	r2, r0
 486 021c 2946     		mov	r1, r5
 487 021e 2046     		mov	r0, r4
 488 0220 FFF7FEFF 		bl	HAL_UART_Transmit
 489              	.LVL48:
 117:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) "\r\n", strlen("\r\n"),10);
 490              		.loc 1 117 5 is_stmt 1 view .LVU101
 491 0224 0A23     		movs	r3, #10
 492 0226 0222     		movs	r2, #2
 493 0228 2E49     		ldr	r1, .L29+132
 494 022a 2046     		mov	r0, r4
 495 022c FFF7FEFF 		bl	HAL_UART_Transmit
 496              	.LVL49:
 119:Src/sd.c      **** 				successfull_opening = 1;
 497              		.loc 1 119 5 view .LVU102
 119:Src/sd.c      **** 				successfull_opening = 1;
 498              		.loc 1 119 25 is_stmt 0 view .LVU103
 499 0230 1F4B     		ldr	r3, .L29+80
 500 0232 0122     		movs	r2, #1
 501 0234 1A60     		str	r2, [r3]
 121:Src/sd.c      **** 				break;
 502              		.loc 1 121 5 is_stmt 1 view .LVU104
 503 0236 4AE7     		b	.L6
 504              	.LVL50:
 505              	.L23:
 121:Src/sd.c      **** 				break;
 506              		.loc 1 121 5 is_stmt 0 view .LVU105
 507              	.LBE10:
 508              	.LBB11:
 509              	.LBB7:
 138:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 510              		.loc 1 138 12 view .LVU106
 511 0238 0023     		movs	r3, #0
ARM GAS  /tmp/cc1PNSdQ.s 			page 15


 512              	.LVL51:
 513              	.L13:
 138:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 514              		.loc 1 138 18 is_stmt 1 discriminator 1 view .LVU107
 138:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 515              		.loc 1 138 4 is_stmt 0 discriminator 1 view .LVU108
 516 023a 042B     		cmp	r3, #4
 517 023c 01DC     		bgt	.L26
 139:Src/sd.c      **** 				val_pot[i] = pot_values[i+7];
 518              		.loc 1 139 5 is_stmt 1 discriminator 3 view .LVU109
 138:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 519              		.loc 1 138 24 discriminator 3 view .LVU110
 138:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 520              		.loc 1 138 25 is_stmt 0 discriminator 3 view .LVU111
 521 023e 0133     		adds	r3, r3, #1
 522              	.LVL52:
 138:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 523              		.loc 1 138 25 discriminator 3 view .LVU112
 524 0240 FBE7     		b	.L13
 525              	.L26:
 138:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 526              		.loc 1 138 25 discriminator 3 view .LVU113
 527              	.LBE7:
 528              	.LBB8:
 142:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 529              		.loc 1 142 12 view .LVU114
 530 0242 0023     		movs	r3, #0
 531              	.LVL53:
 532              	.L15:
 142:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 533              		.loc 1 142 18 is_stmt 1 discriminator 1 view .LVU115
 142:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 534              		.loc 1 142 4 is_stmt 0 discriminator 1 view .LVU116
 535 0244 042B     		cmp	r3, #4
 536 0246 01DC     		bgt	.L27
 143:Src/sd.c      **** 				val_pot[i] = pot_values[i+14];
 537              		.loc 1 143 5 is_stmt 1 discriminator 3 view .LVU117
 142:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 538              		.loc 1 142 24 discriminator 3 view .LVU118
 142:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 539              		.loc 1 142 25 is_stmt 0 discriminator 3 view .LVU119
 540 0248 0133     		adds	r3, r3, #1
 541              	.LVL54:
 142:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 542              		.loc 1 142 25 discriminator 3 view .LVU120
 543 024a FBE7     		b	.L15
 544              	.L27:
 142:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 545              		.loc 1 142 25 discriminator 3 view .LVU121
 546              	.LBE8:
 547              	.LBB9:
 146:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 548              		.loc 1 146 12 view .LVU122
 549 024c 0023     		movs	r3, #0
 550              	.LVL55:
 551              	.L17:
 146:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
ARM GAS  /tmp/cc1PNSdQ.s 			page 16


 552              		.loc 1 146 18 is_stmt 1 discriminator 1 view .LVU123
 146:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 553              		.loc 1 146 4 is_stmt 0 discriminator 1 view .LVU124
 554 024e 042B     		cmp	r3, #4
 555 0250 01DC     		bgt	.L28
 147:Src/sd.c      **** 				val_pot[i] = pot_values[i+21];
 556              		.loc 1 147 5 is_stmt 1 discriminator 3 view .LVU125
 146:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 557              		.loc 1 146 24 discriminator 3 view .LVU126
 146:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 558              		.loc 1 146 25 is_stmt 0 discriminator 3 view .LVU127
 559 0252 0133     		adds	r3, r3, #1
 560              	.LVL56:
 146:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 561              		.loc 1 146 25 discriminator 3 view .LVU128
 562 0254 FBE7     		b	.L17
 563              	.L28:
 146:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 564              		.loc 1 146 25 discriminator 3 view .LVU129
 565              	.LBE9:
 151:Src/sd.c      **** 			pot_values_loaded = 1;
 566              		.loc 1 151 4 is_stmt 1 view .LVU130
 151:Src/sd.c      **** 			pot_values_loaded = 1;
 567              		.loc 1 151 22 is_stmt 0 view .LVU131
 568 0256 244B     		ldr	r3, .L29+136
 569              	.LVL57:
 151:Src/sd.c      **** 			pot_values_loaded = 1;
 570              		.loc 1 151 22 view .LVU132
 571 0258 0122     		movs	r2, #1
 572 025a 1A70     		strb	r2, [r3]
 573 025c DDE6     		b	.L1
 574              	.L30:
 575 025e 00BF     		.align	2
 576              	.L29:
 577 0260 00000000 		.word	SDPath
 578 0264 00000000 		.word	SDFatFS
 579 0268 00000000 		.word	res_mount
 580 026c 00000000 		.word	.LANCHOR5
 581 0270 00000000 		.word	.LANCHOR0
 582 0274 00000000 		.word	.LC0
 583 0278 00000000 		.word	log_names_f
 584 027c 00000000 		.word	res_open
 585 0280 00000000 		.word	huart3
 586 0284 0C000000 		.word	.LC1
 587 0288 00000000 		.word	txt
 588 028c 00000000 		.word	log_names
 589 0290 20000000 		.word	.LC2
 590 0294 00000000 		.word	bytes_read
 591 0298 00000000 		.word	.LANCHOR2
 592 029c 30000000 		.word	.LC4
 593 02a0 00000000 		.word	loggingFile
 594 02a4 00000000 		.word	.LANCHOR3
 595 02a8 00000000 		.word	byteswritten
 596 02ac 3C000000 		.word	.LC5
 597 02b0 00000000 		.word	.LANCHOR4
 598 02b4 B4000000 		.word	.LC13
 599 02b8 00000000 		.word	.LANCHOR6
ARM GAS  /tmp/cc1PNSdQ.s 			page 17


 600 02bc 00000000 		.word	pot_values_f
 601 02c0 00000000 		.word	.LANCHOR1
 602 02c4 28000000 		.word	.LC3
 603 02c8 00000000 		.word	pointer
 604 02cc 58000000 		.word	.LC6
 605 02d0 64000000 		.word	.LC7
 606 02d4 70000000 		.word	.LC8
 607 02d8 88000000 		.word	.LC9
 608 02dc 94000000 		.word	.LC10
 609 02e0 A0000000 		.word	.LC11
 610 02e4 B0000000 		.word	.LC12
 611 02e8 00000000 		.word	.LANCHOR7
 612              	.LBE11:
 613              	.LBE2:
 614              		.cfi_endproc
 615              	.LFE144:
 617              		.global	successfull_opening
 618              		.global	pot_values_loaded
 619              		.comm	log_names,900,4
 620              		.comm	pointer,4,4
 621              		.comm	bytes_read,4,4
 622              		.global	buffer
 623              		.global	msg_index
 624              		.global	msg_counter
 625              		.global	mount_ok
 626              		.comm	byteswritten,4,4
 627              		.global	max_files
 628              		.comm	txt,1000,4
 629              		.global	filename_pot
 630              		.global	filename_1
 631              		.global	filename
 632              		.comm	message,256,4
 633              		.comm	log_names_f,560,4
 634              		.comm	pot_values_f,560,4
 635              		.comm	loggingFile,560,4
 636              		.comm	res_mount,1,1
 637              		.comm	res_open,1,1
 638              		.section	.bss.mount_ok,"aw",%nobits
 639              		.align	2
 640              		.set	.LANCHOR5,. + 0
 643              	mount_ok:
 644 0000 00000000 		.space	4
 645              		.section	.bss.msg_counter,"aw",%nobits
 646              		.align	2
 649              	msg_counter:
 650 0000 00000000 		.space	4
 651              		.section	.bss.msg_index,"aw",%nobits
 652              		.align	2
 655              	msg_index:
 656 0000 00000000 		.space	4
 657              		.section	.bss.pot_values_loaded,"aw",%nobits
 658              		.set	.LANCHOR7,. + 0
 661              	pot_values_loaded:
 662 0000 00       		.space	1
 663              		.section	.bss.successfull_opening,"aw",%nobits
 664              		.align	2
 665              		.set	.LANCHOR4,. + 0
ARM GAS  /tmp/cc1PNSdQ.s 			page 18


 668              	successfull_opening:
 669 0000 00000000 		.space	4
 670              		.section	.data.buffer,"aw"
 671              		.align	2
 672              		.set	.LANCHOR3,. + 0
 675              	buffer:
 676 0000 53746172 		.ascii	"Starting Antenna Logging\015\012\000"
 676      74696E67 
 676      20416E74 
 676      656E6E61 
 676      204C6F67 
 677 001b 00000000 		.space	229
 677      00000000 
 677      00000000 
 677      00000000 
 677      00000000 
 678              		.section	.data.filename,"aw"
 679              		.align	2
 680              		.set	.LANCHOR2,. + 0
 683              	filename:
 684 0000 61626361 		.ascii	"abcabc.txt\000"
 684      62632E74 
 684      787400
 685 000b 00000000 		.space	245
 685      00000000 
 685      00000000 
 685      00000000 
 685      00000000 
 686              		.section	.data.filename_1,"aw"
 687              		.align	2
 688              		.set	.LANCHOR0,. + 0
 691              	filename_1:
 692 0000 6C6F675F 		.ascii	"log_names.txt\000"
 692      6E616D65 
 692      732E7478 
 692      7400
 693 000e 00000000 		.space	242
 693      00000000 
 693      00000000 
 693      00000000 
 693      00000000 
 694              		.section	.data.filename_pot,"aw"
 695              		.align	2
 696              		.set	.LANCHOR6,. + 0
 699              	filename_pot:
 700 0000 706F745F 		.ascii	"pot_values.txt"
 700      76616C75 
 700      65732E74 
 700      7874
 701              		.section	.data.max_files,"aw"
 702              		.align	2
 703              		.set	.LANCHOR1,. + 0
 706              	max_files:
 707 0000 64000000 		.word	100
 708              		.text
 709              	.Letext0:
 710              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
ARM GAS  /tmp/cc1PNSdQ.s 			page 19


 711              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 712              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 713              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 714              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 715              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 716              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 717              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 718              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 719              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 720              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 721              		.file 13 "Inc/can.h"
 722              		.file 14 "Middlewares/Third_Party/FatFs/src/integer.h"
 723              		.file 15 "/usr/arm-none-eabi/include/sys/lock.h"
 724              		.file 16 "/usr/arm-none-eabi/include/sys/_types.h"
 725              		.file 17 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 726              		.file 18 "/usr/arm-none-eabi/include/sys/reent.h"
 727              		.file 19 "/usr/arm-none-eabi/include/stdlib.h"
 728              		.file 20 "Middlewares/Third_Party/FatFs/src/ff.h"
 729              		.file 21 "Middlewares/Third_Party/FatFs/src/diskio.h"
 730              		.file 22 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 731              		.file 23 "Inc/sd_diskio.h"
 732              		.file 24 "Inc/fatfs.h"
 733              		.file 25 "Inc/pedals.h"
 734              		.file 26 "Inc/global_variables.h"
 735              		.file 27 "/usr/arm-none-eabi/include/string.h"
 736              		.file 28 "/usr/arm-none-eabi/include/stdio.h"
ARM GAS  /tmp/cc1PNSdQ.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sd.c
     /tmp/cc1PNSdQ.s:17     .rodata.init_sd.str1.4:0000000000000000 $d
     /tmp/cc1PNSdQ.s:60     .text.init_sd:0000000000000000 $t
     /tmp/cc1PNSdQ.s:68     .text.init_sd:0000000000000000 init_sd
     /tmp/cc1PNSdQ.s:577    .text.init_sd:0000000000000260 $d
                            *COM*:0000000000000001 res_mount
                            *COM*:0000000000000230 log_names_f
                            *COM*:0000000000000001 res_open
                            *COM*:00000000000003e8 txt
                            *COM*:0000000000000384 log_names
                            *COM*:0000000000000004 bytes_read
                            *COM*:0000000000000230 loggingFile
                            *COM*:0000000000000004 byteswritten
                            *COM*:0000000000000230 pot_values_f
                            *COM*:0000000000000004 pointer
     /tmp/cc1PNSdQ.s:668    .bss.successfull_opening:0000000000000000 successfull_opening
     /tmp/cc1PNSdQ.s:661    .bss.pot_values_loaded:0000000000000000 pot_values_loaded
     /tmp/cc1PNSdQ.s:675    .data.buffer:0000000000000000 buffer
     /tmp/cc1PNSdQ.s:655    .bss.msg_index:0000000000000000 msg_index
     /tmp/cc1PNSdQ.s:649    .bss.msg_counter:0000000000000000 msg_counter
     /tmp/cc1PNSdQ.s:643    .bss.mount_ok:0000000000000000 mount_ok
     /tmp/cc1PNSdQ.s:706    .data.max_files:0000000000000000 max_files
     /tmp/cc1PNSdQ.s:699    .data.filename_pot:0000000000000000 filename_pot
     /tmp/cc1PNSdQ.s:691    .data.filename_1:0000000000000000 filename_1
     /tmp/cc1PNSdQ.s:683    .data.filename:0000000000000000 filename
                            *COM*:0000000000000100 message
     /tmp/cc1PNSdQ.s:639    .bss.mount_ok:0000000000000000 $d
     /tmp/cc1PNSdQ.s:646    .bss.msg_counter:0000000000000000 $d
     /tmp/cc1PNSdQ.s:652    .bss.msg_index:0000000000000000 $d
     /tmp/cc1PNSdQ.s:662    .bss.pot_values_loaded:0000000000000000 $d
     /tmp/cc1PNSdQ.s:664    .bss.successfull_opening:0000000000000000 $d
     /tmp/cc1PNSdQ.s:671    .data.buffer:0000000000000000 $d
     /tmp/cc1PNSdQ.s:679    .data.filename:0000000000000000 $d
     /tmp/cc1PNSdQ.s:687    .data.filename_1:0000000000000000 $d
     /tmp/cc1PNSdQ.s:695    .data.filename_pot:0000000000000000 $d
     /tmp/cc1PNSdQ.s:702    .data.max_files:0000000000000000 $d

UNDEFINED SYMBOLS
f_mount
f_open
HAL_UART_Transmit
sprintf
strlen
f_close
f_read
f_write
strstr
SDPath
SDFatFS
huart3
