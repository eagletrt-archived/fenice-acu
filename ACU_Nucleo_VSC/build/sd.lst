ARM GAS  /tmp/ccucFmKz.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"sd.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.init_sd,"ax",%progbits
  17              		.align	1
  18              		.global	init_sd
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	init_sd:
  25              	.LFB142:
  26              		.file 1 "Src/sd.c"
   1:Src/sd.c      **** #include "global_variables.h"
   2:Src/sd.c      **** #include "fatfs.h"
   3:Src/sd.c      **** #include "string.h"
   4:Src/sd.c      **** #include "stdio.h"
   5:Src/sd.c      **** #include "sd.h"
   6:Src/sd.c      **** 
   7:Src/sd.c      **** 
   8:Src/sd.c      **** //--- RESULT VARIABLES FOR SD ---//
   9:Src/sd.c      **** FRESULT res_open;
  10:Src/sd.c      **** FRESULT res_mount;
  11:Src/sd.c      **** 
  12:Src/sd.c      **** //--- FILE OBJECT FOR SD ---//
  13:Src/sd.c      **** FIL loggingFile;
  14:Src/sd.c      **** FIL pot_values_f;
  15:Src/sd.c      **** FIL log_names_f;
  16:Src/sd.c      **** 
  17:Src/sd.c      **** TCHAR message[256];
  18:Src/sd.c      **** char name_txt[] = "name.txt";
  19:Src/sd.c      **** char filename_log[50];
  20:Src/sd.c      **** char filename_pot[] = "potV.txt";
  21:Src/sd.c      **** char txt[2000];
  22:Src/sd.c      **** 
  23:Src/sd.c      **** int max_files = 100;
  24:Src/sd.c      **** UINT byteswritten;
  25:Src/sd.c      **** int mount_ok = 0;
  26:Src/sd.c      **** int msg_counter = 0;
  27:Src/sd.c      **** int msg_index = 0;
  28:Src/sd.c      **** 
  29:Src/sd.c      **** int bytes_read;
  30:Src/sd.c      **** 
  31:Src/sd.c      **** char *pointer;
  32:Src/sd.c      **** char log_names[1100];
ARM GAS  /tmp/ccucFmKz.s 			page 2


  33:Src/sd.c      **** 
  34:Src/sd.c      **** uint8_t pot_values_loaded = 0;
  35:Src/sd.c      **** 
  36:Src/sd.c      **** int successfull_opening = 0;
  37:Src/sd.c      **** 
  38:Src/sd.c      **** //----------------------------------------//
  39:Src/sd.c      **** //------------- FUNCTIONS ----------------//
  40:Src/sd.c      **** //----------------------------------------//
  41:Src/sd.c      **** 
  42:Src/sd.c      **** void init_sd(){
  27              		.loc 1 42 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 280
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 C6B0     		sub	sp, sp, #280
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 296
  43:Src/sd.c      ****     res_mount = f_mount(&SDFatFS, (TCHAR const*)SDPath, 1); //try to mount sd card
  41              		.loc 1 43 0
  42 0004 0122     		movs	r2, #1
  43 0006 9949     		ldr	r1, .L18
  44 0008 9948     		ldr	r0, .L18+4
  45 000a FFF7FEFF 		bl	f_mount
  46              	.LVL0:
  47 000e 994B     		ldr	r3, .L18+8
  48 0010 1870     		strb	r0, [r3]
  44:Src/sd.c      **** 
  45:Src/sd.c      **** 	if (res_mount == FR_OK) {
  49              		.loc 1 45 0
  50 0012 20B1     		cbz	r0, .L13
  46:Src/sd.c      **** 		res_open = f_open(&log_names_f, (TCHAR const*)&name_txt, FA_OPEN_ALWAYS | FA_READ ); //open "name
  47:Src/sd.c      **** 		if(res_open == 0)f_read(&log_names_f, log_names, 1099, (void*)&bytes_read); //read into file "nam
  48:Src/sd.c      **** 
  49:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"mounted, opened\r\n",strlen("mounted, opened\r\n"),10);
  50:Src/sd.c      **** 
  51:Src/sd.c      **** 		sprintf(txt, "FILENAME RES VAL: %d",(int)res_open);
  52:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
  53:Src/sd.c      **** 		/*sprintf(txt, "%s\r\n", log_names);
  54:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);*/
  55:Src/sd.c      **** 
  56:Src/sd.c      **** 		char name[256];
  57:Src/sd.c      **** 
  58:Src/sd.c      **** 		f_close(&log_names_f); // close the file
  59:Src/sd.c      **** 		f_open(&log_names_f, (TCHAR const*)&name_txt, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_WRITE );
  60:Src/sd.c      **** 
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
  62:Src/sd.c      **** 
  63:Src/sd.c      **** 			sprintf(name, "log_%d ", i);
  64:Src/sd.c      **** 
  65:Src/sd.c      **** 			pointer = strstr(log_names, name);
ARM GAS  /tmp/ccucFmKz.s 			page 3


  66:Src/sd.c      **** 
  67:Src/sd.c      **** 			if(i == max_files){
  68:Src/sd.c      **** 
  69:Src/sd.c      **** 				sprintf(filename_log,"default.txt");
  70:Src/sd.c      **** 
  71:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename_log, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | F
  72:Src/sd.c      **** 				f_close(&loggingFile);
  73:Src/sd.c      **** 				//f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_
  74:Src/sd.c      **** 
  75:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"created -> default.txt\r\n",strlen("created -> default.txt
  76:Src/sd.c      **** 
  77:Src/sd.c      **** 				successfull_opening = 1;
  78:Src/sd.c      **** 
  79:Src/sd.c      **** 				break;
  80:Src/sd.c      **** 			}
  81:Src/sd.c      **** 
  82:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
  83:Src/sd.c      **** 
  84:Src/sd.c      **** 				sprintf(filename_log, "log_0 \r\n");
  85:Src/sd.c      **** 
  86:Src/sd.c      **** 				f_write(&log_names_f, filename_log, strlen(filename_log), &byteswritten);
  87:Src/sd.c      **** 				f_close(&log_names_f);
  88:Src/sd.c      **** 
  89:Src/sd.c      **** 				sprintf(filename_log, "Log_0.txt");
  90:Src/sd.c      **** 
  91:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename_log, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | F
  92:Src/sd.c      **** 				f_close(&loggingFile);
  93:Src/sd.c      **** 				//f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_
  94:Src/sd.c      **** 
  95:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> Log_0\r\n",strlen("\r\ncreated -> Log_0\r\n
  96:Src/sd.c      **** 
  97:Src/sd.c      **** 				successfull_opening = 1;
  98:Src/sd.c      **** 
  99:Src/sd.c      **** 				break;
 100:Src/sd.c      **** 			}
 101:Src/sd.c      **** 			if(pointer == NULL){
 102:Src/sd.c      **** 
 103:Src/sd.c      **** 				sprintf(filename_log, "log_%d \r\n", i);
 104:Src/sd.c      **** 
 105:Src/sd.c      **** 				f_write(&log_names_f, filename_log, strlen(filename_log), (void*)&byteswritten);
 106:Src/sd.c      **** 				f_close(&log_names_f);
 107:Src/sd.c      **** 
 108:Src/sd.c      **** 				sprintf(filename_log, "Log_%d.txt", i);
 109:Src/sd.c      **** 
 110:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename_log, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | F
 111:Src/sd.c      **** 				f_close(&loggingFile);
 112:Src/sd.c      **** 				//f_open(&loggingFile, (TCHAR const*)&filename, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | FA_
 113:Src/sd.c      **** 
 114:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> ",strlen("\r\ncreated -> "),10);
 115:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename_log, strlen(filename_log), 10);
 116:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) "\r\n", strlen("\r\n"),10);
 117:Src/sd.c      **** 
 118:Src/sd.c      **** 				successfull_opening = 1;
 119:Src/sd.c      **** 
 120:Src/sd.c      **** 				break;
 121:Src/sd.c      **** 			}
 122:Src/sd.c      **** 		}
ARM GAS  /tmp/ccucFmKz.s 			page 4


 123:Src/sd.c      **** 
 124:Src/sd.c      **** 		mount_ok = 1;
 125:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"files closed\r\n",strlen("files closed\r\n"),10);
 126:Src/sd.c      **** 
 127:Src/sd.c      **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_EXISTING | FA_READ ); //ope
 128:Src/sd.c      **** 		char pot_values[100];
 129:Src/sd.c      **** 		sprintf(txt, "POT FILE VAL: %d\r\n",(int)res_open);
 130:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 131:Src/sd.c      **** 		if(res_open == FR_OK){
 132:Src/sd.c      **** 			
 133:Src/sd.c      **** 			/*HAL_UART_Transmit(&huart3,(uint8_t*)"\r\nPOT FILE OPEND\r\n",strlen("\r\nPOT FILE OPEND\r\n"),
 134:Src/sd.c      **** 			f_read(&pot_values_f, pot_values, 100, (void*)&bytes_read); //read into file "pot_values.txt" an
 135:Src/sd.c      **** 			char val_pot[6];
 136:Src/sd.c      **** 			val_pot[5] = '\0';
 137:Src/sd.c      **** 			for(int i=0; i<5 ; i++){
 138:Src/sd.c      **** 				val_pot[i] = pot_values[i];
 139:Src/sd.c      **** 			}
 140:Src/sd.c      **** 			//accel.max_val = atoi(val_pot);
 141:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 142:Src/sd.c      **** 				val_pot[i] = pot_values[i+7];
 143:Src/sd.c      **** 			}
 144:Src/sd.c      **** 			//accel.min_val = atoi(val_pot);
 145:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 146:Src/sd.c      **** 				val_pot[i] = pot_values[i+14];
 147:Src/sd.c      **** 			}
 148:Src/sd.c      **** 			//brake.max_val = atoi(pot_values);
 149:Src/sd.c      **** 			for(int i=0 ; i<5 ; i++){
 150:Src/sd.c      **** 				val_pot[i] = pot_values[i+21];
 151:Src/sd.c      **** 			}
 152:Src/sd.c      **** 			//brake.min_val = atoi(pot_values);
 153:Src/sd.c      **** 			
 154:Src/sd.c      **** 			pot_values_loaded = 1;*/
 155:Src/sd.c      **** 
 156:Src/sd.c      **** 		}else if(res_open == FR_NO_FILE){
 157:Src/sd.c      **** 			res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_CREATE_NEW | FA_WRITE );
 158:Src/sd.c      **** 			sprintf(txt, "POT FILE VAL2: %d\r\n",(int)res_open);
 159:Src/sd.c      **** 			HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 160:Src/sd.c      **** 			if(res_open == FR_OK){
 161:Src/sd.c      **** 
 162:Src/sd.c      **** 				char local_txt[] = "0000\r\n4096\r\n0000\r\n4096";
 163:Src/sd.c      **** 				f_write(&pot_values_f,(TCHAR const*)&local_txt,strlen(local_txt), &byteswritten);
 164:Src/sd.c      **** 				f_close(&pot_values_f);
 165:Src/sd.c      **** 			}
 166:Src/sd.c      **** 		}
 167:Src/sd.c      **** 		f_close(&pot_values_f);
 168:Src/sd.c      **** 		
 169:Src/sd.c      **** 	}else {
 170:Src/sd.c      **** 		mount_ok = 0;
  51              		.loc 1 170 0
  52 0014 0022     		movs	r2, #0
  53 0016 984B     		ldr	r3, .L18+12
  54 0018 1A60     		str	r2, [r3]
  55              	.L1:
 171:Src/sd.c      **** 	}
 172:Src/sd.c      **** }...
  56              		.loc 1 172 0
  57 001a 46B0     		add	sp, sp, #280
ARM GAS  /tmp/ccucFmKz.s 			page 5


  58              	.LCFI2:
  59              		.cfi_remember_state
  60              		.cfi_def_cfa_offset 16
  61              		@ sp needed
  62 001c 70BD     		pop	{r4, r5, r6, pc}
  63              	.L13:
  64              	.LCFI3:
  65              		.cfi_restore_state
  66              	.LBB2:
  46:Src/sd.c      **** 		res_open = f_open(&log_names_f, (TCHAR const*)&name_txt, FA_OPEN_ALWAYS | FA_READ ); //open "name
  67              		.loc 1 46 0
  68 001e 1122     		movs	r2, #17
  69 0020 9649     		ldr	r1, .L18+16
  70 0022 9748     		ldr	r0, .L18+20
  71 0024 FFF7FEFF 		bl	f_open
  72              	.LVL1:
  73 0028 964B     		ldr	r3, .L18+24
  74 002a 1870     		strb	r0, [r3]
  47:Src/sd.c      **** 		if(res_open == 0)f_read(&log_names_f, log_names, 1099, (void*)&bytes_read); //read into file "nam
  75              		.loc 1 47 0
  76 002c 08B3     		cbz	r0, .L14
  77              	.L3:
  49:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"mounted, opened\r\n",strlen("mounted, opened\r\n"),10);
  78              		.loc 1 49 0
  79 002e 964D     		ldr	r5, .L18+28
  80 0030 0A23     		movs	r3, #10
  81 0032 1122     		movs	r2, #17
  82 0034 9549     		ldr	r1, .L18+32
  83 0036 2846     		mov	r0, r5
  84 0038 FFF7FEFF 		bl	HAL_UART_Transmit
  85              	.LVL2:
  51:Src/sd.c      **** 		sprintf(txt, "FILENAME RES VAL: %d",(int)res_open);
  86              		.loc 1 51 0
  87 003c 944C     		ldr	r4, .L18+36
  88 003e 914B     		ldr	r3, .L18+24
  89 0040 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  90 0042 9449     		ldr	r1, .L18+40
  91 0044 2046     		mov	r0, r4
  92 0046 FFF7FEFF 		bl	sprintf
  93              	.LVL3:
  52:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
  94              		.loc 1 52 0
  95 004a 2046     		mov	r0, r4
  96 004c FFF7FEFF 		bl	strlen
  97              	.LVL4:
  98 0050 6423     		movs	r3, #100
  99 0052 82B2     		uxth	r2, r0
 100 0054 2146     		mov	r1, r4
 101 0056 2846     		mov	r0, r5
 102 0058 FFF7FEFF 		bl	HAL_UART_Transmit
 103              	.LVL5:
  58:Src/sd.c      **** 		f_close(&log_names_f); // close the file
 104              		.loc 1 58 0
 105 005c 884C     		ldr	r4, .L18+20
 106 005e 2046     		mov	r0, r4
 107 0060 FFF7FEFF 		bl	f_close
 108              	.LVL6:
ARM GAS  /tmp/ccucFmKz.s 			page 6


  59:Src/sd.c      **** 		f_open(&log_names_f, (TCHAR const*)&name_txt, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_WRITE );
 109              		.loc 1 59 0
 110 0064 3222     		movs	r2, #50
 111 0066 8549     		ldr	r1, .L18+16
 112 0068 2046     		mov	r0, r4
 113 006a FFF7FEFF 		bl	f_open
 114              	.LVL7:
 115              	.LBB3:
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 116              		.loc 1 61 0
 117 006e 0024     		movs	r4, #0
 118 0070 4BE0     		b	.L4
 119              	.LVL8:
 120              	.L14:
 121              	.LBE3:
  47:Src/sd.c      **** 		if(res_open == 0)f_read(&log_names_f, log_names, 1099, (void*)&bytes_read); //read into file "nam
 122              		.loc 1 47 0 discriminator 1
 123 0072 894B     		ldr	r3, .L18+44
 124 0074 40F24B42 		movw	r2, #1099
 125 0078 8849     		ldr	r1, .L18+48
 126 007a 8148     		ldr	r0, .L18+20
 127 007c FFF7FEFF 		bl	f_read
 128              	.LVL9:
 129 0080 D5E7     		b	.L3
 130              	.LVL10:
 131              	.L17:
 132              	.LBB4:
  69:Src/sd.c      **** 				sprintf(filename_log,"default.txt");
 133              		.loc 1 69 0
 134 0082 874C     		ldr	r4, .L18+52
 135              	.LVL11:
 136 0084 874B     		ldr	r3, .L18+56
 137 0086 07CB     		ldmia	r3!, {r0, r1, r2}
 138 0088 2060     		str	r0, [r4]	@ unaligned
 139 008a 6160     		str	r1, [r4, #4]	@ unaligned
 140 008c A260     		str	r2, [r4, #8]	@ unaligned
  71:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename_log, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | F
 141              		.loc 1 71 0
 142 008e 864D     		ldr	r5, .L18+60
 143 0090 3322     		movs	r2, #51
 144 0092 2146     		mov	r1, r4
 145 0094 2846     		mov	r0, r5
 146 0096 FFF7FEFF 		bl	f_open
 147              	.LVL12:
  72:Src/sd.c      **** 				f_close(&loggingFile);
 148              		.loc 1 72 0
 149 009a 2846     		mov	r0, r5
 150 009c FFF7FEFF 		bl	f_close
 151              	.LVL13:
  75:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"created -> default.txt\r\n",strlen("created -> default.txt
 152              		.loc 1 75 0
 153 00a0 0A23     		movs	r3, #10
 154 00a2 1822     		movs	r2, #24
 155 00a4 8149     		ldr	r1, .L18+64
 156 00a6 7848     		ldr	r0, .L18+28
 157 00a8 FFF7FEFF 		bl	HAL_UART_Transmit
 158              	.LVL14:
ARM GAS  /tmp/ccucFmKz.s 			page 7


  77:Src/sd.c      **** 				successfull_opening = 1;
 159              		.loc 1 77 0
 160 00ac 0122     		movs	r2, #1
 161 00ae 804B     		ldr	r3, .L18+68
 162 00b0 1A60     		str	r2, [r3]
 163              	.L6:
 164              	.LBE4:
 124:Src/sd.c      **** 		mount_ok = 1;
 165              		.loc 1 124 0
 166 00b2 0124     		movs	r4, #1
 167 00b4 704B     		ldr	r3, .L18+12
 168 00b6 1C60     		str	r4, [r3]
 125:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)"files closed\r\n",strlen("files closed\r\n"),10);
 169              		.loc 1 125 0
 170 00b8 734E     		ldr	r6, .L18+28
 171 00ba 0A23     		movs	r3, #10
 172 00bc 0E22     		movs	r2, #14
 173 00be 7D49     		ldr	r1, .L18+72
 174 00c0 3046     		mov	r0, r6
 175 00c2 FFF7FEFF 		bl	HAL_UART_Transmit
 176              	.LVL15:
 127:Src/sd.c      **** 		res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_OPEN_EXISTING | FA_READ ); //ope
 177              		.loc 1 127 0
 178 00c6 2246     		mov	r2, r4
 179 00c8 7B49     		ldr	r1, .L18+76
 180 00ca 7C48     		ldr	r0, .L18+80
 181 00cc FFF7FEFF 		bl	f_open
 182              	.LVL16:
 183 00d0 0246     		mov	r2, r0
 184 00d2 6C4D     		ldr	r5, .L18+24
 185 00d4 2870     		strb	r0, [r5]
 129:Src/sd.c      **** 		sprintf(txt, "POT FILE VAL: %d\r\n",(int)res_open);
 186              		.loc 1 129 0
 187 00d6 6E4C     		ldr	r4, .L18+36
 188 00d8 7949     		ldr	r1, .L18+84
 189 00da 2046     		mov	r0, r4
 190 00dc FFF7FEFF 		bl	sprintf
 191              	.LVL17:
 130:Src/sd.c      **** 		HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 192              		.loc 1 130 0
 193 00e0 2046     		mov	r0, r4
 194 00e2 FFF7FEFF 		bl	strlen
 195              	.LVL18:
 196 00e6 6423     		movs	r3, #100
 197 00e8 82B2     		uxth	r2, r0
 198 00ea 2146     		mov	r1, r4
 199 00ec 3046     		mov	r0, r6
 200 00ee FFF7FEFF 		bl	HAL_UART_Transmit
 201              	.LVL19:
 131:Src/sd.c      **** 		if(res_open == FR_OK){
 202              		.loc 1 131 0
 203 00f2 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 204 00f4 13B1     		cbz	r3, .L10
 156:Src/sd.c      **** 		}else if(res_open == FR_NO_FILE){
 205              		.loc 1 156 0
 206 00f6 042B     		cmp	r3, #4
 207 00f8 00F08680 		beq	.L15
ARM GAS  /tmp/ccucFmKz.s 			page 8


 208              	.L10:
 167:Src/sd.c      **** 		f_close(&pot_values_f);
 209              		.loc 1 167 0 discriminator 1
 210 00fc 6F48     		ldr	r0, .L18+80
 211 00fe FFF7FEFF 		bl	f_close
 212              	.LVL20:
 213              	.LBE2:
 214 0102 8AE7     		b	.L1
 215              	.LVL21:
 216              	.L7:
 217              	.LBB7:
 218              	.LBB5:
 101:Src/sd.c      **** 			if(pointer == NULL){
 219              		.loc 1 101 0
 220 0104 0028     		cmp	r0, #0
 221 0106 44D0     		beq	.L16
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 222              		.loc 1 61 0 discriminator 2
 223 0108 0134     		adds	r4, r4, #1
 224              	.LVL22:
 225              	.L4:
  61:Src/sd.c      **** 		for(int i = 0; i < max_files; i++){
 226              		.loc 1 61 0 is_stmt 0 discriminator 1
 227 010a 6E4B     		ldr	r3, .L18+88
 228 010c 1B68     		ldr	r3, [r3]
 229 010e 9C42     		cmp	r4, r3
 230 0110 CFDA     		bge	.L6
  63:Src/sd.c      **** 			sprintf(name, "log_%d ", i);
 231              		.loc 1 63 0 is_stmt 1
 232 0112 2246     		mov	r2, r4
 233 0114 6C49     		ldr	r1, .L18+92
 234 0116 06A8     		add	r0, sp, #24
 235 0118 FFF7FEFF 		bl	sprintf
 236              	.LVL23:
  65:Src/sd.c      **** 			pointer = strstr(log_names, name);
 237              		.loc 1 65 0
 238 011c 06A9     		add	r1, sp, #24
 239 011e 5F48     		ldr	r0, .L18+48
 240 0120 FFF7FEFF 		bl	strstr
 241              	.LVL24:
 242 0124 694B     		ldr	r3, .L18+96
 243 0126 1860     		str	r0, [r3]
  67:Src/sd.c      **** 			if(i == max_files){
 244              		.loc 1 67 0
 245 0128 664B     		ldr	r3, .L18+88
 246 012a 1B68     		ldr	r3, [r3]
 247 012c 9C42     		cmp	r4, r3
 248 012e A8D0     		beq	.L17
  82:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
 249              		.loc 1 82 0
 250 0130 002C     		cmp	r4, #0
 251 0132 E7D1     		bne	.L7
  82:Src/sd.c      **** 			if(i == 0 && pointer == NULL){
 252              		.loc 1 82 0 is_stmt 0 discriminator 1
 253 0134 0028     		cmp	r0, #0
 254 0136 E5D1     		bne	.L7
  84:Src/sd.c      **** 				sprintf(filename_log, "log_0 \r\n");
ARM GAS  /tmp/ccucFmKz.s 			page 9


 255              		.loc 1 84 0 is_stmt 1
 256 0138 594C     		ldr	r4, .L18+52
 257              	.LVL25:
 258 013a 654B     		ldr	r3, .L18+100
 259 013c 03CB     		ldmia	r3!, {r0, r1}
 260 013e 2060     		str	r0, [r4]	@ unaligned
 261 0140 6160     		str	r1, [r4, #4]	@ unaligned
 262 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 263 0144 2372     		strb	r3, [r4, #8]
  86:Src/sd.c      **** 				f_write(&log_names_f, filename_log, strlen(filename_log), &byteswritten);
 264              		.loc 1 86 0
 265 0146 2046     		mov	r0, r4
 266 0148 FFF7FEFF 		bl	strlen
 267              	.LVL26:
 268 014c 4C4D     		ldr	r5, .L18+20
 269 014e 614B     		ldr	r3, .L18+104
 270 0150 0246     		mov	r2, r0
 271 0152 2146     		mov	r1, r4
 272 0154 2846     		mov	r0, r5
 273 0156 FFF7FEFF 		bl	f_write
 274              	.LVL27:
  87:Src/sd.c      **** 				f_close(&log_names_f);
 275              		.loc 1 87 0
 276 015a 2846     		mov	r0, r5
 277 015c FFF7FEFF 		bl	f_close
 278              	.LVL28:
  89:Src/sd.c      **** 				sprintf(filename_log, "Log_0.txt");
 279              		.loc 1 89 0
 280 0160 5D4B     		ldr	r3, .L18+108
 281 0162 03CB     		ldmia	r3!, {r0, r1}
 282 0164 2060     		str	r0, [r4]	@ unaligned
 283 0166 6160     		str	r1, [r4, #4]	@ unaligned
 284 0168 1B88     		ldrh	r3, [r3]	@ unaligned
 285 016a 2381     		strh	r3, [r4, #8]	@ unaligned
  91:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename_log, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | F
 286              		.loc 1 91 0
 287 016c 4E4D     		ldr	r5, .L18+60
 288 016e 3322     		movs	r2, #51
 289 0170 2146     		mov	r1, r4
 290 0172 2846     		mov	r0, r5
 291 0174 FFF7FEFF 		bl	f_open
 292              	.LVL29:
  92:Src/sd.c      **** 				f_close(&loggingFile);
 293              		.loc 1 92 0
 294 0178 2846     		mov	r0, r5
 295 017a FFF7FEFF 		bl	f_close
 296              	.LVL30:
  95:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> Log_0\r\n",strlen("\r\ncreated -> Log_0\r\n
 297              		.loc 1 95 0
 298 017e 0A23     		movs	r3, #10
 299 0180 1422     		movs	r2, #20
 300 0182 5649     		ldr	r1, .L18+112
 301 0184 4048     		ldr	r0, .L18+28
 302 0186 FFF7FEFF 		bl	HAL_UART_Transmit
 303              	.LVL31:
  97:Src/sd.c      **** 				successfull_opening = 1;
 304              		.loc 1 97 0
ARM GAS  /tmp/ccucFmKz.s 			page 10


 305 018a 0122     		movs	r2, #1
 306 018c 484B     		ldr	r3, .L18+68
 307 018e 1A60     		str	r2, [r3]
  99:Src/sd.c      **** 				break;
 308              		.loc 1 99 0
 309 0190 8FE7     		b	.L6
 310              	.LVL32:
 311              	.L16:
 103:Src/sd.c      **** 				sprintf(filename_log, "log_%d \r\n", i);
 312              		.loc 1 103 0
 313 0192 434D     		ldr	r5, .L18+52
 314 0194 2246     		mov	r2, r4
 315 0196 5249     		ldr	r1, .L18+116
 316 0198 2846     		mov	r0, r5
 317 019a FFF7FEFF 		bl	sprintf
 318              	.LVL33:
 105:Src/sd.c      **** 				f_write(&log_names_f, filename_log, strlen(filename_log), (void*)&byteswritten);
 319              		.loc 1 105 0
 320 019e 2846     		mov	r0, r5
 321 01a0 FFF7FEFF 		bl	strlen
 322              	.LVL34:
 323 01a4 364E     		ldr	r6, .L18+20
 324 01a6 4B4B     		ldr	r3, .L18+104
 325 01a8 0246     		mov	r2, r0
 326 01aa 2946     		mov	r1, r5
 327 01ac 3046     		mov	r0, r6
 328 01ae FFF7FEFF 		bl	f_write
 329              	.LVL35:
 106:Src/sd.c      **** 				f_close(&log_names_f);
 330              		.loc 1 106 0
 331 01b2 3046     		mov	r0, r6
 332 01b4 FFF7FEFF 		bl	f_close
 333              	.LVL36:
 108:Src/sd.c      **** 				sprintf(filename_log, "Log_%d.txt", i);
 334              		.loc 1 108 0
 335 01b8 2246     		mov	r2, r4
 336 01ba 4A49     		ldr	r1, .L18+120
 337 01bc 2846     		mov	r0, r5
 338 01be FFF7FEFF 		bl	sprintf
 339              	.LVL37:
 110:Src/sd.c      **** 				f_open(&loggingFile, (TCHAR const*)&filename_log, FA_OPEN_APPEND | FA_OPEN_ALWAYS | FA_READ | F
 340              		.loc 1 110 0
 341 01c2 394C     		ldr	r4, .L18+60
 342              	.LVL38:
 343 01c4 3322     		movs	r2, #51
 344 01c6 2946     		mov	r1, r5
 345 01c8 2046     		mov	r0, r4
 346 01ca FFF7FEFF 		bl	f_open
 347              	.LVL39:
 111:Src/sd.c      **** 				f_close(&loggingFile);
 348              		.loc 1 111 0
 349 01ce 2046     		mov	r0, r4
 350 01d0 FFF7FEFF 		bl	f_close
 351              	.LVL40:
 114:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*)"\r\ncreated -> ",strlen("\r\ncreated -> "),10);
 352              		.loc 1 114 0
 353 01d4 2C4C     		ldr	r4, .L18+28
ARM GAS  /tmp/ccucFmKz.s 			page 11


 354 01d6 0A23     		movs	r3, #10
 355 01d8 0D22     		movs	r2, #13
 356 01da 4349     		ldr	r1, .L18+124
 357 01dc 2046     		mov	r0, r4
 358 01de FFF7FEFF 		bl	HAL_UART_Transmit
 359              	.LVL41:
 115:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) filename_log, strlen(filename_log), 10);
 360              		.loc 1 115 0
 361 01e2 2846     		mov	r0, r5
 362 01e4 FFF7FEFF 		bl	strlen
 363              	.LVL42:
 364 01e8 0A23     		movs	r3, #10
 365 01ea 82B2     		uxth	r2, r0
 366 01ec 2946     		mov	r1, r5
 367 01ee 2046     		mov	r0, r4
 368 01f0 FFF7FEFF 		bl	HAL_UART_Transmit
 369              	.LVL43:
 116:Src/sd.c      **** 				HAL_UART_Transmit(&huart3,(uint8_t*) "\r\n", strlen("\r\n"),10);
 370              		.loc 1 116 0
 371 01f4 0A23     		movs	r3, #10
 372 01f6 0222     		movs	r2, #2
 373 01f8 3C49     		ldr	r1, .L18+128
 374 01fa 2046     		mov	r0, r4
 375 01fc FFF7FEFF 		bl	HAL_UART_Transmit
 376              	.LVL44:
 118:Src/sd.c      **** 				successfull_opening = 1;
 377              		.loc 1 118 0
 378 0200 0122     		movs	r2, #1
 379 0202 2B4B     		ldr	r3, .L18+68
 380 0204 1A60     		str	r2, [r3]
 120:Src/sd.c      **** 				break;
 381              		.loc 1 120 0
 382 0206 54E7     		b	.L6
 383              	.L15:
 384              	.LBE5:
 157:Src/sd.c      **** 			res_open = f_open(&pot_values_f, (TCHAR const*)&filename_pot, FA_CREATE_NEW | FA_WRITE );
 385              		.loc 1 157 0
 386 0208 0622     		movs	r2, #6
 387 020a 2B49     		ldr	r1, .L18+76
 388 020c 2B48     		ldr	r0, .L18+80
 389 020e FFF7FEFF 		bl	f_open
 390              	.LVL45:
 391 0212 0246     		mov	r2, r0
 392 0214 2870     		strb	r0, [r5]
 158:Src/sd.c      **** 			sprintf(txt, "POT FILE VAL2: %d\r\n",(int)res_open);
 393              		.loc 1 158 0
 394 0216 3649     		ldr	r1, .L18+132
 395 0218 2046     		mov	r0, r4
 396 021a FFF7FEFF 		bl	sprintf
 397              	.LVL46:
 159:Src/sd.c      **** 			HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),100);
 398              		.loc 1 159 0
 399 021e 2046     		mov	r0, r4
 400 0220 FFF7FEFF 		bl	strlen
 401              	.LVL47:
 402 0224 6423     		movs	r3, #100
 403 0226 82B2     		uxth	r2, r0
ARM GAS  /tmp/ccucFmKz.s 			page 12


 404 0228 2146     		mov	r1, r4
 405 022a 3046     		mov	r0, r6
 406 022c FFF7FEFF 		bl	HAL_UART_Transmit
 407              	.LVL48:
 160:Src/sd.c      **** 			if(res_open == FR_OK){
 408              		.loc 1 160 0
 409 0230 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 410 0232 002B     		cmp	r3, #0
 411 0234 7FF462AF 		bne	.L10
 412              	.LBB6:
 162:Src/sd.c      **** 				char local_txt[] = "0000\r\n4096\r\n0000\r\n4096";
 413              		.loc 1 162 0 discriminator 2
 414 0238 6C46     		mov	r4, sp
 415 023a 2E4D     		ldr	r5, .L18+136
 416 023c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 417 023e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 418 0240 95E80300 		ldm	r5, {r0, r1}
 419 0244 44F8040B 		str	r0, [r4], #4
 420 0248 24F8021B 		strh	r1, [r4], #2	@ movhi
 421 024c 090C     		lsrs	r1, r1, #16
 422 024e 2170     		strb	r1, [r4]
 163:Src/sd.c      **** 				f_write(&pot_values_f,(TCHAR const*)&local_txt,strlen(local_txt), &byteswritten);
 423              		.loc 1 163 0 discriminator 2
 424 0250 6846     		mov	r0, sp
 425 0252 FFF7FEFF 		bl	strlen
 426              	.LVL49:
 427 0256 194C     		ldr	r4, .L18+80
 428 0258 1E4B     		ldr	r3, .L18+104
 429 025a 0246     		mov	r2, r0
 430 025c 6946     		mov	r1, sp
 431 025e 2046     		mov	r0, r4
 432 0260 FFF7FEFF 		bl	f_write
 433              	.LVL50:
 164:Src/sd.c      **** 				f_close(&pot_values_f);
 434              		.loc 1 164 0 discriminator 2
 435 0264 2046     		mov	r0, r4
 436 0266 FFF7FEFF 		bl	f_close
 437              	.LVL51:
 438 026a 47E7     		b	.L10
 439              	.L19:
 440              		.align	2
 441              	.L18:
 442 026c 00000000 		.word	SDPath
 443 0270 00000000 		.word	SDFatFS
 444 0274 00000000 		.word	res_mount
 445 0278 00000000 		.word	.LANCHOR3
 446 027c 00000000 		.word	.LANCHOR0
 447 0280 00000000 		.word	log_names_f
 448 0284 00000000 		.word	res_open
 449 0288 00000000 		.word	huart3
 450 028c 00000000 		.word	.LC0
 451 0290 00000000 		.word	txt
 452 0294 14000000 		.word	.LC1
 453 0298 00000000 		.word	bytes_read
 454 029c 00000000 		.word	log_names
 455 02a0 00000000 		.word	filename_log
 456 02a4 34000000 		.word	.LC3
ARM GAS  /tmp/ccucFmKz.s 			page 13


 457 02a8 00000000 		.word	loggingFile
 458 02ac 40000000 		.word	.LC4
 459 02b0 00000000 		.word	.LANCHOR2
 460 02b4 B8000000 		.word	.LC12
 461 02b8 00000000 		.word	.LANCHOR4
 462 02bc 00000000 		.word	pot_values_f
 463 02c0 C8000000 		.word	.LC13
 464 02c4 00000000 		.word	.LANCHOR1
 465 02c8 2C000000 		.word	.LC2
 466 02cc 00000000 		.word	pointer
 467 02d0 5C000000 		.word	.LC5
 468 02d4 00000000 		.word	byteswritten
 469 02d8 68000000 		.word	.LC6
 470 02dc 74000000 		.word	.LC7
 471 02e0 8C000000 		.word	.LC8
 472 02e4 98000000 		.word	.LC9
 473 02e8 A4000000 		.word	.LC10
 474 02ec B4000000 		.word	.LC11
 475 02f0 DC000000 		.word	.LC14
 476 02f4 F0000000 		.word	.LC15
 477              	.LBE6:
 478              	.LBE7:
 479              		.cfi_endproc
 480              	.LFE142:
 482              		.global	successfull_opening
 483              		.global	pot_values_loaded
 484              		.comm	log_names,1100,4
 485              		.comm	pointer,4,4
 486              		.comm	bytes_read,4,4
 487              		.global	msg_index
 488              		.global	msg_counter
 489              		.global	mount_ok
 490              		.comm	byteswritten,4,4
 491              		.global	max_files
 492              		.comm	txt,2000,4
 493              		.global	filename_pot
 494              		.comm	filename_log,50,4
 495              		.global	name_txt
 496              		.comm	message,256,4
 497              		.comm	log_names_f,560,4
 498              		.comm	pot_values_f,560,4
 499              		.comm	loggingFile,560,4
 500              		.comm	res_mount,1,1
 501              		.comm	res_open,1,1
 502              		.section	.bss.mount_ok,"aw",%nobits
 503              		.align	2
 504              		.set	.LANCHOR3,. + 0
 507              	mount_ok:
 508 0000 00000000 		.space	4
 509              		.section	.bss.msg_counter,"aw",%nobits
 510              		.align	2
 513              	msg_counter:
 514 0000 00000000 		.space	4
 515              		.section	.bss.msg_index,"aw",%nobits
 516              		.align	2
 519              	msg_index:
 520 0000 00000000 		.space	4
ARM GAS  /tmp/ccucFmKz.s 			page 14


 521              		.section	.bss.pot_values_loaded,"aw",%nobits
 524              	pot_values_loaded:
 525 0000 00       		.space	1
 526              		.section	.bss.successfull_opening,"aw",%nobits
 527              		.align	2
 528              		.set	.LANCHOR2,. + 0
 531              	successfull_opening:
 532 0000 00000000 		.space	4
 533              		.section	.data.filename_pot,"aw",%progbits
 534              		.align	2
 535              		.set	.LANCHOR4,. + 0
 538              	filename_pot:
 539 0000 706F7456 		.ascii	"potV.txt\000"
 539      2E747874 
 539      00
 540              		.section	.data.max_files,"aw",%progbits
 541              		.align	2
 542              		.set	.LANCHOR1,. + 0
 545              	max_files:
 546 0000 64000000 		.word	100
 547              		.section	.data.name_txt,"aw",%progbits
 548              		.align	2
 549              		.set	.LANCHOR0,. + 0
 552              	name_txt:
 553 0000 6E616D65 		.ascii	"name.txt\000"
 553      2E747874 
 553      00
 554              		.section	.rodata.init_sd.str1.4,"aMS",%progbits,1
 555              		.align	2
 556              	.LC0:
 557 0000 6D6F756E 		.ascii	"mounted, opened\015\012\000"
 557      7465642C 
 557      206F7065 
 557      6E65640D 
 557      0A00
 558 0012 0000     		.space	2
 559              	.LC1:
 560 0014 46494C45 		.ascii	"FILENAME RES VAL: %d\000"
 560      4E414D45 
 560      20524553 
 560      2056414C 
 560      3A202564 
 561 0029 000000   		.space	3
 562              	.LC2:
 563 002c 6C6F675F 		.ascii	"log_%d \000"
 563      25642000 
 564              	.LC3:
 565 0034 64656661 		.ascii	"default.txt\000"
 565      756C742E 
 565      74787400 
 566              	.LC4:
 567 0040 63726561 		.ascii	"created -> default.txt\015\012\000"
 567      74656420 
 567      2D3E2064 
 567      65666175 
 567      6C742E74 
 568 0059 000000   		.space	3
ARM GAS  /tmp/ccucFmKz.s 			page 15


 569              	.LC5:
 570 005c 6C6F675F 		.ascii	"log_0 \015\012\000"
 570      30200D0A 
 570      00
 571 0065 000000   		.space	3
 572              	.LC6:
 573 0068 4C6F675F 		.ascii	"Log_0.txt\000"
 573      302E7478 
 573      7400
 574 0072 0000     		.space	2
 575              	.LC7:
 576 0074 0D0A6372 		.ascii	"\015\012created -> Log_0\015\012\000"
 576      65617465 
 576      64202D3E 
 576      204C6F67 
 576      5F300D0A 
 577 0089 000000   		.space	3
 578              	.LC8:
 579 008c 6C6F675F 		.ascii	"log_%d \015\012\000"
 579      2564200D 
 579      0A00
 580 0096 0000     		.space	2
 581              	.LC9:
 582 0098 4C6F675F 		.ascii	"Log_%d.txt\000"
 582      25642E74 
 582      787400
 583 00a3 00       		.space	1
 584              	.LC10:
 585 00a4 0D0A6372 		.ascii	"\015\012created -> \000"
 585      65617465 
 585      64202D3E 
 585      2000
 586 00b2 0000     		.space	2
 587              	.LC11:
 588 00b4 0D0A00   		.ascii	"\015\012\000"
 589 00b7 00       		.space	1
 590              	.LC12:
 591 00b8 66696C65 		.ascii	"files closed\015\012\000"
 591      7320636C 
 591      6F736564 
 591      0D0A00
 592 00c7 00       		.space	1
 593              	.LC13:
 594 00c8 504F5420 		.ascii	"POT FILE VAL: %d\015\012\000"
 594      46494C45 
 594      2056414C 
 594      3A202564 
 594      0D0A00
 595 00db 00       		.space	1
 596              	.LC14:
 597 00dc 504F5420 		.ascii	"POT FILE VAL2: %d\015\012\000"
 597      46494C45 
 597      2056414C 
 597      323A2025 
 597      640D0A00 
 598              	.LC15:
 599 00f0 30303030 		.ascii	"0000\015\0124096\015\0120000\015\0124096\000"
ARM GAS  /tmp/ccucFmKz.s 			page 16


 599      0D0A3430 
 599      39360D0A 
 599      30303030 
 599      0D0A3430 
 600              		.text
 601              	.Letext0:
 602              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 603              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 604              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 605              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 606              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 607              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 608              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 609              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 610              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 611              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 612              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 613              		.file 13 "Inc/can.h"
 614              		.file 14 "Middlewares/Third_Party/FatFs/src/integer.h"
 615              		.file 15 "/usr/include/newlib/sys/lock.h"
 616              		.file 16 "/usr/include/newlib/sys/_types.h"
 617              		.file 17 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 618              		.file 18 "/usr/include/newlib/sys/reent.h"
 619              		.file 19 "/usr/include/newlib/stdlib.h"
 620              		.file 20 "Middlewares/Third_Party/FatFs/src/ff.h"
 621              		.file 21 "Middlewares/Third_Party/FatFs/src/diskio.h"
 622              		.file 22 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 623              		.file 23 "Inc/sd_diskio.h"
 624              		.file 24 "Inc/fatfs.h"
 625              		.file 25 "Inc/pedals.h"
 626              		.file 26 "Inc/global_variables.h"
 627              		.file 27 "/usr/include/newlib/stdio.h"
 628              		.file 28 "/usr/include/newlib/string.h"
ARM GAS  /tmp/ccucFmKz.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sd.c
     /tmp/ccucFmKz.s:17     .text.init_sd:0000000000000000 $t
     /tmp/ccucFmKz.s:24     .text.init_sd:0000000000000000 init_sd
     /tmp/ccucFmKz.s:442    .text.init_sd:000000000000026c $d
                            *COM*:0000000000000001 res_mount
                            *COM*:0000000000000230 log_names_f
                            *COM*:0000000000000001 res_open
                            *COM*:00000000000007d0 txt
                            *COM*:0000000000000004 bytes_read
                            *COM*:000000000000044c log_names
                            *COM*:0000000000000032 filename_log
                            *COM*:0000000000000230 loggingFile
                            *COM*:0000000000000230 pot_values_f
                            *COM*:0000000000000004 pointer
                            *COM*:0000000000000004 byteswritten
     /tmp/ccucFmKz.s:531    .bss.successfull_opening:0000000000000000 successfull_opening
     /tmp/ccucFmKz.s:524    .bss.pot_values_loaded:0000000000000000 pot_values_loaded
     /tmp/ccucFmKz.s:519    .bss.msg_index:0000000000000000 msg_index
     /tmp/ccucFmKz.s:513    .bss.msg_counter:0000000000000000 msg_counter
     /tmp/ccucFmKz.s:507    .bss.mount_ok:0000000000000000 mount_ok
     /tmp/ccucFmKz.s:545    .data.max_files:0000000000000000 max_files
     /tmp/ccucFmKz.s:538    .data.filename_pot:0000000000000000 filename_pot
     /tmp/ccucFmKz.s:552    .data.name_txt:0000000000000000 name_txt
                            *COM*:0000000000000100 message
     /tmp/ccucFmKz.s:503    .bss.mount_ok:0000000000000000 $d
     /tmp/ccucFmKz.s:510    .bss.msg_counter:0000000000000000 $d
     /tmp/ccucFmKz.s:516    .bss.msg_index:0000000000000000 $d
     /tmp/ccucFmKz.s:525    .bss.pot_values_loaded:0000000000000000 $d
     /tmp/ccucFmKz.s:527    .bss.successfull_opening:0000000000000000 $d
     /tmp/ccucFmKz.s:534    .data.filename_pot:0000000000000000 $d
     /tmp/ccucFmKz.s:541    .data.max_files:0000000000000000 $d
     /tmp/ccucFmKz.s:548    .data.name_txt:0000000000000000 $d
     /tmp/ccucFmKz.s:555    .rodata.init_sd.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
f_mount
f_open
HAL_UART_Transmit
sprintf
strlen
f_close
f_read
strstr
f_write
SDPath
SDFatFS
huart3
