ARM GAS  /tmp/ccb7mxiQ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"gps.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.checksum,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	checksum:
  24              	.LFB144:
  25              		.file 1 "Src/gps.c"
   1:Src/gps.c     **** #include "gps.h"
   2:Src/gps.c     **** 
   3:Src/gps.c     **** static int checksum(char *string_checksum, int size_string_checksum);
   4:Src/gps.c     **** int start_string_gps = 0;
   5:Src/gps.c     **** char string_gps[100];
   6:Src/gps.c     **** int cont_string, cont_comma;
   7:Src/gps.c     **** char data_string_gps;
   8:Src/gps.c     **** extern char buffer_gps[50];
   9:Src/gps.c     **** extern int msg_arrived;
  10:Src/gps.c     **** extern gps_struct gps;
  11:Src/gps.c     **** extern char msg_gps[3];
  12:Src/gps.c     **** extern UART_HandleTypeDef huart3;
  13:Src/gps.c     **** extern UART_HandleTypeDef huart2;
  14:Src/gps.c     **** 
  15:Src/gps.c     **** 
  16:Src/gps.c     **** int gps_init(UART_HandleTypeDef *huart, gps_struct *gps)
  17:Src/gps.c     **** { //initialization of GPS
  18:Src/gps.c     **** 
  19:Src/gps.c     **** 	//if return--> 0=error,1=ok
  20:Src/gps.c     **** 	huart->Init.BaudRate = 9600;
  21:Src/gps.c     ****     huart->Init.WordLength = UART_WORDLENGTH_8B;
  22:Src/gps.c     ****     huart->Init.StopBits = UART_STOPBITS_1;
  23:Src/gps.c     ****     huart->Init.Parity = UART_PARITY_NONE;
  24:Src/gps.c     ****     huart->Init.Mode = UART_MODE_TX_RX;
  25:Src/gps.c     ****     huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
  26:Src/gps.c     ****     huart->Init.OverSampling = UART_OVERSAMPLING_16;
  27:Src/gps.c     ****     huart->Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  28:Src/gps.c     ****     huart->AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  29:Src/gps.c     ****     if (HAL_UART_DeInit(huart) != HAL_OK)
  30:Src/gps.c     ****     {
  31:Src/gps.c     ****         HAL_UART_Transmit(&huart3,(uint8_t*)"ERRORE 3\r\n",6,10);
  32:Src/gps.c     ****     }
  33:Src/gps.c     **** 	if (HAL_UART_Init(huart) != HAL_OK)
ARM GAS  /tmp/ccb7mxiQ.s 			page 2


  34:Src/gps.c     ****     {
  35:Src/gps.c     ****         HAL_UART_Transmit(&huart3,(uint8_t*)"ERRORE 4\r\n",6,10);
  36:Src/gps.c     ****     }
  37:Src/gps.c     **** 	HAL_UART_Transmit(huart, (uint8_t *)PMTK_SET_BAUD_115200, strlen(PMTK_SET_BAUD_115200), 200);
  38:Src/gps.c     **** 	HAL_Delay(500);
  39:Src/gps.c     **** 	/*huart->Init.BaudRate = 57600;
  40:Src/gps.c     ****     HAL_UART_DeInit(huart);
  41:Src/gps.c     **** 	HAL_UART_Init(huart);
  42:Src/gps.c     **** 	HAL_UART_Transmit(huart, (uint8_t *)PMTK_SET_BAUD_115200, strlen(PMTK_SET_BAUD_115200), 200);
  43:Src/gps.c     **** 	HAL_Delay(500);
  44:Src/gps.c     ****     if (HAL_UART_DeInit(huart) != HAL_OK)
  45:Src/gps.c     ****     {
  46:Src/gps.c     ****         HAL_UART_Transmit(&huart3,(uint8_t*)"ERRORE 5\r\n",6,10);
  47:Src/gps.c     ****     }*/
  48:Src/gps.c     ****     huart->Init.BaudRate = 115200;
  49:Src/gps.c     ****     huart->Init.WordLength = UART_WORDLENGTH_8B;
  50:Src/gps.c     ****     huart->Init.StopBits = UART_STOPBITS_1;
  51:Src/gps.c     ****     huart->Init.Parity = UART_PARITY_NONE;
  52:Src/gps.c     ****     huart->Init.Mode = UART_MODE_TX_RX;
  53:Src/gps.c     ****     huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
  54:Src/gps.c     ****     huart->Init.OverSampling = UART_OVERSAMPLING_16;
  55:Src/gps.c     ****     huart->Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  56:Src/gps.c     ****     huart->AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  57:Src/gps.c     **** 	if (HAL_UART_Init(huart) != HAL_OK)
  58:Src/gps.c     ****     {
  59:Src/gps.c     ****         HAL_UART_Transmit(&huart3,(uint8_t*)"ERRORE 6\r\n",6,10);
  60:Src/gps.c     ****     }
  61:Src/gps.c     **** 	HAL_UART_Transmit(huart, (uint8_t *)PMTK_SET_BAUD_115200, strlen(PMTK_SET_BAUD_115200), 200);
  62:Src/gps.c     **** 	HAL_Delay(500);
  63:Src/gps.c     **** 	HAL_UART_Transmit(huart, (uint8_t *)PMTK_SET_NMEA_UPDATE_10HZ, strlen(PMTK_SET_NMEA_UPDATE_10HZ), 
  64:Src/gps.c     **** 	HAL_Delay(500);
  65:Src/gps.c     **** 	HAL_UART_Transmit(huart, (uint8_t *)PMTK_SET_NMEA_OUTPUT_GGAVTG, strlen(PMTK_SET_NMEA_OUTPUT_GGAVT
  66:Src/gps.c     **** 	HAL_Delay(500);
  67:Src/gps.c     **** 	strcpy(gps->speed, "000.00");
  68:Src/gps.c     **** 	strcpy(gps->latitude, "0000.0000");
  69:Src/gps.c     **** 	strcpy(gps->latitude_o, "N");
  70:Src/gps.c     **** 	strcpy(gps->longitude, "00000.0000");
  71:Src/gps.c     **** 	strcpy(gps->longitude_o, "W");
  72:Src/gps.c     **** 	strcpy(gps->altitude, "0000.0");
  73:Src/gps.c     **** 	strcpy(gps->hour, "00");
  74:Src/gps.c     ****     strcpy(gps->min, "00");
  75:Src/gps.c     ****     strcpy(gps->sec, "00");
  76:Src/gps.c     **** 	//HAL_UART_Receive_IT(huart, (uint8_t *)msg_gps, 1); //request of rx buffer interrupt
  77:Src/gps.c     **** 
  78:Src/gps.c     **** 	return 1;
  79:Src/gps.c     **** }
  80:Src/gps.c     **** 
  81:Src/gps.c     **** int gps_read(UART_HandleTypeDef *huart, gps_struct *gps)
  82:Src/gps.c     **** {
  83:Src/gps.c     **** 
  84:Src/gps.c     **** 	int ret = 0; //return--> 0=error,1=ok
  85:Src/gps.c     **** 
  86:Src/gps.c     **** 	/*
  87:Src/gps.c     **** 			* Example of strings
  88:Src/gps.c     **** 			* $GPGGA,064951.000,2307.1256,N,12016.4438,E,1,8,0.95,39.9,M,17.8,M,,*65
  89:Src/gps.c     **** 			* $GPGSA,A,3,29,21,26,15,18,09,06,10,,,,,2.32,0.95,2.11*00
  90:Src/gps.c     **** 			* $GPGSV,3,1,09,29,36,029,42,21,46,314,43,26,44,020,43,15,21,321,39*7D
ARM GAS  /tmp/ccb7mxiQ.s 			page 3


  91:Src/gps.c     **** 			  $GPGSV,3,2,09,18,26,314,40,09,57,170,44,06,20,229,37,10,26,084,37*77
  92:Src/gps.c     **** 			  $GPGSV,3,3,09,07,,,26*73
  93:Src/gps.c     **** 			* $GPRMC,064951.000,A,2307.1256,N,12016.4438,E,0.03,165.48,260406,3.05,W,A*2C
  94:Src/gps.c     **** 			* $GPVTG,165.48,T,,M,0.03,N,0.06,K,A*37
  95:Src/gps.c     **** 			* $PGTOP,11,3 *6F
  96:Src/gps.c     **** 			*
  97:Src/gps.c     **** 			*
  98:Src/gps.c     **** 			*
  99:Src/gps.c     **** 			* 	$GPBOD - Bearing, origin to destination
 100:Src/gps.c     **** 				$GPBWC - Bearing and distance to waypoint, great circle
 101:Src/gps.c     **** 				$GPGGA - Global Positioning System Fix Data
 102:Src/gps.c     **** 				$GPGLL - Geographic position, latitude / longitude
 103:Src/gps.c     **** 				$GPGSA - GPS DOP and active satellites
 104:Src/gps.c     **** 				$GPGSV - GPS Satellites in view
 105:Src/gps.c     **** 				$GPHDT - Heading, True
 106:Src/gps.c     **** 				$GPR00 - List of waypoints in currently active route
 107:Src/gps.c     **** 				$GPRMA - Recommended minimum specific Loran-C data
 108:Src/gps.c     **** 				$GPRMB - Recommended minimum navigation info
 109:Src/gps.c     **** 				$GPRMC - Recommended minimum specific GPS/Transit data
 110:Src/gps.c     **** 				$GPRTE - Routes
 111:Src/gps.c     **** 				$GPTRF - Transit Fix Data
 112:Src/gps.c     **** 				$GPSTN - Multiple Data ID
 113:Src/gps.c     **** 				$GPVBW - Dual Ground / Water Speed
 114:Src/gps.c     **** 				$GPVTG - Track made good and ground speed
 115:Src/gps.c     **** 				$GPWPL - Waypoint location
 116:Src/gps.c     **** 				$GPXTE - Cross-track error, Measured
 117:Src/gps.c     **** 				$GPZDA - Date & Time
 118:Src/gps.c     **** 				http://aprs.gids.nl/nmea/
 119:Src/gps.c     **** 			*/
 120:Src/gps.c     ****     //check if it's the huart_gps interrupt
 121:Src/gps.c     ****     int msg_arrived_s = msg_arrived;
 122:Src/gps.c     ****     msg_arrived = 0;
 123:Src/gps.c     ****     char buffer_gps_s[50]; 
 124:Src/gps.c     ****     memcpy(buffer_gps_s, buffer_gps, 50);
 125:Src/gps.c     ****     if(msg_arrived_s > 0){
 126:Src/gps.c     ****         for(int i = 0; i < msg_arrived_s; i++){
 127:Src/gps.c     ****             data_string_gps = buffer_gps_s[i];
 128:Src/gps.c     ****             if ((start_string_gps == 1) && (data_string_gps != '$'))
 129:Src/gps.c     ****             {											   //check that the new string has not started yet
 130:Src/gps.c     ****                 string_gps[cont_string] = data_string_gps; //save the data into the array
 131:Src/gps.c     ****                 cont_string++;
 132:Src/gps.c     ****                 if (string_gps[cont_string - 1] == '\r' || string_gps[cont_string - 1] == '\n')
 133:Src/gps.c     ****                 { //indicates that the string is finishing
 134:Src/gps.c     ****                     cont_string--;
 135:Src/gps.c     ****                     string_gps[cont_string] = '\0'; // '\0'=end of the string
 136:Src/gps.c     ****                     start_string_gps = 0;			//end of string
 137:Src/gps.c     ****                     if (string_gps[2] == 'G' && string_gps[3] == 'G' && string_gps[4] == 'A')
 138:Src/gps.c     ****                     { // operation when the string is GPGGA //
 139:Src/gps.c     ****                         //memcpy(gps->string, "", 100);
 140:Src/gps.c     ****                         //memcpy(gps->string, string_gps, strlen(string_gps));
 141:Src/gps.c     **** 
 142:Src/gps.c     ****                         if (checksum(string_gps, cont_string) == 1)
 143:Src/gps.c     ****                         { //check the checksum (if==true -> enter)
 144:Src/gps.c     ****                             int cont_comma = 0, cont_latitude = 0, cont_longitude = 0, cont_altitud
 145:Src/gps.c     ****                             for (int i = 5; i < 100; i++)
 146:Src/gps.c     ****                             {
 147:Src/gps.c     ****                                 if (string_gps[i] == ',')
ARM GAS  /tmp/ccb7mxiQ.s 			page 4


 148:Src/gps.c     ****                                     cont_comma++;
 149:Src/gps.c     ****                                 else
 150:Src/gps.c     ****                                 {
 151:Src/gps.c     ****                                     if (cont_comma == 1)
 152:Src/gps.c     ****                                     { //save the time
 153:Src/gps.c     ****                                         if(cont_time < 2){
 154:Src/gps.c     ****                                             gps->hour[cont_time] = string_gps[i];
 155:Src/gps.c     ****                                             cont_time++;
 156:Src/gps.c     ****                                         }else if(cont_time < 4){
 157:Src/gps.c     ****                                             gps->min[cont_time % 2] = string_gps[i];
 158:Src/gps.c     ****                                             cont_time++;
 159:Src/gps.c     ****                                         }else if(cont_time <6){
 160:Src/gps.c     ****                                             gps->sec[cont_time % 2] = string_gps[i];
 161:Src/gps.c     ****                                             cont_time++;
 162:Src/gps.c     ****                                         }
 163:Src/gps.c     ****                                         
 164:Src/gps.c     ****                                     }
 165:Src/gps.c     ****                                     else if (cont_comma == 2)
 166:Src/gps.c     ****                                     { //save latitude
 167:Src/gps.c     **** 
 168:Src/gps.c     ****                                         gps->latitude[cont_latitude] = string_gps[i];
 169:Src/gps.c     ****                                         cont_latitude++;
 170:Src/gps.c     ****                                     }
 171:Src/gps.c     ****                                     else if (cont_comma == 3)
 172:Src/gps.c     ****                                     { //save orientation of latitude
 173:Src/gps.c     ****                                         gps->latitude_o[0] = string_gps[i];
 174:Src/gps.c     ****                                     }
 175:Src/gps.c     ****                                     else if (cont_comma == 4)
 176:Src/gps.c     ****                                     { //save longitude
 177:Src/gps.c     ****                                         gps->longitude[cont_longitude] = string_gps[i];
 178:Src/gps.c     ****                                         cont_longitude++;
 179:Src/gps.c     ****                                     }
 180:Src/gps.c     ****                                     else if (cont_comma == 5)
 181:Src/gps.c     ****                                     { //save orientation of longitude
 182:Src/gps.c     ****                                         gps->longitude_o[0] = string_gps[i];
 183:Src/gps.c     ****                                     }
 184:Src/gps.c     ****                                     else if (cont_comma == 6)
 185:Src/gps.c     ****                                     {
 186:Src/gps.c     ****                                         gps->fix_status = string_gps[i];
 187:Src/gps.c     ****                                     }
 188:Src/gps.c     ****                                     else if (cont_comma == 9)
 189:Src/gps.c     ****                                     { //save altitude
 190:Src/gps.c     ****                                         gps->altitude[cont_altitude] = string_gps[i];
 191:Src/gps.c     ****                                         cont_altitude++;
 192:Src/gps.c     ****                                     }
 193:Src/gps.c     ****                                     else if (cont_comma == 10)
 194:Src/gps.c     ****                                     {
 195:Src/gps.c     ****                                         i = 100; //end the cicle
 196:Src/gps.c     ****                                     }
 197:Src/gps.c     ****                                 }
 198:Src/gps.c     ****                             }
 199:Src/gps.c     **** 
 200:Src/gps.c     ****                             //-- operation to split data and send them --//
 201:Src/gps.c     ****                             if (gps->fix_status == '0')
 202:Src/gps.c     ****                             {
 203:Src/gps.c     ****                                 char txt[100];
 204:Src/gps.c     ****                                 sprintf(txt,"\r\nNO CONNECTION\r\n");
ARM GAS  /tmp/ccb7mxiQ.s 			page 5


 205:Src/gps.c     ****                                 HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 206:Src/gps.c     ****                                 gps->latitude_i_h = 0;
 207:Src/gps.c     ****                                 gps->latitude_i_l = 0;
 208:Src/gps.c     ****                                 gps->longitude_i_h = 0;
 209:Src/gps.c     ****                                 gps->longitude_i_l = 0;
 210:Src/gps.c     ****                                 gps->altitude_i = 0;
 211:Src/gps.c     ****                             }
 212:Src/gps.c     ****                             else
 213:Src/gps.c     ****                             {
 214:Src/gps.c     ****                                 char txt[100];
 215:Src/gps.c     ****                                 gps->latitude_i = (long int)(atof(gps->latitude) * 100);
 216:Src/gps.c     ****                                 sprintf(txt,"latitude %ld %c", gps->latitude_i, gps->latitude_o[0])
 217:Src/gps.c     ****                                 HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 218:Src/gps.c     ****                                 gps->longitude_i = (long int)(atof(gps->longitude) * 100);
 219:Src/gps.c     ****                                 sprintf(txt,"longitude %ld %c",gps->longitude_i, gps->longitude_o[0
 220:Src/gps.c     ****                                 HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 221:Src/gps.c     ****                                 sprintf(txt,"time %c%c:%c%c:%c%c", gps->hour[0], gps->hour[1], gps-
 222:Src/gps.c     ****                                 HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 223:Src/gps.c     ****                                 gps->altitude_i = (int)(atof(gps->altitude) * 10);
 224:Src/gps.c     ****                                 gps->latitude_i_h = (int)(gps->latitude_i >> 16);
 225:Src/gps.c     ****                                 gps->latitude_i_l = (int)(gps->latitude_i - (gps->latitude_i_h << 1
 226:Src/gps.c     ****                                 gps->longitude_i_h = (int)(gps->longitude_i >> 16);
 227:Src/gps.c     ****                                 gps->longitude_i_l = (int)(gps->longitude_i - (gps->longitude_i_h <
 228:Src/gps.c     ****                             }
 229:Src/gps.c     ****                             ret = 1;
 230:Src/gps.c     ****                         }
 231:Src/gps.c     ****                         else
 232:Src/gps.c     ****                         {
 233:Src/gps.c     ****                             char txt[100];
 234:Src/gps.c     ****                             sprintf(txt,"\r\nCHECKSUM FAIL\r\n");
 235:Src/gps.c     ****                             HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 236:Src/gps.c     ****                             ret = 0; //checksum failed
 237:Src/gps.c     ****                         }
 238:Src/gps.c     ****                     }
 239:Src/gps.c     ****                     else if (string_gps[2] == 'V' && string_gps[3] == 'T' && string_gps[4] == 'G')
 240:Src/gps.c     ****                     { // operation when the string is GPVTG //
 241:Src/gps.c     ****                         if (checksum(string_gps, cont_string) == 1)
 242:Src/gps.c     ****                         { //check the checksum (if==true -> enter)
 243:Src/gps.c     ****                             cont_comma = 0;
 244:Src/gps.c     ****                             int cont_speed = 0;
 245:Src/gps.c     ****                             for (int i = 5; i < cont_string; i++)
 246:Src/gps.c     ****                             {
 247:Src/gps.c     ****                                 if (string_gps[i] == ',')
 248:Src/gps.c     ****                                     cont_comma++;
 249:Src/gps.c     ****                                 else
 250:Src/gps.c     ****                                 {
 251:Src/gps.c     ****                                     if (cont_comma == 7)
 252:Src/gps.c     ****                                     { //save the speed
 253:Src/gps.c     ****                                         gps->speed[cont_speed] = string_gps[i];
 254:Src/gps.c     ****                                         cont_speed++;
 255:Src/gps.c     ****                                     }
 256:Src/gps.c     ****                                     else if (cont_comma == 8)
 257:Src/gps.c     ****                                     {
 258:Src/gps.c     ****                                         i = cont_string;
 259:Src/gps.c     ****                                     }
 260:Src/gps.c     ****                                 }
 261:Src/gps.c     ****                             }
ARM GAS  /tmp/ccb7mxiQ.s 			page 6


 262:Src/gps.c     ****                             //-- operation to split data and send them --//
 263:Src/gps.c     ****                             if (gps->fix_status == '0')
 264:Src/gps.c     ****                             {
 265:Src/gps.c     ****                                 char txt[100];
 266:Src/gps.c     ****                                 sprintf(txt,"\r\nNO CONNECTION\r\n");
 267:Src/gps.c     ****                                 HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 268:Src/gps.c     ****                                 gps->speed_i = 0;
 269:Src/gps.c     ****                             }
 270:Src/gps.c     ****                             else
 271:Src/gps.c     ****                             {
 272:Src/gps.c     ****                                 char txt[100];
 273:Src/gps.c     ****                                 gps->speed_i = (int)(atof(gps->speed) * 100);
 274:Src/gps.c     ****                                 sprintf(txt,"longitude %d",gps->speed_i);
 275:Src/gps.c     ****                                 HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 276:Src/gps.c     ****                             }
 277:Src/gps.c     **** 
 278:Src/gps.c     ****                             ret = 1;
 279:Src/gps.c     ****                         }
 280:Src/gps.c     ****                         else
 281:Src/gps.c     ****                         {
 282:Src/gps.c     ****                             char txt[100];
 283:Src/gps.c     ****                             sprintf(txt,"\r\nCHECKSUM FAIL\r\n");
 284:Src/gps.c     ****                             HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 285:Src/gps.c     ****                             ret = 0; //checksum failed
 286:Src/gps.c     ****                         }
 287:Src/gps.c     ****                     }
 288:Src/gps.c     ****                     strcpy(string_gps, "");
 289:Src/gps.c     ****                 }
 290:Src/gps.c     ****             }
 291:Src/gps.c     ****             else
 292:Src/gps.c     ****             {
 293:Src/gps.c     ****                 if (data_string_gps == '$')
 294:Src/gps.c     ****                 {						  //check if data indicates the start of new string
 295:Src/gps.c     ****                     start_string_gps = 1; //new string started
 296:Src/gps.c     ****                     cont_string = 0;	  //set the counter to 1
 297:Src/gps.c     ****                 }
 298:Src/gps.c     ****             }
 299:Src/gps.c     ****         }
 300:Src/gps.c     ****         data_string_gps = buffer_gps[0];						  //convert a pointer into a char
 301:Src/gps.c     ****     }
 302:Src/gps.c     **** 	return ret;
 303:Src/gps.c     **** }
 304:Src/gps.c     **** static int checksum(char *string_checksum, int size_string_checksum)
 305:Src/gps.c     **** { //check the checksum
  26              		.loc 1 305 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccb7mxiQ.s 			page 7


  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41              	.LVL1:
 306:Src/gps.c     **** 	//return 1;
 307:Src/gps.c     **** 
 308:Src/gps.c     **** 	int res = 0;
 309:Src/gps.c     **** 	int offset_maiusc = (int)('A') - (int)('a');
 310:Src/gps.c     **** 	int i = 0;
 311:Src/gps.c     **** 
 312:Src/gps.c     **** 	for (i = 0; (i < size_string_checksum) && (string_checksum[i] != '*'); i++)
  42              		.loc 1 312 0
  43 0004 0023     		movs	r3, #0
 308:Src/gps.c     **** 	int offset_maiusc = (int)('A') - (int)('a');
  44              		.loc 1 308 0
  45 0006 1C46     		mov	r4, r3
  46              		.loc 1 312 0
  47 0008 01E0     		b	.L2
  48              	.LVL2:
  49              	.L4:
 313:Src/gps.c     **** 	{
 314:Src/gps.c     **** 		res = res ^ string_checksum[i];
  50              		.loc 1 314 0 discriminator 4
  51 000a 5440     		eors	r4, r4, r2
  52              	.LVL3:
 312:Src/gps.c     **** 	{
  53              		.loc 1 312 0 discriminator 4
  54 000c 0133     		adds	r3, r3, #1
  55              	.LVL4:
  56              	.L2:
 312:Src/gps.c     **** 	{
  57              		.loc 1 312 0 is_stmt 0 discriminator 1
  58 000e 8B42     		cmp	r3, r1
  59 0010 02DA     		bge	.L3
 312:Src/gps.c     **** 	{
  60              		.loc 1 312 0 discriminator 3
  61 0012 C25C     		ldrb	r2, [r0, r3]	@ zero_extendqisi2
  62 0014 2A2A     		cmp	r2, #42
  63 0016 F8D1     		bne	.L4
  64              	.L3:
 315:Src/gps.c     **** 	}
 316:Src/gps.c     **** 	char check[2] = {string_checksum[i + 1], string_checksum[i + 2]};
  65              		.loc 1 316 0 is_stmt 1
  66 0018 1844     		add	r0, r0, r3
  67              	.LVL5:
  68 001a 4578     		ldrb	r5, [r0, #1]	@ zero_extendqisi2
  69 001c 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 317:Src/gps.c     **** 	char res_char[3];
 318:Src/gps.c     **** 	sprintf(res_char, "%x", res);
  70              		.loc 1 318 0
  71 001e 2246     		mov	r2, r4
  72 0020 1749     		ldr	r1, .L15
  73              	.LVL6:
  74 0022 01A8     		add	r0, sp, #4
  75 0024 FFF7FEFF 		bl	sprintf
  76              	.LVL7:
 319:Src/gps.c     **** 	if (res < 17)
  77              		.loc 1 319 0
ARM GAS  /tmp/ccb7mxiQ.s 			page 8


  78 0028 102C     		cmp	r4, #16
  79 002a 06DC     		bgt	.L5
 320:Src/gps.c     **** 	{
 321:Src/gps.c     **** 		res_char[1] = res_char[0];
  80              		.loc 1 321 0
  81 002c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
  82 0030 8DF80530 		strb	r3, [sp, #5]
 322:Src/gps.c     **** 		res_char[0] = '0';
  83              		.loc 1 322 0
  84 0034 3023     		movs	r3, #48
  85 0036 8DF80430 		strb	r3, [sp, #4]
  86              	.L5:
 308:Src/gps.c     **** 	int offset_maiusc = (int)('A') - (int)('a');
  87              		.loc 1 308 0 discriminator 1
  88 003a 0023     		movs	r3, #0
  89 003c 00E0     		b	.L6
  90              	.LVL8:
  91              	.L7:
  92              	.LBB2:
 323:Src/gps.c     **** 	}
 324:Src/gps.c     **** 	for (int j = 0; j < 2; j++)
  93              		.loc 1 324 0 discriminator 2
  94 003e 0133     		adds	r3, r3, #1
  95              	.LVL9:
  96              	.L6:
  97              		.loc 1 324 0 is_stmt 0 discriminator 1
  98 0040 012B     		cmp	r3, #1
  99 0042 0EDC     		bgt	.L13
 325:Src/gps.c     **** 	{ //convert to upper case letter
 326:Src/gps.c     **** 		if ((int)res_char[j] >= 'a' && (int)res_char[j] <= 'f')
 100              		.loc 1 326 0 is_stmt 1
 101 0044 02AA     		add	r2, sp, #8
 102 0046 1A44     		add	r2, r2, r3
 103 0048 12F8041C 		ldrb	r1, [r2, #-4]	@ zero_extendqisi2
 104 004c A1F16102 		sub	r2, r1, #97
 105 0050 D2B2     		uxtb	r2, r2
 106 0052 052A     		cmp	r2, #5
 107 0054 F3D8     		bhi	.L7
 327:Src/gps.c     **** 		{
 328:Src/gps.c     **** 			res_char[j] = (char)((int)res_char[j] + offset_maiusc);
 108              		.loc 1 328 0
 109 0056 2039     		subs	r1, r1, #32
 110 0058 02AA     		add	r2, sp, #8
 111 005a 1A44     		add	r2, r2, r3
 112 005c 02F8041C 		strb	r1, [r2, #-4]
 113 0060 EDE7     		b	.L7
 114              	.L13:
 115              	.LBE2:
 329:Src/gps.c     **** 		}
 330:Src/gps.c     **** 	}
 331:Src/gps.c     **** 	if (res_char[0] == check[0] && res_char[1] == check[1])
 116              		.loc 1 331 0
 117 0062 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 118              	.LVL10:
 119 0066 9D42     		cmp	r5, r3
 120 0068 02D0     		beq	.L14
 332:Src/gps.c     **** 	{
ARM GAS  /tmp/ccb7mxiQ.s 			page 9


 333:Src/gps.c     **** 		return 1; //checksum is correct
 334:Src/gps.c     **** 	}
 335:Src/gps.c     **** 	else
 336:Src/gps.c     **** 	{
 337:Src/gps.c     **** 		return 0; //checksum failed
 121              		.loc 1 337 0
 122 006a 0020     		movs	r0, #0
 123              	.L1:
 338:Src/gps.c     **** 	}
 339:Src/gps.c     **** }...
 124              		.loc 1 339 0
 125 006c 02B0     		add	sp, sp, #8
 126              	.LCFI2:
 127              		.cfi_remember_state
 128              		.cfi_def_cfa_offset 16
 129              		@ sp needed
 130 006e 70BD     		pop	{r4, r5, r6, pc}
 131              	.LVL11:
 132              	.L14:
 133              	.LCFI3:
 134              		.cfi_restore_state
 331:Src/gps.c     **** 	if (res_char[0] == check[0] && res_char[1] == check[1])
 135              		.loc 1 331 0 discriminator 1
 136 0070 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 137 0074 9E42     		cmp	r6, r3
 138 0076 01D0     		beq	.L11
 337:Src/gps.c     **** 		return 0; //checksum failed
 139              		.loc 1 337 0
 140 0078 0020     		movs	r0, #0
 141 007a F7E7     		b	.L1
 142              	.L11:
 333:Src/gps.c     **** 		return 1; //checksum is correct
 143              		.loc 1 333 0
 144 007c 0120     		movs	r0, #1
 145 007e F5E7     		b	.L1
 146              	.L16:
 147              		.align	2
 148              	.L15:
 149 0080 00000000 		.word	.LC0
 150              		.cfi_endproc
 151              	.LFE144:
 153              		.section	.text.gps_init,"ax",%progbits
 154              		.align	1
 155              		.global	gps_init
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu fpv5-d16
 161              	gps_init:
 162              	.LFB142:
  17:Src/gps.c     **** { //initialization of GPS
 163              		.loc 1 17 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              	.LVL12:
 168 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccb7mxiQ.s 			page 10


 169              	.LCFI4:
 170              		.cfi_def_cfa_offset 16
 171              		.cfi_offset 3, -16
 172              		.cfi_offset 4, -12
 173              		.cfi_offset 5, -8
 174              		.cfi_offset 14, -4
 175 0002 0446     		mov	r4, r0
 176 0004 0D46     		mov	r5, r1
  20:Src/gps.c     **** 	huart->Init.BaudRate = 9600;
 177              		.loc 1 20 0
 178 0006 4FF41653 		mov	r3, #9600
 179 000a 4360     		str	r3, [r0, #4]
  21:Src/gps.c     ****     huart->Init.WordLength = UART_WORDLENGTH_8B;
 180              		.loc 1 21 0
 181 000c 0023     		movs	r3, #0
 182 000e 8360     		str	r3, [r0, #8]
  22:Src/gps.c     ****     huart->Init.StopBits = UART_STOPBITS_1;
 183              		.loc 1 22 0
 184 0010 C360     		str	r3, [r0, #12]
  23:Src/gps.c     ****     huart->Init.Parity = UART_PARITY_NONE;
 185              		.loc 1 23 0
 186 0012 0361     		str	r3, [r0, #16]
  24:Src/gps.c     ****     huart->Init.Mode = UART_MODE_TX_RX;
 187              		.loc 1 24 0
 188 0014 0C22     		movs	r2, #12
 189 0016 4261     		str	r2, [r0, #20]
  25:Src/gps.c     ****     huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
 190              		.loc 1 25 0
 191 0018 8361     		str	r3, [r0, #24]
  26:Src/gps.c     ****     huart->Init.OverSampling = UART_OVERSAMPLING_16;
 192              		.loc 1 26 0
 193 001a C361     		str	r3, [r0, #28]
  27:Src/gps.c     ****     huart->Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 194              		.loc 1 27 0
 195 001c 0362     		str	r3, [r0, #32]
  28:Src/gps.c     ****     huart->AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 196              		.loc 1 28 0
 197 001e 4362     		str	r3, [r0, #36]
  29:Src/gps.c     ****     if (HAL_UART_DeInit(huart) != HAL_OK)
 198              		.loc 1 29 0
 199 0020 FFF7FEFF 		bl	HAL_UART_DeInit
 200              	.LVL13:
 201 0024 0028     		cmp	r0, #0
 202 0026 75D1     		bne	.L22
 203              	.L18:
  33:Src/gps.c     **** 	if (HAL_UART_Init(huart) != HAL_OK)
 204              		.loc 1 33 0
 205 0028 2046     		mov	r0, r4
 206 002a FFF7FEFF 		bl	HAL_UART_Init
 207              	.LVL14:
 208 002e 0028     		cmp	r0, #0
 209 0030 77D1     		bne	.L23
 210              	.L19:
  37:Src/gps.c     **** 	HAL_UART_Transmit(huart, (uint8_t *)PMTK_SET_BAUD_115200, strlen(PMTK_SET_BAUD_115200), 200);
 211              		.loc 1 37 0
 212 0032 C823     		movs	r3, #200
 213 0034 1422     		movs	r2, #20
ARM GAS  /tmp/ccb7mxiQ.s 			page 11


 214 0036 4249     		ldr	r1, .L25
 215 0038 2046     		mov	r0, r4
 216 003a FFF7FEFF 		bl	HAL_UART_Transmit
 217              	.LVL15:
  38:Src/gps.c     **** 	HAL_Delay(500);
 218              		.loc 1 38 0
 219 003e 4FF4FA70 		mov	r0, #500
 220 0042 FFF7FEFF 		bl	HAL_Delay
 221              	.LVL16:
  48:Src/gps.c     ****     huart->Init.BaudRate = 115200;
 222              		.loc 1 48 0
 223 0046 4FF4E133 		mov	r3, #115200
 224 004a 6360     		str	r3, [r4, #4]
  49:Src/gps.c     ****     huart->Init.WordLength = UART_WORDLENGTH_8B;
 225              		.loc 1 49 0
 226 004c 0023     		movs	r3, #0
 227 004e A360     		str	r3, [r4, #8]
  50:Src/gps.c     ****     huart->Init.StopBits = UART_STOPBITS_1;
 228              		.loc 1 50 0
 229 0050 E360     		str	r3, [r4, #12]
  51:Src/gps.c     ****     huart->Init.Parity = UART_PARITY_NONE;
 230              		.loc 1 51 0
 231 0052 2361     		str	r3, [r4, #16]
  52:Src/gps.c     ****     huart->Init.Mode = UART_MODE_TX_RX;
 232              		.loc 1 52 0
 233 0054 0C22     		movs	r2, #12
 234 0056 6261     		str	r2, [r4, #20]
  53:Src/gps.c     ****     huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
 235              		.loc 1 53 0
 236 0058 A361     		str	r3, [r4, #24]
  54:Src/gps.c     ****     huart->Init.OverSampling = UART_OVERSAMPLING_16;
 237              		.loc 1 54 0
 238 005a E361     		str	r3, [r4, #28]
  55:Src/gps.c     ****     huart->Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 239              		.loc 1 55 0
 240 005c 2362     		str	r3, [r4, #32]
  56:Src/gps.c     ****     huart->AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 241              		.loc 1 56 0
 242 005e 6362     		str	r3, [r4, #36]
  57:Src/gps.c     **** 	if (HAL_UART_Init(huart) != HAL_OK)
 243              		.loc 1 57 0
 244 0060 2046     		mov	r0, r4
 245 0062 FFF7FEFF 		bl	HAL_UART_Init
 246              	.LVL17:
 247 0066 0028     		cmp	r0, #0
 248 0068 62D1     		bne	.L24
 249              	.L20:
  61:Src/gps.c     **** 	HAL_UART_Transmit(huart, (uint8_t *)PMTK_SET_BAUD_115200, strlen(PMTK_SET_BAUD_115200), 200);
 250              		.loc 1 61 0
 251 006a C823     		movs	r3, #200
 252 006c 1422     		movs	r2, #20
 253 006e 3449     		ldr	r1, .L25
 254 0070 2046     		mov	r0, r4
 255 0072 FFF7FEFF 		bl	HAL_UART_Transmit
 256              	.LVL18:
  62:Src/gps.c     **** 	HAL_Delay(500);
 257              		.loc 1 62 0
ARM GAS  /tmp/ccb7mxiQ.s 			page 12


 258 0076 4FF4FA70 		mov	r0, #500
 259 007a FFF7FEFF 		bl	HAL_Delay
 260              	.LVL19:
  63:Src/gps.c     **** 	HAL_UART_Transmit(huart, (uint8_t *)PMTK_SET_NMEA_UPDATE_10HZ, strlen(PMTK_SET_NMEA_UPDATE_10HZ), 
 261              		.loc 1 63 0
 262 007e C823     		movs	r3, #200
 263 0080 1122     		movs	r2, #17
 264 0082 3049     		ldr	r1, .L25+4
 265 0084 2046     		mov	r0, r4
 266 0086 FFF7FEFF 		bl	HAL_UART_Transmit
 267              	.LVL20:
  64:Src/gps.c     **** 	HAL_Delay(500);
 268              		.loc 1 64 0
 269 008a 4FF4FA70 		mov	r0, #500
 270 008e FFF7FEFF 		bl	HAL_Delay
 271              	.LVL21:
  65:Src/gps.c     **** 	HAL_UART_Transmit(huart, (uint8_t *)PMTK_SET_NMEA_OUTPUT_GGAVTG, strlen(PMTK_SET_NMEA_OUTPUT_GGAVT
 272              		.loc 1 65 0
 273 0092 C823     		movs	r3, #200
 274 0094 3322     		movs	r2, #51
 275 0096 2C49     		ldr	r1, .L25+8
 276 0098 2046     		mov	r0, r4
 277 009a FFF7FEFF 		bl	HAL_UART_Transmit
 278              	.LVL22:
  66:Src/gps.c     **** 	HAL_Delay(500);
 279              		.loc 1 66 0
 280 009e 4FF4FA70 		mov	r0, #500
 281 00a2 FFF7FEFF 		bl	HAL_Delay
 282              	.LVL23:
  67:Src/gps.c     **** 	strcpy(gps->speed, "000.00");
 283              		.loc 1 67 0
 284 00a6 294B     		ldr	r3, .L25+12
 285 00a8 1868     		ldr	r0, [r3]
 286 00aa 6860     		str	r0, [r5, #4]	@ unaligned
 287 00ac 9988     		ldrh	r1, [r3, #4]	@ unaligned
 288 00ae 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 289 00b0 2981     		strh	r1, [r5, #8]	@ unaligned
 290 00b2 AB72     		strb	r3, [r5, #10]
  68:Src/gps.c     **** 	strcpy(gps->latitude, "0000.0000");
 291              		.loc 1 68 0
 292 00b4 264B     		ldr	r3, .L25+16
 293 00b6 03CB     		ldmia	r3!, {r0, r1}
 294 00b8 2861     		str	r0, [r5, #16]	@ unaligned
 295 00ba 6961     		str	r1, [r5, #20]	@ unaligned
 296 00bc 1B88     		ldrh	r3, [r3]	@ unaligned
 297 00be 2B83     		strh	r3, [r5, #24]	@ unaligned
  69:Src/gps.c     **** 	strcpy(gps->latitude_o, "N");
 298              		.loc 1 69 0
 299 00c0 244B     		ldr	r3, .L25+20
 300 00c2 1B88     		ldrh	r3, [r3]	@ unaligned
 301 00c4 2B84     		strh	r3, [r5, #32]	@ unaligned
  70:Src/gps.c     **** 	strcpy(gps->longitude, "00000.0000");
 302              		.loc 1 70 0
 303 00c6 244B     		ldr	r3, .L25+24
 304 00c8 03CB     		ldmia	r3!, {r0, r1}
 305 00ca 2863     		str	r0, [r5, #48]	@ unaligned
 306 00cc 6963     		str	r1, [r5, #52]	@ unaligned
ARM GAS  /tmp/ccb7mxiQ.s 			page 13


 307 00ce 1988     		ldrh	r1, [r3]	@ unaligned
 308 00d0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 309 00d2 2987     		strh	r1, [r5, #56]	@ unaligned
 310 00d4 85F83A30 		strb	r3, [r5, #58]
  71:Src/gps.c     **** 	strcpy(gps->longitude_o, "W");
 311              		.loc 1 71 0
 312 00d8 204B     		ldr	r3, .L25+28
 313 00da 1B88     		ldrh	r3, [r3]	@ unaligned
 314 00dc A5F84030 		strh	r3, [r5, #64]	@ unaligned
  72:Src/gps.c     **** 	strcpy(gps->altitude, "0000.0");
 315              		.loc 1 72 0
 316 00e0 1F4B     		ldr	r3, .L25+32
 317 00e2 1868     		ldr	r0, [r3]
 318 00e4 2865     		str	r0, [r5, #80]	@ unaligned
 319 00e6 9988     		ldrh	r1, [r3, #4]	@ unaligned
 320 00e8 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 321 00ea A5F85410 		strh	r1, [r5, #84]	@ unaligned
 322 00ee 85F85630 		strb	r3, [r5, #86]
  73:Src/gps.c     **** 	strcpy(gps->hour, "00");
 323              		.loc 1 73 0
 324 00f2 1C4B     		ldr	r3, .L25+36
 325 00f4 1A88     		ldrh	r2, [r3]	@ unaligned
 326 00f6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 327 00f8 A5F85C20 		strh	r2, [r5, #92]	@ unaligned
 328 00fc 85F85E30 		strb	r3, [r5, #94]
  74:Src/gps.c     ****     strcpy(gps->min, "00");
 329              		.loc 1 74 0
 330 0100 A5F85F20 		strh	r2, [r5, #95]	@ unaligned
 331 0104 85F86130 		strb	r3, [r5, #97]
  75:Src/gps.c     ****     strcpy(gps->sec, "00");
 332              		.loc 1 75 0
 333 0108 A5F86220 		strh	r2, [r5, #98]	@ unaligned
 334 010c 85F86430 		strb	r3, [r5, #100]
  79:Src/gps.c     **** }
 335              		.loc 1 79 0
 336 0110 0120     		movs	r0, #1
 337 0112 38BD     		pop	{r3, r4, r5, pc}
 338              	.LVL24:
 339              	.L22:
  31:Src/gps.c     ****         HAL_UART_Transmit(&huart3,(uint8_t*)"ERRORE 3\r\n",6,10);
 340              		.loc 1 31 0
 341 0114 0A23     		movs	r3, #10
 342 0116 0622     		movs	r2, #6
 343 0118 1349     		ldr	r1, .L25+40
 344 011a 1448     		ldr	r0, .L25+44
 345 011c FFF7FEFF 		bl	HAL_UART_Transmit
 346              	.LVL25:
 347 0120 82E7     		b	.L18
 348              	.L23:
  35:Src/gps.c     ****         HAL_UART_Transmit(&huart3,(uint8_t*)"ERRORE 4\r\n",6,10);
 349              		.loc 1 35 0
 350 0122 0A23     		movs	r3, #10
 351 0124 0622     		movs	r2, #6
 352 0126 1249     		ldr	r1, .L25+48
 353 0128 1048     		ldr	r0, .L25+44
 354 012a FFF7FEFF 		bl	HAL_UART_Transmit
 355              	.LVL26:
ARM GAS  /tmp/ccb7mxiQ.s 			page 14


 356 012e 80E7     		b	.L19
 357              	.L24:
  59:Src/gps.c     ****         HAL_UART_Transmit(&huart3,(uint8_t*)"ERRORE 6\r\n",6,10);
 358              		.loc 1 59 0
 359 0130 0A23     		movs	r3, #10
 360 0132 0622     		movs	r2, #6
 361 0134 0F49     		ldr	r1, .L25+52
 362 0136 0D48     		ldr	r0, .L25+44
 363 0138 FFF7FEFF 		bl	HAL_UART_Transmit
 364              	.LVL27:
 365 013c 95E7     		b	.L20
 366              	.L26:
 367 013e 00BF     		.align	2
 368              	.L25:
 369 0140 18000000 		.word	.LC3
 370 0144 3C000000 		.word	.LC5
 371 0148 50000000 		.word	.LC6
 372 014c 84000000 		.word	.LC7
 373 0150 8C000000 		.word	.LC8
 374 0154 98000000 		.word	.LC9
 375 0158 9C000000 		.word	.LC10
 376 015c A8000000 		.word	.LC11
 377 0160 AC000000 		.word	.LC12
 378 0164 B4000000 		.word	.LC13
 379 0168 00000000 		.word	.LC1
 380 016c 00000000 		.word	huart3
 381 0170 0C000000 		.word	.LC2
 382 0174 30000000 		.word	.LC4
 383              		.cfi_endproc
 384              	.LFE142:
 386              		.section	.text.gps_read,"ax",%progbits
 387              		.align	1
 388              		.global	gps_read
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu fpv5-d16
 394              	gps_read:
 395              	.LFB143:
  82:Src/gps.c     **** {
 396              		.loc 1 82 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 152
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              	.LVL28:
 401 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 402              	.LCFI5:
 403              		.cfi_def_cfa_offset 28
 404              		.cfi_offset 4, -28
 405              		.cfi_offset 5, -24
 406              		.cfi_offset 6, -20
 407              		.cfi_offset 7, -16
 408              		.cfi_offset 8, -12
 409              		.cfi_offset 9, -8
 410              		.cfi_offset 14, -4
 411 0004 2DED028B 		vpush.64	{d8}
 412              	.LCFI6:
ARM GAS  /tmp/ccb7mxiQ.s 			page 15


 413              		.cfi_def_cfa_offset 36
 414              		.cfi_offset 80, -36
 415              		.cfi_offset 81, -32
 416 0008 ABB0     		sub	sp, sp, #172
 417              	.LCFI7:
 418              		.cfi_def_cfa_offset 208
 419 000a 0E46     		mov	r6, r1
 420              	.LVL29:
 121:Src/gps.c     ****     int msg_arrived_s = msg_arrived;
 421              		.loc 1 121 0
 422 000c B44B     		ldr	r3, .L86+8
 423 000e 1D68     		ldr	r5, [r3]
 424              	.LVL30:
 122:Src/gps.c     ****     msg_arrived = 0;
 425              		.loc 1 122 0
 426 0010 0022     		movs	r2, #0
 427 0012 1A60     		str	r2, [r3]
 124:Src/gps.c     ****     memcpy(buffer_gps_s, buffer_gps, 50);
 428              		.loc 1 124 0
 429 0014 B34C     		ldr	r4, .L86+12
 430 0016 0DF1740E 		add	lr, sp, #116
 431 001a 04F1300C 		add	ip, r4, #48
 432              	.LVL31:
 433              	.L28:
 434 001e 7746     		mov	r7, lr
 435 0020 2068     		ldr	r0, [r4]	@ unaligned
 436 0022 6168     		ldr	r1, [r4, #4]	@ unaligned
 437 0024 A268     		ldr	r2, [r4, #8]	@ unaligned
 438 0026 E368     		ldr	r3, [r4, #12]	@ unaligned
 439 0028 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 440 002a 1034     		adds	r4, r4, #16
 441 002c BE46     		mov	lr, r7
 442 002e 6445     		cmp	r4, ip
 443 0030 F5D1     		bne	.L28
 444 0032 2388     		ldrh	r3, [r4]	@ unaligned
 445 0034 3B80     		strh	r3, [r7]	@ unaligned
 125:Src/gps.c     ****     if(msg_arrived_s > 0){
 446              		.loc 1 125 0
 447 0036 002D     		cmp	r5, #0
 448 0038 02DD     		ble	.L64
 449 003a 0024     		movs	r4, #0
 450 003c 2746     		mov	r7, r4
 451 003e 1DE0     		b	.L29
 452              	.L64:
  84:Src/gps.c     **** 	int ret = 0; //return--> 0=error,1=ok
 453              		.loc 1 84 0
 454 0040 0027     		movs	r7, #0
 455 0042 E5E1     		b	.L27
 456              	.LVL32:
 457              	.L68:
 458              	.LBB3:
 128:Src/gps.c     ****             if ((start_string_gps == 1) && (data_string_gps != '$'))
 459              		.loc 1 128 0 discriminator 1
 460 0044 242B     		cmp	r3, #36
 461 0046 26D0     		beq	.L31
 130:Src/gps.c     ****                 string_gps[cont_string] = data_string_gps; //save the data into the array
 462              		.loc 1 130 0
ARM GAS  /tmp/ccb7mxiQ.s 			page 16


 463 0048 A74A     		ldr	r2, .L86+16
 464 004a 1168     		ldr	r1, [r2]
 465 004c A748     		ldr	r0, .L86+20
 466 004e 4354     		strb	r3, [r0, r1]
 131:Src/gps.c     ****                 cont_string++;
 467              		.loc 1 131 0
 468 0050 481C     		adds	r0, r1, #1
 469 0052 1060     		str	r0, [r2]
 132:Src/gps.c     ****                 if (string_gps[cont_string - 1] == '\r' || string_gps[cont_string - 1] == '\n')
 470              		.loc 1 132 0
 471 0054 0A2B     		cmp	r3, #10
 472 0056 18BF     		it	ne
 473 0058 0D2B     		cmpne	r3, #13
 474 005a 0ED1     		bne	.L32
 134:Src/gps.c     ****                     cont_string--;
 475              		.loc 1 134 0
 476 005c 1160     		str	r1, [r2]
 135:Src/gps.c     ****                     string_gps[cont_string] = '\0'; // '\0'=end of the string
 477              		.loc 1 135 0
 478 005e A34B     		ldr	r3, .L86+20
 479 0060 0022     		movs	r2, #0
 480 0062 5A54     		strb	r2, [r3, r1]
 136:Src/gps.c     ****                     start_string_gps = 0;			//end of string
 481              		.loc 1 136 0
 482 0064 A248     		ldr	r0, .L86+24
 483 0066 0260     		str	r2, [r0]
 137:Src/gps.c     ****                     if (string_gps[2] == 'G' && string_gps[3] == 'G' && string_gps[4] == 'A')
 484              		.loc 1 137 0
 485 0068 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 486 006a 472B     		cmp	r3, #71
 487 006c 1CD0     		beq	.L65
 488              	.L33:
 239:Src/gps.c     ****                     else if (string_gps[2] == 'V' && string_gps[3] == 'T' && string_gps[4] == 'G')
 489              		.loc 1 239 0
 490 006e 562B     		cmp	r3, #86
 491 0070 00F04E81 		beq	.L66
 492              	.LVL33:
 493              	.L49:
 288:Src/gps.c     ****                     strcpy(string_gps, "");
 494              		.loc 1 288 0
 495 0074 0022     		movs	r2, #0
 496 0076 9D4B     		ldr	r3, .L86+20
 497 0078 1A70     		strb	r2, [r3]
 498              	.L32:
 126:Src/gps.c     ****         for(int i = 0; i < msg_arrived_s; i++){
 499              		.loc 1 126 0 discriminator 2
 500 007a 0134     		adds	r4, r4, #1
 501              	.LVL34:
 502              	.L29:
 126:Src/gps.c     ****         for(int i = 0; i < msg_arrived_s; i++){
 503              		.loc 1 126 0 is_stmt 0 discriminator 1
 504 007c AC42     		cmp	r4, r5
 505 007e 80F2C381 		bge	.L67
 127:Src/gps.c     ****             data_string_gps = buffer_gps_s[i];
 506              		.loc 1 127 0 is_stmt 1
 507 0082 2AAB     		add	r3, sp, #168
 508 0084 2344     		add	r3, r3, r4
ARM GAS  /tmp/ccb7mxiQ.s 			page 17


 509 0086 13F8343C 		ldrb	r3, [r3, #-52]	@ zero_extendqisi2
 510 008a 9A4A     		ldr	r2, .L86+28
 511 008c 1370     		strb	r3, [r2]
 128:Src/gps.c     ****             if ((start_string_gps == 1) && (data_string_gps != '$'))
 512              		.loc 1 128 0
 513 008e 984A     		ldr	r2, .L86+24
 514 0090 1268     		ldr	r2, [r2]
 515 0092 012A     		cmp	r2, #1
 516 0094 D6D0     		beq	.L68
 517              	.L31:
 293:Src/gps.c     ****                 if (data_string_gps == '$')
 518              		.loc 1 293 0
 519 0096 242B     		cmp	r3, #36
 520 0098 EFD1     		bne	.L32
 295:Src/gps.c     ****                     start_string_gps = 1; //new string started
 521              		.loc 1 295 0
 522 009a 0122     		movs	r2, #1
 523 009c 944B     		ldr	r3, .L86+24
 524 009e 1A60     		str	r2, [r3]
 296:Src/gps.c     ****                     cont_string = 0;	  //set the counter to 1
 525              		.loc 1 296 0
 526 00a0 0022     		movs	r2, #0
 527 00a2 914B     		ldr	r3, .L86+16
 528 00a4 1A60     		str	r2, [r3]
 529 00a6 E8E7     		b	.L32
 530              	.L65:
 137:Src/gps.c     ****                     if (string_gps[2] == 'G' && string_gps[3] == 'G' && string_gps[4] == 'A')
 531              		.loc 1 137 0 discriminator 1
 532 00a8 904A     		ldr	r2, .L86+20
 533 00aa D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 534 00ac 472A     		cmp	r2, #71
 535 00ae DED1     		bne	.L33
 137:Src/gps.c     ****                     if (string_gps[2] == 'G' && string_gps[3] == 'G' && string_gps[4] == 'A')
 536              		.loc 1 137 0 is_stmt 0 discriminator 2
 537 00b0 8E4A     		ldr	r2, .L86+20
 538 00b2 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 539 00b4 412A     		cmp	r2, #65
 540 00b6 DAD1     		bne	.L33
 142:Src/gps.c     ****                         if (checksum(string_gps, cont_string) == 1)
 541              		.loc 1 142 0 is_stmt 1
 542 00b8 8C48     		ldr	r0, .L86+20
 543 00ba FFF7FEFF 		bl	checksum
 544              	.LVL35:
 545 00be 0746     		mov	r7, r0
 546              	.LVL36:
 547 00c0 0128     		cmp	r0, #1
 548 00c2 6DD0     		beq	.L69
 549              	.LBB4:
 234:Src/gps.c     ****                             sprintf(txt,"\r\nCHECKSUM FAIL\r\n");
 550              		.loc 1 234 0
 551 00c4 04AF     		add	r7, sp, #16
 552 00c6 DFF840E2 		ldr	lr, .L86+48
 553 00ca BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 554 00ce 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 555 00d0 DEF80030 		ldr	r3, [lr]
 556 00d4 3B80     		strh	r3, [r7]	@ movhi
 235:Src/gps.c     ****                             HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
ARM GAS  /tmp/ccb7mxiQ.s 			page 18


 557              		.loc 1 235 0
 558 00d6 04A8     		add	r0, sp, #16
 559 00d8 FFF7FEFF 		bl	strlen
 560              	.LVL37:
 561 00dc 0A23     		movs	r3, #10
 562 00de 82B2     		uxth	r2, r0
 563 00e0 04A9     		add	r1, sp, #16
 564 00e2 8548     		ldr	r0, .L86+32
 565 00e4 FFF7FEFF 		bl	HAL_UART_Transmit
 566              	.LVL38:
 236:Src/gps.c     ****                             ret = 0; //checksum failed
 567              		.loc 1 236 0
 568 00e8 0027     		movs	r7, #0
 569 00ea C3E7     		b	.L49
 570              	.LVL39:
 571              	.L71:
 572              	.LBE4:
 573              	.LBB5:
 574              	.LBB6:
 148:Src/gps.c     ****                                     cont_comma++;
 575              		.loc 1 148 0
 576 00ec 0130     		adds	r0, r0, #1
 577              	.LVL40:
 578              	.L37:
 145:Src/gps.c     ****                             for (int i = 5; i < 100; i++)
 579              		.loc 1 145 0 discriminator 2
 580 00ee 0133     		adds	r3, r3, #1
 581              	.LVL41:
 582              	.L34:
 145:Src/gps.c     ****                             for (int i = 5; i < 100; i++)
 583              		.loc 1 145 0 is_stmt 0 discriminator 1
 584 00f0 632B     		cmp	r3, #99
 585 00f2 5CDC     		bgt	.L70
 147:Src/gps.c     ****                                 if (string_gps[i] == ',')
 586              		.loc 1 147 0 is_stmt 1
 587 00f4 7D49     		ldr	r1, .L86+20
 588 00f6 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 589 00f8 2C29     		cmp	r1, #44
 590 00fa F7D0     		beq	.L71
 151:Src/gps.c     ****                                     if (cont_comma == 1)
 591              		.loc 1 151 0
 592 00fc 0128     		cmp	r0, #1
 593 00fe 0FD0     		beq	.L72
 165:Src/gps.c     ****                                     else if (cont_comma == 2)
 594              		.loc 1 165 0
 595 0100 0228     		cmp	r0, #2
 596 0102 2FD0     		beq	.L73
 171:Src/gps.c     ****                                     else if (cont_comma == 3)
 597              		.loc 1 171 0
 598 0104 0328     		cmp	r0, #3
 599 0106 34D0     		beq	.L74
 175:Src/gps.c     ****                                     else if (cont_comma == 4)
 600              		.loc 1 175 0
 601 0108 0428     		cmp	r0, #4
 602 010a 35D0     		beq	.L75
 180:Src/gps.c     ****                                     else if (cont_comma == 5)
 603              		.loc 1 180 0
ARM GAS  /tmp/ccb7mxiQ.s 			page 19


 604 010c 0528     		cmp	r0, #5
 605 010e 3AD0     		beq	.L76
 184:Src/gps.c     ****                                     else if (cont_comma == 6)
 606              		.loc 1 184 0
 607 0110 0628     		cmp	r0, #6
 608 0112 3BD0     		beq	.L77
 188:Src/gps.c     ****                                     else if (cont_comma == 9)
 609              		.loc 1 188 0
 610 0114 0928     		cmp	r0, #9
 611 0116 3CD0     		beq	.L78
 193:Src/gps.c     ****                                     else if (cont_comma == 10)
 612              		.loc 1 193 0
 613 0118 0A28     		cmp	r0, #10
 614 011a E8D1     		bne	.L37
 195:Src/gps.c     ****                                         i = 100; //end the cicle
 615              		.loc 1 195 0
 616 011c 6423     		movs	r3, #100
 617              	.LVL42:
 618 011e E6E7     		b	.L37
 619              	.LVL43:
 620              	.L72:
 153:Src/gps.c     ****                                         if(cont_time < 2){
 621              		.loc 1 153 0
 622 0120 012A     		cmp	r2, #1
 623 0122 0CDD     		ble	.L79
 156:Src/gps.c     ****                                         }else if(cont_time < 4){
 624              		.loc 1 156 0
 625 0124 032A     		cmp	r2, #3
 626 0126 10DC     		bgt	.L40
 157:Src/gps.c     ****                                             gps->min[cont_time % 2] = string_gps[i];
 627              		.loc 1 157 0
 628 0128 002A     		cmp	r2, #0
 629 012a 02F0010E 		and	lr, r2, #1
 630 012e B8BF     		it	lt
 631 0130 CEF1000E 		rsblt	lr, lr, #0
 632 0134 B644     		add	lr, lr, r6
 633 0136 8EF85F10 		strb	r1, [lr, #95]
 158:Src/gps.c     ****                                             cont_time++;
 634              		.loc 1 158 0
 635 013a 0132     		adds	r2, r2, #1
 636              	.LVL44:
 637 013c D7E7     		b	.L37
 638              	.L79:
 154:Src/gps.c     ****                                             gps->hour[cont_time] = string_gps[i];
 639              		.loc 1 154 0
 640 013e 06EB020E 		add	lr, r6, r2
 641 0142 8EF85C10 		strb	r1, [lr, #92]
 155:Src/gps.c     ****                                             cont_time++;
 642              		.loc 1 155 0
 643 0146 0132     		adds	r2, r2, #1
 644              	.LVL45:
 645 0148 D1E7     		b	.L37
 646              	.L40:
 159:Src/gps.c     ****                                         }else if(cont_time <6){
 647              		.loc 1 159 0
 648 014a 052A     		cmp	r2, #5
 649 014c CFDC     		bgt	.L37
ARM GAS  /tmp/ccb7mxiQ.s 			page 20


 160:Src/gps.c     ****                                             gps->sec[cont_time % 2] = string_gps[i];
 650              		.loc 1 160 0
 651 014e 002A     		cmp	r2, #0
 652 0150 02F0010E 		and	lr, r2, #1
 653 0154 B8BF     		it	lt
 654 0156 CEF1000E 		rsblt	lr, lr, #0
 655 015a B644     		add	lr, lr, r6
 656 015c 8EF86210 		strb	r1, [lr, #98]
 161:Src/gps.c     ****                                             cont_time++;
 657              		.loc 1 161 0
 658 0160 0132     		adds	r2, r2, #1
 659              	.LVL46:
 660 0162 C4E7     		b	.L37
 661              	.L73:
 168:Src/gps.c     ****                                         gps->latitude[cont_latitude] = string_gps[i];
 662              		.loc 1 168 0
 663 0164 06EB0C0E 		add	lr, r6, ip
 664 0168 8EF81010 		strb	r1, [lr, #16]
 169:Src/gps.c     ****                                         cont_latitude++;
 665              		.loc 1 169 0
 666 016c 0CF1010C 		add	ip, ip, #1
 667              	.LVL47:
 668 0170 BDE7     		b	.L37
 669              	.L74:
 173:Src/gps.c     ****                                         gps->latitude_o[0] = string_gps[i];
 670              		.loc 1 173 0
 671 0172 86F82010 		strb	r1, [r6, #32]
 672 0176 BAE7     		b	.L37
 673              	.L75:
 177:Src/gps.c     ****                                         gps->longitude[cont_longitude] = string_gps[i];
 674              		.loc 1 177 0
 675 0178 06EB080E 		add	lr, r6, r8
 676 017c 8EF83010 		strb	r1, [lr, #48]
 178:Src/gps.c     ****                                         cont_longitude++;
 677              		.loc 1 178 0
 678 0180 08F10108 		add	r8, r8, #1
 679              	.LVL48:
 680 0184 B3E7     		b	.L37
 681              	.L76:
 182:Src/gps.c     ****                                         gps->longitude_o[0] = string_gps[i];
 682              		.loc 1 182 0
 683 0186 86F84010 		strb	r1, [r6, #64]
 684 018a B0E7     		b	.L37
 685              	.L77:
 186:Src/gps.c     ****                                         gps->fix_status = string_gps[i];
 686              		.loc 1 186 0
 687 018c 86F86510 		strb	r1, [r6, #101]
 688 0190 ADE7     		b	.L37
 689              	.L78:
 190:Src/gps.c     ****                                         gps->altitude[cont_altitude] = string_gps[i];
 690              		.loc 1 190 0
 691 0192 06EB090E 		add	lr, r6, r9
 692 0196 8EF85010 		strb	r1, [lr, #80]
 191:Src/gps.c     ****                                         cont_altitude++;
 693              		.loc 1 191 0
 694 019a 09F10109 		add	r9, r9, #1
 695              	.LVL49:
ARM GAS  /tmp/ccb7mxiQ.s 			page 21


 696 019e A6E7     		b	.L37
 697              	.LVL50:
 698              	.L69:
 699              	.LBE6:
 700              	.LBE5:
 701 01a0 0523     		movs	r3, #5
 702 01a2 0022     		movs	r2, #0
 703 01a4 9146     		mov	r9, r2
 704 01a6 9046     		mov	r8, r2
 705 01a8 9446     		mov	ip, r2
 706 01aa 1046     		mov	r0, r2
 707 01ac A0E7     		b	.L34
 708              	.LVL51:
 709              	.L70:
 710              	.LBB9:
 201:Src/gps.c     ****                             if (gps->fix_status == '0')
 711              		.loc 1 201 0
 712 01ae 96F86530 		ldrb	r3, [r6, #101]	@ zero_extendqisi2
 713              	.LVL52:
 714 01b2 302B     		cmp	r3, #48
 715 01b4 71D0     		beq	.L80
 716              	.LBB7:
 215:Src/gps.c     ****                                 gps->latitude_i = (long int)(atof(gps->latitude) * 100);
 717              		.loc 1 215 0
 718 01b6 06F11000 		add	r0, r6, #16
 719              	.LVL53:
 720 01ba FFF7FEFF 		bl	atof
 721              	.LVL54:
 722 01be 9FED468B 		vldr.64	d8, .L86
 723 01c2 20EE080B 		vmul.f64	d0, d0, d8
 724 01c6 FDEEC07B 		vcvt.s32.f64	s15, d0
 725 01ca 17EE902A 		vmov	r2, s15	@ int
 726 01ce C6ED097A 		vstr.32	s15, [r6, #36]	@ int
 216:Src/gps.c     ****                                 sprintf(txt,"latitude %ld %c", gps->latitude_i, gps->latitude_o[0])
 727              		.loc 1 216 0
 728 01d2 96F82030 		ldrb	r3, [r6, #32]	@ zero_extendqisi2
 729 01d6 4949     		ldr	r1, .L86+36
 730 01d8 04A8     		add	r0, sp, #16
 731 01da FFF7FEFF 		bl	sprintf
 732              	.LVL55:
 217:Src/gps.c     ****                                 HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 733              		.loc 1 217 0
 734 01de 04A8     		add	r0, sp, #16
 735 01e0 FFF7FEFF 		bl	strlen
 736              	.LVL56:
 737 01e4 DFF81081 		ldr	r8, .L86+32
 738              	.LVL57:
 739 01e8 0A23     		movs	r3, #10
 740 01ea 82B2     		uxth	r2, r0
 741 01ec 04A9     		add	r1, sp, #16
 742 01ee 4046     		mov	r0, r8
 743 01f0 FFF7FEFF 		bl	HAL_UART_Transmit
 744              	.LVL58:
 218:Src/gps.c     ****                                 gps->longitude_i = (long int)(atof(gps->longitude) * 100);
 745              		.loc 1 218 0
 746 01f4 06F13000 		add	r0, r6, #48
 747 01f8 FFF7FEFF 		bl	atof
ARM GAS  /tmp/ccb7mxiQ.s 			page 22


 748              	.LVL59:
 749 01fc 20EE080B 		vmul.f64	d0, d0, d8
 750 0200 FDEEC07B 		vcvt.s32.f64	s15, d0
 751 0204 17EE902A 		vmov	r2, s15	@ int
 752 0208 C6ED117A 		vstr.32	s15, [r6, #68]	@ int
 219:Src/gps.c     ****                                 sprintf(txt,"longitude %ld %c",gps->longitude_i, gps->longitude_o[0
 753              		.loc 1 219 0
 754 020c 96F84030 		ldrb	r3, [r6, #64]	@ zero_extendqisi2
 755 0210 3B49     		ldr	r1, .L86+40
 756 0212 04A8     		add	r0, sp, #16
 757 0214 FFF7FEFF 		bl	sprintf
 758              	.LVL60:
 220:Src/gps.c     ****                                 HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 759              		.loc 1 220 0
 760 0218 04A8     		add	r0, sp, #16
 761 021a FFF7FEFF 		bl	strlen
 762              	.LVL61:
 763 021e 0A23     		movs	r3, #10
 764 0220 82B2     		uxth	r2, r0
 765 0222 04A9     		add	r1, sp, #16
 766 0224 4046     		mov	r0, r8
 767 0226 FFF7FEFF 		bl	HAL_UART_Transmit
 768              	.LVL62:
 221:Src/gps.c     ****                                 sprintf(txt,"time %c%c:%c%c:%c%c", gps->hour[0], gps->hour[1], gps-
 769              		.loc 1 221 0
 770 022a 96F85C20 		ldrb	r2, [r6, #92]	@ zero_extendqisi2
 771 022e 96F85D30 		ldrb	r3, [r6, #93]	@ zero_extendqisi2
 772 0232 96F85F10 		ldrb	r1, [r6, #95]	@ zero_extendqisi2
 773 0236 96F86000 		ldrb	r0, [r6, #96]	@ zero_extendqisi2
 774 023a 96F862E0 		ldrb	lr, [r6, #98]	@ zero_extendqisi2
 775 023e 96F863C0 		ldrb	ip, [r6, #99]	@ zero_extendqisi2
 776 0242 CDF80CC0 		str	ip, [sp, #12]
 777 0246 CDF808E0 		str	lr, [sp, #8]
 778 024a 0190     		str	r0, [sp, #4]
 779 024c 0091     		str	r1, [sp]
 780 024e 2D49     		ldr	r1, .L86+44
 781 0250 04A8     		add	r0, sp, #16
 782 0252 FFF7FEFF 		bl	sprintf
 783              	.LVL63:
 222:Src/gps.c     ****                                 HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 784              		.loc 1 222 0
 785 0256 04A8     		add	r0, sp, #16
 786 0258 FFF7FEFF 		bl	strlen
 787              	.LVL64:
 788 025c 0A23     		movs	r3, #10
 789 025e 82B2     		uxth	r2, r0
 790 0260 04A9     		add	r1, sp, #16
 791 0262 4046     		mov	r0, r8
 792 0264 FFF7FEFF 		bl	HAL_UART_Transmit
 793              	.LVL65:
 223:Src/gps.c     ****                                 gps->altitude_i = (int)(atof(gps->altitude) * 10);
 794              		.loc 1 223 0
 795 0268 06F15000 		add	r0, r6, #80
 796 026c FFF7FEFF 		bl	atof
 797              	.LVL66:
 798 0270 B2EE047B 		vmov.f64	d7, #1.0e+1
 799 0274 20EE077B 		vmul.f64	d7, d0, d7
ARM GAS  /tmp/ccb7mxiQ.s 			page 23


 800 0278 BDEEC77B 		vcvt.s32.f64	s14, d7
 801 027c 86ED167A 		vstr.32	s14, [r6, #88]	@ int
 224:Src/gps.c     ****                                 gps->latitude_i_h = (int)(gps->latitude_i >> 16);
 802              		.loc 1 224 0
 803 0280 736A     		ldr	r3, [r6, #36]
 804 0282 1A14     		asrs	r2, r3, #16
 805 0284 B262     		str	r2, [r6, #40]
 225:Src/gps.c     ****                                 gps->latitude_i_l = (int)(gps->latitude_i - (gps->latitude_i_h << 1
 806              		.loc 1 225 0
 807 0286 A3EB0243 		sub	r3, r3, r2, lsl #16
 808 028a F362     		str	r3, [r6, #44]
 226:Src/gps.c     ****                                 gps->longitude_i_h = (int)(gps->longitude_i >> 16);
 809              		.loc 1 226 0
 810 028c 736C     		ldr	r3, [r6, #68]
 811 028e 1A14     		asrs	r2, r3, #16
 812 0290 B264     		str	r2, [r6, #72]
 227:Src/gps.c     ****                                 gps->longitude_i_l = (int)(gps->longitude_i - (gps->longitude_i_h <
 813              		.loc 1 227 0
 814 0292 A3EB0243 		sub	r3, r3, r2, lsl #16
 815 0296 F364     		str	r3, [r6, #76]
 816 0298 ECE6     		b	.L49
 817              	.LVL67:
 818              	.L80:
 819              	.LBE7:
 820              	.LBB8:
 204:Src/gps.c     ****                                 sprintf(txt,"\r\nNO CONNECTION\r\n");
 821              		.loc 1 204 0
 822 029a 0DF1100E 		add	lr, sp, #16
 823 029e DFF86CC0 		ldr	ip, .L86+52
 824              	.LVL68:
 825 02a2 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 826              	.LVL69:
 827 02a6 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 828 02aa DCF80030 		ldr	r3, [ip]
 829 02ae AEF80030 		strh	r3, [lr]	@ movhi
 205:Src/gps.c     ****                                 HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 830              		.loc 1 205 0
 831 02b2 04A8     		add	r0, sp, #16
 832 02b4 FFF7FEFF 		bl	strlen
 833              	.LVL70:
 834 02b8 0A23     		movs	r3, #10
 835 02ba 82B2     		uxth	r2, r0
 836 02bc 04A9     		add	r1, sp, #16
 837 02be 0E48     		ldr	r0, .L86+32
 838 02c0 FFF7FEFF 		bl	HAL_UART_Transmit
 839              	.LVL71:
 206:Src/gps.c     ****                                 gps->latitude_i_h = 0;
 840              		.loc 1 206 0
 841 02c4 0023     		movs	r3, #0
 842 02c6 B362     		str	r3, [r6, #40]
 207:Src/gps.c     ****                                 gps->latitude_i_l = 0;
 843              		.loc 1 207 0
 844 02c8 F362     		str	r3, [r6, #44]
 208:Src/gps.c     ****                                 gps->longitude_i_h = 0;
 845              		.loc 1 208 0
 846 02ca B364     		str	r3, [r6, #72]
 209:Src/gps.c     ****                                 gps->longitude_i_l = 0;
ARM GAS  /tmp/ccb7mxiQ.s 			page 24


 847              		.loc 1 209 0
 848 02cc F364     		str	r3, [r6, #76]
 210:Src/gps.c     ****                                 gps->altitude_i = 0;
 849              		.loc 1 210 0
 850 02ce B365     		str	r3, [r6, #88]
 851              	.LBE8:
 852 02d0 D0E6     		b	.L49
 853              	.L87:
 854 02d2 00BFAFF3 		.align	3
 854      0080
 855              	.L86:
 856 02d8 00000000 		.word	0
 857 02dc 00005940 		.word	1079574528
 858 02e0 00000000 		.word	msg_arrived
 859 02e4 00000000 		.word	buffer_gps
 860 02e8 00000000 		.word	cont_string
 861 02ec 00000000 		.word	string_gps
 862 02f0 00000000 		.word	.LANCHOR0
 863 02f4 00000000 		.word	data_string_gps
 864 02f8 00000000 		.word	huart3
 865 02fc 14000000 		.word	.LC15
 866 0300 24000000 		.word	.LC16
 867 0304 38000000 		.word	.LC17
 868 0308 4C000000 		.word	.LC18
 869 030c 00000000 		.word	.LC14
 870              	.LVL72:
 871              	.L66:
 872              	.LBE9:
 239:Src/gps.c     ****                     else if (string_gps[2] == 'V' && string_gps[3] == 'T' && string_gps[4] == 'G')
 873              		.loc 1 239 0 discriminator 1
 874 0310 454B     		ldr	r3, .L88+8
 875 0312 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 876 0314 542B     		cmp	r3, #84
 877 0316 7FF4ADAE 		bne	.L49
 239:Src/gps.c     ****                     else if (string_gps[2] == 'V' && string_gps[3] == 'T' && string_gps[4] == 'G')
 878              		.loc 1 239 0 is_stmt 0 discriminator 2
 879 031a 434B     		ldr	r3, .L88+8
 880 031c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 881 031e 472B     		cmp	r3, #71
 882 0320 7FF4A8AE 		bne	.L49
 241:Src/gps.c     ****                         if (checksum(string_gps, cont_string) == 1)
 883              		.loc 1 241 0 is_stmt 1
 884 0324 4048     		ldr	r0, .L88+8
 885 0326 FFF7FEFF 		bl	checksum
 886              	.LVL73:
 887 032a 0746     		mov	r7, r0
 888              	.LVL74:
 889 032c 0128     		cmp	r0, #1
 890 032e 13D0     		beq	.L81
 891              	.LBB10:
 283:Src/gps.c     ****                             sprintf(txt,"\r\nCHECKSUM FAIL\r\n");
 892              		.loc 1 283 0
 893 0330 04AF     		add	r7, sp, #16
 894 0332 DFF810E1 		ldr	lr, .L88+36
 895 0336 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 896 033a 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 897 033c DEF80030 		ldr	r3, [lr]
ARM GAS  /tmp/ccb7mxiQ.s 			page 25


 898 0340 3B80     		strh	r3, [r7]	@ movhi
 284:Src/gps.c     ****                             HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 899              		.loc 1 284 0
 900 0342 04A8     		add	r0, sp, #16
 901 0344 FFF7FEFF 		bl	strlen
 902              	.LVL75:
 903 0348 0A23     		movs	r3, #10
 904 034a 82B2     		uxth	r2, r0
 905 034c 04A9     		add	r1, sp, #16
 906 034e 3748     		ldr	r0, .L88+12
 907 0350 FFF7FEFF 		bl	HAL_UART_Transmit
 908              	.LVL76:
 285:Src/gps.c     ****                             ret = 0; //checksum failed
 909              		.loc 1 285 0
 910 0354 0027     		movs	r7, #0
 911 0356 8DE6     		b	.L49
 912              	.LVL77:
 913              	.L81:
 914              	.LBE10:
 915              	.LBB11:
 243:Src/gps.c     ****                             cont_comma = 0;
 916              		.loc 1 243 0
 917 0358 0022     		movs	r2, #0
 918 035a 354B     		ldr	r3, .L88+16
 919 035c 1A60     		str	r2, [r3]
 920              	.LVL78:
 921              	.LBB12:
 245:Src/gps.c     ****                             for (int i = 5; i < cont_string; i++)
 922              		.loc 1 245 0
 923 035e 0523     		movs	r3, #5
 924              	.LBE12:
 244:Src/gps.c     ****                             int cont_speed = 0;
 925              		.loc 1 244 0
 926 0360 9646     		mov	lr, r2
 927              	.LBB13:
 245:Src/gps.c     ****                             for (int i = 5; i < cont_string; i++)
 928              		.loc 1 245 0
 929 0362 04E0     		b	.L51
 930              	.LVL79:
 931              	.L83:
 248:Src/gps.c     ****                                     cont_comma++;
 932              		.loc 1 248 0
 933 0364 3249     		ldr	r1, .L88+16
 934 0366 0A68     		ldr	r2, [r1]
 935 0368 0132     		adds	r2, r2, #1
 936 036a 0A60     		str	r2, [r1]
 937              	.LVL80:
 938              	.L53:
 245:Src/gps.c     ****                             for (int i = 5; i < cont_string; i++)
 939              		.loc 1 245 0 discriminator 2
 940 036c 0133     		adds	r3, r3, #1
 941              	.LVL81:
 942              	.L51:
 245:Src/gps.c     ****                             for (int i = 5; i < cont_string; i++)
 943              		.loc 1 245 0 is_stmt 0 discriminator 1
 944 036e 314A     		ldr	r2, .L88+20
 945 0370 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccb7mxiQ.s 			page 26


 946 0372 9342     		cmp	r3, r2
 947 0374 11DA     		bge	.L82
 247:Src/gps.c     ****                                 if (string_gps[i] == ',')
 948              		.loc 1 247 0 is_stmt 1
 949 0376 2C49     		ldr	r1, .L88+8
 950 0378 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 951 037a 2C29     		cmp	r1, #44
 952 037c F2D0     		beq	.L83
 251:Src/gps.c     ****                                     if (cont_comma == 7)
 953              		.loc 1 251 0
 954 037e 2C48     		ldr	r0, .L88+16
 955 0380 0068     		ldr	r0, [r0]
 956 0382 0728     		cmp	r0, #7
 957 0384 03D0     		beq	.L84
 256:Src/gps.c     ****                                     else if (cont_comma == 8)
 958              		.loc 1 256 0
 959 0386 0828     		cmp	r0, #8
 960 0388 F0D1     		bne	.L53
 258:Src/gps.c     ****                                         i = cont_string;
 961              		.loc 1 258 0
 962 038a 1346     		mov	r3, r2
 963              	.LVL82:
 964 038c EEE7     		b	.L53
 965              	.LVL83:
 966              	.L84:
 253:Src/gps.c     ****                                         gps->speed[cont_speed] = string_gps[i];
 967              		.loc 1 253 0
 968 038e 06EB0E02 		add	r2, r6, lr
 969 0392 1171     		strb	r1, [r2, #4]
 254:Src/gps.c     ****                                         cont_speed++;
 970              		.loc 1 254 0
 971 0394 0EF1010E 		add	lr, lr, #1
 972              	.LVL84:
 973 0398 E8E7     		b	.L53
 974              	.L82:
 975              	.LBE13:
 263:Src/gps.c     ****                             if (gps->fix_status == '0')
 976              		.loc 1 263 0
 977 039a 96F86530 		ldrb	r3, [r6, #101]	@ zero_extendqisi2
 978              	.LVL85:
 979 039e 302B     		cmp	r3, #48
 980 03a0 1AD0     		beq	.L85
 981              	.LBB14:
 273:Src/gps.c     ****                                 gps->speed_i = (int)(atof(gps->speed) * 100);
 982              		.loc 1 273 0
 983 03a2 301D     		adds	r0, r6, #4
 984 03a4 FFF7FEFF 		bl	atof
 985              	.LVL86:
 986 03a8 9FED1D7B 		vldr.64	d7, .L88
 987 03ac 20EE077B 		vmul.f64	d7, d0, d7
 988 03b0 FDEEC77B 		vcvt.s32.f64	s15, d7
 989 03b4 17EE902A 		vmov	r2, s15	@ int
 990 03b8 C6ED037A 		vstr.32	s15, [r6, #12]	@ int
 274:Src/gps.c     ****                                 sprintf(txt,"longitude %d",gps->speed_i);
 991              		.loc 1 274 0
 992 03bc 1E49     		ldr	r1, .L88+24
 993 03be 04A8     		add	r0, sp, #16
ARM GAS  /tmp/ccb7mxiQ.s 			page 27


 994 03c0 FFF7FEFF 		bl	sprintf
 995              	.LVL87:
 275:Src/gps.c     ****                                 HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 996              		.loc 1 275 0
 997 03c4 04A8     		add	r0, sp, #16
 998 03c6 FFF7FEFF 		bl	strlen
 999              	.LVL88:
 1000 03ca 0A23     		movs	r3, #10
 1001 03cc 82B2     		uxth	r2, r0
 1002 03ce 04A9     		add	r1, sp, #16
 1003 03d0 1648     		ldr	r0, .L88+12
 1004 03d2 FFF7FEFF 		bl	HAL_UART_Transmit
 1005              	.LVL89:
 1006 03d6 4DE6     		b	.L49
 1007              	.LVL90:
 1008              	.L85:
 1009              	.LBE14:
 1010              	.LBB15:
 266:Src/gps.c     ****                                 sprintf(txt,"\r\nNO CONNECTION\r\n");
 1011              		.loc 1 266 0
 1012 03d8 0DF1100E 		add	lr, sp, #16
 1013              	.LVL91:
 1014 03dc DFF868C0 		ldr	ip, .L88+40
 1015 03e0 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1016 03e4 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1017 03e8 DCF80030 		ldr	r3, [ip]
 1018 03ec AEF80030 		strh	r3, [lr]	@ movhi
 267:Src/gps.c     ****                                 HAL_UART_Transmit(&huart3,(uint8_t*)txt,strlen(txt),10);
 1019              		.loc 1 267 0
 1020 03f0 04A8     		add	r0, sp, #16
 1021 03f2 FFF7FEFF 		bl	strlen
 1022              	.LVL92:
 1023 03f6 0A23     		movs	r3, #10
 1024 03f8 82B2     		uxth	r2, r0
 1025 03fa 04A9     		add	r1, sp, #16
 1026 03fc 0B48     		ldr	r0, .L88+12
 1027 03fe FFF7FEFF 		bl	HAL_UART_Transmit
 1028              	.LVL93:
 268:Src/gps.c     ****                                 gps->speed_i = 0;
 1029              		.loc 1 268 0
 1030 0402 0023     		movs	r3, #0
 1031 0404 F360     		str	r3, [r6, #12]
 1032              	.LBE15:
 1033 0406 35E6     		b	.L49
 1034              	.LVL94:
 1035              	.L67:
 1036              	.LBE11:
 1037              	.LBE3:
 300:Src/gps.c     ****         data_string_gps = buffer_gps[0];						  //convert a pointer into a char
 1038              		.loc 1 300 0
 1039 0408 0C4B     		ldr	r3, .L88+28
 1040 040a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1041 040c 0C4B     		ldr	r3, .L88+32
 1042 040e 1A70     		strb	r2, [r3]
 1043              	.LVL95:
 1044              	.L27:
 303:Src/gps.c     **** }
ARM GAS  /tmp/ccb7mxiQ.s 			page 28


 1045              		.loc 1 303 0
 1046 0410 3846     		mov	r0, r7
 1047 0412 2BB0     		add	sp, sp, #172
 1048              	.LCFI8:
 1049              		.cfi_def_cfa_offset 36
 1050              		@ sp needed
 1051 0414 BDEC028B 		vldm	sp!, {d8}
 1052              	.LCFI9:
 1053              		.cfi_restore 80
 1054              		.cfi_restore 81
 1055              		.cfi_def_cfa_offset 28
 1056 0418 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1057              	.LVL96:
 1058              	.L89:
 1059 041c AFF30080 		.align	3
 1060              	.L88:
 1061 0420 00000000 		.word	0
 1062 0424 00005940 		.word	1079574528
 1063 0428 00000000 		.word	string_gps
 1064 042c 00000000 		.word	huart3
 1065 0430 00000000 		.word	cont_comma
 1066 0434 00000000 		.word	cont_string
 1067 0438 60000000 		.word	.LC19
 1068 043c 00000000 		.word	buffer_gps
 1069 0440 00000000 		.word	data_string_gps
 1070 0444 4C000000 		.word	.LC18
 1071 0448 00000000 		.word	.LC14
 1072              		.cfi_endproc
 1073              	.LFE143:
 1075              		.comm	data_string_gps,1,1
 1076              		.comm	cont_comma,4,4
 1077              		.comm	cont_string,4,4
 1078              		.comm	string_gps,100,4
 1079              		.global	start_string_gps
 1080              		.section	.bss.start_string_gps,"aw",%nobits
 1081              		.align	2
 1082              		.set	.LANCHOR0,. + 0
 1085              	start_string_gps:
 1086 0000 00000000 		.space	4
 1087              		.section	.rodata.checksum.str1.4,"aMS",%progbits,1
 1088              		.align	2
 1089              	.LC0:
 1090 0000 257800   		.ascii	"%x\000"
 1091              		.section	.rodata.gps_init.str1.4,"aMS",%progbits,1
 1092              		.align	2
 1093              	.LC1:
 1094 0000 4552524F 		.ascii	"ERRORE 3\015\012\000"
 1094      52452033 
 1094      0D0A00
 1095 000b 00       		.space	1
 1096              	.LC2:
 1097 000c 4552524F 		.ascii	"ERRORE 4\015\012\000"
 1097      52452034 
 1097      0D0A00
 1098 0017 00       		.space	1
 1099              	.LC3:
 1100 0018 24504D54 		.ascii	"$PMTK251,115200*1F\015\012\000"
ARM GAS  /tmp/ccb7mxiQ.s 			page 29


 1100      4B323531 
 1100      2C313135 
 1100      3230302A 
 1100      31460D0A 
 1101 002d 000000   		.space	3
 1102              	.LC4:
 1103 0030 4552524F 		.ascii	"ERRORE 6\015\012\000"
 1103      52452036 
 1103      0D0A00
 1104 003b 00       		.space	1
 1105              	.LC5:
 1106 003c 24504D54 		.ascii	"$PMTK220,100*2F\015\012\000"
 1106      4B323230 
 1106      2C313030 
 1106      2A32460D 
 1106      0A00
 1107 004e 0000     		.space	2
 1108              	.LC6:
 1109 0050 24504D54 		.ascii	"$PMTK314,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0*28\015"
 1109      4B333134 
 1109      2C302C30 
 1109      2C312C31 
 1109      2C302C30 
 1110 0082 0A00     		.ascii	"\012\000"
 1111              	.LC7:
 1112 0084 3030302E 		.ascii	"000.00\000"
 1112      303000
 1113 008b 00       		.space	1
 1114              	.LC8:
 1115 008c 30303030 		.ascii	"0000.0000\000"
 1115      2E303030 
 1115      3000
 1116 0096 0000     		.space	2
 1117              	.LC9:
 1118 0098 4E00     		.ascii	"N\000"
 1119 009a 0000     		.space	2
 1120              	.LC10:
 1121 009c 30303030 		.ascii	"00000.0000\000"
 1121      302E3030 
 1121      303000
 1122 00a7 00       		.space	1
 1123              	.LC11:
 1124 00a8 5700     		.ascii	"W\000"
 1125 00aa 0000     		.space	2
 1126              	.LC12:
 1127 00ac 30303030 		.ascii	"0000.0\000"
 1127      2E3000
 1128 00b3 00       		.space	1
 1129              	.LC13:
 1130 00b4 303000   		.ascii	"00\000"
 1131              		.section	.rodata.gps_read.str1.4,"aMS",%progbits,1
 1132              		.align	2
 1133              	.LC14:
 1134 0000 0D0A4E4F 		.ascii	"\015\012NO CONNECTION\015\012\000"
 1134      20434F4E 
 1134      4E454354 
 1134      494F4E0D 
ARM GAS  /tmp/ccb7mxiQ.s 			page 30


 1134      0A00
 1135 0012 0000     		.space	2
 1136              	.LC15:
 1137 0014 6C617469 		.ascii	"latitude %ld %c\000"
 1137      74756465 
 1137      20256C64 
 1137      20256300 
 1138              	.LC16:
 1139 0024 6C6F6E67 		.ascii	"longitude %ld %c\000"
 1139      69747564 
 1139      6520256C 
 1139      64202563 
 1139      00
 1140 0035 000000   		.space	3
 1141              	.LC17:
 1142 0038 74696D65 		.ascii	"time %c%c:%c%c:%c%c\000"
 1142      20256325 
 1142      633A2563 
 1142      25633A25 
 1142      63256300 
 1143              	.LC18:
 1144 004c 0D0A4348 		.ascii	"\015\012CHECKSUM FAIL\015\012\000"
 1144      45434B53 
 1144      554D2046 
 1144      41494C0D 
 1144      0A00
 1145 005e 0000     		.space	2
 1146              	.LC19:
 1147 0060 6C6F6E67 		.ascii	"longitude %d\000"
 1147      69747564 
 1147      65202564 
 1147      00
 1148              		.text
 1149              	.Letext0:
 1150              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1151              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1152              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1153              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1154              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1155              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1156              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1157              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1158              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1159              		.file 11 "/usr/include/newlib/sys/lock.h"
 1160              		.file 12 "/usr/include/newlib/sys/_types.h"
 1161              		.file 13 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1162              		.file 14 "/usr/include/newlib/sys/reent.h"
 1163              		.file 15 "/usr/include/newlib/stdlib.h"
 1164              		.file 16 "Inc/gps.h"
 1165              		.file 17 "/usr/include/newlib/stdio.h"
 1166              		.file 18 "/usr/include/newlib/string.h"
ARM GAS  /tmp/ccb7mxiQ.s 			page 31


DEFINED SYMBOLS
                            *ABS*:0000000000000000 gps.c
     /tmp/ccb7mxiQ.s:17     .text.checksum:0000000000000000 $t
     /tmp/ccb7mxiQ.s:23     .text.checksum:0000000000000000 checksum
     /tmp/ccb7mxiQ.s:149    .text.checksum:0000000000000080 $d
     /tmp/ccb7mxiQ.s:154    .text.gps_init:0000000000000000 $t
     /tmp/ccb7mxiQ.s:161    .text.gps_init:0000000000000000 gps_init
     /tmp/ccb7mxiQ.s:369    .text.gps_init:0000000000000140 $d
     /tmp/ccb7mxiQ.s:387    .text.gps_read:0000000000000000 $t
     /tmp/ccb7mxiQ.s:394    .text.gps_read:0000000000000000 gps_read
     /tmp/ccb7mxiQ.s:856    .text.gps_read:00000000000002d8 $d
                            *COM*:0000000000000004 cont_string
                            *COM*:0000000000000064 string_gps
                            *COM*:0000000000000001 data_string_gps
     /tmp/ccb7mxiQ.s:874    .text.gps_read:0000000000000310 $t
     /tmp/ccb7mxiQ.s:1061   .text.gps_read:0000000000000420 $d
                            *COM*:0000000000000004 cont_comma
     /tmp/ccb7mxiQ.s:1085   .bss.start_string_gps:0000000000000000 start_string_gps
     /tmp/ccb7mxiQ.s:1081   .bss.start_string_gps:0000000000000000 $d
     /tmp/ccb7mxiQ.s:1088   .rodata.checksum.str1.4:0000000000000000 $d
     /tmp/ccb7mxiQ.s:1092   .rodata.gps_init.str1.4:0000000000000000 $d
     /tmp/ccb7mxiQ.s:1132   .rodata.gps_read.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
sprintf
HAL_UART_DeInit
HAL_UART_Init
HAL_UART_Transmit
HAL_Delay
huart3
strlen
atof
msg_arrived
buffer_gps
