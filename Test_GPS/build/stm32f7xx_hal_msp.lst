ARM GAS  /tmp/cc2NuEN3.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal_msp.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_MspInit,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_MspInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_MspInit:
  25              	.LFB141:
  26              		.file 1 "Src/stm32f7xx_hal_msp.c"
   1:Src/stm32f7xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f7xx_hal_msp.c **** /**
   3:Src/stm32f7xx_hal_msp.c ****   ******************************************************************************
   4:Src/stm32f7xx_hal_msp.c ****   * File Name          : stm32f7xx_hal_msp.c
   5:Src/stm32f7xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization 
   6:Src/stm32f7xx_hal_msp.c ****   *                      and de-Initialization codes.
   7:Src/stm32f7xx_hal_msp.c ****   ******************************************************************************
   8:Src/stm32f7xx_hal_msp.c ****   * @attention
   9:Src/stm32f7xx_hal_msp.c ****   *
  10:Src/stm32f7xx_hal_msp.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  11:Src/stm32f7xx_hal_msp.c ****   * All rights reserved.</center></h2>
  12:Src/stm32f7xx_hal_msp.c ****   *
  13:Src/stm32f7xx_hal_msp.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/stm32f7xx_hal_msp.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/stm32f7xx_hal_msp.c ****   * the License. You may obtain a copy of the License at:
  16:Src/stm32f7xx_hal_msp.c ****   *                             www.st.com/SLA0044
  17:Src/stm32f7xx_hal_msp.c ****   *
  18:Src/stm32f7xx_hal_msp.c ****   ******************************************************************************
  19:Src/stm32f7xx_hal_msp.c ****   */
  20:Src/stm32f7xx_hal_msp.c **** /* USER CODE END Header */
  21:Src/stm32f7xx_hal_msp.c **** 
  22:Src/stm32f7xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/stm32f7xx_hal_msp.c **** #include "main.h"
  24:Src/stm32f7xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32f7xx_hal_msp.c **** 
  26:Src/stm32f7xx_hal_msp.c **** /* USER CODE END Includes */
  27:Src/stm32f7xx_hal_msp.c **** 
  28:Src/stm32f7xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f7xx_hal_msp.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f7xx_hal_msp.c **** 
  31:Src/stm32f7xx_hal_msp.c **** /* USER CODE END TD */
  32:Src/stm32f7xx_hal_msp.c **** 
ARM GAS  /tmp/cc2NuEN3.s 			page 2


  33:Src/stm32f7xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f7xx_hal_msp.c **** /* USER CODE BEGIN Define */
  35:Src/stm32f7xx_hal_msp.c ****  
  36:Src/stm32f7xx_hal_msp.c **** /* USER CODE END Define */
  37:Src/stm32f7xx_hal_msp.c **** 
  38:Src/stm32f7xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f7xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  40:Src/stm32f7xx_hal_msp.c **** 
  41:Src/stm32f7xx_hal_msp.c **** /* USER CODE END Macro */
  42:Src/stm32f7xx_hal_msp.c **** 
  43:Src/stm32f7xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f7xx_hal_msp.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f7xx_hal_msp.c **** 
  46:Src/stm32f7xx_hal_msp.c **** /* USER CODE END PV */
  47:Src/stm32f7xx_hal_msp.c **** 
  48:Src/stm32f7xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f7xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f7xx_hal_msp.c **** 
  51:Src/stm32f7xx_hal_msp.c **** /* USER CODE END PFP */
  52:Src/stm32f7xx_hal_msp.c **** 
  53:Src/stm32f7xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  54:Src/stm32f7xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  55:Src/stm32f7xx_hal_msp.c **** 
  56:Src/stm32f7xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  57:Src/stm32f7xx_hal_msp.c **** 
  58:Src/stm32f7xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  59:Src/stm32f7xx_hal_msp.c **** 
  60:Src/stm32f7xx_hal_msp.c **** /* USER CODE END 0 */
  61:Src/stm32f7xx_hal_msp.c **** /**
  62:Src/stm32f7xx_hal_msp.c ****   * Initializes the Global MSP.
  63:Src/stm32f7xx_hal_msp.c ****   */
  64:Src/stm32f7xx_hal_msp.c **** void HAL_MspInit(void)
  65:Src/stm32f7xx_hal_msp.c **** {
  27              		.loc 1 65 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 82B0     		sub	sp, sp, #8
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              	.LBB2:
  66:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  67:Src/stm32f7xx_hal_msp.c **** 
  68:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  69:Src/stm32f7xx_hal_msp.c **** 
  70:Src/stm32f7xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  36              		.loc 1 70 0
  37 0002 0A4B     		ldr	r3, .L3
  38 0004 1A6C     		ldr	r2, [r3, #64]
  39 0006 42F08052 		orr	r2, r2, #268435456
  40 000a 1A64     		str	r2, [r3, #64]
  41 000c 1A6C     		ldr	r2, [r3, #64]
  42 000e 02F08052 		and	r2, r2, #268435456
  43 0012 0092     		str	r2, [sp]
  44 0014 009A     		ldr	r2, [sp]
  45              	.LBE2:
ARM GAS  /tmp/cc2NuEN3.s 			page 3


  46              	.LBB3:
  71:Src/stm32f7xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  47              		.loc 1 71 0
  48 0016 5A6C     		ldr	r2, [r3, #68]
  49 0018 42F48042 		orr	r2, r2, #16384
  50 001c 5A64     		str	r2, [r3, #68]
  51 001e 5B6C     		ldr	r3, [r3, #68]
  52 0020 03F48043 		and	r3, r3, #16384
  53 0024 0193     		str	r3, [sp, #4]
  54 0026 019B     		ldr	r3, [sp, #4]
  55              	.LBE3:
  72:Src/stm32f7xx_hal_msp.c **** 
  73:Src/stm32f7xx_hal_msp.c ****   /* System interrupt init*/
  74:Src/stm32f7xx_hal_msp.c **** 
  75:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
  76:Src/stm32f7xx_hal_msp.c **** 
  77:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
  78:Src/stm32f7xx_hal_msp.c **** }
  56              		.loc 1 78 0
  57 0028 02B0     		add	sp, sp, #8
  58              	.LCFI1:
  59              		.cfi_def_cfa_offset 0
  60              		@ sp needed
  61 002a 7047     		bx	lr
  62              	.L4:
  63              		.align	2
  64              	.L3:
  65 002c 00380240 		.word	1073887232
  66              		.cfi_endproc
  67              	.LFE141:
  69              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  70              		.align	1
  71              		.global	HAL_CAN_MspInit
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv5-d16
  77              	HAL_CAN_MspInit:
  78              	.LFB142:
  79:Src/stm32f7xx_hal_msp.c **** 
  80:Src/stm32f7xx_hal_msp.c **** /**
  81:Src/stm32f7xx_hal_msp.c **** * @brief CAN MSP Initialization
  82:Src/stm32f7xx_hal_msp.c **** * This function configures the hardware resources used in this example
  83:Src/stm32f7xx_hal_msp.c **** * @param hcan: CAN handle pointer
  84:Src/stm32f7xx_hal_msp.c **** * @retval None
  85:Src/stm32f7xx_hal_msp.c **** */
  86:Src/stm32f7xx_hal_msp.c **** void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
  87:Src/stm32f7xx_hal_msp.c **** {
  79              		.loc 1 87 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 32
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              	.LVL0:
  84 0000 00B5     		push	{lr}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 14, -4
ARM GAS  /tmp/cc2NuEN3.s 			page 4


  88 0002 89B0     		sub	sp, sp, #36
  89              	.LCFI3:
  90              		.cfi_def_cfa_offset 40
  88:Src/stm32f7xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  91              		.loc 1 88 0
  92 0004 0023     		movs	r3, #0
  93 0006 0393     		str	r3, [sp, #12]
  94 0008 0493     		str	r3, [sp, #16]
  95 000a 0593     		str	r3, [sp, #20]
  96 000c 0693     		str	r3, [sp, #24]
  97 000e 0793     		str	r3, [sp, #28]
  89:Src/stm32f7xx_hal_msp.c ****   if(hcan->Instance==CAN1)
  98              		.loc 1 89 0
  99 0010 0268     		ldr	r2, [r0]
 100 0012 144B     		ldr	r3, .L9
 101 0014 9A42     		cmp	r2, r3
 102 0016 02D0     		beq	.L8
 103              	.LVL1:
 104              	.L5:
  90:Src/stm32f7xx_hal_msp.c ****   {
  91:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspInit 0 */
  92:Src/stm32f7xx_hal_msp.c **** 
  93:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END CAN1_MspInit 0 */
  94:Src/stm32f7xx_hal_msp.c ****     /* Peripheral clock enable */
  95:Src/stm32f7xx_hal_msp.c ****     __HAL_RCC_CAN1_CLK_ENABLE();
  96:Src/stm32f7xx_hal_msp.c ****   
  97:Src/stm32f7xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  98:Src/stm32f7xx_hal_msp.c ****     /**CAN1 GPIO Configuration    
  99:Src/stm32f7xx_hal_msp.c ****     PB8     ------> CAN1_RX
 100:Src/stm32f7xx_hal_msp.c ****     PB9     ------> CAN1_TX 
 101:Src/stm32f7xx_hal_msp.c ****     */
 102:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 103:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 104:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 105:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 106:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 107:Src/stm32f7xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 108:Src/stm32f7xx_hal_msp.c **** 
 109:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspInit 1 */
 110:Src/stm32f7xx_hal_msp.c **** 
 111:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END CAN1_MspInit 1 */
 112:Src/stm32f7xx_hal_msp.c ****   }
 113:Src/stm32f7xx_hal_msp.c **** 
 114:Src/stm32f7xx_hal_msp.c **** }
 105              		.loc 1 114 0
 106 0018 09B0     		add	sp, sp, #36
 107              	.LCFI4:
 108              		.cfi_remember_state
 109              		.cfi_def_cfa_offset 4
 110              		@ sp needed
 111 001a 5DF804FB 		ldr	pc, [sp], #4
 112              	.LVL2:
 113              	.L8:
 114              	.LCFI5:
 115              		.cfi_restore_state
 116              	.LBB4:
  95:Src/stm32f7xx_hal_msp.c ****   
ARM GAS  /tmp/cc2NuEN3.s 			page 5


 117              		.loc 1 95 0
 118 001e 03F5EA33 		add	r3, r3, #119808
 119 0022 1A6C     		ldr	r2, [r3, #64]
 120 0024 42F00072 		orr	r2, r2, #33554432
 121 0028 1A64     		str	r2, [r3, #64]
 122 002a 1A6C     		ldr	r2, [r3, #64]
 123 002c 02F00072 		and	r2, r2, #33554432
 124 0030 0192     		str	r2, [sp, #4]
 125 0032 019A     		ldr	r2, [sp, #4]
 126              	.LBE4:
 127              	.LBB5:
  97:Src/stm32f7xx_hal_msp.c ****     /**CAN1 GPIO Configuration    
 128              		.loc 1 97 0
 129 0034 1A6B     		ldr	r2, [r3, #48]
 130 0036 42F00202 		orr	r2, r2, #2
 131 003a 1A63     		str	r2, [r3, #48]
 132 003c 1B6B     		ldr	r3, [r3, #48]
 133 003e 03F00203 		and	r3, r3, #2
 134 0042 0293     		str	r3, [sp, #8]
 135 0044 029B     		ldr	r3, [sp, #8]
 136              	.LBE5:
 102:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 137              		.loc 1 102 0
 138 0046 4FF44073 		mov	r3, #768
 139 004a 0393     		str	r3, [sp, #12]
 103:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 140              		.loc 1 103 0
 141 004c 0223     		movs	r3, #2
 142 004e 0493     		str	r3, [sp, #16]
 105:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 143              		.loc 1 105 0
 144 0050 0323     		movs	r3, #3
 145 0052 0693     		str	r3, [sp, #24]
 106:Src/stm32f7xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 146              		.loc 1 106 0
 147 0054 0923     		movs	r3, #9
 148 0056 0793     		str	r3, [sp, #28]
 107:Src/stm32f7xx_hal_msp.c **** 
 149              		.loc 1 107 0
 150 0058 03A9     		add	r1, sp, #12
 151 005a 0348     		ldr	r0, .L9+4
 152              	.LVL3:
 153 005c FFF7FEFF 		bl	HAL_GPIO_Init
 154              	.LVL4:
 155              		.loc 1 114 0
 156 0060 DAE7     		b	.L5
 157              	.L10:
 158 0062 00BF     		.align	2
 159              	.L9:
 160 0064 00640040 		.word	1073767424
 161 0068 00040240 		.word	1073873920
 162              		.cfi_endproc
 163              	.LFE142:
 165              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 166              		.align	1
 167              		.global	HAL_CAN_MspDeInit
 168              		.syntax unified
ARM GAS  /tmp/cc2NuEN3.s 			page 6


 169              		.thumb
 170              		.thumb_func
 171              		.fpu fpv5-d16
 173              	HAL_CAN_MspDeInit:
 174              	.LFB143:
 115:Src/stm32f7xx_hal_msp.c **** 
 116:Src/stm32f7xx_hal_msp.c **** /**
 117:Src/stm32f7xx_hal_msp.c **** * @brief CAN MSP De-Initialization
 118:Src/stm32f7xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 119:Src/stm32f7xx_hal_msp.c **** * @param hcan: CAN handle pointer
 120:Src/stm32f7xx_hal_msp.c **** * @retval None
 121:Src/stm32f7xx_hal_msp.c **** */
 122:Src/stm32f7xx_hal_msp.c **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
 123:Src/stm32f7xx_hal_msp.c **** {
 175              		.loc 1 123 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              	.LVL5:
 180 0000 08B5     		push	{r3, lr}
 181              	.LCFI6:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 3, -8
 184              		.cfi_offset 14, -4
 124:Src/stm32f7xx_hal_msp.c ****   if(hcan->Instance==CAN1)
 185              		.loc 1 124 0
 186 0002 0268     		ldr	r2, [r0]
 187 0004 0D4B     		ldr	r3, .L15
 188 0006 9A42     		cmp	r2, r3
 189 0008 00D0     		beq	.L14
 190              	.LVL6:
 191              	.L11:
 192 000a 08BD     		pop	{r3, pc}
 193              	.LVL7:
 194              	.L14:
 125:Src/stm32f7xx_hal_msp.c ****   {
 126:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspDeInit 0 */
 127:Src/stm32f7xx_hal_msp.c **** 
 128:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END CAN1_MspDeInit 0 */
 129:Src/stm32f7xx_hal_msp.c ****     /* Peripheral clock disable */
 130:Src/stm32f7xx_hal_msp.c ****     __HAL_RCC_CAN1_CLK_DISABLE();
 195              		.loc 1 130 0
 196 000c 0C4A     		ldr	r2, .L15+4
 197 000e 136C     		ldr	r3, [r2, #64]
 198 0010 23F00073 		bic	r3, r3, #33554432
 199 0014 1364     		str	r3, [r2, #64]
 131:Src/stm32f7xx_hal_msp.c ****   
 132:Src/stm32f7xx_hal_msp.c ****     /**CAN1 GPIO Configuration    
 133:Src/stm32f7xx_hal_msp.c ****     PB8     ------> CAN1_RX
 134:Src/stm32f7xx_hal_msp.c ****     PB9     ------> CAN1_TX 
 135:Src/stm32f7xx_hal_msp.c ****     */
 136:Src/stm32f7xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8|GPIO_PIN_9);
 200              		.loc 1 136 0
 201 0016 4FF44071 		mov	r1, #768
 202 001a 0A48     		ldr	r0, .L15+8
 203              	.LVL8:
 204 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
ARM GAS  /tmp/cc2NuEN3.s 			page 7


 205              	.LVL9:
 137:Src/stm32f7xx_hal_msp.c **** 
 138:Src/stm32f7xx_hal_msp.c ****     /* CAN1 interrupt DeInit */
 139:Src/stm32f7xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(CAN1_TX_IRQn);
 206              		.loc 1 139 0
 207 0020 1320     		movs	r0, #19
 208 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 209              	.LVL10:
 140:Src/stm32f7xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(CAN1_RX0_IRQn);
 210              		.loc 1 140 0
 211 0026 1420     		movs	r0, #20
 212 0028 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 213              	.LVL11:
 141:Src/stm32f7xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(CAN1_RX1_IRQn);
 214              		.loc 1 141 0
 215 002c 1520     		movs	r0, #21
 216 002e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 217              	.LVL12:
 142:Src/stm32f7xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(CAN1_SCE_IRQn);
 218              		.loc 1 142 0
 219 0032 1620     		movs	r0, #22
 220 0034 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 221              	.LVL13:
 143:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspDeInit 1 */
 144:Src/stm32f7xx_hal_msp.c **** 
 145:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END CAN1_MspDeInit 1 */
 146:Src/stm32f7xx_hal_msp.c ****   }
 147:Src/stm32f7xx_hal_msp.c **** 
 148:Src/stm32f7xx_hal_msp.c **** }
 222              		.loc 1 148 0
 223 0038 E7E7     		b	.L11
 224              	.L16:
 225 003a 00BF     		.align	2
 226              	.L15:
 227 003c 00640040 		.word	1073767424
 228 0040 00380240 		.word	1073887232
 229 0044 00040240 		.word	1073873920
 230              		.cfi_endproc
 231              	.LFE143:
 233              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 234              		.align	1
 235              		.global	HAL_TIM_Base_MspInit
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv5-d16
 241              	HAL_TIM_Base_MspInit:
 242              	.LFB144:
 149:Src/stm32f7xx_hal_msp.c **** 
 150:Src/stm32f7xx_hal_msp.c **** /**
 151:Src/stm32f7xx_hal_msp.c **** * @brief TIM_Base MSP Initialization
 152:Src/stm32f7xx_hal_msp.c **** * This function configures the hardware resources used in this example
 153:Src/stm32f7xx_hal_msp.c **** * @param htim_base: TIM_Base handle pointer
 154:Src/stm32f7xx_hal_msp.c **** * @retval None
 155:Src/stm32f7xx_hal_msp.c **** */
 156:Src/stm32f7xx_hal_msp.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
 157:Src/stm32f7xx_hal_msp.c **** {
ARM GAS  /tmp/cc2NuEN3.s 			page 8


 243              		.loc 1 157 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 248              	.LVL14:
 158:Src/stm32f7xx_hal_msp.c ****   if(htim_base->Instance==TIM2)
 249              		.loc 1 158 0
 250 0000 0368     		ldr	r3, [r0]
 251 0002 B3F1804F 		cmp	r3, #1073741824
 252 0006 00D0     		beq	.L24
 253              	.L23:
 159:Src/stm32f7xx_hal_msp.c ****   {
 160:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 161:Src/stm32f7xx_hal_msp.c **** 
 162:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END TIM2_MspInit 0 */
 163:Src/stm32f7xx_hal_msp.c ****     /* Peripheral clock enable */
 164:Src/stm32f7xx_hal_msp.c ****     __HAL_RCC_TIM2_CLK_ENABLE();
 165:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 166:Src/stm32f7xx_hal_msp.c **** 
 167:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END TIM2_MspInit 1 */
 168:Src/stm32f7xx_hal_msp.c ****   }
 169:Src/stm32f7xx_hal_msp.c **** 
 170:Src/stm32f7xx_hal_msp.c **** }
 254              		.loc 1 170 0
 255 0008 7047     		bx	lr
 256              	.L24:
 157:Src/stm32f7xx_hal_msp.c ****   if(htim_base->Instance==TIM2)
 257              		.loc 1 157 0
 258 000a 82B0     		sub	sp, sp, #8
 259              	.LCFI7:
 260              		.cfi_def_cfa_offset 8
 261              	.LBB6:
 164:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 262              		.loc 1 164 0
 263 000c 03F50E33 		add	r3, r3, #145408
 264 0010 1A6C     		ldr	r2, [r3, #64]
 265 0012 42F00102 		orr	r2, r2, #1
 266 0016 1A64     		str	r2, [r3, #64]
 267 0018 1B6C     		ldr	r3, [r3, #64]
 268 001a 03F00103 		and	r3, r3, #1
 269 001e 0193     		str	r3, [sp, #4]
 270 0020 019B     		ldr	r3, [sp, #4]
 271              	.LBE6:
 272              		.loc 1 170 0
 273 0022 02B0     		add	sp, sp, #8
 274              	.LCFI8:
 275              		.cfi_def_cfa_offset 0
 276              		@ sp needed
 277 0024 F0E7     		b	.L23
 278              		.cfi_endproc
 279              	.LFE144:
 281              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 282              		.align	1
 283              		.global	HAL_TIM_Base_MspDeInit
 284              		.syntax unified
 285              		.thumb
ARM GAS  /tmp/cc2NuEN3.s 			page 9


 286              		.thumb_func
 287              		.fpu fpv5-d16
 289              	HAL_TIM_Base_MspDeInit:
 290              	.LFB145:
 171:Src/stm32f7xx_hal_msp.c **** 
 172:Src/stm32f7xx_hal_msp.c **** /**
 173:Src/stm32f7xx_hal_msp.c **** * @brief TIM_Base MSP De-Initialization
 174:Src/stm32f7xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 175:Src/stm32f7xx_hal_msp.c **** * @param htim_base: TIM_Base handle pointer
 176:Src/stm32f7xx_hal_msp.c **** * @retval None
 177:Src/stm32f7xx_hal_msp.c **** */
 178:Src/stm32f7xx_hal_msp.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* htim_base)
 179:Src/stm32f7xx_hal_msp.c **** {
 291              		.loc 1 179 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              	.LVL15:
 296 0000 08B5     		push	{r3, lr}
 297              	.LCFI9:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 3, -8
 300              		.cfi_offset 14, -4
 180:Src/stm32f7xx_hal_msp.c ****   if(htim_base->Instance==TIM2)
 301              		.loc 1 180 0
 302 0002 0368     		ldr	r3, [r0]
 303 0004 B3F1804F 		cmp	r3, #1073741824
 304 0008 00D0     		beq	.L28
 305              	.LVL16:
 306              	.L25:
 307 000a 08BD     		pop	{r3, pc}
 308              	.LVL17:
 309              	.L28:
 181:Src/stm32f7xx_hal_msp.c ****   {
 182:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 183:Src/stm32f7xx_hal_msp.c **** 
 184:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END TIM2_MspDeInit 0 */
 185:Src/stm32f7xx_hal_msp.c ****     /* Peripheral clock disable */
 186:Src/stm32f7xx_hal_msp.c ****     __HAL_RCC_TIM2_CLK_DISABLE();
 310              		.loc 1 186 0
 311 000c 044A     		ldr	r2, .L29
 312 000e 136C     		ldr	r3, [r2, #64]
 313 0010 23F00103 		bic	r3, r3, #1
 314 0014 1364     		str	r3, [r2, #64]
 187:Src/stm32f7xx_hal_msp.c **** 
 188:Src/stm32f7xx_hal_msp.c ****     /* TIM2 interrupt DeInit */
 189:Src/stm32f7xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 315              		.loc 1 189 0
 316 0016 1C20     		movs	r0, #28
 317              	.LVL18:
 318 0018 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 319              	.LVL19:
 190:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 191:Src/stm32f7xx_hal_msp.c **** 
 192:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END TIM2_MspDeInit 1 */
 193:Src/stm32f7xx_hal_msp.c ****   }
 194:Src/stm32f7xx_hal_msp.c **** 
ARM GAS  /tmp/cc2NuEN3.s 			page 10


 195:Src/stm32f7xx_hal_msp.c **** }
 320              		.loc 1 195 0
 321 001c F5E7     		b	.L25
 322              	.L30:
 323 001e 00BF     		.align	2
 324              	.L29:
 325 0020 00380240 		.word	1073887232
 326              		.cfi_endproc
 327              	.LFE145:
 329              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 330              		.align	1
 331              		.global	HAL_UART_MspInit
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv5-d16
 337              	HAL_UART_MspInit:
 338              	.LFB146:
 196:Src/stm32f7xx_hal_msp.c **** 
 197:Src/stm32f7xx_hal_msp.c **** /**
 198:Src/stm32f7xx_hal_msp.c **** * @brief UART MSP Initialization
 199:Src/stm32f7xx_hal_msp.c **** * This function configures the hardware resources used in this example
 200:Src/stm32f7xx_hal_msp.c **** * @param huart: UART handle pointer
 201:Src/stm32f7xx_hal_msp.c **** * @retval None
 202:Src/stm32f7xx_hal_msp.c **** */
 203:Src/stm32f7xx_hal_msp.c **** void HAL_UART_MspInit(UART_HandleTypeDef* huart)
 204:Src/stm32f7xx_hal_msp.c **** {
 339              		.loc 1 204 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 40
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              	.LVL20:
 344 0000 00B5     		push	{lr}
 345              	.LCFI10:
 346              		.cfi_def_cfa_offset 4
 347              		.cfi_offset 14, -4
 348 0002 8BB0     		sub	sp, sp, #44
 349              	.LCFI11:
 350              		.cfi_def_cfa_offset 48
 205:Src/stm32f7xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 351              		.loc 1 205 0
 352 0004 0023     		movs	r3, #0
 353 0006 0593     		str	r3, [sp, #20]
 354 0008 0693     		str	r3, [sp, #24]
 355 000a 0793     		str	r3, [sp, #28]
 356 000c 0893     		str	r3, [sp, #32]
 357 000e 0993     		str	r3, [sp, #36]
 206:Src/stm32f7xx_hal_msp.c ****   if(huart->Instance==USART2)
 358              		.loc 1 206 0
 359 0010 0368     		ldr	r3, [r0]
 360 0012 254A     		ldr	r2, .L37
 361 0014 9342     		cmp	r3, r2
 362 0016 05D0     		beq	.L35
 207:Src/stm32f7xx_hal_msp.c ****   {
 208:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
 209:Src/stm32f7xx_hal_msp.c **** 
 210:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END USART2_MspInit 0 */
ARM GAS  /tmp/cc2NuEN3.s 			page 11


 211:Src/stm32f7xx_hal_msp.c ****     /* Peripheral clock enable */
 212:Src/stm32f7xx_hal_msp.c ****     __HAL_RCC_USART2_CLK_ENABLE();
 213:Src/stm32f7xx_hal_msp.c ****   
 214:Src/stm32f7xx_hal_msp.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 215:Src/stm32f7xx_hal_msp.c ****     /**USART2 GPIO Configuration    
 216:Src/stm32f7xx_hal_msp.c ****     PD5     ------> USART2_TX
 217:Src/stm32f7xx_hal_msp.c ****     PD6     ------> USART2_RX 
 218:Src/stm32f7xx_hal_msp.c ****     */
 219:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 220:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 221:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 222:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 223:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 224:Src/stm32f7xx_hal_msp.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 225:Src/stm32f7xx_hal_msp.c **** 
 226:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 227:Src/stm32f7xx_hal_msp.c **** 
 228:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END USART2_MspInit 1 */
 229:Src/stm32f7xx_hal_msp.c ****   }
 230:Src/stm32f7xx_hal_msp.c ****   else if(huart->Instance==USART3)
 363              		.loc 1 230 0
 364 0018 244A     		ldr	r2, .L37+4
 365 001a 9342     		cmp	r3, r2
 366 001c 22D0     		beq	.L36
 367              	.LVL21:
 368              	.L31:
 231:Src/stm32f7xx_hal_msp.c ****   {
 232:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspInit 0 */
 233:Src/stm32f7xx_hal_msp.c **** 
 234:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END USART3_MspInit 0 */
 235:Src/stm32f7xx_hal_msp.c ****     /* Peripheral clock enable */
 236:Src/stm32f7xx_hal_msp.c ****     __HAL_RCC_USART3_CLK_ENABLE();
 237:Src/stm32f7xx_hal_msp.c ****   
 238:Src/stm32f7xx_hal_msp.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 239:Src/stm32f7xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 240:Src/stm32f7xx_hal_msp.c ****     PD8     ------> USART3_TX
 241:Src/stm32f7xx_hal_msp.c ****     PD9     ------> USART3_RX 
 242:Src/stm32f7xx_hal_msp.c ****     */
 243:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 244:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 245:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 246:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 247:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 248:Src/stm32f7xx_hal_msp.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 249:Src/stm32f7xx_hal_msp.c **** 
 250:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 251:Src/stm32f7xx_hal_msp.c **** 
 252:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END USART3_MspInit 1 */
 253:Src/stm32f7xx_hal_msp.c ****   }
 254:Src/stm32f7xx_hal_msp.c **** 
 255:Src/stm32f7xx_hal_msp.c **** }
 369              		.loc 1 255 0
 370 001e 0BB0     		add	sp, sp, #44
 371              	.LCFI12:
 372              		.cfi_remember_state
 373              		.cfi_def_cfa_offset 4
 374              		@ sp needed
ARM GAS  /tmp/cc2NuEN3.s 			page 12


 375 0020 5DF804FB 		ldr	pc, [sp], #4
 376              	.LVL22:
 377              	.L35:
 378              	.LCFI13:
 379              		.cfi_restore_state
 380              	.LBB7:
 212:Src/stm32f7xx_hal_msp.c ****   
 381              		.loc 1 212 0
 382 0024 224B     		ldr	r3, .L37+8
 383 0026 1A6C     		ldr	r2, [r3, #64]
 384 0028 42F40032 		orr	r2, r2, #131072
 385 002c 1A64     		str	r2, [r3, #64]
 386 002e 1A6C     		ldr	r2, [r3, #64]
 387 0030 02F40032 		and	r2, r2, #131072
 388 0034 0192     		str	r2, [sp, #4]
 389 0036 019A     		ldr	r2, [sp, #4]
 390              	.LBE7:
 391              	.LBB8:
 214:Src/stm32f7xx_hal_msp.c ****     /**USART2 GPIO Configuration    
 392              		.loc 1 214 0
 393 0038 1A6B     		ldr	r2, [r3, #48]
 394 003a 42F00802 		orr	r2, r2, #8
 395 003e 1A63     		str	r2, [r3, #48]
 396 0040 1B6B     		ldr	r3, [r3, #48]
 397 0042 03F00803 		and	r3, r3, #8
 398 0046 0293     		str	r3, [sp, #8]
 399 0048 029B     		ldr	r3, [sp, #8]
 400              	.LBE8:
 219:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 401              		.loc 1 219 0
 402 004a 6023     		movs	r3, #96
 403 004c 0593     		str	r3, [sp, #20]
 220:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 404              		.loc 1 220 0
 405 004e 0223     		movs	r3, #2
 406 0050 0693     		str	r3, [sp, #24]
 222:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 407              		.loc 1 222 0
 408 0052 0323     		movs	r3, #3
 409 0054 0893     		str	r3, [sp, #32]
 223:Src/stm32f7xx_hal_msp.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 410              		.loc 1 223 0
 411 0056 0723     		movs	r3, #7
 412 0058 0993     		str	r3, [sp, #36]
 224:Src/stm32f7xx_hal_msp.c **** 
 413              		.loc 1 224 0
 414 005a 05A9     		add	r1, sp, #20
 415 005c 1548     		ldr	r0, .L37+12
 416              	.LVL23:
 417 005e FFF7FEFF 		bl	HAL_GPIO_Init
 418              	.LVL24:
 419 0062 DCE7     		b	.L31
 420              	.LVL25:
 421              	.L36:
 422              	.LBB9:
 236:Src/stm32f7xx_hal_msp.c ****   
 423              		.loc 1 236 0
ARM GAS  /tmp/cc2NuEN3.s 			page 13


 424 0064 124B     		ldr	r3, .L37+8
 425 0066 1A6C     		ldr	r2, [r3, #64]
 426 0068 42F48022 		orr	r2, r2, #262144
 427 006c 1A64     		str	r2, [r3, #64]
 428 006e 1A6C     		ldr	r2, [r3, #64]
 429 0070 02F48022 		and	r2, r2, #262144
 430 0074 0392     		str	r2, [sp, #12]
 431 0076 039A     		ldr	r2, [sp, #12]
 432              	.LBE9:
 433              	.LBB10:
 238:Src/stm32f7xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 434              		.loc 1 238 0
 435 0078 1A6B     		ldr	r2, [r3, #48]
 436 007a 42F00802 		orr	r2, r2, #8
 437 007e 1A63     		str	r2, [r3, #48]
 438 0080 1B6B     		ldr	r3, [r3, #48]
 439 0082 03F00803 		and	r3, r3, #8
 440 0086 0493     		str	r3, [sp, #16]
 441 0088 049B     		ldr	r3, [sp, #16]
 442              	.LBE10:
 243:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 443              		.loc 1 243 0
 444 008a 4FF44073 		mov	r3, #768
 445 008e 0593     		str	r3, [sp, #20]
 244:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 446              		.loc 1 244 0
 447 0090 0223     		movs	r3, #2
 448 0092 0693     		str	r3, [sp, #24]
 246:Src/stm32f7xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 449              		.loc 1 246 0
 450 0094 0323     		movs	r3, #3
 451 0096 0893     		str	r3, [sp, #32]
 247:Src/stm32f7xx_hal_msp.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 452              		.loc 1 247 0
 453 0098 0723     		movs	r3, #7
 454 009a 0993     		str	r3, [sp, #36]
 248:Src/stm32f7xx_hal_msp.c **** 
 455              		.loc 1 248 0
 456 009c 05A9     		add	r1, sp, #20
 457 009e 0548     		ldr	r0, .L37+12
 458              	.LVL26:
 459 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 460              	.LVL27:
 461              		.loc 1 255 0
 462 00a4 BBE7     		b	.L31
 463              	.L38:
 464 00a6 00BF     		.align	2
 465              	.L37:
 466 00a8 00440040 		.word	1073759232
 467 00ac 00480040 		.word	1073760256
 468 00b0 00380240 		.word	1073887232
 469 00b4 000C0240 		.word	1073875968
 470              		.cfi_endproc
 471              	.LFE146:
 473              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 474              		.align	1
 475              		.global	HAL_UART_MspDeInit
ARM GAS  /tmp/cc2NuEN3.s 			page 14


 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu fpv5-d16
 481              	HAL_UART_MspDeInit:
 482              	.LFB147:
 256:Src/stm32f7xx_hal_msp.c **** 
 257:Src/stm32f7xx_hal_msp.c **** /**
 258:Src/stm32f7xx_hal_msp.c **** * @brief UART MSP De-Initialization
 259:Src/stm32f7xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 260:Src/stm32f7xx_hal_msp.c **** * @param huart: UART handle pointer
 261:Src/stm32f7xx_hal_msp.c **** * @retval None
 262:Src/stm32f7xx_hal_msp.c **** */
 263:Src/stm32f7xx_hal_msp.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
 264:Src/stm32f7xx_hal_msp.c **** {
 483              		.loc 1 264 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              	.LVL28:
 488 0000 08B5     		push	{r3, lr}
 489              	.LCFI14:
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 3, -8
 492              		.cfi_offset 14, -4
 265:Src/stm32f7xx_hal_msp.c ****   if(huart->Instance==USART2)
 493              		.loc 1 265 0
 494 0002 0368     		ldr	r3, [r0]
 495 0004 114A     		ldr	r2, .L45
 496 0006 9342     		cmp	r3, r2
 497 0008 03D0     		beq	.L43
 266:Src/stm32f7xx_hal_msp.c ****   {
 267:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 268:Src/stm32f7xx_hal_msp.c **** 
 269:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END USART2_MspDeInit 0 */
 270:Src/stm32f7xx_hal_msp.c ****     /* Peripheral clock disable */
 271:Src/stm32f7xx_hal_msp.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 272:Src/stm32f7xx_hal_msp.c ****   
 273:Src/stm32f7xx_hal_msp.c ****     /**USART2 GPIO Configuration    
 274:Src/stm32f7xx_hal_msp.c ****     PD5     ------> USART2_TX
 275:Src/stm32f7xx_hal_msp.c ****     PD6     ------> USART2_RX 
 276:Src/stm32f7xx_hal_msp.c ****     */
 277:Src/stm32f7xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOD, GPIO_PIN_5|GPIO_PIN_6);
 278:Src/stm32f7xx_hal_msp.c **** 
 279:Src/stm32f7xx_hal_msp.c ****     /* USART2 interrupt DeInit */
 280:Src/stm32f7xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 281:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 282:Src/stm32f7xx_hal_msp.c **** 
 283:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END USART2_MspDeInit 1 */
 284:Src/stm32f7xx_hal_msp.c ****   }
 285:Src/stm32f7xx_hal_msp.c ****   else if(huart->Instance==USART3)
 498              		.loc 1 285 0
 499 000a 114A     		ldr	r2, .L45+4
 500 000c 9342     		cmp	r3, r2
 501 000e 0ED0     		beq	.L44
 502              	.LVL29:
 503              	.L39:
ARM GAS  /tmp/cc2NuEN3.s 			page 15


 504 0010 08BD     		pop	{r3, pc}
 505              	.LVL30:
 506              	.L43:
 271:Src/stm32f7xx_hal_msp.c ****   
 507              		.loc 1 271 0
 508 0012 02F5FA32 		add	r2, r2, #128000
 509 0016 136C     		ldr	r3, [r2, #64]
 510 0018 23F40033 		bic	r3, r3, #131072
 511 001c 1364     		str	r3, [r2, #64]
 277:Src/stm32f7xx_hal_msp.c **** 
 512              		.loc 1 277 0
 513 001e 6021     		movs	r1, #96
 514 0020 0C48     		ldr	r0, .L45+8
 515              	.LVL31:
 516 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
 517              	.LVL32:
 280:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 518              		.loc 1 280 0
 519 0026 2620     		movs	r0, #38
 520 0028 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 521              	.LVL33:
 522 002c 08BD     		pop	{r3, pc}
 523              	.LVL34:
 524              	.L44:
 286:Src/stm32f7xx_hal_msp.c ****   {
 287:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
 288:Src/stm32f7xx_hal_msp.c **** 
 289:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END USART3_MspDeInit 0 */
 290:Src/stm32f7xx_hal_msp.c ****     /* Peripheral clock disable */
 291:Src/stm32f7xx_hal_msp.c ****     __HAL_RCC_USART3_CLK_DISABLE();
 525              		.loc 1 291 0
 526 002e 02F5F832 		add	r2, r2, #126976
 527 0032 136C     		ldr	r3, [r2, #64]
 528 0034 23F48023 		bic	r3, r3, #262144
 529 0038 1364     		str	r3, [r2, #64]
 292:Src/stm32f7xx_hal_msp.c ****   
 293:Src/stm32f7xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 294:Src/stm32f7xx_hal_msp.c ****     PD8     ------> USART3_TX
 295:Src/stm32f7xx_hal_msp.c ****     PD9     ------> USART3_RX 
 296:Src/stm32f7xx_hal_msp.c ****     */
 297:Src/stm32f7xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOD, GPIO_PIN_8|GPIO_PIN_9);
 530              		.loc 1 297 0
 531 003a 4FF44071 		mov	r1, #768
 532 003e 0548     		ldr	r0, .L45+8
 533              	.LVL35:
 534 0040 FFF7FEFF 		bl	HAL_GPIO_DeInit
 535              	.LVL36:
 298:Src/stm32f7xx_hal_msp.c **** 
 299:Src/stm32f7xx_hal_msp.c ****     /* USART3 interrupt DeInit */
 300:Src/stm32f7xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(USART3_IRQn);
 536              		.loc 1 300 0
 537 0044 2720     		movs	r0, #39
 538 0046 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 539              	.LVL37:
 301:Src/stm32f7xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 302:Src/stm32f7xx_hal_msp.c **** 
 303:Src/stm32f7xx_hal_msp.c ****   /* USER CODE END USART3_MspDeInit 1 */
ARM GAS  /tmp/cc2NuEN3.s 			page 16


 304:Src/stm32f7xx_hal_msp.c ****   }
 305:Src/stm32f7xx_hal_msp.c **** 
 306:Src/stm32f7xx_hal_msp.c **** }
 540              		.loc 1 306 0
 541 004a E1E7     		b	.L39
 542              	.L46:
 543              		.align	2
 544              	.L45:
 545 004c 00440040 		.word	1073759232
 546 0050 00480040 		.word	1073760256
 547 0054 000C0240 		.word	1073875968
 548              		.cfi_endproc
 549              	.LFE147:
 551              		.text
 552              	.Letext0:
 553              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 554              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 555              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 556              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 557              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 558              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 559              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 560              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 561              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 562              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_can.h"
 563              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 564              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 565              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 566              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /tmp/cc2NuEN3.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_msp.c
     /tmp/cc2NuEN3.s:17     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cc2NuEN3.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cc2NuEN3.s:65     .text.HAL_MspInit:000000000000002c $d
     /tmp/cc2NuEN3.s:70     .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/cc2NuEN3.s:77     .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/cc2NuEN3.s:160    .text.HAL_CAN_MspInit:0000000000000064 $d
     /tmp/cc2NuEN3.s:166    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/cc2NuEN3.s:173    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/cc2NuEN3.s:227    .text.HAL_CAN_MspDeInit:000000000000003c $d
     /tmp/cc2NuEN3.s:234    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/cc2NuEN3.s:241    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/cc2NuEN3.s:282    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/cc2NuEN3.s:289    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/cc2NuEN3.s:325    .text.HAL_TIM_Base_MspDeInit:0000000000000020 $d
     /tmp/cc2NuEN3.s:330    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc2NuEN3.s:337    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc2NuEN3.s:466    .text.HAL_UART_MspInit:00000000000000a8 $d
     /tmp/cc2NuEN3.s:474    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc2NuEN3.s:481    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc2NuEN3.s:545    .text.HAL_UART_MspDeInit:000000000000004c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
